//* Generated by rexx PDS2SEQ
//* CHANGE userid to your userid
//* change PDS if desired
//* put jobcard at top, submit
//*DELETE  EXEC PGM=IEFBR14
//*DD1     DD DSN=STE58.OSEO.MVS,
//*        DISP=(MOD,DELETE),UNIT=SYSDA,SPACE=(TRK,0)
//*
//LOAD    EXEC PGM=IEBUPDTE,PARM='NEW'
//SYSPRINT DD SYSOUT=*
//SYSUT2  DD DSN=STE58.OSEO.MVS,
//        DISP=(NEW,CATLG,DELETE),
//        DCB=(DSORG=PO,LRECL=80,BLKSIZE=8000,RECFM=FB),
//        UNIT=SYSDA,
//        SPACE=(TRK,(10,05,20),RLSE)
//*
//SYSIN  DD DATA,DLM='!!'

./ ADD NAME=$$$COIBM
//* 5751-CS1,5751-CS2 (C) COPYRIGHT IBM CORPORATION 1978, 1984          00011001
//* ALL RIGHTS RESERVED.                                                00012001
//* NOTE TO U.S. GOVERNMENT USERS .. DOCUMENTATION RELATED TO           00013001
//* RESTRICTED RIGHTS .. USE, DUPLICATION OR DISCLOSURE IS SUBJECT      00013101
//* TO RESTRICTIONS SET FORTH IN GSA ADP SCHEDULE CONTRACT              00013201
//* WITH IBM CORP.                                                      00013301
//*                                                                     00013401
//* THE MATERIAL IN THIS FILE IS COPYRIGHTED.                           00013501
//*                                                                     00013601
//* PERMISSION IS GRANTED TO:                                           00013701
//*                                                                     00013801
//* *  STORE THE COPYRIGHTED MATERIAL IN YOUR SYSTEM AND DISPLAY        00013901
//*    IT ON TERMINALS.                                                 00014001
//*                                                                     00015001
//* *  PRINT ONLY THE NUMBER OF COPIES REQUIRED FOR USE BY THOSE        00016001
//*    PERSONS RESPONSIBLE FOR INSTALLING THE IBM PROGRAMMING AND       00017001
//*    LICENSED PROGRAMS FOR WHICH THIS MATERIAL HAS BEEN PROVIDED.     00018001
//*                                                                     00019001
//* *  MODIFY THE MATERIAL TO MEET SPECIFIC INSTALLATION REQUIREMENTS.  00020001
//*                                                                     00030001
//* THE IBM COPYRIGHT NOTICE MUST APPEAR ON ALL PRINTED VERSIONS OF     00040001
//* THIS MATERIAL OR EXTRACTS THEREOF AND ON THE DISPLAY MEDIUM WHEN    00050001
//* IT IS BEING DISPLAYED.  PERMISSION IS NOT GRANTED TO FURTHER        00060001
//* REPRODUCE OR DISTRIBUTE THE MATERIAL.                               00070001
//*                                                                     00080001
//* LIB: $$$COIBM                                                       00090001
//* GDE: NONE                                                           00100001
//* DOC: THIS MEMBER CONTAINS COPYRIGHT INFORMATION.                    00110001
//*                                                                     00120001

./ ADD NAME=$DOC
CAVXTRT - CA-View Extract ISPF Dialog

This dialog is intended as a more user friendly interface to the CA-View
reports. The options available with this dialog are:

    - Broswe a report (using ISPF Browse)
    - View a report (using ISPF View)
    - Copy a report to a dataset
    - Mail a report (using XMITIP)
    - Print a report
    - Transfer a report to a workstation
    - Load a report from CA-View tape to CA-View disk

This code has been tested on OS/390 2.10 and z/OS 1.9 with CA-View 2.0
and CA-View 11.0. It is slightly (does a dynamic lookup) dependent
upon the report format generated by SARBCH with the /LIST statement.
If this report format changes then the code which parses the report
will have to be changed.

        Syntax:    %cavxtrt option(s)

                   Valid Options:
                   database - invoke using this specified
                              CA-View database
                   /CA     - Invoke the Computer Associates
                             CA-View ISPF Interface for all
                             selections.
                   /LAST   - Use the last CA-View Database
                             and bypass the database prompt

Installation:

1. Execute the RECEIVE member of this dataset to expand the EXEC and
   PANELS members into partitioned datasets.

   e.g.   from ISPF 3.4 on the line where this dataset is
          ex /(receive)

   This command will also build a member in this dataset called
   TRYEXEC which can be executed to test out this exec.

2. Update SYS1.PARMLIB member IKJTSOxx for each LPAR to add SARBCH to
   the AUTHPGM section.  After doing the update you can dynamically
   implement the change by entering from TSO on each LPAR:

           PARMLIB UPDATE(xx)

3. Customization required
   The customizations are required in the CAVXTRTD Rexx Exec. This
   exec must be customized for your environment before use.

   After customization use the TESTCAVX Rexx exec to validate your
   changes.

   At this point you can try it out by using the TRYEXEC that was
   created during the RECEIVE process.

   e.g.   from ISPF 3.4 on the line where the install dataset is:
          ex /(tryexec)

4. Copy the libraries created in (1) into appropriate libraries in your
   normal TSO/ISPF concatenation.

5. Enter the exec from any ISPF Panel by entering TSO %CAVXTRT

See the member ANNSAMP for a sample user announcement.

This code is provided as is, with no warranty or recourse should it
not function in your environment.

Comments, suggestions, and complaints should be directed to the author at:

  Lionel B. Dyck
  Kaiser Permanente Information Technology
  Walnut Creek, CA 94598
  Internet: lionel.b.dyck‡kp.org

./ ADD NAME=$INDEX
$INDEX                 01.01 22/04/12 10:31     7     7     0 STE58
ACBJBAA1 DEFINE/ALTER/DISPLAY AGGREGATE GROUPS IN BATCH     *
ACBJBAB1 DEFINE/ALTER/DISPLAY BASE CONFIGURATION IN BATCH   *
ACBJBAC1 COMPARE ACS TEST LISTINGS IN BATCH                 *
ACBJBAC2 TRANSLATE ACS ROUTINES (ISMF OPTION 7.2)                  *
ACBJBAD1
ACBJBAG1
ACBJBAG2
ACBJBAIA
ACBJBAIB ACBJBAIB ALTER STORAGE GROUP      ‡D1C*/
ACBJBAIC
ACBJBAID
ACBJBAIH
ACBJBAII
ACBJBAIJ
ACBJBAIK
ACBJBAIL ACBJBAIL Generates Data class list and Report
ACBJBAIM ACBJBAIM) COMP(5695DF123): BATCH - Data Class List
ACBJBAIN ACBJBAIN) COMP(DF123): BATCH - Data Class Report
ACBJBAIO Generates Management class list and Report
ACBJBAIP ACBJBAIP) COMP(5695DF123): BATCH - Management Class List
ACBJBAIQ ACBJBAIQ) COMP(DF123): BATCH - Management Class Report
ACBJBAIR
ACBJBAIS Mountable Optical Volume List and Report.
ACBJBAIT Mountable Optical Volume report from saved list.
ACBJBAIU Generates Storage Class list and Report
ACBJBAIV storage Class List
ACBJBAIW Storage Class Report
ACBJBAIX ACBJBAIX GENERATES STORAGE GROUP LIST AND REPORT          */
ACBJBAIY Storage Group List
ACBJBAIZ               01.03 22/04/12 11:37   188   188     0 STE58
ACBJBAIZ ACBJBAIZ STORAGE GROUP REPORT      ‡A0C*/
ACBJBAI1 TEST CASE GEN SMF DATA   */
ACBJBAI2 ACBJBAI2) COMP(DF123): BATCH  - GENERATES DATA SET LIST
ACBJBAI4 ACBJBAI4 DASD VOLUME LIST IN BATCH ‡A0C*/
ACBJBAI5
ACBJBAI5 ACBJBAI5 GENERATES VOLUME LIST
ACBJBAI7 ACBJBAI7) COMP(DF123): BATCH  - GENERATES DATA SET LIST
ACBJBAI8 ACBJBAI8 GENERATES VOLUME LIST    ‡A0C*/
ACBJBAI9 ACBJBAI9 GENERATES VOLUME LIST    */
ACBJBAJA
ACBJBAJB
ACBJBAJC
ACBJBAJD
ACBJBAJE
ACBJBAJF
ACBJBAJG
ACBJBAJH
ACBJBAJI
ACBJBAJJ
ACBJBAJK
ACBJBAJL
ACBJBAJ1
ACBJBAJ2
ACBJBAJ3
ACBJBAJ7
ACBJBAJ8
ACBJBAK1
ACBJBAK4
ACBJBAL1
ACBJBAL4
ACBJBAL5
ACBJBAL6
ACBJBAL7
ACBJBAM1
ACBJBAM2
ACBJBAN1
ACBJBAN4
ACBJBAOB               01.00 22/04/12 11:16    96    96     0 STE58
ACBJBAOD
ACBJBAOF
ACBJBAOI
ACBJBAOQ
ACBJBAOS
ACBJBAOT
ACBJBAOU
ACBJBAOW
ACBJBAO7
ACBJBAP1
ACBJBARD
ACBJBAR2               01.02 22/04/12 11:16   108   109     0 STE58
ACBJBAR2 ACBJBAR2 CONFIG. REPORT        */
ACBJBAS1
ACBJBAU2
ACBJBAU4
ACBJBAXV
ACBJBAX1
ACBTST
IGDACSSC

./ ADD NAME=$INSTALL
This member may be used to make notes of local customization so that the
same changes can be made in future releases of this package.

1. Change SYS1.PARMLIB member IKJTSO__ to add SARBCH to the AUTHPGM
   section.

2. Updates in the REXX Exec CAVXTRTD

   - datefmt variable set for the date format desired.
     U = USA (mm/dd/yy)    E = European (dd/mm/yy)

     Changed to ___

   - jobsuf variable set to a default character to be appended to the
     generated jobname for batch load processing.  Default is L.

     Changed to ____

   - jobcard variable set to a default job card statement.

     Changed to ____

   - In the routine DO_CADialog change the dataset names for the Computer
     Associates CA-View ISPF Panel and Table datasets:

     Change for panels to: _______________

     Change for tables to: _______________

   - jobclass variable may be set, default is no CLASS= on the generated
     JOB card.

     Change to:

   - Customize the list of available CA-View databases. Read the comments
     in the code for particulars.

     Changes made:

3. Test customizations using the TESTCAVX exec

./ ADD NAME=$JOB
//IPOUPDTE JOB (T2,129200),MVS,
//  MSGCLASS=5,CLASS=0,NOTIFY=&SYSUID

./ ADD NAME=$LISTJCL
Sample JCL to generate a /LIST in case the version/release of CA-View
changes so you can easily compare and update the code:

//xxx JOB ....
//STEP1    EXEC PGM=SARBCH
//SYSPRINT DD SYSOUT=*
//REPORT   DD SYSOUT=*
//SYSIN    DD  *
/DBASE NAME=sar.database
/LIST ID=jobname

./ ADD NAME=$MEMBERS
Members of this PDS:

$DOC         Brief documentation on this tool
$INSTALL     A checklist to use when installing
$LISTJCL     Sample JCL to generate a ÁLIST report (see CAV20)
$MEMBERS     What you are now reading
$NOTES       Usage notes
ANNSAMP      Sample end user announcment
CHANGES      Change history
EXEC         TSO Transmit format of the REXX Library
LOGIC        Code logic
PANELS       TSO Transmit format of the ISPF Panel Library
RECEIVE      Exec to process EXEC and PANELS back into PDS data sets
TRYEXEC      Sample exec to test this code

./ ADD NAME=$NOTES
Usage Notes:

1. The CA-View /LIST format is critical to the success of this dialog as
   the /LIST results are processed to generate the list of eligible
   reports.

2. The generated JOB card accounting format may not work in all
   environments and thus needs to be reviewed.

3. To use the EDITPAGE for page selections get the SDSFPAGE package
   from http://www.lbdsoftware.com

4. To use the E-Mail option get the XMITIP package from
   http://www.lbdsoftware.com

5. If using the E-Mail option and you desire to format the report as an
   Adobe Acrobat PDF file then you need to also get the TXT2PDF package
   from http://www.lbdsoftware.com

./ ADD NAME=A
//DSNNOTC  JOB (ACCT),CNTLM,MSGCLASS=S,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=(STE58.OSEO.CNTLM,
// SYS1.SACBCNTL)
//STEP1  EXEC  PGM=ADRDSSU,REGION=8M
//*DSN COPY RENAME
//SYSPRINT  DD  SYSOUT=*
//INVOL    DD VOL=SER=W90J30,UNIT=3390,SPACE=(CYL,(50,10))
//VOLSER   DD DUMMY
//SYSIN    DD *
 DUMP DATASET( -
        INCLUDE( -
                **.**          -
                )  -
      BY(CATLG,EQ,NO))-
      PHYSINDD(INVOL) -
      OUTDDNAME(VOLSER) -
      TOL(ENQF)
/*
      PHYSINDYNAM(VOLSER) -

./ ADD NAME=ACBJBAA1
//acbjbaa1 JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAA1) COMP(5695DF123): BATCH - AG DEFINE/ALTER/DISPLAY   */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 1998,2002  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $T1=NQ5,HDZ11E0,061997,SNJTCS:   NaviQuest Batch Support     ‡T1A*/
//* $T2=K151321,HDZ11E0,091998,SNJTCS: Possible values          2‡T2A*/
//*                                    documentation                 */
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  ‡WA41441*/
//* 05/23/01 TCS - HDZ11F0: Prolog Updation                  ‡WA49380*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER/DISPLAY AGGREGATE GROUPS IN BATCH     *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//*   PARAMETER FOLLOWING ACBQBAA1 - DEFINE OR ALTER                 *
//************************ ADD BEG ***********************************
//*                                                        3‡WA49380 *
//* Required Fields:                                                 *
//*                                                                  *
//*   SCDS    : Name of the Configuration dataset. 1-44 characters.  *
//*                                                                  *
//*   AGNAME  : Name of the Aggregate group  to define/alter/display.*
//*                                                                  *
//*             Possible values : 1-8 characters                     *
//*                                                                  *
//*   NOOFCPS : Specify  no. of  copies  of the  aggregate  backup   *
//*             output  files to be created. The aggregate  backup   *
//*             output  file  consists  of an instruction activity   *
//*             log file, control  file  and data files. This is a   *
//*             required field.                                      *
//*                                                                  *
//*             Possible values :   1 - 15.                          *
//*                                                                  *
//*   ODSPREF : Output dataset name prefix.                          *
//*                                                                  *
//*             Possible values :  Any 1 - 33 character  valid TSO   *
//*             dataset name prefix .                                *
//*                                                                  *
//*   SELDS   : Name of the selection dataset  containing lists of   *
//*             datasets to be included in the application BKP.      *
//*             Could be sequential or PDS dataset. In case of PDS   *
//*             Specify the member name also.                        *
//*                                                                  *
//*             Possible values: Any 1 to 44 character valid TSO     *
//*                              dataset name.                       *
//*                                                                  *
//* Optional Fields:                                       2‡WA49380 *
//*                                                                  *
//*   DESCR   : Remarks about the Aggregate group being defined /    *
//*             altered.                                             *
//*             Possible values :  1 - 120 alphanumeric characters.  *
//*                                                                  *
//*   MCNAME  : Name  of  the  MGMTCLS  containing  the  attribute   *
//*             values for aggregate backups.                        *
//*                                                                  *
//*             Possible values: Any valid 1 - 8 character MGMTCLS   *
//*             name.                                                *
//*                                                                  *
//*   ACCOUNT : Specifies the character string used to provide the   *
//*             accounting information parameter required for batch  *
//*             jobs.                                                *
//*                                                                  *
//*             Possible values : 1 - 32 character valid JCL         *
//*             accounting information.                              *
//*                                                                  *
//*   INSTRDS : Name of the dataset containing commands and other    *
//*             instructions that is copied onto the control file    *
//*             volume after the backup control file. Must be        *
//*             a sequential file.                                   *
//*                                                                  *
//*             Possible values: Any 1 to 44 character valid TSO     *
//*                              dataset name.                       *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                           ‡WA41441*
//*                                                                  *
//*                Possible values : Y/N/BLANK               ‡WA41441*
//************************ ADD END ***********************************
//********************************************************************
//********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQBAA1 +
DEFINE/ALTER +
SCDS(TEST.CDS) +
AGNAME(AGGROUP1) +
DESCR(TO DEFINE AGGREGATE GROUP) +
NOOFCPS() +
MCNAME() +
ODSPREF() +
ACCOUNT() +
SELDS() +
INSTRDS() +
UPDHLVLSCDS() +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
/*
//STEP2   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQBAA1 +
DISPLAY +
SCDS(TEST.CDS) +
AGNAME() +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
//

./ ADD NAME=ACBJBAB1
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAB1) COMP(5695DF123): BATCH - BC DEFINE/ALTER/DISPLAY   */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                     ‡V1C*/
//* (C) COPYRIGHT 1998,2002  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $T1=NQ5,HDZ11E0,061997,SNJTCS:   NaviQuest Batch Support     ‡T1A*/
//* $T2=K151321,HDZ11E0,091998,SNJTCS: Possible values          2‡T2A*/
//*                                    documentation                 */
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  ‡WA41441*/
//* $V1=DSSP,HDZ11G0,09/19/00,TCS: DS Separation Profile       2‡V1A */
//*                                     Support                      */
//* 05/23/01 TCS - HDZ11F0: Prolog Updation                  ‡WA49380*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER/DISPLAY BASE CONFIGURATION IN BATCH   *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//*   PARAMETER FOLLOWING ACBQBAB1 - DEFINE OR ALTER OR DISPLAY      *
//************************* ADD BEG ******************************** *
//*                                                        3‡WA49380 *
//* Required Fields:                                                 *
//*                                                                  *
//*   SCDS    : Specify the SCDS whose base configuration you want   *
//*             to define/alter or display.                         *
//*                                                                  *
//*   BYTPTRK : Specify BYTES/TRACK                                  *
//*                                                                  *
//*             Possible values : 1 - 999999                         *
//*                                                                  *
//*   TRKPCYL : Specify TRACKS/CYLENDER                              *
//*                                                                  *
//*             Possible values : 1 - 999999                         *
//*                                                                  *
//*   ADDSYS  : Name of the system you want to add                   *
//*                                                                  *
//*             Possible values : 1-8 Alphanumeric characters        *
//*                               beginning with alphebetic.         *
//*                                                                  *
//*             If more than one system is being added  , systems    *
//*             will be separated by ','.                            *
//*                                                                  *
//*             Ex : ADDSYS(SYS1,SYS2,SYS3)                          *
//*                                                                  *
//*   ADDGRP  : Name of the System group that you want to add        *
//*                                                                  *
//*             Possible values : 1-8 Alphanumeric characters.       *
//*                               beginning with aplhabetic.         *
//*                                                                  *
//*             If more than one system group is being added, system *
//*             groups will  be separated by ','.                    *
//*                                                                  *
//*             Ex : ADDGRP(SGRP1,SGRP2,SGRP3)                       *
//*                                                                  *
//*                                                                  *
//*   DELSYS  : Name of the system you want to delete                *
//*                                                                  *
//*             If more than one system is being deleted, systems    *
//*             will be separated by ','.                            *
//*                                                                  *
//*             Ex : DELSYS(SYS1,SYS2,SYS3)                          *
//*                                                                  *
//*   DELGRP  : Name of the System group that you want to delete     *
//*                                                                  *
//*             If more than one system group is being deleted,      *
//*             system groups will  be separated by ','.             *
//*                                                                  *
//*             Ex : DELGRP(SGRP1,SGRP2,SGRP3)                       *
//*                                                                  *
//*   RENSYS  : Old and new names of the system that is being        *
//*             renamed, separated by ','.                           *
//*                                                                  *
//*             If more than one system is being renamed, systems    *
//*             will be separated by ','.                            *
//*                                                                  *
//*             Ex : RENSYS(oldname1,newname1,oldname2,newname2)     *
//*                                                                  *
//*   RENGRP  : Old and new names of the system group  that is being *
//*             renamed, separated by ','.                           *
//*                                                                  *
//*             If more than one system group is being renamed,      *
//*             system groups ll be separated by ','.                *
//*                                                                  *
//*             Ex : RENGRP(oldname1,newname1,oldname2,newname2)     *
//*                                                                  *
//* Optional Fields:                                       2‡WA49380 *
//*                                                                  *
//*   DESCR   : Remarks  about  the  SCDS whose base you want to     *
//*             define or alter.                                     *
//*                                                                  *
//*             Possible values : 1 - 120 characters.                *
//*                                                                  *
//*   DEFMC   : Specify this DEFAULT MGMTCLS field to define or      *
//*             alter the MGMTCLS reserved  for  datasets which      *
//*             have not yet been assigned a MGMTCLS. Available      *
//*             only for SMS managed datasets. Controls the BKP,     *
//*             retention and migration of datasets.                 *
//*                                                                  *
//*             Possible values : Valid MGMTCLS name.                *
//*                                                                  *
//*   DEFUNIT : Specify this field  to assign the default device     *
//*             used when non SMS datasets are allocated without     *
//*             a unit parameter,                                    *
//*                                                                  *
//*   DSSEPPL : Specify Partitioned or Sequential dataset name  5‡V1A*
//*             This provides SMS with a list of dataset names.      *
//*                                                                  *
//*             Possible values : A valid data set name              *
//*                                                                  *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                           ‡WA41441*
//*                                                                  *
//*                Possible values : Y/N/BLANK               ‡WA41441*
//************************* ADD END ******************************** *
//********************************************************************
//********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAB1 DEFINE/ALTER +
SCDS(TEMP.SCDS) +
DESCR() +
DEFMC() +
DEFUNIT() +
BYTPTRK() +
TRKPCYL() +
DSSEPPL() +
ADDSYS() +
ADDGRP() +
UPDHLVLSCDS() +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
/*
/*
//STEP3   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAB1 DISPLAY +
SCDS(TEMP.SCDS) +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
/*

./ ADD NAME=ACBJBAC1
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAC1) COMP(5695DF123): BATCH  - ACS TEST LISTINGS COMPARE*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5695-DF1                                                         */
//* (C) COPYRIGHT 1996,1998  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*10/04/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//*05/29/98  TCS - HDZ11D0: Adding XCPSPACE parameter        ‡WA32832*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO COMPARE ACS TEST LISTINGS IN BATCH                 *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//*   PARAMETERS:                                                    *
//*                                                                  *
//*     BASELIST - BASE ACS TEST LISTING (INPUT)                     *
//*     NEWLIST  - NEW ACS TEST LISTING (INPUT)                      *
//*     TESTBED  - TEST CASE PDS (REFERENCE INPUT)                   *
//*     RSLTDSN  - COMPARISON RESULTS DATA SET (OUTPUT)              *
//*     XCPTPDS  - EXCEPTION TEST CASE PDS (OUTPUT)                  *
//*     XCPSPACE - SPACE values of Except DS (Optional)    3a‡WA32832*
//*       Values: (Primary Tracks,Secondary Tracks,Directory Blocks) *
//*         which are positional and optional. Defaults: (3,1,20).   *
//*                                                                  *
//*   NOTE:  If you receive message IEC217I B14-0C on your exception *
//*       data set, you need to increase your data set size by using *
//*       the XCSPACE parameter (specially the directory blocks)     *
//*                                                                  *
//********************************************************************
//CMPRSTEP EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB,TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
DEL COMPARE.LISTING
DEL TESTCASE.EXCP
ISPSTART CMD(%ACBQBAC1 +
BASELIST(BASE.TESTLIST) +
NEWLIST(NEW.TESTLIST) +
TESTBED(TESTCASE.LIBRARY) +
RSLTDSN(COMPARE.LISTING) +
XCPTPDS(TESTCASE.EXCP) +
XCPSPACE(5,3,30)) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//* COPY THE COMPARISON LISTINGS DATA SET                            *
//*                                                                  *
//*    SYSUT1 - INPUT (FROM PREVIOUS STEP)                           *
//*    SYSUT2 - OUTPUT                                               *
//*                                                                  *
//********************************************************************
//REPGEN   EXEC PGM=IEBGENER
//SYSUT1   DD DISP=SHR,DSN=IBMUSER.COMPARE.LISTING
//SYSUT2   DD SYSOUT=*
//SYSIN    DD DUMMY
//SYSPRINT DD SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAC2
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAC2) COMP(DF123):BATCH TRANSLATE,VALIDATE,TEST&CMP  ‡D1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                     ‡D1C*/
//* COPYRIGHT 1996, 2011 IBM CORP.                               ‡D1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        ‡WA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*10/04/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//*$T2=k150142  ,HDZ11E0,11/19/97,SNJTCS: Adding TABL2 parameter ‡T2A*/
//*05/29/98  TCS - HDZ11D0: Adding XCPSPACE parameter        ‡WA32832*/
//*03/30/99  CCY - HDZ11D0: Add note for ISPSTART cmd line   ‡WA38094*/
//*07/01/99  TCS - HDZ11D0: Remove note for ISPSTART cmd line‡WA39926*/
//*11/12/99  TCS - HDZ11E0: Support for Uplevel SCDS update  ‡WA41441*/
//*$D1=OA32019,HDZ1D10,10/22/10,IBSTG: Inconsistent use of SCDS  ‡D1A*/
//*                                    (KFI0634)                 ‡D1A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//*  SAMPLE JCL TO DO FOUR OPEARTIONS:                               *
//*                                                                  *
//*     1. TRANSLATE ACS ROUTINES (ISMF OPTION 7.2)                  *
//*     2. VALIDATE ACS ROUTINES (ISMF OPTION 7.3)                   *
//*     3. TEST ACS ROUTINES (ISMF OPTION 7.4.3)                     *
//*     4. COMPARE BASE & NEW ACS LISTINGS                           *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* TRANSLATE STEP:                                                  *
//*                                                                  *
//*  ACSSRC      - PDS CONTAINING ACS ROUTINES TO BE                 *
//*                TRANSLATED (INPUT)                                *
//*  MEMBER      - MEMBER NAME OF THE ROUTINE TO BE                  *
//*                TRANSLATED (INPUT)                                *
//*  SCDS        - NAME OF SCDS INTO WHICH THE ACS ROUTINES ARE  ‡D1C*
//*                TO BE TRANSLATED (OUTPUT)                         *
//*  LISTNAME    - TRANSLATE LISTING (OUTPUT)                        *
//*  UPDHLVLSCDS - CONFIRM OPERATION ON AN UPLEVEL SCDS      ‡WA41441*
//*                When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                           ‡WA41441*
//*                Possible values : Y/N/BLANK               ‡WA41441*
//********************************************************************
//TRANSLAT EXEC ACBJBAOB,
//         PLIB1='SYS1.DGTPLIB',
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
DEL DATACLAS.LISTING
DEL MGMTCLAS.LISTING
DEL STORGRP.LISTING
DEL STORCLAS.LISTING
ISPSTART CMD(ACBQBAO1 +
ACSSRC(ACS.SOURCE) MEMBER(DATACLAS) +
SCDS(MYSCDS) LISTNAME(DATACLAS.LISTING) +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)

ISPSTART CMD(ACBQBAO1 +
ACSSRC(ACS.SOURCE) MEMBER(STORCLAS) +
SCDS(MYSCDS) LISTNAME(STORCLAS.LISTING) +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)

ISPSTART CMD(ACBQBAO1 +
ACSSRC(ACS.SOURCE) MEMBER(MGMTCLAS) +
SCDS(MYSCDS) LISTNAME(MGMTCLAS.LISTING) +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)

ISPSTART CMD(ACBQBAO1 +
ACSSRC(ACS.SOURCE) MEMBER(STORGRP) +
SCDS(MYSCDS) LISTNAME(STORGRP.LISTING) +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)

/*
//********************************************************************
//*                                                                  *
//*   COPY TRANSLATE LISTINGS                                        *
//*                                                                  *
//*    SYSUT1 - INPUT (FROM PREVIOUS STEP)                           *
//*    SYSUT2 - OUTPUT                                               *
//*                                                                  *
//********************************************************************
//TRANGEN  EXEC  PGM=IEBGENER
//SYSUT1   DD  DSN=IBMUSER.DATACLAS.LISTING,DISP=SHR
//         DD  DSN=IBMUSER.STORCLAS.LISTING,DISP=SHR
//         DD  DSN=IBMUSER.MGMTCLAS.LISTING,DISP=SHR
//         DD  DSN=IBMUSER.STORGRP.LISTING,DISP=SHR
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//********************************************************************
//*                                                                  *
//*   VALIDATE STEP:                                                 *
//*                                                                  *
//*  SCDS        - NAME OF SCDS THAT CONTAINS THE TRANSLATED ACS ‡D1C*
//*                ROUTINES TO BE VALIDATED (INPUT)                  *
//*  TYPE        - TYPE OF ACS ROUTINE TO BE VALIDATED (INPUT)       *
//*  LISTNAME    - VALIDATE LISTING (OUTPUT)                         *
//*  UPDHLVLSCDS - CONFIRM OPERATION ON AN UPLEVEL SCDS(Y/N) ‡WA41441*
//*                                                                  *
//********************************************************************
//VALIDAT  EXEC ACBJBAOB,
//         PLIB1='SYS1.DGTPLIB',
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
DEL VALIDAT.LISTING
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAO2 SCDS(MYSCDS) TYPE(*) +
LISTNAME(VALIDAT.LISTING) +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//*   COPY VALIDATE LISTING                                          *
//*                                                                  *
//*    SYSUT1 - INPUT (FROM PREVIOUS STEP)                           *
//*    SYSUT2 - OUTPUT                                               *
//*                                                                  *
//********************************************************************
//VALGEN   EXEC  PGM=IEBGENER
//SYSUT1   DD  DSN=IBMUSER.VALIDAT.LISTING,DISP=SHR
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//********************************************************************
//*                                                                  *
//*   TEST STEP                                                      *
//*                                                                  *
//*    SCDS     - NAME OF SCDS (INPUT)                           ‡D1C*
//*    TESTBED  - PDS CONTAINING TEST CASES (INPUT)                  *
//*    MEMBER   - MEMBERS TO BE TESTED IN TESTBED (INPUT)            *
//*    DC,SC,MC,SG - ROUTINES TO BE TESTED (INPUT)                   *
//*    LISTNAME - TEST LISTING (OUTPUT)                              *
//*                                                                  *
//********************************************************************
//TEST     EXEC ACBJBAOB,
//         PLIB1='SYS1.DGTPLIB',
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
DEL NEW.LISTING
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAIA +
SCDS(MYSCDS) +
TESTBED(TESTCASE.LIBRARY) MEMBER(*) +
DC(Y) SC(Y) MC(Y) SG(Y) +
LISTNAME(NEW.LISTING)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//*   COPY TEST LISTING                                              *
//*                                                                  *
//*    SYSUT1 - INPUT (FROM PREVIOUS STEP)                           *
//*    SYSUT2 - OUTPUT                                               *
//*                                                                  *
//********************************************************************
//TSTGEN   EXEC  PGM=IEBGENER
//SYSUT1   DD  DSN=IBMUSER.NEW.LISTING,DISP=SHR
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//********************************************************************
//*                                                                  *
//* COMPARE ACS LISTINGS                                             *
//*                                                                  *
//*   PARAMETERS:                                                    *
//*                                                                  *
//*     BASELIST - BASE ACS TEST LIST (INPUT)                        *
//*     NEWLIST  - NEW ACS TEST LIST (INPUT)                         *
//*     TESTBED  - PDS CONTAINING TEST CASES (REFERENCE INPUT)       *
//*     RSLTDSN  - COMPARISON RESULTS DATA SET (OUTPUT)              *
//*     XCPTPDS  - EXCEPTION TEST CASE PDS (OUTPUT)                  *
//*     XCPSPACE - SPACE values of Except DS (Optional)    3a‡WA32832*
//*       Values: (Primary Tracks,Secondary Tracks,Directory Blocks) *
//*         which are positional and optional. Defaults: (3,1,20).   *
//*                                                                  *
//*   NOTE:  If you receive message IEC217I B14-0C on your exception *
//*       data set, you need to increase your data set size by using *
//*       the XCSPACE parameter (specially the directory blocks)     *
//*                                                                  *
//********************************************************************
//COMPARE  EXEC ACBJBAOB,
//         PLIB1='SYS1.DGTPLIB',
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
DEL PDS4
DEL RESULTS.LISTING
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(%ACBQBAC1 +
BASELIST(BASE.TESTLIST) +
NEWLIST(NEW.TESTLIST) +
TESTBED(TESTCASE.LIBRARY) +
RSLTDSN(COMPARE.LISTING) +
XCPTPDS(TESTCASE.EXCP) +
XCPSPACE(5,3,30)) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//*   COPY COMPARISON RESULTS                                        *
//*                                                                  *
//*    SYSUT1 - INPUT (FROM PREVIOUS STEP)                           *
//*    SYSUT2 - OUTPUT                                               *
//*                                                                  *
//********************************************************************
//CMPGEN   EXEC PGM=IEBGENER
//SYSUT1   DD DISP=SHR,DSN=IBMUSER.COMPARE.LISTING
//SYSUT2   DD SYSOUT=*
//SYSIN    DD DUMMY
//SYSPRINT DD SYSOUT=*
//*

./ ADD NAME=ACBJBAD1
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAD1) COMP(DF123): BATCH - DC DEFINE/ALTER/DISPLAY   ‡Y1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                         */
//* COPYRIGHT IBM CORP. 1998, 2017                               ‡G1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $T1=NQ5,HDZ11E0,061997,SNJTCS:   NaviQuest Batch Support     ‡T1A*/
//* $T2=K151321,HDZ11E0,091998,SNJTCS: Possible values          2‡T2A*/
//*                                    documentation                 */
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  ‡WA41441*/
//* $U1=OW44570,HDZ11F0,033000,TCS: Block Size Limit Support     ‡U1A*/
//* $V1=DCE    ,HDZ11G0,01/01/02,TCS: Dyn Vol Cnt & RLS Support  ‡V1A*/
//* 05/23/01 TCS - HDZ11F0: Prolog Updation                  ‡WA49380*/
//* $U2=OW50676,HDZ11F0,080201,TCS: CICSVR Support               ‡U2A*/
//* $V2=OW53955,HDZ11G0,031402,TCS: Blythe3 Support              ‡V2A*/
//* $W1=OA02199,HDZ11H0,030901,TCS: Ventana Support              ‡W1A*/
//* $W2=OA04845,HDZ11H0,031028,TCS: Incorrect Resetting of       ‡W2A*/
//*                                   fields during ALTER        ‡W2A*/
//* $Y1=K1K0094 ,HDZ11K0,04/01/09,SNJTCS: Large Sequential Data  ‡Y1A*/
//*                                       Set Support            ‡Y1A*/
//* $Y2=K1K0170 ,HDZ11K0,040315,SNJTCS: VSAM Extent Constraint   ‡Y2A*/
//*                       Removal and RLS Above 2-GB Bar Support ‡Y2A*/
//* $X1=OA07097,HDZ11J0,040505,SNJTCS: Ventana-2 Support         ‡X1A*/
//* $X2=OA07290,HDZ11J0,040726,SNJTCS: CICSVR Support, two new   ‡X2A*/
//*                                 values for FRlog, UNDO & ALL ‡X2A*/
//* $Y3=K1K0470,HDZ11K0,040910,SNJCCY: Add back LARGE value      ‡Y3A*/
//* $Y4=OA13101,HDZ11K0,050829,SNJTCS: SUPPORT OF VENTANA-3      ‡Y4A*/
//* $90=VSAMSMB,HDZ1190,060524,IBSTG : SUPPORT OF VSAM SMB       ‡90A*/
//* $Z1=OA16354,HDZ1180,060613,SNJTCS: Add back LARGE value      ‡Z1A*/
//* $Z2=OA16354,HDZ1180,060802,SNJCCY: Incr vol count to 255     ‡Z2A*/
//* $Z3=OA17568,HDZ1180,06/08/11,IBSAS: TAPE ENCRYPTION SUPPORT  ‡Z3A*/
//* $A0=SMPO   ,HDZ1A10,07/05/02,IBSTG: SMPO Support             ‡A0A*/
//* $A1=K1A0995,HDZ1A10,07/07/17,IBSTG: fix typo                 ‡A1A*/
//* $A2=OA22128,HDZ1A10,08/05/06,IBSTG: 3592 Gen3 Support        ‡A2A*/
//* $B1=EAV2   ,HDZ1B10,08/06/10,IBSAM: EATTR keyword support    ‡B1A*/
//* $A3=OA25930,HDZ1A10,08/08/13,IBSTG: Fix comment for DSNMTYP  ‡A3A*/
//* $C1=CARECL ,HDZ1C10,09/03/12,IBSTG: CA Reclaim support       ‡C1A*/
//* $C2=OA33035,HDZ1C10,10/05/20,IBSTG: Update EXTADDRS descrpt  ‡C2A*/
//* $D1=DSRET99,HDZ1D10,10/05/18,SVLCY: Retention>9999 support   ‡D1A*/
//* $E1=DIRONLY,HDZ2210,11/03/18,SVLCY: Support for directory    ‡E1A*/
//*                                       only cache             ‡E1A*/
//* $D2=OA33953,HDZ1D10,11/05/31,SVLCY: 3592 Gen4 Support        ‡D2A*/
//* $D3=OA38205,HDZ1D10,12/01/10,SVLCY: Log Replicate support    ‡D3A*/
//* $E2=SMBENH ,HDZ2210,12/08/03,SVLCY: SMB RAB/RMODE31 SUPPORT  ‡E2A*/
//* $E3=zEDC   ,HDZ2210,13/01/30,IBSTG: zEDC compression support ‡E3A*/
//* $F1=SCRENH ,HDZ2220,13/06/13,IBSTG: Guaranteed Space Reduct  ‡F1A*/
//* $G1=FP0454 ,HDZ2230,15/10/26,IBSTG: DS Encryption            ‡G1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER/DISPLAY DATA CLASSES IN BATCH         *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//*   PARAMETER FOLLOWING ACBQBAD1 - DEFINE OR ALTER OR DISPLAY      *
//************************* ADD BEG **********************************
//*                                                        3‡WA49380 *
//* Required Fields:                                                 *
//*                                                                  *
//*   SCDS     : Specify the name of the CDS  that  contains the     *
//*              dataclass you want to Define/Alter/Display.         *
//*                                                                  *
//*              Possible values : Valid CDS name .                  *
//*                                                                  *
//*   DCNAME   : Name of the Dataclass.                              *
//*                                                                  *
//*              Possible values : 1 - 8 characters                  *
//*                                                                  *
//* Optional Fields:                                       2‡WA49380 *
//*                                                                  *
//*   DESCR    : Remarks about the DC being defined/altered.         *
//*              1-120 characters.                                   *
//*                                                                  *
//*   RECORG   : Specify how the records in the Datasets will be ‡A1C*
//*              organized during allocation.                        *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*              KS    ->  VSAM Key Sequenced                        *
//*              ES    ->  VSAM Entry Sequenced                      *
//*              RR    ->  VSAM Relative Record                      *
//*              LS    ->  VSAM Linear Space                         *
//*              BLANK ->  PS or PDS                                 *
//*                                                                  *
//*   RECFM    : Specify the format of records for Non VSAM DSs      *
//*              in this dataclass.                                  *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              U¨A!M|  ->  Undefined                               *
//*              V¨A!M|  ->  Variable                                *
//*              VS¨A!M| ->  Variable Spanned                        *
//*              VB¨A!M| ->  Variable Blocked                        *
//*              VBS¨A!M|->  Variable Blocked & Spanned              *
//*              F¨A!M|  ->  Fixed                                   *
//*              FS¨A!M| ->  Fixed Standard                          *
//*              FB¨A!M| ->  Fixed Blocked                           *
//*              FBS¨A!M|->  Fixed Blocked Standard                  *
//*              BLANK    ->  Specify no record format               *
//*                                                                  *
//*   LRECL    : Specify the logical record length of records in     *
//*              this dataclass.For variable length or undefined     *
//*              records this is the maximum length of a record.     *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              1 to 32760 or BLANK if RECORG is BLANK              *
//*              1 to 32761 or BLANK if RECORG is ES, KS, or RR      *
//*                                                                  *
//*   KEYLEN   : Specify the length of the key field for records     *
//*              in this dataclass.                                  *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              0 to 255 or blank if RECORG is blank                *
//*              1 to 255 or blank if RECORG is KS                   *
//*                                                                  *
//*   KEYOFF   : Specify key offset  for  key sequenced datasets     *
//*              in this DC.                                         *
//*                                                                  *
//*              Possible Values :  0 - 32760, BLANK                 *
//*                                                                  *
//*   SPCAVREC : Specify space units.                                *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              K     -> Kilo Bytes                                 *
//*              M     -> Mega Bytes                                 *
//*              U     -> Bytes                                      *
//*              BLANK ->                                            *
//*                                                                  *
//*   SPCAVVAL : Average length of each record in bytes.             *
//*                                                                  *
//*              Possible Values :  0 - 65535 or blank               *
//*                                                                  *
//*   SPCPRM   : Specify number of records Primary storage will      *
//*              contain.                                            *
//*                                                                  *
//*              Possible Values :  0 - 999999 or blank              *
//*                                                                  *
//*   SPCSEC   : Specify number of records Secondary storage will    *
//*              contain.                                            *
//*                                                                  *
//*              Possible Values :  0 - 999999 or blank              *
//*                                                                  *
//*   SPCDIR   : Specify no. of directory blocks to be allocated     *
//*              for PDS.                                            *
//*                                                                  *
//*              Possible Values :  0 - 999999 or blank              *
//*                                                                  *
//*   OVERRIDE : Specify whether or not the data class space   10‡A0A*
//*              attributes will override the space attributes from  *
//*              other sources like JCL.                             *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              Y -> Yes, override attributes                       *
//*              N -> No, do not override attributes                 *
//*              BLANK   -> Default N is assumed                     *
//*                                                                  *
//*   REXPPDT  : Specify  the   default   retention  period  or      *
//*              expiration  date of datasets in this DC.            *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              0 to 93000 ->  Datasets expire in no. of days   ‡D1C*
//*              yyyy/mm/dd ->  Datasets expiry date                 *
//*                             yyyy =>  1900 - 2155                 *
//*              yyyy/00/00 ->  Special value                        *
//*                             yyyy =>  1900 - 2155                 *
//*              BLANK      ->  No expiration date specified         *
//*                                                                  *
//*   VOLCNT   : Maximum no of volumes you expect to a DS in         *
//*              this DC.                                            *
//*                                                                  *
//*              Possible Values :  1 - 59, BLANK (DASD)         ‡Z2A*
//*                                 1 - 255, BLANK (Tape)        ‡Z2A*
//*                                                                  *
//*   ADDVOLAM : Specify the allocation amount when a VSAM DS        *
//*              in  extended  format  begins  allocation  on        *
//*              subsequent volumes.                                 *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              P        Use primary  allocation  amount            *
//*              S        Use secondary allocation amount            *
//*              BLANK    Use  default  value  of primary            *
//*                                                                  *
//*                                                                  *
//*   CISZDATA : Specify the size of each Control Interval for DS    *
//*              in this data class. Applies  only  to  VSAM DSs     *
//*              with RECORG of KS,ES,LS or RR only.                 *
//*                                                                  *
//*              Possible Values :  1 - 32768, BLANK                 *
//*                                                                  *
//*   FRSPCCI  : Percentage of free space you  want to reserve in    *
//*              the CI to avoid splits. Valid only for VSAM KSDS.   *
//*                                                                  *
//*              Possible Values :  0 - 100                          *
//*                                                                  *
//*   FRSPCCA  : Percentage of free space you  want to reserve in    *
//*              the CA to avoid splits. Valid only for VSAM KSDS.   *
//*                                                                  *
//*              Possible Values :  0 - 100                          *
//*                                                                  *
//*   SHRXREG  : Specify how the data will be shared with in one     *
//*              system. Applies to VSAM DSs  with RECORG of         *
//*              KS,ES,LS and RR only.                               *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              1  -> All users can  read the DS when no one is     *
//*                    writing to it.                                *
//*              2  -> All  users  can  read the  DS even if one     *
//*                    user is writing to it.                        *
//*              3  -> All users can both read  and write to the     *
//*                    DS. VSAM doesn't ensure the data integrity.   *
//*              4  -> All users can both read  and write to the     *
//*                    DS. VSAM provides some assistance to ensure   *
//*                    data integrity.                               *
//*              BLANK -> No share options specified.                *
//*                                                                  *
//*   SHRXSYS  : Specify  how  the data will be shared among the     *
//*              systems. Applies to VSAM DSs  with RECORG           *
//*              KS,ES,LS and RR only.                               *
//*                                                                  *
//*              Possible values : (See above)                       *
//*                                                                  *
//*   COMPTN   : Specify whether tape  volumes or DASD  datasets     *
//*              associated with this DC  are to be compacted or     *
//*              compressed.                                         *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*              Y     -> Extended format data sets are         2‡E3C*
//*                       compressed and tape volumes are compacted. *
//*                       The type of DASD compression depends  2‡E3A*
//*                       on the COMPRESS option in IGDSMSxx.        *
//*              N     -> DSs are  not compressed and Tape volumes   *
//*                       are  not  compacted  unless requested by   *
//*                       USER on JCL/DYNAMIC allocation.            *
//*              T     -> Extended format data sets are        17‡E3A*
//*                       compressed using tailored dictionaries     *
//*                       overriding SYS1.PARMLIB.                   *
//*              G     -> Extended format data sets are compressed   *
//*                       using generic dictionaries overriding      *
//*                       SYS1.PARMLIB.                              *
//*              ZR    -> The system will fail the allocation        *
//*                       request if the zEDC function is not        *
//*                       supported by the system or the minimum     *
//*                       allocation amount requirement is not met.  *
//*              ZP    -> The system will not fail the allocation    *
//*                       request but rather create either a         *
//*                       tailored compressed data set if the zEDC   *
//*                       function is not supported by the system    *
//*                       or create a non-compressed extended format *
//*                       data set if the minimum allocation amount  *
//*                       requirement is not met.                    *
//*              BLANK -> DSs are  not compressed and Tape volumes   *
//*                       are  not  compacted  unless requested by   *
//*                       USER on JCL/DYNAMIC allocation or by the   *
//*                       installation through parmlib specification.*
//*                                                                  *
//*   MDTYPE   : Specify mountable tape cartridge type used for      *
//*              DSs  associated with this DC.                       *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*              1     ->  For MEDIA1 ( Non Scalable             ‡X1C*
//*                                     Cartridge System Tape)   ‡X1A*
//*              2     ->  For MEDIA2 ( Enhanced Capacity        ‡X1C*
//*                                     Non Scalable             ‡X1A*
//*                                     Cartridge System Tape)   ‡X1A*
//*              3     ->  For MEDIA3 ( High Performance         ‡X1C*
//*                                     Non Scalable             ‡X1A*
//*                                     Cartridge Tape)          ‡X1A*
//*              4     ->  For MEDIA4 ( Extended                 ‡X1C*
//*                                     High Performance         ‡X1A*
//*                                     Non Scalable             ‡X1A*
//*                                     Cartridge Tape)          ‡X1A*
//*              5     ->  For MEDIA5 ( Enterprise Tape          ‡W1A*
//*                                      Cartridge 3592 )        ‡W1A*
//*              6     ->  For MEDIA6 ( WORM Tape Cartridge)     ‡D2C*
//*              7     ->  For MEDIA7 ( Enterprise Economy       ‡D2C*
//*                                     Tape Cartridge)          ‡D2C*
//*              8     ->  For MEDIA8 ( Enterprise Economy WORM  ‡D2C*
//*                                     Tape Cartridge)          ‡D2C*
//*              9     ->  For MEDIA9 ( Enterprise Extended      ‡Y4A*
//*                                     Tape Cartridge 3592)     ‡Y4A*
//*              10    ->  For MEDIA10( Enterprise Extended      ‡Y4A*
//*                                     WORM Tape Cartridge 3592)‡Y4A*
//*              11    ->  For MEDIA11( Enterprise Advanced      ‡D2A*
//*                                     Tape Cartridge)          ‡D2A*
//*              12    ->  For MEDIA12( Enterprise Advanced WORM ‡D2A*
//*                                     Tape Cartridge)          ‡D2A*
//*              13    ->  For MEDIA13( Enterprise Advanced      ‡D2A*
//*                                     Economy Tape Cartridge)  ‡D2A*
//*              BLANK ->  Cartridge type not specified.             *
//*                                                                  *
//*   RECTECH  : Specify the number of tracks on  mountable  tape    *
//*              cartridges used for DSs  associated with this DC.   *
//*              Optional.                                           *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*              18    -> An 18-track cartridge is used.             *
//*              36    -> A 36-track cartridge is used.              *
//*              128   -> A 128-track cartridge is used.             *
//*              256   -> A 256-track cartridge is used.        2‡V2A*
//*              384   -> A 384-track cartridge is used.             *
//*              E1    -> An Enterprise Format 1 cartridge is    ‡W1A*
//*                       used.                                  ‡W1A*
//*              E2    -> An Enterprise Format 2 cartridge is    ‡Y4A*
//*                       used.                                  ‡Y4A*
//*              E3    -> An Enterprise Format 3 cartridge is    ‡A2A*
//*                       used.                                  ‡A2A*
//*              E4    -> An Enterprise Format 4 cartridge is    ‡D2A*
//*                       used.                                  ‡D2A*
//*              EE2   -> An Enterprise Encrypted Format 2       ‡Z3A*
//*                       cartridge is used.                     ‡Z3A*
//*              EE3   -> An Enterprise Encrypted Format 3       ‡A2A*
//*                       cartridge is used.                     ‡A2A*
//*              EE4   -> An Enterprise Encrypted Format 4       ‡D2A*
//*                       cartridge is used.                     ‡D2A*
//*              BLANK -> The system default is used.                *
//*                                                                  *
//*   PEFSCLG  : Provides the installation with the ability to 10‡W1A*
//*              select tape usage.                                  *
//*              Optional.                                           *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*              Y     -> Provides optimal performance.         2‡Y4C*
//*              N     -> To use the full capacity.                  *
//*              BLANK -> Same as 'N' option.                        *
//*                                                                  *
//*   PERFSEG  : Provides the installation with the ability to 10‡Y4A*
//*              select tape usage.                                  *
//*              Optional.                                           *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*              Y     -> Enable Segmentation.                       *
//*              N     -> No Segmentation.                           *
//*              BLANK -> Same as 'N' option.                        *
//*                                                                  *
//*   DSNMTYP  : Specify the format of the datasets in this DC.      *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*              EXT      -> Extended format datasets           ‡A3C *
//*              HFS      -> Hierarchical File System Datasets       *
//*              LIB      -> Datasets are allocated as PDSEs    ‡A3C *
//*              PDS      -> Datasets are allocated as PDSs          *
//*              LARGE    -> Large format sequential data sets  ‡Z1A *
//*                            ( > 65535 tracks)                ‡Z1A *
//*              BLANK    -> Not specified                           *
//*                                                                  *
//*   IFEXT    : Specify whether this DC requires the DSs to be      *
//*              allocated only in extended  sequential format.      *
//*              Required only if DSNMTYP is specified as EXT.       *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*              P     -> Preferred                                  *
//*              R     -> Required                                   *
//*              BLANK -> DSNMTYP is not EXT.                        *
//*                                                                  *
//*   EXTADDRS : Specify this field to provide datasets with         *
//*              addressability of more than 4 GB.                   *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*              Y -> Provides extended addressability if            *
//*                   DSNMTYP is EXT                             ‡C2C*
//*              N -> Doesn't provide extended addressability.       *
//*                                                                  *
//*   RECACCB  : Use this field to specify to VSAM, how  the         *
//*              buffers are to be chosen and the manner by          *
//*              which they are processed.                           *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*              S     -> VSAM to determine buffering  algorithm     *
//*              U     -> Buffers are obtained in the same manner    *
//*                       as is used with out SYSTEM MANAGED         *
//*                       BUFFERING.                                 *
//*              DO    -> SMB with direct optimization          4‡E2A*
//*              DW    -> SMB weighted for direct processing         *
//*              SO    -> SMB with sequential optimization           *
//*              SW    -> SMB weighted for sequential processing     *
//*              BLANK -> U assumed if   DSNMTYP => EXT              *
//*                                                                  *
//*   REUSE    : Specify whether or not the users can open the       *
//*              cluster again and again as  a new cluster.          *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*              Y -> Reusable                                       *
//*              N -> Non Reusable                                   *
//*              BLANK   -> Default N is assumed                 ‡W2A*
//*                                                                  *
//*   INILOAD  : Specify whether or not storage allocated to the     *
//*              data component  is  to  be  preformatted before     *
//*              records are inserted during initial load.           *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*              S       -> No preformat                             *
//*              R       -> Data components control areas written    *
//*                         with records that indicate EOF.          *
//*              BLANK   -> Default R is assumed                     *
//*                                                                  *
//*   SPANONSP : Specify whether a data record is  allowed to        *
//*              cross   Control   Interval  boundaries. This        *
//*              attribute cannot be defined  while  defining        *
//*              linear dataset cluster.                             *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*              S     ->  record can be spanned across CIs          *
//*              N     ->  Record must be contained in one CI        *
//*              BLANK ->  Default  N is assumed.                    *
//*                                                                  *
//*   BWO      : Specify this field if Backup-While-Open (BWO)       *
//*              is allowed for  sphere. BWO  applies  only to       *
//*              SMS VSAM  datasets  and can not be  used with       *
//*              TYPE(LINEAR).                                       *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*              TC    -> Use TYPECICS for CICS VSAM file control    *
//*                       datasets. CICS use BWO for RLS and FVT     *
//*                       for Non RLS processing.                    *
//*              TI    -> Use TYPEIMS for IMS VSAM datasets          *
//*              NO    -> BWO doesn't apply to the cluster           *
//*              BLANK -> CICS uses FCT definition for RLS and       *
//*                       non RLS processing.                        *
//*                                                                  *
//*   LOG      : Specify whether the sphere to be accessed with      *
//*              VSAM record level sharing(RLS) is recoverable       *
//*              or non-recoverable.                                 *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*              N¨one| -> Non recoverable                           *
//*              U¨ndo| -> recoverable                               *
//*              All    ->                                       ‡D3C*
//*              Blank  ->                                           *
//*                                                                  *
//*   LOGSTID  : This field identifies the CICS recovery log stream. *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*              Dataset name of the recovery log stream             *
//*              BLANK                                               *
//*                                                                  *
//*   FRLOG    : Used to request RCC batch logging when the   10‡U2A *
//*              cluster is accessed in NSR, LSR, or GSR mode.       *
//*                                                                  *
//*              Possible values :                                   *
//*                                                            3‡X2A *
//*              A¨ll|  -> VSAM will call RCC to log changes to the  *
//*                        both RCC forward and backward recovery    *
//*                        log stream.                               *
//*              N¨one| -> No logging.                         1‡X2M *
//*              R¨edo| -> VSAM will call RCC to log changes to the  *
//*                        RCC forward recovery log stream.          *
//*              U¨ndo| -> VSAM will call RCC to log changes   2‡X2A *
//*                        to the RCC backward recovery log stream.  *
//*              blank  ->                                           *
//*                                                                  *
//*   SPCCONRL : Specify the DC attributes  that will be used by     *
//*              the  system  to retry  allocation and extension     *
//*              failures for SMS datasets.                          *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*              Y  -> SMS will re-drive the allocation after        *
//*                    reducing the  required space  quantity        *
//*                    based on the REQUIRED SPACE UPTO parm.        *
//*              N  -> Default; SMS will not attempt  a retry        *
//*                                                                  *
//*   REDSPCUT : specify this field ( REDUCE SPACE UPTO) in order    *
//*              to reduce the amount of requested quantity by x%    *
//*              and re-drive the best fit allocation.               *
//*                                                                  *
//*              Possible values : 0 - 99, BLANK.                    *
//*                                                            15‡U1A*
//*   BLKSZLIM : Specify  this field  (BLOCK SIZE LIMIT), to  specify*
//*              the largest value that  the system can determine for*
//*              a data set  block  size  when a program opens a data*
//*              set for output and no value is available. The system*
//*              determines a data set block size that is appropriate*
//*              for the media type  when the data set is sequential,*
//*              the  record  format  is  fixed  or  variable and the*
//*              logical record length is known. The BLKSZLIM keyword*
//*              on the DD statement overrides this value.           *
//*                                                                  *
//*              Possible Values : 32760 to 2147483648,              *
//*                                32KB  to 2097152KB,               *
//*                                1MB   to 2048MB,                  *
//*                                1GB   to 2GB, Blank.              *
//*                                                                  *
//*   RLSCF    : Specify RLS CF CACHE VALUE field to cache     12‡V1A*
//*              VSAM RLS data with CI's greater than 4K defined to  *
//*              DFSMS CF cache structures.                          *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*              A¨ll|         -> Indicates that all of the data is  *
//*                               cached for the sphere.             *
//*              N¨one|        -> Indicates that none of the data    *
//*                               will be cached                     *
//*              U¨pdatesonly| -> Indicates that only updated Cls    *
//*                               will be cached                     *
//*              D¨ironly|     -> Indicates that the directory   ‡E1A*
//*                               only will be cached            ‡E1A*
//*                                                                  *
//*   MAXVOL   : The DYNAMIC VOLUME COUNT parameter in the     6‡V1A *
//*              SMS data class which causes DFSMS to dynamically    *
//*              add volumes to an SMS managed data set up to the    *
//*              maximum specified in the data class.                *
//*                                                                  *
//*              Possible Values :  1 - 59, BLANK                    *
//*                                                                  *
//*   EXTCONS  : Specify whether or not a VSAM data set is     19‡Y2A*
//*              allowed to go beyond the 255 extents limit.         *
//*                                                                  *
//*              Possible values :                                   *
//*              Y -> Remove the 255 extents limit                   *
//*              N -> Keep the limit of 255 extents                  *
//*              BLANK   -> Default N is assumed                     *
//*                                                                  *
//*   RLSABOVE : Specify whether or not virtual storage for RLS      *
//*              can be above the 2-Gigabyte bar.                    *
//*                                                                  *
//*              Possible values :                                   *
//*              Y -> Place buffers above the bar in the SYSVSAM     *
//*                   address space                                  *
//*              N -> Do not place any data in storage located       *
//*                   above the bar                                  *
//*              BLANK   -> Default N is assumed                     *
//*                                                                  *
//*   SMBVSP   : Specify the amount of virtual storage          8‡90A*
//*              to obtain for buffers when opening the data set.    *
//*                                                                  *
//*              Possible values  :                                  *
//*              1K  to  2048000K                                    *
//*              1M  to  2048M                                       *
//*              BLANK                                               *
//*                                                                  *
//*   SDB      : Specify whether or not the system determined  10‡A0A*
//*              blocksize will be used regardless of the existence  *
//*              of a user-specified blocksize.                      *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              Y -> Yes, use SDB                                   *
//*              N -> No, do not USE SDB                             *
//*              BLANK   -> Default N is assumed                     *
//*                                                                  *
//*  KEYLABL1, : Specifies the label for the key encrypting    26‡Z3A*
//*  KEYLABL2    key used by the key manager. The key encrypting key *
//*              is used by the key manager to encrypt the data      *
//*              (encryption) key.                                   *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              - up to 64 characters typically containing alpha-   *
//*                numeric, national or special characters with some *
//*                additional characters also being allowed; treated *
//*                as a free form field on input and validity checked*
//*                by the control unit when the key label is first   *
//*                used and converted from EBCDIC -> ASCII.  Char-   *
//*                acters specified must map to ASCII characters     *
//*                X'20' -> X'7E'                                    *
//*              - blanks.                                           *
//*                                                                  *
//*  KEYENCD1, : Specifies how the label for the key encrypting key  *
//*  KEYENCD2    specified by the key label (input) is encoded by    *
//*              the key manager and stored on the tape cartridge.   *
//*                                                                  *
//*               Possible Values :                                  *
//*                                                                  *
//*               L      -> encoded as the specified label;          *
//*               H      -> encoded as a hash of the public key;     *
//*               blank  -> Not specified                            *
//*                                                                  *
//*   EATTR    : Indicates whether the data set can support extended *
//*              attributes.                                   10‡B1A*
//*                                                                  *
//*              Possible values:                                    *
//*                                                                  *
//*              O     -> Extended attributes are optional;          *
//*              N     -> No extended attributes, default for nonVSAM*
//*                       data sets;                                 *
//*              blank -> Not specified;                             *
//*                                                             9‡C1A*
//*   RECLAIMCA: Specify whether or not the DASD space for empty CAs *
//*              will be reclaimed on z/OS 1.12 or later systems.    *
//*                                                                  *
//*              Possible values:                                    *
//*                                                                  *
//*              Y     -> Yes, reclaim free CAs;                     *
//*              N     -> No, do not reclaim free CAs;               *
//*              BLANK -> Default Y is assumed.                      *
//*                                                             9‡D3A*
//*   LOGREPL  : Specify whether or not the data set will be         *
//*              eligible for replication.                           *
//*                                                                  *
//*              Possible values:                                    *
//*                                                                  *
//*              Y -> Yes, data set is eligible for VSAM replication *
//*              N -> No, data set is not eligible for VSAM          *
//*                   replication (default)                          *
//*                                                                  *
//*   RMODE31  : Specify where the buffers and control blocks  12‡E2A*
//*              are to reside.                                      *
//*                                                                  *
//*              Possible values:                                    *
//*                                                                  *
//*              ALL   -> Buffers and control blocks reside above    *
//*                       the line                                   *
//*              BUFF  -> Buffers only reside above the line         *
//*              CB    -> Control blocks reside above the line       *
//*              NONE  -> Buffers and control blocks reside below    *
//*                       the line                                   *
//*              blank -> Not specified                              *
//*                                                                  *
//* GUARSPCREDU: Specify whether space reduction on guaranteed 12‡F1A*
//*              space allocations is permitted or not.              *
//*                                                                  *
//*              Possible values:                                    *
//*                                                                  *
//*              Y     -> yes, space reduction on guaranteed space   *
//*                       allocations is permitted;                  *
//*              N     -> no, space reduction on guaranteed space    *
//*                       allocations is not permitted (default if   *
//*                       SPCCONRL is 'N');                          *
//*              BLANK -> Default N is assumed.                      *
//*                                                                  *
//* DASDDSKEYL:  Specify the label for the encryption key used 13‡G1A*
//*              by the access methods. The access methods use the   *
//*              encryption key to encrypt the data.                 *
//*                                                                  *
//*              Possible values:                                    *
//*                                                                  *
//*              - up to 64 characters typically containing alpha-   *
//*                numeric, national or special characters with some *
//*                additional characters also being allowed. Treated *
//*                as a free form field on input and validity        *
//*                checked each time the data set is opened.         *
//*              - blanks.                                           *
//*                                                                  *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                           ‡WA41441*
//*                                                                  *
//*                Possible values : Y/N/BLANK               ‡WA41441*
//*                                                                  *
//************************* ADD BEG **********************************
//********************************************************************
//********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAD1 +
DEFINE/ALTER +
SCDS(TEST.CDS) +
DCNAME() +
DESCR() +
RECORG() +
RECFM() +
LRECL() +
KEYLEN() +
KEYOFF() +
SPCAVREC() +
SPCAVVAL() +
SPCPRM() +
SPCSEC() +
SPCDIR() +
OVERRIDE() +
REXPPDT() +
VOLCNT() +
ADDVOLAM() +
CISZDATA() +
FRSPCCI() +
FRSPCCA() +
SHRXREG() +
SHRXSYS() +
COMPTN() +
MDTYPE() +
RECTECH() +
PEFSCLG() +
PERFSEG() +
DSNMTYP() +
IFEXT() +
EXTADDRS() +
RECACCB() +
REUSE() +
INILOAD() +
SPANONSP() +
BWO() +
LOG() +
LOGSTID() +
SPCCONRL() +
REDSPCUT() +
BLKSZLIM() +
FRLOG() +
RLSCF() +
MAXVOL() +
EXTCONS() +
RLSABOVE() +
SMBVSP() +
SDB() +
KEYLABL1() +
KEYENCD1() +
KEYLABL2() +
KEYENCD2() +
EATTR() +
RECLAIMCA(Y) +
LOGREPL(N) +
RMODE31() +
GUARSPCREDU(N) +
DASDDSKEYL() +
UPDHLVLSCDS() +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
/*
//STEP2   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAD1 +
DISPLAY +
SCDS(TEST.CDS) +
DCNAME() +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
//

./ ADD NAME=ACBJBAG1
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAG1) COMP(5695DF123):BATCH - TEST CASE GEN - DCOLLECT   */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5695-DF1                                                         */
//* (C) COPYRIGHT 1996 1998  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        ‡WA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*10/04/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE TEST CASES FROM DCOLLECT DATA             *
//*                                                                  *
//* INSTRUCTIONS BEFORE SUBMITTING:                                  *
//*                                                                  *
//*   CHANGE JOBCARD                                                 *
//*   CHANGE PREFIX                                                  *
//*   CHANGE PARAMETERS                                              *
//*                                                                  *
//* THE PARAMETERS TO ACBQBAG1 ARE AS FOLLOWS:                       *
//*                                                                  *
//*   PARAMETER 1 IS DATA SET CONTAINING DCOLLECT DATA (INPUT)       *
//*   PARAMETER 2 IS NUMBER OF TEST CASES TO BE GENERATED            *
//*   PARAMETER 3 IS MEMBER NAME PREFIX                              *
//*   PARAMETER 4 IS TEST CASE PDS (OUTPUT)                          *
//*   PARAMETER 5 IS REPLACE CONTENTS IF DSN EXISTS                  *
//*                                                                  *
//********************************************************************
//GENTEST EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB,TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(%ACBQBAG1 'IBMUSER.DCOLLECT.DATA' 10 TEST +
'IBMUSER.TESTCASE.LIBRARY' Y) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************

./ ADD NAME=ACBJBAG2
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAG2) COMP(5695DF123): BATCH  - TEST CASE GEN. SAVED LIST*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5695-DF1                                                         */
//* (C) COPYRIGHT 1996 1998  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        ‡WA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*10/04/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* GENERATE TEST CASES FROM A PREVIOUSLY SAVED ISMF DATA SET LIST   *
//*                                                                  *
//*     TABLENM  - SAVED ISMF DATA SET LIST (INPUT)                  *
//*     PRFX     - MEMBER NAME PREFIX                                *
//*     TESTPDS  - TEST CASE PDS (OUTPUT)                            *
//*     REPLACE  - REPLACE CONTENTS IF DSN EXISTS                    *
//*     INTEST   - DEBUG MODE YES/NO (KEEP IT AS NO)                 *
//*                                                                  *
//********************************************************************
//GENTC   EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB,TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(%ACBQBAG3 TABLENM(DSNLIST) +
INTEST(NO) PRFX(TEST) +
TESTPDS('IBMUSER.TESTCASE.LIBRARY') REPLACE(Y)) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************

./ ADD NAME=ACBJBAIA
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIA) COMP(5695DF123): BATCH  - GENERATES LIST FROM TAPE */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5695-DF1                                                         */
//* (C) COPYRIGHT 1996 1998  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        ‡WA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*10/04/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//*11/18/98  TCS - HDZ11E0: Fix for ISPFILE problem          ‡WA36007*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE AN ISMF MOUNTABLE TAPE VOLUME LIST,       *
//* SAVE IT, AND GENERATE A TAPE VOLUME REPORT FROM IT               *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PROFILE PREFIX COMMAND                               *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* STEP TO GENERATE TAPE VOLUME LIST AND SAVE IT                    *
//*                                                                  *
//*   VOL     - TAPE VOLUMES TO BE SELECTED                          *
//*   LIBNAME - LIBRARY NAMES TO BE SELECTED                         *
//*   STORGRP - STORAGE GROUPS TO BE SELECTED                        *
//*   PARAMETER FOLLOWING SAVE - NAME FOR THE SAVED LIST (OUTPUT)    *
//*                                                                  *
//********************************************************************
//GENLIST  EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB,TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
DELETE TAPEVOL.REPORT
ISPSTART CMD(ACBQBAI6 SAVE TAPELIST +
VOL(*) LIBNAME(L*) STORGRP(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//* STEP TO ALLOCATE ISPFILE, WHERE THE GENERATED REPORT IS SAVED    *
//* NOTE: THE DATA SET BEING ALLOCATED SHOULD NOT BE A TEMPORARY     *
//*       DATA SET.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=IBMUSER.TAPEVOL.REPORT,DISP=(NEW,CATLG),
//    BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD SYSOUT=*
//SYSIN  DD *
/*
//********************************************************************
//*                                                                  *
//* STEP TO GENERATE THE TAPE VOLUME REPORT FROM THE SAVED LIST      *
//*                                                                  *
//*   PARAMETER FOR ACBQBAR4 - SAVED LIST NAME (FROM GENLIST STEP)   *
//*   ISPFILE - TAPE VOLUME REPORT (OUTPUT, FROM ALCISPFL STEP)      *
//*   SYSIN - KEY WORDS SPECIFYING COLUMNS TO BE INCLUDED IN THE     *
//*           GENERATED REPORT                                       *
//*                                                                  *
//********************************************************************
//GENREP  EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB,TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAR4 TAPELIST) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//ISPFILE DD  DSN=IBMUSER.TAPEVOL.REPORT,DISP=OLD
//SYSIN DD  *
VOLSER
USEATTR
VOLERROR
CKPT
LIBNAME
STORGRP
MEDIA
RECTECH
COMPTYPE
LASTWRITE
LASTMOUNT
LASTEJECT
EXPDTVOL
CRTDTVOL
VOLLOC
TITLE=STATUS OF TAPES AS ON 06/01/96
/*
//********************************************************************
//*                                                                  *
//* COPY THE REPORT                                                  *
//*                                                                  *
//*   SYSUT1 - INPUT (FROM PREVIOUS STEP)                            *
//*   SYSUT2 - OUTPUT                                                *
//*                                                                  *
//********************************************************************
//TAPGEN EXEC PGM=IEBGENER
//SYSUT1   DD  DSN=IBMUSER.TAPEVOL.REPORT,DISP=SHR
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIB
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIB) COMP(DF123): BATCH  - ALTER STORAGE GROUP      ‡D1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2‡E1C*/
//* COPYRIGHT IBM CORP. 1996, 2013                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//*07/08/97  CCY - HDZ11D0: document valid status            ‡WA27962*/
//*$T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter     ‡T2A*/
//* 01/23/98 TCS - HDZ11D0: To Add Volume Status for each    ‡WA29937*/
//*                         System, in a Storage Group.      ‡WA29937*/
//*$U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for   2‡U1A*/
//*                                       DFSMS/MVS ISMF V2R10 Volume*/
//*                                       Alter Support Added.       */
//* 09/20/99 TCS - HDZ11E0: Volume ADD Command fails if the  ‡WA41026*/
//*                         SCDS name is too long.           ‡WA41026*/
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  ‡WA41441*/
//* 05/23/01 TCS - HDZ11F0: Prolog Updation                  ‡WA49380*/
//* 04/03/02 TCS - HDZ11G0: Add a new parameter STATUSALL()  ‡WA53756*/
//*$D1=OA32019,HDZ1D10,10/22/10,IBSTG: Inconsistent use of SCDS  ‡D1A*/
//*                                    (KFI0634)                 ‡D1A*/
//*$E1=SGDISPL,HDZ2210,12/06/20,IBSTG: Add volumes range         ‡E1A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO ADD NEW VOLUMES AND THEIR STATUS                   *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                                  *
//*      TEMPFILE - LISTING DATA SET (OUTPUT)                        *
//*      VOLADD   - VOLUMES TO BE ADDED (INPUT)                      *
//*                                                                  *
//*   PARAMETERS:                                                    *
//*                                                                  *
//* Required Fields:                                       2‡WA49380 *
//*                                                                  *
//*      SCDS     - SOURCE CONTROL DATA SET                      ‡D1C*
//*                                                             7‡E1A*
//*      VOL      - THIS FIELD CAN CONTAIN EITHER A VOLUME SERIAL    *
//*                 NUMBER OR THE FIRST COMMON CHARACTERS IN A RANGE *
//*                 OF VOLUME SERIAL NUMBERS. IF PART OF RANGE,      *
//*                 ENTER THE REMAINING DISTINCTIVE CHARACTERS OF    *
//*                 THE VOLUME SERIAL NUMBERS IN THE 'FROM' AND 'TO' *
//*                 FIELDS, AND IF YOU WANT, THE 'SUF' FIELD.        *
//*                                                                  *
//*      SG       - STORAGE GROUP                                    *
//*                                                         3‡WA49380*
//* Optional Fields:                                                 *
//*                                                            26‡E1A*
//*  Set the criteria in the following fields to specify range of    *
//*  volumes (you can specify as many as 100 volumes at a time):     *
//*                                                                  *
//*      FROM     - Use this field to specify the characters unique  *
//*                 to the first volume serial number in a range.    *
//*                 Use the VOL and SUF fields to select leading     *
//*                 and trailing characters. Valid entries are       *
//*                 decimal or hexadecimal numbers or alphabet.      *
//*                                                                  *
//*      TO       - Use this field to specify the characters unique  *
//*                 to the last volume serial number in a range.     *
//*                 Use the VOL and SUF fields to  select leading    *
//*                 and trailing characters. Valid entries are       *
//*                 decimal or hexadecimal numbers or alphabet.      *
//*                                                                  *
//*      SUF      - When you specify values in the FROM and TO       *
//*                 fields, you can specify in this field the        *
//*                 common trailing characters in a range of volume  *
//*                 serial numbers. Enter up to five characters.     *
//*                                                                  *
//*      TYPE     - When you specify hexadecimal numbers in the FROM *
//*                 and TO fields, you must enter 'X' in this field. *
//*                 When you specify alphabets in the FROM and TO    *
//*                 fields, you must enter 'A' in this field.        *
//*                 The default is decimal.                          *
//*                                                                  *
//*      STATUS   - STATUS (ENABLE/NOTCON/DISALL/DISNEW/QUIALL/      *
//*                         QUINEW)                                  *
//*                Up to 32 statuses can be specified separated by   *
//*               commas to match the 32 systems.  If a status is    *
//*               skipped, the system status that falls in between 2 *
//*               commas will have default value of ENABLE.  ‡WA29937*
//*                                                       13A‡WA53756*
//*      STATUSALL - STATUSALL (ENABLE/NOTCON/DISALL/DISNEW/QUIALL/  *
//*                         QUINEW)                                  *
//*                If Volume status in all the Systems needs to be   *
//*               set to a single value (for example ENABLE),        *
//*               STATUSALL is an easier option compared to the      *
//*               parameter STATUS.                                  *
//*                                                                  *
//*           Note:  STATUSALL and STATUS are mutually exclusive.    *
//*                  And so, while specifying value for one of these *
//*                  parameters, either the other parameter should   *
//*                  not be specified or if specified, it should not *
//*                  have any value specified.                       *
//*                                                                  *
//*      UPDHLVLSCDS - When modifying an SCDS, that was formatted    *
//*                    with a higher level of SMS, using a lower     *
//*                    level of SMS will make this application fail  *
//*                    unless you specify the UPDHLVLSCDS parameter  *
//*                    as 'Y'.  Default is 'N'.              ‡WA41441*
//*                                                                  *
//*                      If specified, this should be the first      *
//*                    parameter on  either VOLDEL or ADDVOL DD      *
//*                    names.                                ‡WA41441*
//*                                                                  *
//*                    Possible values : Y/N/BLANK           ‡WA41441*
//*                                                                  *
//*   To DELETE volume, specify SCDS, VOL and SG,                ‡D1C*
//*    and use VOLDEL for DDname.                            ‡WA29937*
//*                                                                  *
//*   To ALTER Volume, specify all the parameters as in VOLUME 11‡U1A*
//*   ADD and use VOLALT as DDname.                                  *
//*                                                                  *
//*   Specify '+' as the continuation character.  When splitting a   *
//*    word or a parameter to the next line, and there should not    *
//*    be any spaces, don't leave any blank spaces before the        *
//*    continuation character '+'.                           ‡WA41026*
//*                                                                  *
//*   If you specify all the three types of commands DELETE, ADD and *
//*   DEFINE then DELETEs are processed first, ALTERs are processed  *
//*   next and ADDs are processed finally irrespective of the order  *
//*   of the commands in the JOB.                                    *
//********************************************************************
//ADDVOL1 EXEC ACBJBAOB,
//        PLIB1='SYS1.DGTPLIB',
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//TEMPFILE  DD  DSN=&&VOLADDS,DISP=(NEW,KEEP),
//  SPACE=(TRK,(1,1)),LRECL=300,RECFM=F,BLKSIZE=300
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAI9) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//VOLADD  DD  *
UPDHLVLSCDS()
SCDS(MYCDS) VOL(SMS101) SG(PRIMARY) STATUS(ENABLE)
SCDS(MYCDS) VOL(SMS111) SG(PRIMARY) STATUS(DISALL,+
ENABLE,,DISNEW,,NOTCON,DISALL,ENABLE,QUIALL)
SCDS(MYCDS) VOL(SMS121) SG(PRIMARY) +
STATUS(DISNEW)
SCDS(MYCDS) VOL(SMS131) SG(PRIMARY) +
STATUS(DISALL,DISNEW,ENABLE,NOTCON,DISALL,DISNEW,DISALL,QUIALL,+
DISALL,QUINEW,ENABLE,NOTCON,QUIALL,DISNEW,DISALL,QUIALL,+
DISNEW,ENABLE,ENABLE,DISNEW,QUIALL,DISALL,DISALL,NOTCON,+
NOTCON,QUINEW,ENABLE,NOTCON,QUIALL,DISNEW,ENABLE,QUIALL)
SCDS(MYCDS) VOL(SMS) FROM(14) TO(20) SUF(1) TYPE() SG(PRIMARY) +
STATUS(ENABLE)
SCDS(MYCDS) VOL(SMSA) FROM(A) TO(X) SUF(Y) TYPE(A) SG(PRIMARY) +
STATUS(ENABLE)
SCDS(MYCDS) VOL(SMSX) FROM(1) TO(C) SUF(G) TYPE(X) SG(PRIMARY) +
STATUS(ENABLE)
SCDS(MYCDS) VOL(SMS211) SG(PRIMARY) STATUSALL(ENABLE)
SCDS(MYCDS) VOL(SMS221) SG(PRIMARY) STATUS(ENABLE) STATUSALL()
SCDS(MYCDS) VOL(SMS231) SG(PRIMARY) STATUS() STATUSALL(ENABLE)
/*
//VOLALT  DD  *                                              /* 4‡U1A*/
/*
//VOLDEL  DD *
/*
//ADDVOL2 EXEC ACBJBAOB,
//        PLIB1='SYS1.DGTPLIB',
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD DSN=&&VOLADDS,DISP=(OLD,DELETE)
//********************************************************************

./ ADD NAME=ACBJBAIC
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIC) COMP(DF123): BATCH  - TEST ACS ROUTINES        ‡D1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                     ‡D1C*/
//* COPYRIGHT 1996, 2011 IBM CORP.                               ‡D1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//*$T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter     ‡T2A*/
//*05/24/99  TCS - HDZ11E0: Missing right paranthesis after  ‡WA39164*/
//*                         LISTNAME                         ‡WA39164*/
//*$D1=OA32019,HDZ1D10,10/22/10,IBSTG: Inconsistent use of SCDS  ‡D1A*/
//*                                    (KFI0634)                 ‡D1A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO TEST ACS ROUTINES IN BATCH                         *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//*   TEST STEP                                                      *
//*                                                                  *
//*    SCDS     - NAME OF SCDS THAT CONTAINS THE TRANSLATED,     ‡D1C*
//*               VALIDATED ACS ROUTINES TO BE TESTED (INPUT)        *
//*    TESTBED  - PDS CONTAINING TEST CASES THAT THE ACS ROUTINES    *
//*               SHOULD BE TESTED FOR (INPUT)                       *
//*    MEMBER   - MEMBERS TO BE TESTED IN TESTBED (INPUT)            *
//*    DC,SC,MC,SG - ROUTINES TO BE TESTED Y OR N (INPUT)            *
//*    LISTNAME - TEST LISTING (OUTPUT)                              *
//*                                                                  *
//********************************************************************
//********************************************************************
//TESTACS  EXEC ACBJBAOB,
//         PLIB1='SYS1.DGTPLIB',
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
DEL NEW.TESTLIST
ISPSTART CMD(ACBQBAIA +
SCDS(MYSCDS) +
TESTBED(TESTCASE.LIBRARY) MEMBER(*) +
LISTNAME(NEW.TESTLIST) +
DC(Y) SC(Y) MC(Y) SG(Y)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************/
//*                                                                  */
//*   COPY TEST LISTING                                              */
//*                                                                  */
//*    SYSUT1 - INPUT (FROM PREVIOUS STEP)                           */
//*    SYSUT2 - OUTPUT                                               */
//*                                                                  */
//********************************************************************/
//TESTGEN  EXEC  PGM=IEBGENER
//SYSUT1   DD  DSN=IBMUSER.NEW.TESTLIST,DISP=SHR
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*

./ ADD NAME=ACBJBAID
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAID) COMP(5695DF123): BATCH - TAPE LIST                 */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5695-DF1                                                         */
//* (C) COPYRIGHT 1996, 1998 IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//*                                                                  */
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: INITIAL VERSION        ‡L0A*/
//*$L1=KN20035,HACS120,96/07/13,SNJTCS: CHANGED PARAMETERS       ‡L1A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE ISMF MOUNTABLE TAPE VOLUME LIST, AND      *
//* SAVE IT                                                          *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* STEP TO GENERATE TAPE VOLUME LIST AND SAVE IT                    *
//*                                                                  *
//*   VOL     - TAPE VOLUMES TO BE SELECTED                          *
//*   LIBNAME - LIBRARY NAMES TO BE SELECTED                         *
//*   STORGRP - STORAGE GROUPS TO BE SELECTED                        *
//*   PARAMETER FOLLOWING SAVE - NAME FOR THE SAVED LIST (OUTPUT)    *
//*                                                                  *
//********************************************************************
//GENLIST  EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB,TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAI6 SAVE TAPELIST +
VOL(*) LIBNAME(L*) STORGRP(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAIH
//ACBJBAIH JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIH) COMP(5695DF123): BATCH  - DSN LIST FROM PREV QUERY */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5695-DF1                                                         */
//* (C) COPYRIGHT 1996, 1998 IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//*                                                                  */
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: INITIAL VERSION        ‡L0A*/
//*10/04/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//* $T3=K151321,HDZ11E0,091998,SNJTCS: Possible values          2‡T3A*/
//*                                    documentation                 */
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE DATA SET LIST FROM A PREVIOUSLY SAVED     *
//* QUERY, SAVE IT.                                                  *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//************************** ADD BEG *********************************
//*  Parameters:-                                                    *
//*  DSNLIST:  The datasets obtained from the  QUERY1  are saved     *
//*            in this  dataset list. This list can be seen from     *
//*            ISMF primary menu option 'L'                          *
//*                                                                  *
//*  QUERY1 :  This query  should  have been stored previously  from *
//*            the  ISMF primer menu option 1 , Where in you can     *
//*            save  the  QUERY  by typing  in QUERY name in the     *
//*            field  ' Query name to save or retrieve ' and  by     *
//*            QS (Query Save)  primary  command, after entering     *
//*            all  the  required  fields to meet your selection     *
//*            criteria. The  QUERY  could  also  be  saved from     *
//*            ISMF 11.7.1.CREATE DATA SET LIST AND SAVE QUERY.      *
//*                                                                  *
//************************** ADD END *********************************
//********************************************************************
//********************************************************************
//*                                                                  *
//* STEP TO GENERATE DATA SET LIST FROM QUERY AND SAVE IT.           *
//*                                                                  *
//*   QUERY   - QUERY NAME CONTAINING SELECTION CRITERIA             *
//*   PARAMETER FOLLOWING SAVE - NAME FOR THE SAVED LIST (OUTPUT)    *
//*                                                                  *
//********************************************************************
//GENLIST EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB,
// TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQBAI2 +
SAVE DSNLIST QUERY(QUERY1)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************

./ ADD NAME=ACBJBAII
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAII) COMP(5695DF123): BATCH  - Generates Aggregate Group*/
//*                                         list and Report          */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5647-A01                                                         */
//* (C) COPYRIGHT 2000  IBM CORP.                                    */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//********************************************************************
//*                                                                  *
//* Sample JCL to Generate an ISMF Aggregate Group List, save it,    *
//* and generate an Aggregate Group report from it.                  *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Aggregare Group List and Save it                *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   AGNAMES - Saved List name         (OUTPUT)                     *
//*   SCDS    - Name of the SCDS        (Valid SCDS dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   AGGRGRP - Aggregate Group name    (Wild cards allowed)         *
//*                                                                  *
//********************************************************************
//GENAGLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAIB SAVE AGNAMES +
SCDS(SCDS) AGGRGRP(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELREPDS EXEC  PGM=IDCAMS
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
 DELETE IBMUSER.AGNAMS.REPORT
/*
//********************************************************************
//*                                                                  *
//* Step to Allocate ISPFILE, where the generated report is saved    *
//* Note: The data set being allocated should not be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=IBMUSER.AGNAMS.REPORT,DISP=(NEW,CATLG),
//         BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
/*
//********************************************************************
//*                                                                  *
//* Step to generate  Aggregate Group report                         *
//*                                                                  *
//*     Parameter following ACBQBAR9 :-                              *
//*                                                                  *
//*       AGNAMES - ISMF saved list name (input)                     *
//*                                                                  *
//*     ISPFILE - Aggregate Group report DSN                         *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*     The following keywords can be used in SYSIN DS.              *
//*                                                                  *
//*    -------------------------------------------------------       *
//*     LEN       KEYWORD       DESC                                 *
//*    -------------------------------------------------------       *
//*                                                                  *
//*     9         AGGRGRP     - Aggregate Group.                     *
//*     34        ODSNPFIX    - Output dataset name prefix           *
//*     45        SELDSN1     - Selection DSN 1.                     *
//*     9         MEMBER1     - Member Name 1.                       *
//*     45        SELDSN2     - Selection DSN 2.                     *
//*     9         MEMBER2     - Member Name 3.                       *
//*     45        SELDSN3     - Selection DSN 3.                     *
//*     9         MEMBER3     - Member Name 3.                       *
//*     45        SELDSN4     - Selection DSN 4.                     *
//*     9         MEMBER4     - Member Name 4.                       *
//*     45        SELDSN5     - Selection DSN 5.                     *
//*     9         MEMBER5     - Member Name 5.           .           *
//*     45        INSDSN      - Instruction dataset name.            *
//*     9         LSTMDUID    - Last modified USERID.                *
//*     11        LSTMODDATE  - Last modified date.                  *
//*     11        LSTMDTIME   - Last modified time.                  *
//*     10        NOCOPIES    - Number of copies.                    *
//*     9         MGMTCLAS    - Management class name.               *
//*     33        ACCOUNT     - Account.                             *
//********************************************************************
//GENAGREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//ISPFILE  DD    DSN=IBMUSER.AGNAMS.REPORT,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAR9 AGNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
AGGRGRP
ODSNPFIX
SELDSN1
MEMBER1
TITLE=STATUS OF Aggregate Group AS ON 07/01/99
/*
//********************************************************************
//*                                                                  *
//* Copy the Aggregate Group Report                                  *
//*                                                                  *
//*   SYSUT1 - input (From previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYAGREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=IBMUSER.AGNAMS.REPORT,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIJ
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIJ) COMP(5695DF123): BATCH - Aggregate Group list      */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5647-A01                                                         */
//* (C) COPYRIGHT 2000  IBM CORP.                                    */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//********************************************************************/
//*                                                                  *
//* Sample JCL to Generate Aggregate Group List and Save it.         *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Aggregate Group list and save it                *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   AGNAMES - Saved list name         (OUTPUT)                     *
//*   SCDS    - Name of the SCDS        (Valid SCDS)                 *
//*                                     (      or 'ACTIVE'      )    *
//*   AGGRGRP - Aggregate Group name    (Wild cards allowed)         *
//*                                                                  *
//********************************************************************
//GENAGLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAIB SAVE AGNAMES +
SCDS(SCDS) AGGRGRP(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAIK
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIK) COMP(5695DF123): BATCH - Aggregate Group Report    */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5647-A01                                                         */
//* (C) COPYRIGHT 2000 IBM CORP.                                     */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $K0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//********************************************************************
//*                                                                  *
//* Sample JCL to Generate Aggregate Group report from a previously  *
//* saved ISMF Aggregate group list.                                 *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELREPDS EXEC  PGM=IDCAMS
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
 DELETE IBMUSER.AGNAMS.REPORT
/*
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: The data set being allocated should not be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=IBMUSER.AGNAMS.REPORT,DISP=(NEW,CATLG),
//         BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
/*
//********************************************************************
//*                                                                  *
//* Report Generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBAR9 :-                              *
//*                                                                  *
//*       AGNAMES - ISMF saved list name (input)                     *
//*                                                                  *
//*     ISPFILE - Aggregate Group report DSN                         *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*     The following keywords can be used in SYSIN DS.              *
//*                                                                  *
//*   -----------------------------------------------------          *
//*     LEN       KEYWORD       DESC                                 *
//*   -----------------------------------------------------          *
//*                                                                  *
//*     9         AGGRGRP     - Aggregate Group.                     *
//*     34        ODSNPFIX    - Output dataset name prefix.          *
//*     45        SELDSN1     - Selection DSN 1.                     *
//*     9         MEMBER1     - Member Name 1.                       *
//*     45        SELDSN2     - Selection DSN 2.                     *
//*     9         MEMBER2     - Member Name 2.                       *
//*     45        SELDSN3     - Selection DSN 3.                     *
//*     9         MEMBER3     - Member Name 3.                       *
//*     45        SELDSN4     - Selection DSN 4.                     *
//*     9         MEMBER4     - Member Name 4.                       *
//*     45        SELDSN5     - Selection DSN 5.                     *
//*     9         MEMBER5     - Member Name 5.                       *
//*     45        INSDSN      - Instruction dataset name.            *
//*     9         LSTMDUID    - Last modified USERID.                *
//*     11        LSTMODDATE  - Last modified date.                  *
//*     11        LSTMDTIME   - Last modified time.                  *
//*     10        NOCOPIES    - Number of copies.                    *
//*     9         MGMTCLAS    - Management class name.               *
//*     33        ACCOUNT     - Account.                             *
//********************************************************************
//GENAGREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//ISPFILE  DD    DSN=IBMUSER.AGNAMS.REPORT,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAR9 AGNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
AGGRGRP
ODSNPFIX
SELDSN1
MEMBER1
TITLE=STATUS OF Aggregate Group  AS ON 07/01/99
/*
//********************************************************************
//*                                                                  *
//* Copy the Aggregate Group Report                                  *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYAGREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=IBMUSER.AGNAMS.REPORT,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIL
//ACBJBAIL JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID.,CLASS=9,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIL) COMP(DF123): BATCH  - Generates Data class     ‡Y2C*/
//*                                         list and Report          */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                         */
//* COPYRIGHT IBM CORP. 2000, 2017                               ‡G1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//* $U1=OW44570,HDZ11F0,033000,TCS: Block Size Limit Support     ‡U1A*/
//* $V1=DCE    ,HDZ11G0,01/01/02,TCS: Dyn Vol Cnt & RLS Support  ‡V1A*/
//* $U2=OW50676,HDZ11F0,080201,TCS: CICSVR Support               ‡U2A*/
//* $W1=OA02198,HDZ11H0,03/09/01,TCS: Ventana support            ‡W1A*/
//* $Y1=K1K0170,HDZ11K0,04/03/15,SNJTCS: VSAM Extent Constraint  ‡Y1A*/
//*                       Removal and RLS Above 2-GB Bar Support ‡Y1A*/
//* $Y2=OA13101,HDZ11K0,05/08/29,SNJTCS: SUPPORT OF VENTANA-3    ‡Y2A*/
//* $90=VSAMSMB,HDZ1190,06/05/31,IBSTG : SUPPORT OF VSAM SMB     ‡90A*/
//* $A0=SMPO   ,HDZ1A10,07/05/02,IBSTG: SMPO Support             ‡A0A*/
//* $B1=EAV2   ,HDZ1B10,08/06/10,IBSTG: EATTR keyword support    ‡B1A*/
//* $C1=CARECL ,HDZ1C10,09/03/12,IBSTG: CA Reclaim support       ‡C1A*/
//* $D1=OA38205,HDZ1D10,12/01/16,SVLCY: Log Replicate support    ‡D1A*/
//* $E1=SMBENH ,HDZ2210,12/08/03,SVLCY: SMB RAB/RMODE31 SUPPORT  ‡E1A*/
//* $F1=SCRENH ,HDZ2220,13/06/13,IBSTG: Guaranteed Space Reduct  ‡F1A*/
//* $G1=FP0454 ,HDZ2230,15/10/26,IBSTG: DS Encryption            ‡G1A*/
//********************************************************************
//*                                                                  *
//* Sample JCL to generate an ISMF Data Class list, save it, and     *
//* generate  Data Class report from it.                             *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Data Class list and save it                     *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   DCNAMES  - Saved list name        (OUTPUT)                     *
//*   SCDS     - SCDS dataset name      (Valid SCDS dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   DATACLAS - Data Class name        (Wild cards allowed)         *
//*                                                                  *
//********************************************************************
//GENDCLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQBAIC SAVE DCNAMES +
SCDS('ACTIVE') DATACLAS(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELREPDS EXEC  PGM=IEFBR14
//DALOG    DD  DISP=(MOD,DELETE,DELETE),
//             DSN=&SYSUID..DCNAMS.REPORT.ACBJBAIL,
//             DCB=(DSORG=PS,RECFM=FB,LRECL=256,BLKSIZE=27904),
//             SPACE=(TRK,(1,1)),
//             UNIT=3390
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: The data set being allocated should not be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..DCNAMS.REPORT.ACBJBAIL,DISP=(NEW,CATLG),
//         BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
/*
//********************************************************************
//*                                                                  *
//* Report Generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBARB :-                              *
//*                                                                  *
//*       DCNAMES - ISMF saved list name (input)                     *
//*                                                                  *
//*     ISPFILE - Data Class report DSN                              *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*     The following keywords can be used in the SYSIN DS.          *
//*                                                                  *
//*  ------------------------------------------------------------    *
//*    LEN    KEYWORD                  DESC                          *
//*  ------------------------------------------------------------    *
//*                                                                  *
//*     9     DATACLAS               - Data Class.                   *
//*     7     RECORG                 - Record Organization.          *
//*     6     RECFM                  - Record Format.                *
//*     6     LRECL                  - Logical Record Length.        *
//*     7     KEYLEN                 - Key Length.                   *
//*     7     KEYOFF                 - Key offset.                   *
//*     7     AVGREC                 - Average record length.        *
//*     6     AVGVL                  - Average value.                *
//*     8     SPCEPRI                - Space Primary.                *
//*    10     SPACESEC               - Space Secondary.              *
//*    10     SPACEDIR               - Space Directory.              *
//*    11     EXPDATE  ! RETNPRD     - Retention period/exp date.    *
//*     7     VOLCNT                 - Volume count.                 *
//*    11     ADDVOLAMNT             - Additional Volume amount.     *
//*     7     MAXVOL                 - Dynamic Volume Count      ‡90C*
//*     9     SMBVSP                 - System Managed Buffer     ‡90C*
//*     7     CISIZE                 - CIsize data.                  *
//*     9     PERFSPCA               - % Free Space CA.              *
//*     9     PERFSPCI               - % Free Space CI.              *
//*     8     SHRXRGN                - Share X Region.               *
//*     8     SHRXSYS                - Share X System.               *
//*     9     LSTMDUID               - Last modified userid.         *
//*    11     LSTMODDATE             - Last modified date.           *
//*    10     LSTMDTIME              - Last modified time.           *
//*    19     DSNTYPE                - Dataset name type.            *
//*    15     XADDR                  - Extended addressability.      *
//*    11     COMPACTION             - Compaction.                   *
//*     9     MEDTYP                 - Media type.               ‡Y2C*
//*    11     RECTECH                - Recording Technology.         *
//*     8     PEFSCLG                - Performance Scaling.      ‡Y2C*
//*     8     PERFSEG                - Performance Segmentation  ‡Y2A*
//*     7     REUSE                  - Reuse.                        *
//*     9     INILOAD                - Initial Load.                 *
//*    11     SPANSTAT               - Spanned/Non Spanned.          *
//*     9     BWO                    - BWO.                          *
//*     7     LOG                    - LOG.                          *
//*    27     LOGSTID                - Log Stream Id.                *
//*    10     SPCCONREL              - Space constraint relief.      *
//*     8     REDSPC                 - Reduce space up to %.         *
//*     8     RECABIS                - Record Access Bias.           *
//*    11     BLKSZLIM               - Block Size Limit.         ‡U1A*
//*     7     FRLOG                  - Frlog.                    ‡W1C*
//*    12     RLSCF                  - RLS CF Cache Value.       ‡V1A*
//*                                                              ‡90D*
//*     8     EXTCONS                - Extent Constraint Removal.‡Y1A*
//*    10     RLSABOVE               - RLS Above the 2-GB Bar.   ‡Y1A*
//*    10     OVERRIDE               - Override Space.           ‡A0A*
//*     5     SDB                    - System Determ Blocksize.  ‡A0A*
//*     6     EATTR                  - EATTR.                    ‡B1A*
//*    10     RECLAIMCA              - CA Reclaim.               ‡C1A*
//*     8     LOGREPL                - Log Replicate.            ‡D1A*
//*     8     RMODE31                - RMODE31.                  ‡E1A*
//*    12     GUARSPCREDU            - Guaranteed Space Reduct.  ‡F1A*
//*    53     DASDDSKEYL             - DASD Data Set Key Label.  ‡G1A*
//********************************************************************
//GENDCREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE  DD    DSN=&SYSUID..DCNAMS.REPORT.ACBJBAIL,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQBARB DCNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
DATACLAS
RECORG
RECFM
LRECL
KEYLEN
KEYOFF
AVGREC
AVGVL
SPCEPRI
SPACESEC
SPACEDIR
EXPDATE
VOLCNT
ADDVOLAMNT
MAXVOL
SMBVSP
FRLOG
RLSCF
PEFSCLG
PERFSEG
OVERRIDE
SDB
EATTR
RECLAIMCA
LOGREPL
RMODE31
GUARSPCREDU
DASDDSKEYL
TITLE=STATUS OF Data Classes  AS ON 22/06/13
/*
//********************************************************************
//*                                                                  *
//* Copy the Data class report                                       *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYDCREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=&SYSUID..DCNAMS.REPORT.ACBJBAIL,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIM
//ACBJBAIM JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID.,CLASS=9,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIM) COMP(5695DF123): BATCH - Data Class List           */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5647-A01                                                         */
//* (C) COPYRIGHT 2000  IBM CORP.                                    */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate Data Class list and save it.              *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              &SYSUID..                                           *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Data Class list and save it                     *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   DCNAMES - Saved list name         (OUTPUT)                     *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   DATACLAS- Data Class name         (Wild cards allowed)         *
//*                                                                  *
//********************************************************************
//GENDCLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQBAIC SAVE DCNAMES +
SCDS('ACTIVE') DATACLAS(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAIN
//ACBJBAIN JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIN) COMP(DF123): BATCH - Data Class Report         ‡Y2C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                         */
//* COPYRIGHT IBM CORP. 2000, 2017                               ‡G1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//* $U1=OW44570,HDZ11F0,033000,TCS: Block Size Limit Support     ‡U1A*/
//* $V1=DCE    ,HDZ11G0,01/01/02,TCS: Dyn Vol Cnt & RLS Support  ‡V1A*/
//* $U2=OW50676,HDZ11F0,080201,TCS: CICSVR Support               ‡U2A*/
//* $V2=OA02198,HDZ11G0,03/05/30,TCS: Ventana Support            ‡V2A*/
//* $Y1=K1K0170,HDZ11K0,04/03/15,SNJTCS: VSAM Extent Constraint  ‡Y1A*/
//*                       Removal and RLS Above 2-GB Bar Support ‡Y1A*/
//* $Y2=OA13101,HDZ11K0,05/06/30,TCS: Ventana-3 Support          ‡Y2A*/
//* $90=VSAMSMB,HDZ1190,06/05/31,IBSTG: Support of VSAM SMB      ‡90A*/
//* $A0=SMPO   ,HDZ1A10,07/05/02,IBSTG: SMPO Support             ‡A0A*/
//* $B1=EAV2   ,HDZ1B10,08/06/10,IBSTG: EATTR keyword support    ‡B1A*/
//* $C1=CARECL ,HDZ1C10,09/03/12,IBSTG: CA Reclaim support       ‡C1A*/
//* $D1=OA38205,HDZ1D10,12/01/16,SVLCY: Log Replicate support    ‡D1A*/
//* $E1=SMBENH ,HDZ2210,12/08/03,SVLCY: SMB RAB/RMODE31 SUPPORT  ‡E1A*/
//* $F1=SCRENH ,HDZ2220,13/06/13,IBSTG: Guaranteed Space Reduct  ‡F1A*/
//* $G1=FP0454 ,HDZ2230,15/10/26,IBSTG: DS Encryption            ‡G1A*/
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate Data Class report from a previously       *
//* saved ISMF Data Class list.                                      *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELREPDS EXEC  PGM=IEFBR14
//DALOG    DD  DISP=(MOD,DELETE,DELETE),
//             DSN=&SYSUID..DCNAMS.REPORT.ACBJBAIN,
//             DCB=(DSORG=PS,RECFM=FB,LRECL=200,BLKSIZE=27800),
//             SPACE=(TRK,(1,1)),
//             UNIT=3390
//********************************************************************
//*                                                                  *
//* STEP TO ALLOCATE ISPFILE, WHERE THE GENERATED REPORT IS SAVED    *
//* NOTE: THE DATA SET BEING ALLOCATED SHOULD NOT BE A TEMPORARY     *
//*       DATA SET.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..DCNAMS.REPORT.ACBJBAIN,DISP=(NEW,CATLG),
//         BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
/*
//********************************************************************
//*                                                                  *
//* REPORT GENERATION STEP                                           *
//*                                                                  *
//*     PARAMETER FOLLOWING ACBQBARB :-                              *
//*                                                                  *
//*       DCNAMES - ISMF SAVED LIST NAME (INPUT)                     *
//*                                                                  *
//*     ISPFILE - DATA CLASS REPORT  DSN                             *
//*     SYSIN   - KEYWORDS SPECIFYING THE DATA IN THE REPORT         *
//*                                                                  *
//*    THE FOLLOWING KEYWORDS CAN BE USED IN THE SYSIN DS.           *
//*                                                                  *
//*  ------------------------------------------------------------    *
//*    LEN    KEYWORD                  DESC                          *
//*  ------------------------------------------------------------    *
//*                                                                  *
//*     9     DATACLAS               - DATA CLASS.                   *
//*     7     RECORG                 - RECORD ORGANIZATION.          *
//*     6     RECFM                  - RECORD FORMAT.                *
//*     6     LRECL                  - LOGICAL RECORD LENGTH.        *
//*     7     KEYLEN                 - KEY LENGTH.                   *
//*     7     KEYOFF                 - KEY OFFSET.                   *
//*     7     AVGREC                 - AVERAGE RECORD LENGTH         *
//*     6     AVGVL                  - AVERAGE VALUE.                *
//*     8     SPCEPRI                - SPACE PRIMARY.                *
//*    10     SPACESEC               - SPACE SECONDARY.              *
//*    10     SPACEDIR               - SPACE DIRECTORY.              *
//*    11     EXPDATE  ! RETNPRD     - RETENTION PERIOD/EXP DATE.    *
//*     7     VOLCNT                 - VOLUME COUNT.                 *
//*    11     ADDVOLAMNT             - ADDITIONAL VOLUME AMOUNT.     *
//*     7     MAXVOL                 - DYNAMIC VOLUME COUNT      ‡90C*
//*     9     SMBVSP                 - SYSTEM MANAGED BUFFER     ‡90A*
//*     7     CISIZE                 - CIsize data.                  *
//*     9     PERFSPCA               - % Free Space CA.              *
//*     9     PERFSPCI               - % Free Space CI.              *
//*     8     SHRXRGN                - Share X Region.               *
//*     8     SHRXSYS                - Share X System.               *
//*     9     LSTMDUID               - Last modified userid.         *
//*    11     LSTMODDATE             - Last modified date.           *
//*    10     LSTMDTIME              - Last modified time.           *
//*    19     DSNTYPE                - Dataset name type.            *
//*    15     XADDR                  - Extended addressability.      *
//*    11     COMPACTION             - Compaction.                   *
//*     9     MEDTYP                 - Media type.               ‡Y2C*
//*    11     RECTECH                - Recording Technology.         *
//*     8     PEFSCLG                - Performance Scaling.      ‡Y2C*
//*     8     PERFSEG                - Performance Segmentation  ‡Y2A*
//*     7     REUSE                  - Reuse.                        *
//*     9     INILOAD                - Initial Load.                 *
//*    11     SPANSTAT               - Spanned/Non Spanned.          *
//*     9     BWO                    - BWO.                          *
//*     7     LOG                    - LOG.                          *
//*    27     LOGSTID                - Log Stream Id.                *
//*    10     SPCCONREL              - Space constraint relief.      *
//*     8     REDSPC                 - Reduce space up to %.         *
//*     8     RECABIS                - Record Access Bias.           *
//*    11     BLKSZLIM               - Block Size Limit.         ‡U1A*
//*     7     FRLOG                  - Frlog.                    ‡W1C*
//*    12     RLSCF                  - RLS CF Cache Value.       ‡V1A*
//*     8     EXTCONS                - Extent Constraint Removal.‡Y1A*
//*    10     RLSABOVE               - RLS Above the 2-GB Bar.   ‡Y1A*
//*    10     OVERRIDE               - Override Space.           ‡A0A*
//*     5     SDB                    - System Determ Blocksize.  ‡A0A*
//*     6     EATTR                  - EATTR.                    ‡B1A*
//*    10     RECLAIMCA              - CA Reclaim.               ‡C1A*
//*     8     LOGREPL                - Log Replicate             ‡D1A*
//*     8     RMODE31                - RMODE31.                  ‡E1A*
//*    12     GUARSPCREDU            - Guaranteed Space Reduct.  ‡F1A*
//*    53     DASDDSKEYL             - DASD Data Set Key Label.  ‡G1A*
//********************************************************************
//GENDCREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE  DD    DSN=&SYSUID..DCNAMS.REPORT.ACBJBAIN,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQBARB DCNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
DATACLAS
RECORG
RECFM
LRECL
KEYLEN
KEYOFF
AVGREC
AVGVL
SPCEPRI
SPACESEC
SPACEDIR
EXPDATE
VOLCNT
ADDVOLAMNT
MAXVOL
SMBVSP
FRLOG
RLSCF
PEFSCLG
PERFSEG
OVERRIDE
SDB
EATTR
RECLAIMCA
LOGREPL
RMODE31
GUARSPCREDU
DASDDSKEYL
TITLE=STATUS OF Data Classes  AS OF 17/01/15
/*
//********************************************************************
//*                                                                  *
//* Copy the Data  Class Report                                      *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYDCREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=&SYSUID..DCNAMS.REPORT.ACBJBAIN,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIO
//ACBJBAIO JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID.,CLASS=9,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIO) COMP(DF123): BATCH  - Generates Management    2‡E1C*/
//*                                     class list and Report        */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                     ‡E1C*/
//* COPYRIGHT IBM CORP. 2000, 2017                               ‡G1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//* $E1=STIERS   ,HDZ2210,11/04/15,IBSTG: HSM Storage Tiers      ‡E1A*/
//* $E2=OA43011 ,HDZ2210,13/08/06,IBSTG: Fix incorrect copyright ‡E2A*/
//* $G1=RMMTAPE,HDZ2230,16/07/22,IBSTK: Support Tape Management  ‡G1A*/
//*                                     attributes for RMM       ‡G1A*/
//* $G2=CLOUD2 ,HDZ2230,17/04/10,IBSTK: FP2096 MCStore2 support  ‡G2A*/
//*                                   Auto Migration Enhancement ‡G2A*/
//********************************************************************
//*                                                                  *
//* Sample JCL to generate an ISMF Management Class list, save it,   *
//* and generate  Management Class report from it.                   *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Management Class list and save it.              *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   MCNAMES  - Saved list name        (OUTPUT)                     *
//*   SCDS     - SCDS dataset name      (Valid SCDS dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   MGMTCLAS - Management Class name  (Wild cards allowed)         *
//*                                                                  *
//********************************************************************
//GENMCLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQBAID SAVE MCNAMES +
SCDS('active') MGMTCLAS(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELREPDS EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..MCNAMS.REPORT.ACBJBAIO,
// DISP=(MOD,DELETE,DELETE),
//         BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: the data set being allocated should not be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..MCNAMS.REPORT.ACBJBAIO,
// DISP=(NEW,CATLG),
//         BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
/*
//********************************************************************
//*                                                                  *
//* Report generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBARD :-                              *
//*                                                                  *
//*       MCNAMES - ISMF saved list name (input)                     *
//*                                                                  *
//*     ISPFILE - Management Class report DSN                        *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*    The following keywords can be used in the SYSIN DS.           *
//*                                                                  *
//*  --------------------------------------------------------        *
//*   LEN    KEYWORD                  DESC                           *
//*  --------------------------------------------------------        *
//*                                                                  *
//*    9     MGMTCLAS               - Management Class.              *
//*   10     EXPNONUSE              - Expire Non usage.              *
//*   11     EXPDATE ! EXPDAYS      - Expire Date/Days.              *
//*    8     RETLMIT                - Retention Limit.               *
//*   12     PARTIALREL             - Partial Release.               *
//*    9     PRIMDAYS               - Primary Days.                  *
//*    8     L1DAYS                 - Level 1 days.                  *
//*    9     L2DNOUSE               - Level 2 Days Non-usage     ‡G2A*
//*    9     MIGTYPE                - CMD/AUTO Migrate.              *
//*   11     SIZELTE                - Size Less Than or Equal to ‡G2A*
//*    7     ACTLTE                 - Action LTE                 ‡G2A*
//*   11     SIZEGT                 - Size Greater than          ‡G2A*
//*    6     ACTGT                  - Action GT                  ‡G2A*
//*    9     NOGDGPRI               - £ GDG on Primary               *
//*   11     RLDOFGDSAC             - Rolled off GDS action.         *
//*   10     BKPFREQ                - Backup frequency.              *
//*   12     NOBKPSDSE              - £ of Backups (DS exists).      *
//*   13     NOBKPSDSD              - £ of Backups (DS deleted).     *
//*   12     RETDAYSOBKP            - Retain days only backup        *
//*   14     RETDAYSEBKP            - Retain days extra backup.      *
//*    9     BKPAUTH                - ADM/USER Backup.               *
//*    8     AUTOBKP                - Auto backup.                   *
//*    9     LSTMDUID               - Last modified USERID.          *
//*   11     LSTMODDATE             - Last date modified             *
//*   10     LSTMDTIME              - Last time modified.            *
//*    9     CREYEARS               - Creation years                 *
//*    9     CREMNTHS               - Creation Months                *
//*    9     CREDAYS                - Creation days                  *
//*    9     LTUSEYRS               - Last use years                 *
//*    9     LTUSEMON               - Last use months                *
//*    9     LTUSEDAY               - Last use days                  *
//*    8     MOONDAY                - Monthly on day                 *
//*   10     QTLYONDAY              - Quarterly on day               *
//*   10     QTLYONMON              - Quarterly on Month             *
//*    7     YRLYDAY                - Yearly on day                  *
//*    9     YRLYMNTH               - Yearly in month                *
//*   11     NOVERSIONS             - £ of versions                  *
//*   12     RTNOVERSONS            - Retain only Versions           *
//*   10     RTNOUNIT               - Retain only Unit               *
//*   13     RTNEVERSIONS           - Retain extra Versions          *
//*   11     RTNEUNIT               - Retain extra Units             *
//*    9     CPYSER                 - Copy Serial                    *
//*   21     BKPCPTECH              - Backup copy technique          *
//*   21     ABKPCPTECH             - ABACKUP copy technique         *
//*   19     TRCPYTECH              - Transition Copy Technique  ‡E1A*
//*   14     SERIALERREX            - Serialization Error Exit   ‡E1A*
//*   31     CLOUDNAME              - Cloud Name                 ‡G2A*
//*   10     RETMETHOD              - Retention Method           ‡G1A*
//*   10     VOLSETMGL              - Volume Set Management Level‡G1A*
//*   10     EXCLVRSEL              - Exclude from VRSEL         ‡G1A*
//*   13     WHILECTLG              - Retain While Cataloged     ‡G1A*
//********************************************************************
//GENMCREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE  DD    DSN=&SYSUID..MCNAMS.REPORT.ACBJBAIO,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQBARD MCNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
ACTGT
ACTLTE
BKPFREQ
CLOUDNAME
EXCLVRSEL
EXPDATE
EXPNONUSE
L1DAYS
L2DNOUSE
MGMTCLAS
MIGTYPE
NOBKPSDSD
NOBKPSDSE
NOGDGPRI
PARTIALREL
PRIMDAYS
RETLMIT
RETMETHOD
RLDOFGDSAC
SIZEGT
SIZELTE
VOLSETMGL
WHILECTLG
TITLE=STATUS OF Management Classes AS ON 22/06/15
/*
//********************************************************************
//*                                                                  *
//* Copy the Management Class report                                 *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYMCREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=&SYSUID..MCNAMS.REPORT.ACBJBAIO,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIP
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIP) COMP(5695DF123): BATCH - Management Class List     */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5647-A01                                                         */
//* (C) COPYRIGHT 2000  IBM CORP.                                    */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate Management Class list and save it.        *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Management Class list and save it.              *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   MCNAMES  - Saved list name        (OUTPUT)                     *
//*   SCDS     - SCDS dataset name      (Valid SCDS dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   MGMTCLAS - Management Class name  (Wild cards allowed)         *
//*                                                                  *
//********************************************************************
//GENMCLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAID SAVE MCNAMES +
SCDS(SCDS) MGMTCLAS(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAIQ
//ACBJBAIQ JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIQ) COMP(DF123): BATCH - Management Class Report   ‡E1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                     ‡E1C*/
//* COPYRIGHT IBM CORP. 2000, 2017                               ‡G1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//* $E1=STIERS   ,HDZ2210,11/04/15,IBSTG : HSM STORAGE TIERS     ‡E1A*/
//* $E2=OA43011 ,HDZ2210,13/08/06,IBSTG: Fix incorrect copyright ‡E2A*/
//* $G1=RMMTAPE,HDZ2230,16/07/22,IBSTK: Support Tape Management  ‡G1A*/
//*                                     attributes for RMM       ‡G1A*/
//* $G2=CLOUD2 ,HDZ2230,17/04/10,IBSTK: FP2096 MCStore2 support  ‡G2A*/
//*                                   Auto Migration Enhancement ‡G2A*/
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate Management Class report from a previously *
//* saved ISMF Management Class list.                                *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELREPDS EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..MCNAMS.REPORT.ACBJBAIQ,
// DISP=(MOD,DELETE,DELETE),
//         BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: the data set being allocated should not be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..MCNAMS.REPORT.ACBJBAIQ,DISP=(NEW,CATLG),
//         BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
/*
//********************************************************************
//*                                                                  *
//* Report generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBARD :-                              *
//*                                                                  *
//*       MCNAMES - ISMF saved list name (input)                     *
//*                                                                  *
//*     ISPFILE - Management Class report DSN                        *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*    The following keywords can be used in the SYSIN DS.           *
//*                                                                  *
//*  ---------------------------------------------------------       *
//*   LEN    KEYWORD                  DESC                           *
//*  ---------------------------------------------------------       *
//*                                                                  *
//*    9     MGMTCLAS               - Management Class.              *
//*   10     EXPNONUSE              - Expire Non usage.              *
//*   11     EXPDATE ! EXPDAYS      - Expire Date/Days.              *
//*    8     RETLMIT                - Retention Limit.               *
//*   12     PARTIALREL             - Partial Release.               *
//*    9     PRIMDAYS               - Primary Days.                  *
//*    8     L1DAYS                 - Level 1 days.                  *
//*    9     L2DNOUSE               - Level 2 Days Non-usage     ‡G2A*
//*    9     MIGTYPE                - CMD/AUTO Migrate.              *
//*   11     SIZELTE                - Size Less Than or Equal to ‡G2A*
//*    7     ACTLTE                 - Action LTE                 ‡G2A*
//*   11     SIZEGT                 - Size Greater than          ‡G2A*
//*    6     ACTGT                  - Action GT                  ‡G2A*
//*    9     NOGDGPRI               - £ GDG on Primary               *
//*   11     RLDOFGDSAC             - Rolled off GDS action.         *
//*   10     BKPFREQ                - Backup frequency.              *
//*   12     NOBKPSDSE              - £ of Backups (DS exists).      *
//*   13     NOBKPSDSD              - £ of Backups (DS deleted).     *
//*   12     RETDAYSOBKP            - Retain days only backup        *
//*   14     RETDAYSEBKP            - Retain days extra backup.      *
//*    9     BKPAUTH                - ADM/USER Backup.               *
//*    8     AUTOBKP                - Auto backup.                   *
//*    9     LSTMDUID               - Last modified USERID.          *
//*   11     LSTMODDATE             - Last date modified             *
//*   10     LSTMDTIME              - Last time modified.            *
//*    9     CREYEARS               - Creation years                 *
//*    9     CREMNTHS               - Creation Months                *
//*    9     CREDAYS                - Creation days                  *
//*    9     LTUSEYRS               - Last use years                 *
//*    9     LTUSEMON               - Last use months                *
//*    9     LTUSEDAY               - Last use days                  *
//*    8     MOONDAY                - Monthly on day                 *
//*   10     QTLYONDAY              - Quarterly on day               *
//*   10     QTLYONMON              - Quarterly on Month             *
//*    7     YRLYDAY                - Yearly on day                  *
//*    9     YRLYMNTH               - Yearly in month                *
//*   11     NOVERSIONS             - £ of versions                  *
//*   12     RTNOVERSONS            - Retain only Versions           *
//*   10     RTNOUNIT               - Retain only Unit               *
//*   13     RTNEVERSIONS           - Retain extra Versions          *
//*   11     RTNEUNIT               - Retain extra Units             *
//*    9     CPYSER                 - Copy Serial                    *
//*   21     BKPCPTECH              - Backup copy technique          *
//*   21     ABKPCPTECH             - ABACKUP copy technique         *
//*   19     TRCPYTECH              - Transition Copy Technique  ‡E1A*
//*   14     SERIALERREX            - Serialization Error Exit   ‡E1A*
//*   31     CLOUDNAME              - Cloud Name                 ‡G2A*
//*   10     RETMETHOD              - Retention Method           ‡G1A*
//*   10     VOLSETMGL              - Volume Set Management Level‡G1A*
//*   10     EXCLVRSEL              - Exclude from VRSEL         ‡G1A*
//*   13     WHILECTLG              - Retain While Cataloged     ‡G1A*
//********************************************************************
//GENMCREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE  DD    DSN=&SYSUID..MCNAMS.REPORT.ACBJBAIQ,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQBARD MCNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
MGMTCLAS
EXPNONUSE
L2DNOUSE
SIZELTE
ACTLTE
SIZEGT
ACTGT
CLOUDNAME
RETMETHOD
VOLSETMGL
EXCLVRSEL
WHILECTLG
EXPDATE
RETLMIT
PARTIALREL
PRIMDAYS
L1DAYS
MIGTYPE
NOGDGPRI
RLDOFGDSAC
BKPFREQ
NOBKPSDSE
NOBKPSDSD
TITLE=STATUS OF Management Classes AS ON 07/01/12
/*
//********************************************************************
//*                                                                  *
//* Copy the Management Class Report                                 *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYMCREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=&SYSUID..MCNAMS.REPORT.ACBJBAIQ,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIR
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIR) COMP(5695DF123): BATCH - Mountable Optical Volume  */
//*                                        list                      */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5647-A01                                                         */
//* (C) COPYRIGHT 2000  IBM CORP.                                    */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate ISMF Mountable Opt. Volume list, and      *
//* save it.                                                         *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate opt. volume list and save it                    *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   OPTVLIST- Saved list name                 (output)             *
//*   VOL     - Opt. volumes to be selected     (wild cards allowed) *
//*   LIBNAME - Library Names to be selected    (wild cards allowed) *
//*   STORGRP - Storage Groups to be selected   (wild cards allowed) *
//*   OPTMDTYP- Optical media type                                   *
//*             Possible values : 9247                               *
//*                               3995WORM                           *
//*                               3995REWR                           *
//*                               3995-1                             *
//*                               3995-1WO                           *
//*                               3995-1RW                           *
//*                               3995-2                             *
//*                               3995-2WO                           *
//*                               3995-2RW                           *
//*                               3995-4                             *
//*                               3995-4WO                           *
//*                               3995-4RW                           *
//*                               3995-8                             *
//*                               3995-8WO                           *
//*                               3995-8RW                           *
//*                               ALL                                *
//*                                                                  *
//********************************************************************
//GENMVLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAIE SAVE OPTVLIST +
VOL(*) LIBNAME(*) STORGRP(*) OPTMDTYP(ALL)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAIS
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIS) COMP(5695DF123): BATCH  - Mountable Optical Volume */
//*                                         List and Report.         */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5647-A01                                                         */
//* (C) COPYRIGHT 2000  IBM CORP.                                    */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate an ISMF Mountable Optical Volume list,    *
//* save it, and generate a Optical Volume report from it.           *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Opt. Volume list and save it.                   *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   OPTVLIST - Saved list name                                     *
//*   VOL      - Opt. Volumes to be selected                         *
//*   LIBNAME  - Library Names to be selected                        *
//*   STORGRP  - Storage Groups to be selected                       *
//*   OPTMDTYP - Optical volume media type                           *
//*                 Possible Values : 9247                           *
//*                                   3995WORM                       *
//*                                   3995REWR                       *
//*                                   3995-1                         *
//*                                   3995-1WO                       *
//*                                   3995-1RW                       *
//*                                   3995-2                         *
//*                                   3995-2WO                       *
//*                                   3995-2RW                       *
//*                                   3995-4                         *
//*                                   3995-4WO                       *
//*                                   3995-4RW                       *
//*                                   3995-8                         *
//*                                   3995-8WO                       *
//*                                   3995-8RW                       *
//*                                   ALL                            *
//*                                                                  *
//********************************************************************
//GENMVLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAIE SAVE OPTVLIST +
VOL(*) LIBNAME(*) STORGRP(*) OPTMDTYP(ALL)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELREPDS EXEC  PGM=IDCAMS
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
 DELETE IBMUSER.OPTVOL.REPORT
/*
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: the data set being allocated should not be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=IBMUSER.OPTVOL.REPORT,DISP=(NEW,CATLG),
//         BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
/*
//********************************************************************
//*                                                                  *
//* Report generation step                                           *
//*                                                                  *
//*     parameter following ACBQBARF :-                              *
//*                                                                  *
//*       OPTVLIST - ISMF saved list name (input)                    *
//*                                                                  *
//*     ISPFILE - Opt. Volume report DSN                             *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*     The following Keywords can be specified in SYSIN DS          *
//*                                                                  *
//*  -----------------------------------------------------------     *
//*   LEN    KEYWORD                   DESC                          *
//*  -----------------------------------------------------------     *
//*                                                                  *
//*    7     VOLSER                  - Volume name.                  *
//*    8     FREESPC   ! FSP         - free space.                   *
//*    6     PUSED     ! PERUSED     - percentage space used.        *
//*    7     FULLST    ! FSTATUS     - Volume full status.           *
//*    9     VOLTYPE                 - volume type.                  *
//*    9     LIBNAME                 - Library name.                 *
//*    9     SLOTNAME                - Slot name.                    *
//*    9     SGNAME    ! STORGRP     - Storage Group name.           *
//*   13     LASTWRITE ! LSTWRTDT    - Last Written Date             *
//*   11     LASTMOUNT ! LSTMNTDT    - Volume Mount Date.            *
//*   12     EXPDTVOL  ! VOLEXPDT    - Volume expiry date.           *
//*    9     VOLLOC                  - Volume location.              *
//*   33     SHELFLOC                - Shelf location.               *
//*   10     MEDIATYPE ! MEDIA       - Media type.                   *
//*   21     VOLERR    ! ERRSTAT     - Volume error status.          *
//*    9     CAPACITY                - Capacity in MB.               *
//*   12     CREDATE   ! DATECRE     - Volume create date.           *
//*   11     ENTERDTE  ! EJECTDTE    - Enter/Eject date.             *
//*   10     PSEUDOLIB ! PSDLIBNM    - Pseudo Library name           *
//*   17     OIMNAME   ! OAMINMEM    - OAM Instance member name      *
//********************************************************************
//GENMVREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//ISPFILE  DD    DSN=IBMUSER.OPTVOL.REPORT,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBARF OPTVLIST) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
VOLSER
FREESPC
PUSED
FULLST
VOLTYPE
LIBNAME
SLOTNAME
SGNAME
LASTWRITE
LASTMOUNT
EXPDTVOL
VOLLOC
TITLE=STATUS OF OPTICAL VOLUMES AS ON 07/01/99
/*
//********************************************************************
//*                                                                  *
//* Copy the Opt. Volume report                                      *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYMVREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=IBMUSER.OPTVOL.REPORT,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIT
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIT) COMP(5695DF123): BATCH - Mountable Optical Volume  */
//*                                        report from saved list.   */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5647-A01                                                         */
//* (C) COPYRIGHT 2000  IBM CORP.                                    */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//********************************************************************
//*                                                                  *
//* Sample JCL to generate Opt. Volume report from a previously      *
//* saved ISMF Mountable Opt. Volume list.                           *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELREPDS EXEC  PGM=IDCAMS
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
 DELETE IBMUSER.OPTVOL.REPORT
/*
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: the data set being allocated should not be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=IBMUSER.OPTVOL.REPORT,DISP=(NEW,CATLG),
//         BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
/*
//********************************************************************
//*                                                                  *
//* Report generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBARF :-                              *
//*                                                                  *
//*       OPTVLIST - ISMF saved list name (input)                    *
//*                                                                  *
//*     ISPFILE - Opt. Volume report DSN                             *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*     The following Keywords can be specified in SYSIN DS          *
//*                                                                  *
//*  ------------------------------------------------------------    *
//*   LEN    KEYWORD                   DESC                          *
//*  ------------------------------------------------------------    *
//*                                                                  *
//*    7     VOLSER                  - Volume name.                  *
//*    8     FREESPC   ! FSP         - free space.                   *
//*    6     PUSED     ! PERUSED     - percentage space used.        *
//*    7     FULLST    ! FSTATUS     - Volume full status.           *
//*    9     VOLTYPE                 - volume type.                  *
//*    9     LIBNAME                 - Library name.                 *
//*    9     SLOTNAME                - Slot name.                    *
//*    9     SGNAME    ! STORGRP     - Storage Group name.           *
//*   13     LASTWRITE ! LSTWRTDT    - Last Written Date             *
//*   11     LASTMOUNT ! LSTMNTDT    - Volume Mount Date.            *
//*   12     EXPDTVOL  ! VOLEXPDT    - Volume expiry date.           *
//*    9     VOLLOC                  - Volume location.              *
//*   33     SHELFLOC                - Shelf location.               *
//*   10     MEDIATYPE ! MEDIA       - Media type.                   *
//*   21     VOLERR    ! ERRSTAT     - Volume error status.          *
//*    9     CAPACITY                - Capacity in MB.               *
//*   12     CREDATE   ! DATECRE     - Volume create date.           *
//*   11     ENTERDTE  ! EJECTDTE    - Enter/Eject date.             *
//*   10     PSEUDOLIB ! PSDLIBNM    - Pseudo Library name           *
//*   17     OIMNAME   ! OAMINMEM    - OAM Instance member name      *
//********************************************************************
//GENMVREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//ISPFILE  DD    DSN=IBMUSER.OPTVOL.REPORT,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBARF OPTVLIST) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
VOLSER
FREESPC
PUSED
FULLST
VOLTYPE
LIBNAME
SLOTNAME
SGNAME
LASTWRITE
LASTMOUNT
EXPDTVOL
VOLLOC
TITLE=STATUS OF OPTICAL VOLUMES AS ON 07/01/99
/*
//********************************************************************
//*                                                                  *
//* Copy the Mountable Optical Volume Report.                        *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYMVREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=IBMUSER.OPTVOL.REPORT,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIU
//ACBJBAIU JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIU) COMP(DF123): BATCH  - Generates Storage Class  ‡A1C*/
//*                                         list and Report          */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2‡G1C*/
//* COPYRIGHT IBM CORP. 2000, 2017                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $K0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//* $W1=K1H0049  ,HDZ11H0,01/10/04,SNJTCS: MULTI-TIERED SG       ‡W1A*/
//* $W2=K1H0106  ,HDZ11H0,01/12/28,SNJTCS: Remove s from SGs     ‡W2A*/
//* $X1=SMSPAV   ,HDZ11J0,03/04/15,SNJTCS: Support for SMSPAV    ‡X1A*/
//* $92=OAMSLVL  ,HDZ1190,06/06/21,IBSTG : Support for OSL       ‡92A*/
//* $A1=MULTLCK,HDZ1A10,07/04/27,IBSAS: Support of MULTILOCK     ‡A1A*/
//* $D1=BMF    ,HDZ1D10,10/01/29,IBSTG: BMF Disconnect Sphere at ‡D1A*/
//*                                     CLOSE                    ‡D1A*/
//* $G1=OA54826,HDZ2230,18/02/28,IBSTK: zHyperLink Storage Class ‡G1A*/
//*                                     Granularity              ‡G1A*/
//********************************************************************
//*                                                                  *
//* Sample JCL to generate an ISMF Storage Class list, save it, and  *
//* generate  Storage Class report from it.                          *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Storage Class list and save it                  *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   SCNAMES - Saved list name         (Output)                     *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   STORCLAS- Storage Class name      (Wild cards allowed)         *
//*                                                                  *
//********************************************************************
//GENSCLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQBAIF SAVE SCNAMES +
SCDS('ACTIVE') STORCLAS(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELREPDS EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..SCNAMS.REPORT.ACBJBAIU,
// DISP=(MOD,DELETE,DELETE),
//         BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=256,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: the data set being allocated should not be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..SCNAMS.REPORT.ACBJBAIU,DISP=(NEW,CATLG),
// BLKSIZE=27904,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=256,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
/*
//********************************************************************
//*                                                                  *
//* Report generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBARH :-                              *
//*                                                                  *
//*       SCNAMES - ISMF saved list name (input)                     *
//*                                                                  *
//*     ISPFILE - Storage Class report DSN                           *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*     The following keywords can be used in SYSIN DS.              *
//*                                                                  *
//*   --------------------------------------------------------       *
//*     LEN       KEYWORD       DESC                                 *
//*   --------------------------------------------------------       *
//*                                                                  *
//*      9        STORCLAS    - Storage Class                        *
//*      9        DIRRESP     - Direct Response (MSEC)               *
//*      5        DBIS        - Direct Bias.                         *
//*      9        SEQRESP     - Sequential Response (MSEC).          *
//*      5        SBIS        - Sequential bias.                     *
//*     21        AVALBLTY    - Availability.                        *
//*     11        GRNTSPC     - Guaranteed space.                    *
//*      9        LSTMDUID    - Last modified userid.                *
//*     11        LSTMODDATE  - Last date modified.                  *
//*     10        LSTMDTIME   - Last time modified.                  *
//*     11        GRNTSNCWR   - Guaranteed Sync Write.               *
//*      9        INACCRSP    - Initial access response. .           *
//*     21        ACCBLTY     - Accessibility.                       *
//*     15        SUSDATART   - Sustained data rate (MB/Sec)         *
//*      9        CFCACHE     - CF Cache set name.                   *
//*     10        CFDIRWT     - CF Direct weight.                    *
//*     14        CFSEQWT     - CF sequential weight.                *
//*     10        MULTITSG    - Multi-Tiered SG.            ‡W2C ‡X1C*
//*     11        PAVCAP      - Pav Capability.                  ‡X1A*
//*      6        OAMLVL      - OAM Sublevel.                    ‡92A*
//*      9        CFLOCK      - CF Lock set name.                ‡A1A*
//*     11        DISCSPHERE  - Disconnect Sphere at CLOSE.      ‡D1A*
//*      8        ZHLREAD     - zHyperLink Eligible for Read.    ‡G1A*
//*      9        ZHLWRITE    - zHyperLink Eligible for Write.   ‡G1A*
//********************************************************************
//GENSCREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE  DD    DSN=&SYSUID..SCNAMS.REPORT.ACBJBAIU,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQBARH SCNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
STORCLAS
DIRRESP
DBIS
SEQRESP
SBIS
AVALBLTY
GRNTSPC
LSTMDUID
LSTMODDATE
LSTMDTIME
GRNTSNCWR
INACCRSP
MULTITSG
PAVCAP
OAMLVL
DISCSPHERE
ZHLREAD
ZHLWRITE
TITLE=STATUS OF Storage classes  AS ON 22/04/21
/*
//********************************************************************
//*                                                                  *
//* Copy the Storage Class report                                    *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYSCREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=&SYSUID..SCNAMS.REPORT.ACBJBAIU,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIV
//ACBJBAIV JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIV) COMP(5695DF123): BATCH - Storage Class List        */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5647-A01                                                         */
//* (C) COPYRIGHT 2000  IBM CORP.                                    */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate Storage Class list and save it.           *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       CHANGE JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Storage Class list and save it.                 *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   SCNAMES - Saved list name         (Output)                     *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   STORCLAS- Storage Class name      (Wild cards allowed)         *
//*                                                                  *
//********************************************************************
//GENSCLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQBAIF SAVE SCNAMES +
SCDS('ACTIVE') STORCLAS(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAIW
//ACBJBAIW JOB (ACCT),MVS,MSGCLASS=H,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIW) COMP(DF123): BATCH - Storage Class Report      ‡A1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2‡G1C*/
//* COPYRIGHT IBM CORP. 2000, 2017                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//* $W1=K1H0049  ,HDZ11H0,01/10/04,SNJTCS: Multi-Tiered SG       ‡W1A*/
//* $W2=K1H0106  ,HDZ11H0,01/12/28,SNJTCS: Remove s from SGs     ‡W2A*/
//* $X1=SMSPAV   ,HDZ11J0,03/04/15,SNJTCS: Support for SMSPAV    ‡X1A*/
//* $92=OAMSLVL  ,HDZ1190,06/06/21,IBSTG : Support for OSL       ‡92A*/
//* $A1=MULTLCK,HDZ1A10,07/04/27,IBSAS: Support of MULTILOCK     ‡A1A*/
//* $D1=BMF    ,HDZ1D10,10/01/29,IBSTG: BMF Disconnect Sphere at ‡D1A*/
//*                                     CLOSE                    ‡D1A*/
//* $G1=OA54826,HDZ2230,18/02/28,IBSTK: zHyperLink Storage Class ‡G1A*/
//*                                     Granularity              ‡G1A*/
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate Storage Class report from a previously    *
//* saved ISMF Storage Class list.                                   *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELREPDS EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..SCNAMS.REPORT,DISP=(MOD,DELETE,DELETE),
// BLKSIZE=13300,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: the data set being allocated should not be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..SCNAMS.REPORT,DISP=(NEW,CATLG),
// BLKSIZE=13300,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
/*
//********************************************************************
//*                                                                  *
//* Report generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBARH :-                              *
//*                                                                  *
//*       SCNAMES - ISMF saved list name (input)                     *
//*                                                                  *
//*     ISPFILE - Storage Class report DSN                           *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*     The following keywords can be used in SYSIN DS.              *
//*                                                                  *
//*   --------------------------------------------------------       *
//*     LEN       KEYWORD       DESC                                 *
//*   --------------------------------------------------------       *
//*                                                                  *
//*      9        STORCLAS    - Storage Class                        *
//*      9        DIRRESP     - Direct Response (MSEC)               *
//*      5        DBIS        - Direct Bias.                         *
//*      9        SEQRESP     - Sequential Response (MSEC).          *
//*      5        SBIS        - Sequential bias.                     *
//*     21        AVALBLTY    - Availability.                        *
//*     11        GRNTSPC     - Guaranteed space.                    *
//*      9        LSTMDUID    - Last modified userid.                *
//*     11        LSTMODDATE  - Last date modified.                  *
//*     10        LSTMDTIME   - Last time modified.                  *
//*     11        GRNTSNCWR   - Guaranteed Sync Write.               *
//*      9        INACCRSP    - Initial access response. .           *
//*     21        ACCBLTY     - Accessibility.                       *
//*     15        SUSDATART   - Sustained data rate (MB/Sec)         *
//*      9        CFCACHE     - CF Cache set name.                   *
//*     10        CFDIRWT     - CF Direct weight.                    *
//*     14        CFSEQWT     - CF sequential weight.                *
//*     10        MULTITSG    - Multi-Tiered SG.                 ‡X1C*
//*     11        PAVCAP      - Pav Capability.                  ‡X1A*
//*      6        OAMLVL      - OAM Sublevel.                    ‡92A*
//*      9        CFLOCK      - CF Lock set name.                ‡A1A*
//*     11        DISCSPHERE  - Disconnect Sphere at CLOSE.      ‡D1A*
//*      8        ZHLREAD     - zHyperLink Eligible for Read.    ‡G1A*
//*      9        ZHLWRITE    - zHyperLink Eligible for Write.   ‡G1A*
//********************************************************************
//GENSCREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE  DD    DSN=&SYSUID..SCNAMS.REPORT,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQBARH SCNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
STORCLAS
DIRRESP
DBIS
SEQRESP
SBIS
AVALBLTY
GRNTSPC
LSTMDUID
LSTMODDATE
LSTMDTIME
GRNTSNCWR
INACCRSP
MULTITSG
PAVCAP
OAMLVL
DISCSPHERE
ZHLREAD
ZHLWRITE
TITLE=STATUS OF Storage classes  AS ON 22/04/21
/*
//********************************************************************
//*                                                                  *
//* Copy the Storage Class report                                    *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYSCREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=&SYSUID..SCNAMS.REPORT,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIX
//ACBJBAIX JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIX) COMP(DF123): BATCH  - Generates Storage Group      */
//*                                         list and Report          */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                     ‡E1C*/
//* COPYRIGHT IBM CORP. 2000, 2017                               ‡G1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//* $V1=SGName,HDZ11G0,00/09/19,TCS: Overflow and              2‡V1A */
//*                                     Extend SG Name Support       */
//* $W1=COPY POOL,HDZ11H0,02/01/02,TCS: Copy Pool Backup       2‡W1A */
//*                                    SG Name Support               */
//* $Z1=OA16354,HDZ1180,06/06/13,TCS: SG MBTOTAL, MBFREE        ‡Z1A */
//*                                       Field Length increase ‡Z1A */
//* $A0=EAV   ,HDZ1A10,06/09/27,IBSTG : EAV Support             ‡A0A */
//* $90=KFI0424,HDZ1190,07/01/24,IBSTG: Add SG TYPE             ‡90A */
//* $B1=OAME   ,HDZ1B10,08/06/06,IBSTG: OAM Enhancements        ‡B1A */
//* $D1=SPACEGB,HDZ1D10,10/03/26,IBSTG: Space Info in GB Support ‡D1A*/
//* $E1=STIERS ,HDZ2210,11/04/15,IBSTG: HSM STORAGE TIERS        ‡E1A*/
//* $E2=SMAPH2 ,HDZ2210,11/06/21,IBSTG: SMA Phase 2              ‡E2A*/
//* $E3=SMARMLV,HDZ2210,12/05/12,IBSTG: Back out SMA Support     ‡E3A*/
//* $F1=ALRTMSG,HDZ2220,13/10/15,IBSTG: Space alert thresholds   ‡F1A*/
//* $G1=OAMDB2ID,HDZ2230,16/02/01,IBSTG: Multiple OAM Address    ‡G1A*/
//*                                      Spaces support          ‡G1A*/
//********************************************************************
//*                                                                  *
//* Sample JCL to generate an ISMF Storage Group list, save it, and  *
//* generate  Storage Group report from it.                          *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Storage Group list and save it                  *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   SGNAMES - Saved list name         (Output)                     *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   STORGRP - Storage Group name      (Wild cards allowed)         *
//*   STGTYPE - Storage Group type                              3‡90A*
//*             Possible values : VIO/POOL/DUMMY/COPY POOL BACKUP/   *
//*                               OBJECT/OBJECT BACKUP/TAPE/BLANK    *
//*                                                             8‡D1A*
//*   SPACEGB - Space Info in GB (space information TOTALSPC and     *
//*             FREESPC are shown in gigabytes or megabytes for      *
//*             storage groups in the Active Control Data Set only). *
//*             Possible values : Y - space information in gigabytes *
//*                                   (1G to 99999999G).             *
//*                               N - space information in megabytes *
//*                                   (1 to 999999999).              *
//********************************************************************
//GENSGLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQBAIG SAVE SGNAMES +
SCDS('ACTIVE') STORGRP(*) STGTYPE(POOL) SPACEGB(N))+
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELREPDS EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..SGNAMS.REPORT.ACBJBAIX,
// DISP=(MOD,DELETE,DELETE),
//         BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
/*
//********************************************************************
//*                                                                  *
//* STEP TO ALLOCATE ISPFILE, WHERE THE GENERATED REPORT IS SAVED    *
//* NOTE: THE DATA SET BEING ALLOCATED SHOULD NOT BE A TEMPORARY     *
//*       DATA SET.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..SGNAMS.REPORT.ACBJBAIX,DISP=(NEW,CATLG),
//    BLKSIZE=27904,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=256,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
/*
//********************************************************************
//*                                                                  *
//* REPORT GENERATION STEP                                           *
//*                                                                  *
//*     PARAMETER FOLLOWING ACBQBARJ :-                              *
//*                                                                  *
//*       SGNAMES - ISMF SAVED LIST NAME (INPUT)                     *
//*                                                                  *
//*     ISPFILE - STORAGE GROUP REPORT DSN                           *
//*     SYSIN   - KEYWORDS SPECIFYING THE DATA IN THE REPORT         *
//*                                                                  *
//*     THE FOLLOWING KEYWORDS CAN BE USED IN SYSIN DS.              *
//*                                                                  *
//*   --------------------------------------------------------       *
//*     LEN       KEYWORD         DESC                               *
//*   --------------------------------------------------------       *
//*                                                                  *
//*      9        STORGRP      -  STORAGE GROUP.                     *
//*     17        SGTYPE       -  STORAGE GROUP TYPE.                *
//*      8        VIOMXSZ      -  VIO MAXIMUM SIZE.                  *
//*      5        VIOU         -  VIO UNIT.                          *
//*      9        AUTOMIG      -  AUTO MIGRATE.                      *
//*     15        MIGSYS       -  MIGRATE SYSTEM/SYS GROUP.          *
//*      5        ABCK         -  AUTO BACK.                         *
//*     14        BKPSYS       -  BACKUP SYSTEM/SYS GROUP.           *
//*      5        ADMP         -  AUTO DUMP.                         *
//*     13        DUMPSYS      -  DUMP SYSTEM/SYS GROUP.             *
//*      5        MIGH         -  MIGR HIGH.                         *
//*      5        MIGL         -  MIGR LOW.                          *
//*     10        TOTALSPC     -  MB/GB TOTAL SPACE.             ‡D1C*
//*     10        FREESPC      -  MB/GB FREE SPACE.              ‡D1C*
//*      7        PERFSP       -  PERCENTAGE FREE SPACE.             *
//*      9        LSTMODID     -  LAST MODIFIED USERID.              *
//*     11        LSTMODDATE   -  LAST DATE MODIFIED.                *
//*     11        LSTMODTIME   -  LAST TIME MODIFIED.                *
//*      9        DMPCLAS1     -  DUMP CLASS.                        *
//*      9        DMPCLAS2     -  DUMP CLASS.                        *
//*      9        DMPCLAS3     -  DUMP CLASS.                        *
//*      9        DMPCLAS4     -  DUMP CLASS.                        *
//*      9        DMPCLAS5     -  DUMP CLASS.                        *
//*     12        GRNTBKPFREQ  -  GUARANTEED BKP FREQUENCY.          *
//*     10        QUALIFIER    -  QUALIFIER.                         *
//*     11        CYCLSTTIME   -  CYCLE START TIME.                  *
//*      9        CYCLENTM     -  CYCLE END TIME.                    *
//*      9        LIBNAME1     -  LIBRARY NAME.                      *
//*      9        LIBNAME2     -  LIBRARY NAME.                      *
//*      9        LIBNAME3     -  LIBRARY NAME.                      *
//*      9        LIBNAME4     -  LIBRARY NAME.                      *
//*      9        LIBNAME5     -  LIBRARY NAME.                      *
//*      9        LIBNAME6     -  LIBRARY NAME.                      *
//*      9        LIBNAME7     -  LIBRARY NAME.                      *
//*      9        LIBNAME8     -  LIBRARY NAME.                      *
//*     12        VOLFULLTHRS  -  VOLUME FULL THRESHOLD.             *
//*     12        DRVSTRTTHRS  -  DRIVE START THRESHOLD.             *
//*     15        VOLFULWRTERR -  VOLUME FULL AT WRITE ERR.          *
//*      9        OSMCSYS      -  OSMC SYSTEM.                       *
//*      9        OVRFLOW      -  OVERFLOW.                 2‡V1A    *
//*      9        EXTSGNM      -  EXTEND SG NAME.                    *
//*      9        CPBSGN       -  COPY POOL BACKUP SG NAME    ‡W1A   *
//*      7        BREAKPT      -  BREAKPOINTVALUE.              3‡A0A*
//*     10        TRKHITHRS    -  MIGR HIGH TRK.                     *
//*     11        TRKLOWTHRS   -  MIGR LOW TRK.                      *
//*     10        OAMDELPRO    -  OAM DELETION PROTECTION.      2‡B1A*
//*     10        OAMRETPRO    -  OAM RETENTION PROTECTION.          *
//*     10        PROCPRIOR    -  PROCESSING PRIORITY.           ‡E1A*
//*     11        TOTSPALERT   -  TOTAL SPACE ALERT THRESHOLD %. ‡F1A*
//*     11        TRKSPALERT   -  TRACK-MANAGED SPACE ALERT      ‡F1A*
//*                               Threshold %.                   ‡F1A*
//*      9        OAMDB2ID     -  OAM DB2 ID.                    ‡G1A*
//********************************************************************
//GENSGREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE  DD    DSN=&SYSUID..SGNAMS.REPORT.ACBJBAIX,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQBARJ SGNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
STORGRP
SGTYPE
VIOMXSZ
VIOU
AUTOMIG
MIGSYS
ABCK
BKPSYS
ADMP
DUMPSYS
OVRFLOW
EXTSGNM
CPBSGN
MIGH
MIGL
TOTALSPC
FREESPC
PERFSP
BREAKPT
TRKHITHRS
TRKLOWTHRS
OAMDELPRO
OAMRETPRO
PROCPRIOR
TOTSPALERT
TRKSPALERT
TITLE=STATUS OF Storage Group  AS ON 22/04/14
/*
//********************************************************************
//*                                                                  *
//* Copy the Storage Group report                                    *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYSGREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=&SYSUID..SGNAMS.REPORT.ACBJBAIX,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIY
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIY) COMP(DF123): BATCH - Storage Group List        ‡90C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                    2‡90C*/
//* COPYRIGHT 2000,2011  IBM CORP.                               ‡D1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//* $90=KFI0424,HDZ1190,07/01/29,IBSTG: Add SG TYPE              ‡90A*/
//* $D1=SPACEGB,HDZ1D10,10/03/26,IBSTG: Space Info in GB Support ‡D1A*/
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate Storage Group list and save it.           *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Storage Group list and save it                  *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   SGNAMES - Saved list name         (Output)                     *
//*   SCDS    - SCDS dataset name       (Valid SCSD dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   STORGRP - Storage Group name      (wild cards allowed)         *
//*   STGTYPE - Storage Group type                              3‡90A*
//*             Possible values : VIO/POOL/DUMMY/COPY POOL BACKUP/   *
//*                               OBJECT/OBJECT BACKUP/TAPE/BLANK    *
//*                                                             8‡D1A*
//*   SPACEGB - Space Info in GB (space information TOTALSPC and     *
//*             FREESPC are shown in gigabytes or megabytes for      *
//*             storage groups in the Active Control Data Set only). *
//*             Possible values : Y - space information in gigabytes *
//*                                   (1G to 99999999G).             *
//*                               N - space information in megabytes *
//*                                   (1 to 999999999).              *
//*                                                                  *
//********************************************************************
//GENSGLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAIG SAVE SGNAMES +
SCDS(scds) STORGRP(*) STGTYPE(POOL) SPACEGB(N))+
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAIZ
//ACBJBAIZ JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIZ) COMP(DF123): BATCH - Storage Group Report      ‡A0C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                     ‡E1C*/
//* COPYRIGHT IBM CORP. 2000, 2017                               ‡G1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//* $V1=SGName,HDZ11G0,00/09/19,TCS: Overflow and              2‡V1A */
//*                                     Extend SG Name Support       */
//* $W1=COPY POOL,HDZ11H0,02/01/02,TCS: Copy Pool Backup       2‡W1A */
//*                                    SG Name Support               */
//* $Z1=OA16354,HDZ1180,06/06/13,TCS: SG MBTOTAL, MBFREE        ‡Z1A */
//*                                       Field Length increase ‡Z1A */
//* $A0=EAV   ,HDZ1A10,06/09/27,IBSTG : EAV Support             ‡A0A */
//* $B1=OAME  ,HDZ1B10,08/06/06,IBSTG : OAM Enhancements        ‡B1A */
//* $D1=SPACEGB,HDZ1D10,10/03/26,IBSTG: Space Info in GB Support ‡D1A*/
//* $E1=STIERS ,HDZ2210,11/04/15,IBSTG: HSM STORAGE TIERS        ‡E1A*/
//* $E2=SMAPH2 ,HDZ2210,11/06/21,IBSTG: SMA Phase 2              ‡E2A*/
//* $E3=SMARMLV,HDZ2210,12/05/12,IBSTG: Back out SMA Support     ‡E3A*/
//* $F1=ALRTMSG,HDZ2220,13/10/15,IBSTG: Space alert thresholds   ‡F1A*/
//* $G1=OAMDB2ID,HDZ2230,16/02/01,IBSTG: Multiple OAM Address    ‡G1A*/
//*                                      Spaces support          ‡G1A*/
//*                                                                  */
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate Storage Group report from a previously    *
//* saved ISMF storage group list.                                   *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELREPDS EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..SGNAMS.REPORT.ACBJBAIZ,
// DISP=(MOD,DELETE,DELETE),
//         BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* STEP TO ALLOCATE ISPFILE, WHERE THE GENERATED REPORT IS SAVED    *
//* NOTE: THE DATA SET BEING ALLOCATED SHOULD NOT BE A TEMPORARY     *
//*       DATA SET.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..SGNAMS.REPORT.ACBJBAIZ,
// DISP=(NEW,CATLG),
//    BLKSIZE=27904,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
/*
//********************************************************************
//*                                                                  *
//* REPORT GENERATION STEP                                           *
//*                                                                  *
//*     PARAMETER FOLLOWING ACBQBARJ :-                              *
//*                                                                  *
//*       SGNAMES - ISMF SAVED LIST NAME (INPUT)                     *
//*                                                                  *
//*     ISPFILE - STORAGE GROUP REPORT DSN                           *
//*     SYSIN   - KEYWORDS SPECIFYING THE DATA IN THE REPORT         *
//*                                                                  *
//*     THE FOLLOWING KEYWORDS CAN BE USED IN SYSIN DS.              *
//*                                                                  *
//*  ----------------------------------------------------------      *
//*     LEN       KEYWORD         DESC                               *
//*  ----------------------------------------------------------      *
//*                                                                  *
//*      9        STORGRP      -  STORAGE GROUP.                     *
//*     17        SGTYPE       -  STORAGE GROUP TYPE.                *
//*      8        VIOMXSZ      -  VIO MAXIMUM SIZE.                  *
//*      5        VIOU         -  VIO UNIT.                          *
//*      9        AUTOMIG      -  AUTO MIGRATE.                      *
//*     15        MIGSYS       -  MIGRATE SYSTEM/SYS GROUP.          *
//*      5        ABCK         -  AUTO BACK.                         *
//*     14        BKPSYS       -  BACKUP SYSTEM/SYS GROUP.           *
//*      5        ADMP         -  AUTO DUMP.                         *
//*     13        DUMPSYS      -  DUMP SYSTEM/SYS GROUP.             *
//*      5        MIGH         -  MIGR HIGH.                         *
//*      5        MIGL         -  MIGR LOW.                          *
//*     10        TOTALSPC     -  MB/GB TOTAL SPACE.             ‡D1C*
//*     10        FREESPC      -  MB/GB FREE SPACE.              ‡D1C*
//*      7        PERFSP       -  PERCENTAGE FREE SPACE.             *
//*      9        LSTMODID     -  LAST MODIFIED USERID.              *
//*     11        LSTMODDATE   -  LAST DATE MODIFIED.                *
//*     11        LSTMODTIME   -  LAST TIME MODIFIED.                *
//*      9        DMPCLAS1     -  DUMP CLASS.                        *
//*      9        DMPCLAS2     -  DUMP CLASS.                        *
//*      9        DMPCLAS3     -  DUMP CLASS.                        *
//*      9        DMPCLAS4     -  DUMP CLASS.                        *
//*      9        DMPCLAS5     -  DUMP CLASS.                        *
//*     12        GRNTBKPFREQ  -  GUARANTEED BKP FREQUENCY.          *
//*     10        QUALIFIER    -  QUALIFIER.                         *
//*     11        CYCLSTTIME   -  CYCLE START TIME.                  *
//*      9        CYCLENTM     -  CYCLE END TIME.                    *
//*      9        LIBNAME1     -  LIBRARY NAME.                      *
//*      9        LIBNAME2     -  LIBRARY NAME.                      *
//*      9        LIBNAME3     -  LIBRARY NAME.                      *
//*      9        LIBNAME4     -  LIBRARY NAME.                      *
//*      9        LIBNAME5     -  LIBRARY NAME.                      *
//*      9        LIBNAME6     -  LIBRARY NAME.                      *
//*      9        LIBNAME7     -  LIBRARY NAME.                      *
//*      9        LIBNAME8     -  LIBRARY NAME.                      *
//*     12        VOLFULLTHRS  -  VOLUME FULL THRESHOLD.             *
//*     12        DRVSTRTTHRS  -  DRIVE START THRESHOLD.             *
//*     15        VOLFULWRTERR -  VOLUME FULL AT WRITE ERR.          *
//*      9        OSMCSYS      -  OSMC SYSTEM.                       *
//*      9        OVRFLOW      -  OVERFLOW.                    2‡V1A *
//*      9        EXTSGNM      -  EXTEND SG NAME.                    *
//*      9        CPBSGN       -  COPY POOL BACKUP SG NAME      ‡W1A *
//*      7        BREAKPT      -  BREAKPOINTVALUE.              3‡A0A*
//*     10        TRKHITHRS    -  MIGR HIGH TRK.                     *
//*     11        TRKLOWTHRS   -  MIGR LOW TRK.                      *
//*     10        OAMDELPRO    -  OAM DELETION PROTECTION.      2‡B1A*
//*     10        OAMRETPRO    -  OAM RETENTION PROTECTION.          *
//*     10        PROCPRIOR    -  PROCESSING PRIORITY.           ‡E1A*
//*     11        TOTSPALERT   -  TOTAL SPACE ALERT THRESHOLD %. ‡F1A*
//*     11        TRKSPALERT   -  TRACK-MANAGED SPACE ALERT      ‡F1A*
//*                               THRESHOLD %.                   ‡F1A*
//*      9        OAMDB2ID     -  OAM DB2 ID.                    ‡G1A*
//********************************************************************
//GENSGREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE  DD    DSN=&SYSUID..SGNAMS.REPORT.ACBJBAIZ,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBARJ SGNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
STORGRP
SGTYPE
VIOMXSZ
VIOU
AUTOMIG
MIGSYS
ABCK
BKPSYS
ADMP
DUMPSYS
OVRFLOW
EXTSGNM
CPBSGN
MIGH
MIGL
TOTALSPC
FREESPC
PERFSP
BREAKPT
TRKHITHRS
TRKLOWTHRS
OAMDELPRO
OAMRETPRO
PROCPRIOR
TOTSPALERT
TRKSPALERT
TITLE=STATUS OF STORAGE GROUP  AS ON 22/04/14
/*
//********************************************************************
//*                                                                  *
//* COPY THE STORAGE GROUP REPORT                                    *
//*                                                                  *
//*   SYSUT1 - INPUT (FROM PREVIOUS STEP)                            *
//*   SYSUT2 - OUTPUT                                                *
//*                                                                  *
//********************************************************************
//CPYSGREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=&SYSUID..SGNAMS.REPORT.ACBJBAIZ,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAI1
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//********************************************************************/
//*$MAC(ACBJBAI1) COMP(5695DF123): BATCH  - TEST CASE GEN SMF DATA   */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5695-DF1                                                         */
//* (C) COPYRIGHT 1996       IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        ‡WA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*10/04/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE TEST CASES FROM SMF TYPE 127 RECORDS      *
//* WRITTEN BY THE STORAGE CLASS EXIT IGDACSSC; USE A STANDARD       *
//* UTILITY LIKE IFASMFDP TO UNLOAD THE TYPE 127 RECORDS FROM THE    *
//* SMF LOG DATA SETS; ALSO ACSTST PROGRAM (FROM CBIPO) SHOULD BE    *
//* AVAILABLE                                                        *
//*                                                                  *
//*    INDD  - DATA SET CONTAINING SMF DATA (INPUT)                  *
//*    OUTDD - TEST CASE PDS (OUTPUT)                                *
//*                                                                  *
//********************************************************************
//GENTEST EXEC PGM=ACSTST,REGION=512K,
//             COND=(0,NE,DATA1)
//SYSPRINT DD  SYSOUT=*
//INDD     DD  DSN=IBMUSER.SMF.TYPE127.DATA,DISP=SHR
//OUTDD    DD  DSN=IBMUSER.TESTCASE.LIBRARY,DISP=(NEW,CATLG,DELETE),
//             SPACE=(80,(1250,200,50),,,ROUND),
//             UNIT=3380,VOL=SER=M4RS05,
//             DCB=(BLKSIZE=80,LRECL=80,RECFM=F)
//********************************************************************

./ ADD NAME=ACBJBAI2
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAI2) COMP(DF123): BATCH  - GENERATES DATA SET LIST  ‡Y1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2‡E1C*/
//* COPYRIGHT IBM CORP. 1996, 2017                               ‡G1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*$L1=KN20035,HACS120,96/07/12,SNJTCS: PARAMETERS CORRECTED     ‡L1A*/
//*10/04/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//*09/03/97 TCS - HDZ11D0 : Generation of dataset list, user ‡WA28670*/
//*  is not able to direct the search to a specific VOLSER.  ‡WA28670*/
//*$T2=K150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter     ‡T2A*/
//*$U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for   2‡U1A*/
//*                                       DFSMS/MVS ISMF V2R10       */
//*$Y1=K1K0688,HDZ11K0,04/17/12,SNJTCS:DS List via SG, GT64K Fix ‡Y1A*/
//*$Y2=K1K0791,HDZ11K0,05/21/02,SNJTCS:DS List Space Ovrflw Fix  ‡Y2A*/
//*$A0=EAV   ,HDZ1A10,06/09/25,IBSTG : EAV Support               ‡A0A*/
//*$A1=MULTLCK,HDZ1A10,07/04/27,IBSAS: Support of MULTILOCK      ‡A1A*/
//*$B1=EAV2   ,HDZ1B10,08/06/10,IBSTG: EATTR keyword support     ‡B1A*/
//*$E1=PDSESPU,HDZ2210,12/09/04,IBSTG: PDSE Space Utilization    ‡E1A*/
//*                                    Support (LI3039)          ‡E1A*/
//*$E2=OA45038,HDZ2210,14/04/15,IBSTG: Update DSN Type           ‡E2A*/
//*$G1=FP0454 ,HDZ2230,15/10/26,IBSTG: DS Encryption             ‡G1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO CREATE ISMF DATA SET LIST IN BATCH AND SAVE IT     *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//*   PARAMETERS:                                                    *
//*                                                                  *
//*                                                    46A/C ‡WA28670*
//*     PARAMETER FOLLOWING SAVE - NAME OF THE SAVED LIST (OUTPUT)   *
//*     ALLOCSP - 0 to 99999999 followed by K (kilobytes) or     ‡A0C*
//*               M (megabytes). If K or M aren't specified     2‡A0A*
//*               the value will be defaulted to K.                  *
//*     ALLOCUT - Allocation Unit, BLK/TRK/ABS/CYL/MB/KB/BYT     ‡U1A*
//*     BLKSIZE - 0 to 99999 (in Bytes)                              *
//*     BLKUNUSED - 0 to 99999999 (in Kilo Bytes)                ‡Y2C*
//*     CATNAME - ICF CATALOG name                                   *
//*     CATVOL  - VOLUME used in catalog list                        *
//*     CHGIND  - YES/NO                                             *
//*     COMPFMT - YES/NO                                             *
//*     CREATEDT - YYYY/MM/DD  (1900/01/01 to 2155/12/31)            *
//*                YY/MM/DD ( (19)00/01/01 to (19)99/12/31 )         *
//*     CCSIDDSC - CCSID Description                            3‡U1A*
//*                0 to 65534 or A 1 to 17 character string          *
//*                that is not a number 0-65534                      *
//*     CFCSTNM  - CF Cache Structure name                       ‡U1A*
//*     CFCTNM   - CF Cache Set name                             ‡U1A*
//*     CFMOST   - CF Monitor status ON/OFF                      ‡U1A*
//*     CFSTIND  - CF status indicator CE/CQ/VRRQ/VRLS/VQ        ‡U1A*
//*     DATACLS - DATA CLASS name                                    *
//*     DDMATTR - DDM Attributes YES/NO                          ‡U1A*
//*     DEVTYPE - 3380/3390/9345 for DASD types                      *
//*             - 3480/3480X/3490/3590-1 for TAPE types              *
//*     DSENV   - Dataset Environment MANAGED/UNMANAGED          ‡U1A*
//*     DSNTYP  - DS name type EXTENDED/HFS/LIBRARY,1/LIBRARY,2/ ‡E1C*
//*               LIBRARY/LARGE/OTHERS                           ‡E2C*
//*     DSN     - DATA SET NAME                                      *
//*               ('**' requires catalog name)                       *
//*     DSORG   - DA/DAU/IS/ISU/PO/POU/PS/PSU/UN/VS                  *
//*     ENCRIND - YES/NO                                         ‡G1A*
//*     ENTRYTYP - AIX/ALIAS/CATALOG/DATA/INDEX/NONVSAM/PATH/        *
//*                DEFERRED/GDG/GDS/ROLLOFF                          *
//*     EXPIREDT - YYYY/MM/DD (1900/01/01 to 2155/12/31)         or  *
//*              - YY/MM/DD ( (19)00/01/01 TO (19)99/12/31 )     or  *
//*              - NEVER    or     1999/00/00                        *
//*     HSMDATA  - Y / N  (Catalog List)                             *
//*     LASTBKUP - YYYY/MM/DD  (1900/01/01 to 2155/12/31)            *
//*                YY/MM/DD ( (19)00/01/01 to (19)99/12/31 )         *
//*     LASTREF  - YYYY/MM/DD  (1900/01/01 to 2155/12/31)            *
//*                YY/MM/DD ( (19)00/01/01 to (19)99/12/31 )         *
//*     LISTTYP  - Inclusive/Exclusive or I/E                   3‡U1A*
//*                Inclusive: Display list by Inclusive criteria     *
//*                Exclusive: Display list by Enclusive criteria     *
//*     LRECL   - 0 to 99999 (in Bytes)                              *
//*     MGMTCLS - MANAGEMENT CLASS name                              *
//*     MULTVOL - YES/NO                                             *
//*     NOTUSED% - 0 to 100                                          *
//*     NUMEXT   - 0 to 999                                          *
//*     NUMSTRIPE - 1 to 16                                          *
//*     OPTIMAL - 0 to 99999 (in Bytes)                              *
//*     OWNER   - OWNER of the datasets                              *
//*     QSAVE   - QUERY Name to be saved                             *
//*     QUERY   - QUERY Name to be used                              *
//*     REBLOCK - YES/NO                                             *
//*     RECFMT  - A/B/D/F/M/FS/VS/T/U/V                              *
//*     SECALLOC - 0 to 99999999 followed by K (kilobytes) or    ‡A0C*
//*                M (megabytes). If K or M aren't specified    2‡A0A*
//*                the value will be defaulted to K.                 *
//*     SOURCEGL - 1 / 2 (2-new list)                                *
//*     SOURCENL - 1 / 2 (1-VTOC 2-catalog)                          *
//*     STORCLS - STORAGE CLASS name                                 *
//*     STORGRP - STORAGE GROUP name                             ‡Y1A*
//*     USEDSPC - 0 to 99999999 followed by K (kilobytes) or     ‡A0C*
//*               M (megabytes). If K or M aren't specified     2‡A0A*
//*               the value will be defaulted to K.                  *
//*     USERDATAREDUCT% - 0 to 99                                    *
//*     VTOCDATA - Y / N (Catalog List)                              *
//*     VTOCVSER - VTOC VOLUME SERIAL NUMBERS (VTOC list)            *
//*     CFLSTNM  - CF Lock Structure name                        ‡A1A*
//*     CFLTNM   - CF Lock Set name                              ‡A1A*
//*     EATTR    - EATTR                                         ‡B1A*
//*                                                                  *
//********************************************************************
//SAVELIST EXEC ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAI2 SAVE DSNLIST +
VTOCDATA(Y) HSMDATA(Y) +
ALLOCSP(GT 500) DSORG(NE PS) +
DSN('IBMUSER.**')) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************

./ ADD NAME=ACBJBAI4
//ACBJBAI4 JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAI4) COMP(DF123): BATCH - DASD VOLUME LIST IN BATCH ‡A0C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* COPYRIGHT 1996,2011  IBM CORP.                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*10/04/96 CCY - HDZ11C0: Ship as SPE                       ‡WA22861*/
//*09/19/97 TCS - HDZ11D0: In VOL application, to remove the ‡WA29014*/
//*   error message ' SPECIFY ONLY 1 KEYWORD PER LINE '      ‡WA29014*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//*$U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for   2‡U1A*/
//*                                       DFSMS/MVS ISMF V2R10       */
//*$A0=EAV   ,HDZ1A10,06/09/25,IBSTG : EAV Support               ‡A0A*/
//*$C1=OA34489,HDZ1C10,10/10/06,IBSTG: Add comment, insufficient ‡C1A*/
//*                                    storage                   ‡C1A*/
//*$D1=OA38673,HDZ1D10,11/11/28,IBSTG: Support of SMA SPE        ‡D1A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE ISMF DASD VOLUME LIST IN BATCH, SAVE IT,  *
//* AND SAVE THE QUERY ALSO                                          *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                            12‡C1A*
//*      INCREASE THE REGION SIZE IN ACBJBAOB IF YOU DO NOT HAVE     *
//*      ENOUGH VIRTUAL STORAGE TO GENERATE DASD VOLUME LIST.        *
//*      FOR EXAMPLE, THE FOLLOWING ISMF REASON CODES INDICATE       *
//*      INSUFFICIENT STORAGE (SEE ISPF LOG):                        *
//*      REASON CODE (3037),                                         *
//*      REASON CODE (3258).                                         *
//*      THE REQUIRED REGION SIZE DEPENDS ON THE NUMBER OF VOLUMES   *
//*      ENTRIES AND CAN BE ESTIMATED ON THE BASIS OF 10K FOR EACH   *
//*      VOLUME ENTRY (THIS DATA IS APPROXIMATE AND CAN VARY ON      *
//*      DIFFERENT SYSTEMS. SET REGION=(0M) TO HAVE ALL STORAGE      *
//*      AVAILABLE).                                                 *
//*                                                                  *
//*   PARAMETERS:                                                    *
//*                                                   36A/C ‡WA29014 *
//*   PARAMETER FOLLOWING SAVE - NAME OF SAVED LIST (OUTPUT)         *
//*   ALLOCSP   - 0 to 99999999 followed by K (kilobytes) or     ‡A0C*
//*               M (megabytes). If K or M aren't specified     2‡A0A*
//*               the value will be defaulted to K.                  *
//*   ALSPTRK   - 0 to 99999999 followed by K (kilobytes) or    3‡A0A*
//*               M (megabytes). If K or M aren't specified          *
//*               the value will be defaulted to K.                  *
//*   CDSNAME   - Control Dataset Name                               *
//*   CFVOLST   - CF Volume status ENABLED/QUIESCING/QUIESCED    ‡U1A*
//*   CFWSTAT   - ACTIVE/INACTIVE/NONE/PENDING/PINNED                *
//*   DEVTYPE   - 3380/3390/9345                                     *
//*             - Installation defined esoteric names(like SYSDA ..) *
//*   DFWSTAT   - ACTIVE/INACTIVE/NONE/PENDING/PINNED                *
//*   DUPLXSTAT - NONE / PPRI-FAI / PPRI-PEN / PPRI-SUS / PPRIMARY/  *
//*               PRI-PEN / PRI-SUS / PRIMARY / PSEC-FAI / PSEC-PEN/ *
//*               PSEC-SUS /PSECNDRY/ SEC-PEN  / SEC-SUS / SECONDRY/ *
//*               SIMPLEX / SPAR-BRK / SPAR-PEN / SPARE              *
//*   FRAG      - 1 to 999                                           *
//*   FREEDSCB  - 0 to 99999                                         *
//*   FREESPC   - 0 to 99999999 followed by K (kilobytes) or     ‡A0C*
//*               M (megabytes). If K or M aren't specified     2‡A0A*
//*               the value will be defaulted to K.                  *
//*   FRSPTRK   - 0 to 99999999 followed by K (kilobytes) or    3‡A0A*
//*               M (megabytes). If K or M aren't specified          *
//*               the value will be defaulted to K.                  *
//*   FREESPC%  - 0 to 100 (with no % sign)                          *
//*   FREEVIR   - 0 to 99999                                         *
//*   FREEXT    - 0 to 9999999                                   ‡A0C*
//*   FROMDEV   - 1 to 4 HexaDecimal digits                          *
//*   INDEX     - DISABLED/ENABLED/NONE                              *
//*   INIASRES  - Initialized as Reserved (YES / NO)             ‡D1A*
//*   LASTDEV   - 1 to 4 HexaDecimal digits (should be >= FROMDEV)   *
//*   LISTTYP   - Inclusive/Exclusive or I/E                    3‡U1A*
//*               Inclusive: Display list by Inclusive criteria      *
//*               Exclusive: Display list by Enclusive criteria      *
//*   LRGEXT    - 1 to 99999999 followed by K (kilobytes) or     ‡A0C*
//*               M (megabytes). If K or M aren't specified     2‡A0A*
//*               the value will be defaulted to K.                  *
//*   LGEXTRK   - 1 to 99999999 followed by K (kilobytes) or    3‡A0C*
//*               M (megabytes). If K or M aren't specified          *
//*               the value will be defaulted to K.                  *
//*   OTHERDEV  - 1 to 4 Hex Decimal digits                          *
//*   OWNERID   - Owner ID, 1 to 14 characters                   ‡D1A*
//*   PHYDATA   - Y / N                                              *
//*   PHYSTAT   - CONVERT/INITIAL/NONSMS/UNKNOWN                     *
//*   QSAVE     - Query Name to be saved                             *
//*   QUERY     - Query Name to be used                              *
//*   RDCACHE   - ACTIVE/INACTIVE/NONE/PENDING                       *
//*   SHRDASD   - YES / NO                                           *
//*   SOURCEGL  - 1 / 2 (2-New List)                                 *
//*   SOURCENL  - 1 / 2 (1-Physical, 2-SMS)                          *
//*   SPCDATA   - Y / N                                              *
//*   STORGRP   - Stotage Group name (SMS only)                      *
//*   SUBSYSID  - 0001 to FFFF (in HexaDecimal)                      *
//*   USEATTR   - PRIV/PUB/STOR                                      *
//*   VOL       - Volume serial                                      *
//*   VOLSTYPE  - 1 / 2 / 3 (1-On Line 2-Not On Line 3-Either)       *
//*                                                                  *
//********************************************************************
//DASDLST EXEC ACBJBAOB,
//        PLIB1=SYS1.DGTPLIB,
//        TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(STE58) MSGID
ISPSTART CMD(ACBQBAI4 +
SAVE CHKFRAG QSAVE(CHKFRAG) +
SPCDATA(Y) PHYDATA(Y) +
VOL(*)                ) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//
VOL(TSC*) FRAG(GT 450)) +

./ ADD NAME=ACBJBAI5
//ACBJBAI5 JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=(&SYSUID..OSEO.MVS,
//  SYS1.SACBCNTL)
//********************************************************************/
//*$MAC(ACBJBAI5) COMP(DF123): BATCH  - GENERATES VOLUME LIST    ‡A0C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                    2‡A0C*/
//* COPYRIGHT 1996,2011  IBM CORP.                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*10/14/96 CCY - HDZ11C0: Ship as SPE                       ‡WA22861*/
//*09/19/97 TCS - HDZ11D0: In VOL application, to remove the ‡WA29014*/
//*   error message ' SPECIFY ONLY 1 KEYWORD PER LINE '      ‡WA29014*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//*$U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for   2‡U1A*/
//*                                       DFSMS/MVS ISMF V2R10       */
//*$A0=EAV   ,HDZ1A10,06/09/27,IBSTG : EAV Support               ‡A0A*/
//*$C1=OA34489,HDZ1C10,10/10/06,IBSTG: Add comment, insufficient ‡C1A*/
//*                                    storage                   ‡C1A*/
//*$D1=OA38673,HDZ1D10,11/11/28,IBSTG: Support of SMA SPE        ‡D1A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE ISMF DASD VOLUME LIST IN BATCH AND SAVE IT*
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                            12‡C1A*
//*      INCREASE THE REGION SIZE IN ACBJBAOB IF YOU DO NOT HAVE     *
//*      ENOUGH VIRTUAL STORAGE TO GENERATE DASD VOLUME LIST.        *
//*      FOR EXAMPLE, THE FOLLOWING ISMF REASON CODES INDICATE       *
//*      INSUFFICIENT STORAGE (SEE ISPF LOG):                        *
//*      REASON CODE (3037),                                         *
//*      REASON CODE (3258).                                         *
//*      THE REQUIRED REGION SIZE DEPENDS ON THE NUMBER OF VOLUMES   *
//*      ENTRIES AND CAN BE ESTIMATED ON THE BASIS OF 10K FOR EACH   *
//*      VOLUME ENTRY (THIS DATA IS APPROXIMATE AND CAN VARY ON      *
//*      DIFFERENT SYSTEMS. SET REGION=(0M) TO HAVE ALL STORAGE      *
//*      AVAILABLE).                                                 *
//*                                                                  *
//*   PARAMETERS:                                                    *
//*                                                   36A/C ‡WA29014 *
//*   PARAMETER FOLLOWING SAVE - NAME OF SAVED LIST (OUTPUT)         *
//*   ALLOCSP   - 0 to 99999999 followed by K (kilobytes) or     ‡A0C*
//*               M (megabytes). If K or M aren't specified     2‡A0A*
//*               the value will be defaulted to K.                  *
//*   ALSPTRK   - 0 to 99999999 followed by K (kilobytes) or    3‡A0A*
//*               M (megabytes). If K or M aren't specified          *
//*               the value will be defaulted to K.                  *
//*   CDSNAME   - Control Dataset Name                               *
//*   CFVOLST   - CF Volume status ENABLED/QUIESCING/QUIESCED    ‡U1A*
//*   CFWSTAT   - ACTIVE/INACTIVE/NONE/PENDING/PINNED                *
//*   DEVTYPE   - 3380/3390/9345                                     *
//*             - Installation defined esoteric names(like SYSDA ..) *
//*   DFWSTAT   - ACTIVE/INACTIVE/NONE/PENDING/PINNED                *
//*   DUPLXSTAT - NONE / PPRI-FAI / PPRI-PEN / PPRI-SUS / PPRIMARY/  *
//*               PRI-PEN / PRI-SUS / PRIMARY / PSEC-FAI / PSEC-PEN/ *
//*               PSEC-SUS /PSECNDRY/ SEC-PEN  / SEC-SUS / SECONDRY/ *
//*               SIMPLEX / SPAR-BRK / SPAR-PEN / SPARE              *
//*   FRAG      - 1 to 999                                           *
//*   FREEDSCB  - 0 to 99999                                         *
//*   FREESPC   - 0 to 99999999 followed by K (kilobytes) or     ‡A0C*
//*               M (megabytes). If K or M aren't specified     2‡A0A*
//*               the value will be defaulted to K.                  *
//*   FRSPTRK   - 0 to 99999999 followed by K (kilobytes) or    3‡A0A*
//*               M (megabytes). If K or M aren't specified          *
//*               the value will be defaulted to K.                  *
//*   FREESPC%  - 0 to 100 (with no % sign)                          *
//*   FREEVIR   - 0 to 99999                                         *
//*   FREEXT    - 0 to 9999999                                   ‡A0C*
//*   FROMDEV   - 1 to 4 HexaDecimal digits                          *
//*   INDEX     - DISABLED/ENABLED/NONE                              *
//*   INIASRES  - Initialized as Reserved (YES / NO)             ‡D1A*
//*   LASTDEV   - 1 to 4 HexaDecimal digits (should be >= FROMDEV)   *
//*   LISTTYP   - Inclusive/Exclusive or I/E                    3‡U1A*
//*               Inclusive: Display list by Inclusive criteria      *
//*               Exclusive: Display list by Enclusive criteria      *
//*   LRGEXT    - 1 to 99999999 followed by K (kilobytes) or     ‡A0C*
//*               M (megabytes). If K or M aren't specified     2‡A0A*
//*               the value will be defaulted to K.                  *
//*   LGEXTRK   - 1 to 99999999 followed by K (kilobytes) or    3‡A0C*
//*               M (megabytes). If K or M aren't specified          *
//*               the value will be defaulted to K.                  *
//*   OTHERDEV  - 1 to 4 Hex Decimal digits                          *
//*   OWNERID   - Owner ID, 1 to 14 characters                   ‡D1A*
//*   PHYDATA   - Y / N                                              *
//*   PHYSTAT   - CONVERT/INITIAL/NONSMS/UNKNOWN                     *
//*   QSAVE     - Query Name to be saved                             *
//*   QUERY     - Query Name to be used                              *
//*   RDCACHE   - ACTIVE/INACTIVE/NONE/PENDING                       *
//*   SHRDASD   - YES / NO                                           *
//*   SOURCEGL  - 1 / 2 (2-New List)                                 *
//*   SOURCENL  - 1 / 2 (1-Physical, 2-SMS)                          *
//*   SPCDATA   - Y / N                                              *
//*   STORGRP   - Stotage Group name (SMS only)                      *
//*   SUBSYSID  - 0001 to FFFF (in HexaDecimal)                      *
//*   USEATTR   - PRIV/PUB/STOR                                      *
//*   VOL       - Volume serial                                      *
//*   VOLSTYPE  - 1 / 2 / 3 (1-On Line 2-Not On Line 3-Either)       *
//*                                                                  *
//********************************************************************
//GENLIST EXEC ACBJBAOB,
//        PLIB1=SYS1.DGTPLIB,
//        TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQBAI4 +
SAVE DASDLST +
SPCDATA(Y) PHYDATA(Y) +
VOL(*)                   ) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//
SAVE DASDLST +
SPCDATA(Y) PHYDATA(Y) +
VOL(*)                   ) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
//
VOL(*) INDEX(EQ DISABLED)) +

./ ADD NAME=ACBJBAI7
//ACBJBAI7 JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAI7) COMP(DF123): BATCH  - GENERATES DATA SET LIST  ‡Y1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2‡E1C*/
//* COPYRIGHT IBM CORP. 1993, 2017                               ‡G1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        ‡WA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*$L1=KN20035,HACS120,96/07/13,SNJTCS: CHANGED PARAMETERS       ‡L1A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//*09/03/97 TCS - HDZ11D0 : Generation of dataset list, user ‡WA28670*/
//*  is not able to direct the search to a specific VOLSER.  ‡WA28670*/
//*$T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter     ‡T2A*/
//*$U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for   2‡U1A*/
//*                                       DFSMS/MVS ISMF V2R10       */
//*$Y1=K1K0688,HDZ11K0,041222,SNJTCS: DS List via SG, GT64K Fix  ‡Y1A*/
//*$Y2=K1K0791,HDZ11K0,05/02/21,SNJTCS:DS List Space Ovrflw Fix  ‡Y2A*/
//*$A0=EAV   ,HDZ1A10,06/09/25,IBSTG : EAV Support               ‡A0A*/
//*$A1=MULTLCK,HDZ1A10,07/04/27,IBSAS: Support of MULTILOCK      ‡A1A*/
//*$B1=EAV2   ,HDZ1B10,08/06/10,IBSTG: EATTR keyword support     ‡B1A*/
//*$E1=PDSESPU,HDZ2210,12/09/04,IBSTG: PDSE Space Utilization    ‡E1A*/
//*                                    Support (LI3039)          ‡E1A*/
//*$E2=OA45038,HDZ2210,14/04/15,IBSTG: Update DSN Type           ‡E2A*/
//*$G1=FP0454 ,HDZ2230,15/10/26,IBSTG: DS Encryption             ‡G1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE ISMF DATA SET LIST IN BATCH, SAVE IT,     *
//* AND SAVE THE QUERY ALSO                                          *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                                  *
//*   PARAMETERS:                                                    *
//*                                                                  *
//*                                                    46A/C ‡WA28670*
//*     PARAMETER FOLLOWING SAVE - NAME OF THE SAVED LIST (OUTPUT)   *
//*     ALLOCSP - 0 to 99999999 followed by K (kilobytes) or     ‡A0C*
//*               M (megabytes). If K or M aren't specified     2‡A0A*
//*               the value will be defaulted to K.                  *
//*     ALLOCUT - Allocation Unit, BLK/TRK/ABS/CYL/MB/KB/BYT     ‡U1A*
//*     BLKSIZE - 0 to 99999 (in Bytes)                              *
//*     BLKUNUSED - 0 to 99999999 (in Kilo Bytes)                ‡Y2C*
//*     CATNAME - ICF CATALOG name                                   *
//*     CATVOL  - VOLUME used in catalog list                        *
//*     CHGIND  - YES/NO                                             *
//*     COMPFMT - YES/NO                                             *
//*     CREATEDT - YYYY/MM/DD  (1900/01/01 to 2155/12/31)            *
//*                YY/MM/DD ( (19)00/01/01 to (19)99/12/31 )         *
//*     CCSIDDSC - CCSID Description                            3‡U1A*
//*                0 to 65534 or A 1 to 17 character string          *
//*                that is not a number 0-65534                      *
//*     CFCSTNM  - CF Cache Structure name                       ‡U1A*
//*     CFCTNM   - CF Cache Set name                             ‡U1A*
//*     CFMOST   - CF Monitor status ON/OFF                      ‡U1A*
//*     CFSTIND  - CF status indicator CE/CQ/VRRQ/VRLS/VQ        ‡U1A*
//*     DATACLS - DATA CLASS name                                    *
//*     DDMATTR - DDM Attributes YES/NO                          ‡U1A*
//*     DEVTYPE - 3380/3390/9345 for DASD types                      *
//*             - 3480/3480X/3490/3590-1 for TAPE types              *
//*     DSENV   - Dataset Environment MANAGED/UNMANAGED          ‡U1A*
//*     DSNTYP  - DS name type EXTENDED/HFS/LIBRARY,1/LIBRARY,2/ ‡E1C*
//*               LIBRARY/LARGE/OTHERS                           ‡E2C*
//*     DSN     - DATA SET NAME                                      *
//*               ('**' requires catalog name)                       *
//*     DSORG   - DA/DAU/IS/ISU/PO/POU/PS/PSU/UN/VS                  *
//*     ENCRIND - YES/NO                                         ‡G1A*
//*     ENTRYTYP - AIX/ALIAS/CATALOG/DATA/INDEX/NONVSAM/PATH/        *
//*                DEFERRED/GDG/GDS/ROLLOFF                          *
//*     EXPIREDT - YYYY/MM/DD (1900/01/01 to 2155/12/31)         or  *
//*              - YY/MM/DD ( (19)00/01/01 TO (19)99/12/31 )     or  *
//*              - NEVER    or     1999/00/00                        *
//*     HSMDATA  - Y / N  (Catalog List)                             *
//*     LASTBKUP - YYYY/MM/DD  (1900/01/01 to 2155/12/31)            *
//*                YY/MM/DD ( (19)00/01/01 to (19)99/12/31 )         *
//*     LASTREF  - YYYY/MM/DD  (1900/01/01 to 2155/12/31)            *
//*                YY/MM/DD ( (19)00/01/01 to (19)99/12/31 )         *
//*     LISTTYP  - Inclusive/Exclusive or I/E                   3‡U1A*
//*                Inclusive: Display list by Inclusive criteria     *
//*                Exclusive: Display list by Enclusive criteria     *
//*     LRECL   - 0 to 99999 (in Bytes)                              *
//*     MGMTCLS - MANAGEMENT CLASS name                              *
//*     MULTVOL - YES/NO                                             *
//*     NOTUSED% - 0 to 100                                          *
//*     NUMEXT   - 0 to 999                                          *
//*     NUMSTRIPE - 1 to 16                                          *
//*     OPTIMAL - 0 to 99999 (in Bytes)                              *
//*     OWNER   - OWNER of the datasets                              *
//*     QSAVE   - QUERY Name to be saved                             *
//*     QUERY   - QUERY Name to be used                              *
//*     REBLOCK - YES/NO                                             *
//*     RECFMT  - A/B/D/F/M/FS/VS/T/U/V                              *
//*     SECALLOC - 0 to 99999999 followed by K (kilobytes) or    ‡A0C*
//*                M (megabytes). If K or M aren't specified    2‡A0A*
//*                the value will be defaulted to K.                 *
//*     SOURCEGL - 1 / 2 (2-new list)                                *
//*     SOURCENL - 1 / 2 (1-VTOC 2-catalog)                          *
//*     STORCLS - STORAGE CLASS name                                 *
//*     STORGRP - STORAGE GROUP name                             ‡Y1A*
//*     USEDSPC - 0 to 99999999 followed by K (kilobytes) or     ‡A0C*
//*               M (megabytes). If K or M aren't specified     2‡A0A*
//*               the value will be defaulted to K.                  *
//*     USERDATAREDUCT% - 0 to 99                                    *
//*     VTOCDATA - Y / N (Catalog List)                              *
//*     VTOCVSER - VTOC VOLUME SERIAL NUMBERS (VTOC list)            *
//*     CFLSTNM  - CF Lock Structure name                        ‡A1A*
//*     CFLTNM   - CF Lock Set name                              ‡A1A*
//*     EATTR    - EATTR                                         ‡B1A*
//*                                                                  *
//********************************************************************
//GENLIST EXEC ACBJBAOB,
//        PLIB1=SYS1.DGTPLIB,
//        TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAI2 +
SAVE DSNLIST QSAVE(QUERY1) +
VTOCDATA(Y) HSMDATA(Y) +
DSN('IBMUSER.**') ALLOCSP(LT 1) +
DSORG(NE PS) INCLUDENULLS(EQ NO)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************

./ ADD NAME=ACBJBAI8
//ACBJBAI8 JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAI8) COMP(DF123): BATCH  - GENERATES VOLUME LIST    ‡A0C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                    2‡A0C*/
//* COPYRIGHT 1996, 2011 IBM CORP.                               ‡D1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        ‡WA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*$L1=KN20035,HACS120,96/07/13,SNJTCS: CHANGED PARAMETERS       ‡L1A*/
//*10/14/96 CCY - HDZ11C0: Ship as SPE                       ‡WA22861*/
//*09/19/97 TCS - HDZ11D0: In VOL application, to remove the ‡WA29014*/
//*   error message ' SPECIFY ONLY 1 KEYWORD PER LINE '      ‡WA29014*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//*11/18/98  TCS - HDZ11E0: Fix for ISPFILE problem          ‡WA36007*/
//*$U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for   2‡U1A*/
//*                                       DFSMS/MVS ISMF V2R10       */
//*$A0=EAV   ,HDZ1A10,06/09/27,IBSTG : EAV Support               ‡A0A*/
//*$D1=SORT  ,HDZ1D10,10/03/26,IBSTG : SORT Volume List Support  ‡D1A*/
//*$C1=OA34489,HDZ1C10,10/10/06,IBSTG: Add comment, insufficient ‡C1A*/
//*                                    storage                   ‡C1A*/
//*$D2=OA38673,HDZ1D10,11/11/28,IBSTG: Support of SMA SPE        ‡D2A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE ISMF DASD VOLUME LIST IN BATCH, SAVE  ‡D1C*
//* THIS LIST, SORT IT AND GENERATE A DASD VOLUME REPORT FROM IT ‡D1C*
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                            12‡C1A*
//*      INCREASE THE REGION SIZE IN ACBJBAOB IF YOU DO NOT HAVE     *
//*      ENOUGH VIRTUAL STORAGE TO GENERATE DASD VOLUME LIST.        *
//*      FOR EXAMPLE, THE FOLLOWING ISMF REASON CODES INDICATE       *
//*      INSUFFICIENT STORAGE (SEE ISPF LOG):                        *
//*      REASON CODE (3037),                                         *
//*      REASON CODE (3258).                                         *
//*      THE REQUIRED REGION SIZE DEPENDS ON THE NUMBER OF VOLUMES   *
//*      ENTRIES AND CAN BE ESTIMATED ON THE BASIS OF 10K FOR EACH   *
//*      VOLUME ENTRY (THIS DATA IS APPROXIMATE AND CAN VARY ON      *
//*      DIFFERENT SYSTEMS. SET REGION=(0M) TO HAVE ALL STORAGE      *
//*      AVAILABLE).                                                 *
//*                                                                  *
//*   PARAMETERS:                                                    *
//*                                                   36A/C ‡WA29014 *
//*   PARAMETER FOLLOWING SAVE - NAME OF SAVED LIST (OUTPUT)         *
//*   ALLOCSP   - 0 to 99999999 followed by K (kilobytes) or     ‡A0C*
//*               M (megabytes). If K or M aren't specified     2‡A0A*
//*               the value will be defaulted to K.                  *
//*   ALSPTRK   - 0 to 99999999 followed by K (kilobytes) or    3‡A0A*
//*               M (megabytes). If K or M aren't specified          *
//*               the value will be defaulted to K.                  *
//*   CDSNAME   - Control Dataset Name                               *
//*   CFVOLST   - CF Volume Status ENABLED/QUIESCING/QUIESCED    ‡U1A*
//*   CFWSTAT   - ACTIVE/INACTIVE/NONE/PENDING/PINNED                *
//*   DEVTYPE   - 3380/3390/9345                                     *
//*             - Installation defined esoteric names(like SYSDA ..) *
//*   DFWSTAT   - ACTIVE/INACTIVE/NONE/PENDING/PINNED                *
//*   DUPLXSTAT - NONE / PPRI-FAI / PPRI-PEN / PPRI-SUS / PPRIMARY/  *
//*               PRI-PEN / PRI-SUS / PRIMARY / PSEC-FAI / PSEC-PEN/ *
//*               PSEC-SUS /PSECNDRY/ SEC-PEN  / SEC-SUS / SECONDRY/ *
//*               SIMPLEX / SPAR-BRK / SPAR-PEN / SPARE              *
//*   FRAG      - 1 to 999                                           *
//*   FREEDSCB  - 0 to 99999                                         *
//*   FREESPC   - 0 to 99999999 followed by K (kilobytes) or     ‡A0C*
//*               M (megabytes). If K or M aren't specified     2‡A0A*
//*               the value will be defaulted to K.                  *
//*   FRSPTRK   - 0 to 99999999 followed by K (kilobytes) or    3‡A0A*
//*               M (megabytes). If K or M aren't specified          *
//*               the value will be defaulted to K.                  *
//*   FREESPC%  - 0 to 100 (with no % sign)                          *
//*   FREEVIR   - 0 to 99999                                         *
//*   FREEXT    - 0 to 9999999                                   ‡A0C*
//*   FROMDEV   - 1 to 4 HexaDecimal digits                          *
//*   INDEX     - DISABLED/ENABLED/NONE                              *
//*   INIASRES  - Initialized as Reserved (YES / NO)             ‡D2A*
//*   LASTDEV   - 1 to 4 HexaDecimal digits (should be >= FROMDEV)   *
//*   LISTTYP   - Inclusive/Exclusive or I/E                    3‡U1A*
//*               Inclusive: Display list by Inclusive criteria      *
//*               Exclusive: Display list by Enclusive criteria      *
//*   LRGEXT    - 1 to 99999999 followed by K (kilobytes) or     ‡A0C*
//*               M (megabytes). If K or M aren't specified     2‡A0A*
//*               the value will be defaulted to K.                  *
//*   LGEXTRK   - 1 to 99999999 followed by K (kilobytes) or    3‡A0C*
//*               M (megabytes). If K or M aren't specified          *
//*               the value will be defaulted to K.                  *
//*   OTHERDEV  - 1 to 4 Hex Decimal digits                          *
//*   OWNERID   - Owner ID, 1 to 14 characters                   ‡D2A*
//*   PHYDATA   - Y / N                                              *
//*   PHYSTAT   - CONVERT/INITIAL/NONSMS/UNKNOWN                     *
//*   QSAVE     - Query Name to be saved                             *
//*   QUERY     - Query Name to be used                              *
//*   RDCACHE   - ACTIVE/INACTIVE/NONE/PENDING                       *
//*   SHRDASD   - YES / NO                                           *
//*   SOURCEGL  - 1 / 2 (2-New List)                                 *
//*   SOURCENL  - 1 / 2 (1-Physical, 2-SMS)                          *
//*   SPCDATA   - Y / N                                              *
//*   STORGRP   - Stotage Group name (SMS only)                      *
//*   SUBSYSID  - 0001 to FFFF (in HexaDecimal)                      *
//*   USEATTR   - PRIV/PUB/STOR                                      *
//*   VOL       - Volume serial                                      *
//*   VOLSTYPE  - 1 / 2 / 3 (1-On Line 2-Not On Line 3-Either)       *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//*  STEP TO GENERATE DASD VOLUME LIST                               *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=&SYSUID..DASDVOL.REPORT.SMS,
// DISP=(MOD,DELETE,DELETE),
//    BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//GENLIST EXEC ACBJBAOB,
//        PLIB1=SYS1.DGTPLIB,
//        TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQBAI4 +
SAVE DASDLST +
SPCDATA(Y) PHYDATA(Y) +
CDSNAME('ACTIVE') +
VOL(BDPM*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//* STEP TO ALLOCATE ISPFILE, WHERE THE GENERATED REPORT IS SAVED    *
//* NOTE: THE DATA SET BEING ALLOCATED SHOULD NOT BE A TEMPORARY     *
//*       DATA SET.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=&SYSUID..DASDVOL.REPORT.SMS,
// DISP=(NEW,CATLG),
//    BLKSIZE=13300,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD SYSOUT=*
//SYSIN  DD *
/*
//********************************************************************
//*                                                                  *
//*  STEP TO SORT A PREVIOUSLY SAVED DASD VOLUME LIST AND        ‡D1C*
//*  GENERATE A DASD VOLUME REPORT FROM IT.                      ‡D1C*
//*                                                                  *
//*      PARAMETERS FOR ACBQVAR1: NAME OF SAVED LIST (INPUT);    ‡D1C*
//*                               SORT(column name) (INPUT) -   3‡D1A*
//*                               to sort list by the data column in *
//*                               ascending order.                   *
//*      ISPFILE - GENERATED REPORT (OUTPUT, FROM ALCISPFL STEP)     *
//*      SYSIN - KEY WORDS FOR COLUMNS TO BE INCLUDED IN THE REPORT  *
//*                                                                  *
//*    The following parameters can be specified in SYSIN.    25‡U1A *
//*                                                                  *
//*    VOLSER                 ->    Volume Serial                    *
//*    FREESPC   ! FREESP     ->    Free Space                       *
//*    FRSPCTRK  ! FRSPTRK    ->    Free Space in TRK-Managed    ‡A0A*
//*    %FREE                  ->    % Free                           *
//*    ALLOCSPC  ! ALLOCSP    ->    Allocated Space                  *
//*    ALSPCTRK  ! ALSPTRK    ->    Alloc Space in TRK-Managed   ‡A0A*
//*    FRAG      ! FRAGINDX   ->    Fragmentation Index              *
//*    LRGEXT    ! EXTLRG     ->    Largest Extent                   *
//*    LGEXTRK   ! EXTLGTRK   ->    Largest Ext in TRK-Managed   ‡A0A*
//*    FREEXT    ! EXTFREE    ->    Free Extents                     *
//*    INDXSTAT  ! STATINDX   ->    Index Status                     *
//*    FREEDSCB  ! DSCBFREE   ->    Free DSCBS                       *
//*    FREEVIRS  ! VIRSFREE   ->    Free Vtoc Index Records          *
//*    DEVICE    ! DEVICETYPE ->    Device Type                      *
//*    DEVNUM    ! ADDRESS    ->    Device Number                    *
//*    SHARE     ! SHRDASD    ->    Shared DASD                      *
//*    USE       ! USEATTR    ->    Use Attributes                   *
//*    RDCACHE   ! RDSTAT     ->    RD Cache Status                  *
//*    DASDFW                 ->    DASD FW Status                   *
//*    CACHEFW                ->    Cache FW Status                  *
//*    DUPLEX    ! DUPLEXST   ->    Duplex Status                    *
//*    OTHER     ! OTHERDEV   ->    Other Device                     *
//*    SUBSYS    ! SUBSYSID   ->    Subsys ID                        *
//*    PHYSTAT   ! STATPHYS   ->    Physical Status                  *
//*    STORGRP   ! SG         ->    Storage Group Name               *
//*    CFVOLST                ->    CF Volume Status                 *
//*    OWNERID                ->    Owner ID                     ‡D2A*
//*    INIASRES               ->    Initialized as Reserved      ‡D2A*
//********************************************************************
//GENREP  EXEC ACBJBAOB,
//        PLIB1=SYS1.DGTPLIB,
//        TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE DD  DSN=&SYSUID..DASDVOL.REPORT.SMS,DISP=OLD
//SYSTSIN  DD *
PROFILE PREFIX(STE58)
ISPSTART CMD(ACBQVAR1 DASDLST SORT(VOLSER)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN DD  *
VOLSER
ALLOCSP
%FREE
INDXSTAT
FRAG
USEATTR
SG
TITLE=STATUS OF VOLUMES STARTING WITH PREFIX *
DEVICETYPE
/*
//********************************************************************
//*                                                                  *
//*   COPY DASD VOLUME REPORT                                        *
//*                                                                  *
//*    SYSUT1 - INPUT (FROM PREVIOUS STEP)                           *
//*    SYSUT2 - OUTPUT                                               *
//*                                                                  *
//********************************************************************
//REPGEN   EXEC PGM=IEBGENER
//SYSUT1   DD  DSN=&SYSUID..DASDVOL.REPORT.SMS,DISP=SHR
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//********************************************************************
//
ISPSTART CMD(ACBQBAI4 +
SAVE DASDLST +
SPCDATA(Y) PHYDATA(Y) +
CDSNAME('ACTIVE') +
VOL(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
//
ISPSTART CMD(ACBQVAR1 DASDLST SORT(column name)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)

./ ADD NAME=ACBJBAI9
//ACBJBAI9 JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAI9) COMP(5695DF123): BATCH  - GENERATES VOLUME LIST    */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                     ‡C1C*/
//* COPYRIGHT 1996,2011  IBM CORP.                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//*$C1=OA34489,HDZ1C10,10/10/06,IBSTG: Add comment, insufficient ‡C1A*/
//*                                    storage                   ‡C1A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE ISMF DASD VOLUME LIST IN BATCH FROM A     *
//* PREVIOUSLY SAVED QUERY, AND SAVE THE GENERATED LIST              *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                            12‡C1A*
//*      INCREASE THE REGION SIZE IN ACBJBAOB IF YOU DO NOT HAVE     *
//*      ENOUGH VIRTUAL STORAGE TO GENERATE DASD VOLUME LIST.        *
//*      FOR EXAMPLE, THE FOLLOWING ISMF REASON CODES INDICATE       *
//*      INSUFFICIENT STORAGE (SEE ISPF LOG):                        *
//*      REASON CODE (3037),                                         *
//*      REASON CODE (3258).                                         *
//*      THE REQUIRED REGION SIZE DEPENDS ON THE NUMBER OF VOLUMES   *
//*      ENTRIES AND CAN BE ESTIMATED ON THE BASIS OF 10K FOR EACH   *
//*      VOLUME ENTRY (THIS DATA IS APPROXIMATE AND CAN VARY ON      *
//*      DIFFERENT SYSTEMS. SET REGION=(0M) TO HAVE ALL STORAGE      *
//*      AVAILABLE).                                                 *
//*                                                                  *
//*   PARAMETERS:                                                    *
//*                                                                  *
//*      PARAMETR FOLLOWING SAVE - NAME OF SAVED LIST (OUTPUT)       *
//*      QUERY - NAME WITH WHICH THE QUERY WAS SAVED (INPUT)         *
//*                                                                  *
//********************************************************************
//DASDLST  EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB,
// TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(STE58) MSGID
ISPSTART CMD(ACBQBAI4 +
SAVE DASDLST QUERY(QUERY1)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************

./ ADD NAME=ACBJBAJA
//IBMUSERA JOB (),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJA) COMP(5695DF123): BATCH - DUMMY SG DEFINE/ALTER     */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 1998,2002  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $T1=NQ5,HDZ11E0,061997,SNJTCS:   NaviQuest Batch Support     ‡T1A*/
//* $T2=K151321,HDZ11E0,091998,SNJTCS: Possible values          2‡T2A*/
//*                                    documentation                 */
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  ‡WA41441*/
//* 05/23/01 TCS - HDZ11F0: Prolog Updation                  ‡WA49380*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER DUMMY STORAGE GROUPS IN BATCH         *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//*   PARAMETER FOLLOWING ACBQBAJA - DEFINE OR ALTER                 *
//************************** ADD BEG *********************************
//*                                                        3‡WA49380 *
//* Required Fields:                                                 *
//*                                                                  *
//*  SCDS     :  Name of SCDS, length 1-44 characters                *
//*                                                                  *
//*  STORGRP  :  Name of the storage group                           *
//*                                                                  *
//* Optional Fields:                                       2‡WA49380 *
//*                                                                  *
//*  DESCR    :  Remarks about the Storage group being defined /     *
//*              altered. Maximum length up to 120 characters.       *
//*                                                                  *
//*  UPDHLVLSCDS:  When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                           ‡WA41441*
//*                                                                  *
//*                Possible values : Y/N/BLANK               ‡WA41441*
//************************** ADD END *********************************
//********************************************************************
//********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAJA +
DEFINE/ALTER +
SCDS(TEST.CDS) +
STORGRP() +
DESCR() +
UPDHLVLSCDS() +
)
/*
//

./ ADD NAME=ACBJBAJB
//IBMUSERA JOB (),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJB) COMP(DF123): BATCH - OBJECT SG DEFINE/ALTER/   ‡E1C*/
//*                            DISPLAY                           ‡E1C*/
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2‡E1C*/
//* COPYRIGHT IBM CORP. 1998, 2017                               ‡G1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $T1=NQ5,HDZ11E0,061997,SNJTCS:   NaviQuest Batch Support     ‡T1A*/
//* $T2=K151321,HDZ11E0,091998,SNJTCS: Possible values          2‡T2A*/
//*                                    documentation                 */
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  ‡WA41441*/
//* 05/23/01 TCS - HDZ11F0: Prolog Updation                  ‡WA49380*/
//* 04/25/02 TCS - HDZ11G0: Add a new parameter SGSTSALL()   ‡WA53756*/
//* 08/30/05 CCY - HDZ11K0: Correct value for CYCLEST        ‡AA13015*/
//* $B1=OAME   ,HDZ1B10,08/06/06,IBSTG: OAM Enhancements         ‡B1A*/
//* $E1=SGDISPL,HDZ2210,12/04/02,IBSTG: OBJECT & TAPE SG DISPLAY ‡E1A*/
//* $F1=OA48375,HDZ2220,15/07/17,IBSTG: Update for OSMC system   ‡F1A*/
//* $G1=OAMDB2ID,HDZ2230,16/02/01,IBSTG: Multiple OAM Address    ‡G1A*/
//*                                      Spaces support          ‡G1A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER/DISPLAY OBJECT TYPE STORAGE       ‡E1C*
//* GROUPS IN BATCH                                              ‡E1A*
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//*   PARAMETER FOLLOWING ACBQBAJB - DEFINE OR ALTER                 *
//************************** ADD BEG *********************************
//*                                                        3‡WA49380 *
//* Required Fields:                                                 *
//*                                                                  *
//*  SCDS     :  Name of SCDS, length 1-44 characters                *
//*                                                                  *
//*  STORGRP  :  Name of the storage group being defined/altered.    *
//*                                                                  *
//*  QUALFR   :  Designates both  the DB2 database  and High         *
//*              level qualifier (HLQ) for the DB2 tables in         *
//*              in the database for that SG.                        *
//*                                                                  *
//*              Possible values ; 1 - 8 characters.                 *
//*                                                                  *
//*  CYCLEST  :  Beginning of a window of  time in which the         *
//*              OAM can begin storage management processing         *
//*              for this SG.                                        *
//*                                                          ‡AA13015*
//*              Possible values ; 0 - 23 (HR of DAY), NONE          *
//*                                                                  *
//*  CYCLEET  :  End of a window of  time in which  the  OAM         *
//*              can begin storage management processing for         *
//*              this SG.                                            *
//*                                                                  *
//*              Possible values ; 0 - 23 (HR of DAY), Blank         *
//*                                                                  *
//*  SGSTATUS : This field sets the status of this object storage    *
//*             group, on each system in the SMS complex.            *
//*                                                                  *
//*             Possible values ;                                    *
//*                                                                  *
//*             NOTCON -> The system can not process this object     *
//*                       storage  group. NOTCON is default.         *
//*                                                                  *
//*             ENABLE -> The system can access the object  storage  *
//*                       hierarchy for object storage  groups.      *
//*                                                                  *
//*                                                                  *
//*             DISNEW -> The system can use the OSREQ functions     *
//*                       RETRIEVE and DELETE but not STORE.         *
//*                                                                  *
//*             DISALL -> The system can use the OSREQ functions     *
//*                       RETRIEVE, DELETE or STORE.                 *
//*             Up to 32 statuses can be specified separated by      *
//*             commas to match the 32 systems.  If a status is      *
//*             skipped, the system status that falls in between two *
//*             commas will have default value of ENABLE.            *
//*                                                       14A‡WA53756*
//*  SGSTSALL :  This field is similar to SGSTATUS in functionality. *
//*              The difference is that this field accepts a single  *
//*              status value and sets the status of the OBJECT      *
//*              storage group on all the systems to this value.     *
//*                                                                  *
//*              Possible Values :                                   *
//*                 ENABLE/DISALL/DISNEW                             *
//*                                                                  *
//*           Note:  SGSTSALL and SGSTATUS are mutually exclusive.   *
//*                  And so, while specifying value for one of these *
//*                  parameters, either the other parameter should   *
//*                  not be specified or if specified, it should not *
//*                  have any value specified.                       *
//*                                                                  *
//*  OAMDELPRO: This parameter, in concert with the DP=keyword 28‡B1A*
//*             in the IEFSSNxx Parmlib member, determines the       *
//*             current deletion-protection mode (enabled or         *
//*             disabled) for all objects in this object storage     *
//*             group. When enabled, objects in this object storage  *
//*             group cannot be deleted prior to their expiration    *
//*             date. Deletion-protection does not restrict any      *
//*             changes to an object's expiration date.              *
//*                                                                  *
//*             Possible Values :                                    *
//*                                                                  *
//*             Y  -> Enable.                                        *
//*             N  -> Disable.                                       *
//*             BLANK -> Same as 'N' option.                         *
//*                                                                  *
//*  OAMRETPRO: New objects stored into an object storage group      *
//*             with this parameter enabled are flagged as           *
//*             retention-protected for the entire life of the       *
//*             objects. A retention-protected object cannot be      *
//*             deleted prior to its expiration date, and its        *
//*             expiration date can never move to an earlier date.   *
//*                                                                  *
//*             Possible Values :                                    *
//*                                                                  *
//*             Y  -> Enable.                                        *
//*             N  -> Disable.                                       *
//*             BLANK -> Same as 'N' option.                         *
//*                                                                  *
//* Optional Fields:                                       2‡WA49380 *
//*                                                                  *
//*  DESCR    :  Remarks about the Storage group being defined /     *
//*              altered. Maximum length up to 120 characters.       *
//*                                                            7‡E1A *
//*  OSMCPS   :  Identifies the system where OSMC Processing is      *
//*              to be done for this object storage group.           *
//*                                                                  *
//*              Possible values :                                   *
//*              must be 1 to 8 alphanumeric or national        2‡F1C*
//*              ($, ‡ or £) characters.                             *
//*                                                                  *
//*  LIBNAME  :  Library name that represents  a defined optical     *
//*              drive configuration or Pseudo library name that     *
//*              represents stand-alone optical drives and shelf     *
//*              resident optical volumes.                           *
//*                                                                  *
//*              Possible values ;                                   *
//*                                                                  *
//*              You  can  specify  up  to  8  libraries of 1-8      *
//*              alphanumeric chars each.                            *
//*                                                                  *
//*  VOLFTHRS :  No of  free  sectors required  for an optical       *
//*              volume (VOLUME FULL THRESHOLD) within this SG.      *
//*                                                                  *
//*              Possible values ; 0 - 9999                          *
//*                                                                  *
//*  DRVSTHRS :  Max no of outstanding  object write  requests       *
//*              for an optical drive (DRIVE START THRESHOLD).       *
//*                                                                  *
//*              Possible values ; 0 - 9999                          *
//*                                                                  *
//*  VOLFWERR :  This field VOLUME-FULL-AT-WRITE ERROR indicates     *
//*              whether a " mark  volume  full  on  first write     *
//*              failure" criteria applies to volumes in this SG.    *
//*              or not.                                             *
//*                                                                  *
//*              Possible values ;                                   *
//*                                                                  *
//*              Y ->  OAM marks an optical volume full the first    *
//*                    time an attempt to write an  object on the    *
//*                    optical volume fails, because of insufficent  *
//*                    space.                                        *
//*              N ->  OAM marks an object volume full  only when    *
//*                    the no.of  available  sectors in  the user    *
//*                    data  area  falls  below  the  VOLUME FULL    *
//*                    THRESHOLD.                                    *
//*                                                                  *
//*  OAMDB2ID :  This field (applicable in a multiple OAM      35‡G1A*
//*              configuration only; otherwise ignored) specifies    *
//*              the SSID(s) and/or Group Attachment Name(s) of      *
//*              the DB2 subsystem(s) associated with the OAM Object *
//*              instance(s) in a multiple OAM configuration that    *
//*              can use this storage group name.                    *
//*                                                                  *
//*              Possible values: 1 - 4 alphanumeric or national     *
//*              characters;                                         *
//*              - wild card characters (%) can be included in any   *
//*              position in the specification to allow multiple OAM *
//*              instances to use the storage group name and         *
//*              definition;                                         *
//*              - blank.                                            *
//*              Default: %%%% (all OAM instances on a system can    *
//*              use the storage group name and definition).         *
//*                                                                  *
//*              Notes:                                              *
//*              - Blank is treated the same as the default (%%%%).  *
//*              - Values with trailing blanks will not match an     *
//*              SSID/Group Attachment Name longer than the number   *
//*              of characters specified in OAMDBID. For example,    *
//*              a value of DB% will only match DB or DB followed by *
//*              a single character and a value of %% will only      *
//*              match an SSID or Group Attachment Name that is one  *
//*              or two characters long.                             *
//*              - Where multiple OAM instances match the specified  *
//*              ID, all matching instances can use the same storage *
//*              group name and values specified in the storage      *
//*              group definition. Each OAM instance is associated   *
//*              a different DB2 subsystem, however, so each         *
//*              instance will have a different set of DB2 tables    *
//*              and therefore data is not shared between OAM        *
//*              instances.                                          *
//*                                                                  *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                           ‡WA41441*
//*                                                                  *
//*                Possible values : Y/N/BLANK               ‡WA41441*
//************************** ADD END *********************************
//********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAJB +
DEFINE/ALTER +
SCDS(TEST.CDS) +
STORGRP() +
DESCR() +
QUALFR() +
OSMCPS() +
CYCLEST() +
CYCLEET() +
LIBNAME() +
VOLFTHRS() +
DRVSTHRS() +
VOLFWERR() +
OAMDELPRO() +
OAMRETPRO() +
OAMDB2ID() +
SGSTATUS() +
SGSTSALL() +
UPDHLVLSCDS() +
)
/*
//STEP2   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAJB +
DISPLAY +
SCDS(TEST.CDS) +
STORGRP() +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
//

./ ADD NAME=ACBJBAJC
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJC) COMP(5694DF123): BATCH - Management Class Delete   */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 2001,2006  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $U0=NQDEL  ,HDZ11F0,00/11/28,SNJTCS: INITIAL VERSION     ‡WA48117*/
//* $Y1=OA13015,HDZ11K0,05/08/30,SNJCCY: add table2              ‡Y1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* Sample JCL to Delete Management Class                            *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*       CHANGE JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to Delete,            *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* STEP TO DELETE A MANAGEMENT CLASS                                *
//*                                                                  *
//*   PARAMETERS FOLLOWING DELETE :-                                 *
//*                                                                  *
//*   SCDS     - SCDS dataset name       (Valid SCDS dataset name)   *
//*   MGMTCLAS - Management Class name   (Wild cards not allowed)    *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                                   *
//*                Possible values : Y/N/BLANK                       *
//*                                                                  *
//********************************************************************
//GENLIST  EXEC  ACBJBAOB,
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAID DELETE +
SCDS(TEMP.SCDS) +
MGMTCLAS() +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAJD
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJD) COMP(5694DF123): BATCH - Data Class Delete         */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 2001,2006  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $U0=NQDEL  ,HDZ11F0,00/11/28,SNJTCS: INITIAL VERSION     ‡WA48117*/
//* $Y1=OA13015,HDZ11K0,05/08/31,SNJCCY: add table2              ‡Y1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* Sample JCL to Delete a Data Class construct                      *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*       CHANGE JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to Delete             *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* STEP TO DELETE A DATA CLASS                                      *
//*                                                                  *
//*   PARAMETERS FOLLOWING DELETE :-                                 *
//*                                                                  *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*   DATACLAS- Data Class name         (Wild cards not allowed)     *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                                   *
//*                Possible values : Y/N/BLANK                       *
//*                                                                  *
//********************************************************************
//GENLIST  EXEC  ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAIC DELETE +
SCDS(TEMP.SCDS) +
DATACLAS() +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAJE
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJE) COMP(5694DF123): BATCH - Storage Class Delete      */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 2001,2006  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $U0=NQDEL  ,HDZ11F0,00/11/28,SNJTCS: INITIAL VERSION     ‡WA48117*/
//* $Y1=OA13015,HDZ11K0,05/08/31,SNJCCY: add table2              ‡Y1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* Sample JCL to Delete Storage Class                               *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*       CHANGE JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to Delete.            *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* STEP TO DELETE A STORAGE CLASS                                   *
//*                                                                  *
//*   PARAMETERS FOLLOWING DELETE :-                                 *
//*                                                                  *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*   STORCLAS - Storage Class name      (Wild cards not allowed)    *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                                   *
//*                Possible values : Y/N/BLANK                       *
//*                                                                  *
//********************************************************************
//GENLIST  EXEC  ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAIF DELETE +
SCDS(TEMP.SCDS) +
STORCLAS() +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAJF
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJF) COMP(5694DF123): BATCH - Storage Group Delete      */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 2001,2006  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $U0=NQDEL  ,HDZ11F0,00/11/27,SNJTCS: INITIAL VERSION     ‡WA48117*/
//* $Y1=OA13015,HDZ11K0,05/08/31,SNJCCY: add table2              ‡Y1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* Sample JCL to Delete Storage Group                               *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*       CHANGE JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to Delete,            *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* STEP TO DELETE A STORAGE GROUP                                   *
//*                                                                  *
//*   PARAMETERS FOLLOWING DELETE :-                                 *
//*                                                                  *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*   STORGRP - Storage Group name      (Wild cards not allowed)     *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                                   *
//*                Possible values : Y/N/BLANK                       *
//*                                                                  *
//********************************************************************
//GENLIST  EXEC  ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAIG DELETE +
SCDS(TEMP.SCDS) +
STORGRP() +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAJG
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJG) COMP(5694DF123): BATCH - Aggregate Group Delete    */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 2001,2006  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $U0=NQDEL  ,HDZ11F0,00/11/28,SNJTCS: INITIAL VERSION     ‡WA48117*/
//* $Y1=OA13015,HDZ11K0,05/08/31,SNJCCY: add table2              ‡Y1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* Sample JCL to Delete Aggregate Group                             *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*       CHANGE JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to Delete,            *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* STEP TO DELETE A AGGREGATE GROUP                                 *
//*                                                                  *
//*   PARAMETERS FOLLOWING DELETE :-                                 *
//*                                                                  *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*   AGGRGRP - Aggregate Group name    (Wild cards not allowed)     *
//*                                                                  *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                                   *
//*                Possible values : Y/N/BLANK                       *
//********************************************************************
//GENLIST  EXEC  ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAIB DELETE +
SCDS(TEMP.SCDS) +
AGGRGRP() +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAJH
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJH) COMP(5695DF123): BATCH - COPY POOL BACKUP          */
//*                                STORAGE GROUP DEFINE/ALTER        */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 2002 IBM CORP.                                     */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $W0=COPY POOL,HDZ11H0,01/08/02,TCS: INITIAL VERSION              */
//* $W1=K1H0593,HDZ11H0,09/02/02,SNJTCS: SMS SG STATUS INCLUSION ‡W1A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER COPY POOL BACKUP SG IN BATCH          *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//************************** ADD BEG *********************************
//*                                                                  *
//* Required Fields:                                                 *
//*                                                                  *
//*  SCDS     :  Name of SCDS, length 1-44 characters                *
//*                                                                  *
//*  STORGRP  :  Name of the storage group                           *
//*                                                                  *
//* Optional Fields:                                                 *
//*                                                                  *
//*  DESCR    :  Remarks about the Storage group being defined /     *
//*              altered.  Maximum length up to 120 characters.      *
//*                                                            30‡W1A*
//*  SGSTATUS : specify this field to designate the relationship or  *
//*             status between storage groups and the systems in a   *
//*             a complex. Possible values are,                      *
//*                                                                  *
//*              ENABLE  ->  System or System  Group  can allocate   *
//*                          and access datasets in SG. Default.     *
//*              NOTCON  ->  System or System Group is  physically   *
//*                          disconnected  form the SG and can not   *
//*                          allocate datasets in it.                *
//*                                                                  *
//*              Up to 32 statuses can be specified separated by     *
//*              commas to match the 32 systems.  If a status is     *
//*              skipped, the system status that falls in between two*
//*              commas will have default value of ENABLE.           *
//*                                                                  *
//*  SGSTSALL :  This field is similar to SGSTATUS in functionality. *
//*              The difference is that this field accepts a single  *
//*              status value and sets the status of the COPY POOL   *
//*              BACKUP storage group on all the systems and system  *
//*              groups to this value.                               *
//*                                                                  *
//*              Possible Values :                                   *
//*                 ENABLE/NOTCON                                    *
//*                                                                  *
//*           Note:  SGSTSALL and SGSTATUS are mutually exclusive.   *
//*                  And so, while specifying value for one of these *
//*                  parameters, either the other parameter should   *
//*                  not be specified or if specified, it should not *
//*                  have any value specified.                       *
//*                                                                  *
//*  UPDHLVLSCDS : When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                                   *
//*                                                                  *
//*                Possible values : Y/N/BLANK                       *
//************************** ADD END *********************************
//********************************************************************
//*
//STEP1   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAJH +
DEFINE/ALTER +
SCDS(TEST.CDS) +
STORGRP(CPBKSTGP) +
DESCR(THIS IS TO DEFINE COPY POOL BACKUP STORAGE GROUP CPBKSTGP) +
SGSTATUS() +
SGSTSALL() +
UPDHLVLSCDS() +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
/*
//TEMPFILE  DD  DSN=&&TEMPFILE,DISP=(NEW,PASS),
//  SPACE=(TRK,(1,1)),LRECL=300,RECFM=F,BLKSIZE=300
//*
//STEP2   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD DSN=&&TEMPFILE,DISP=(OLD,DELETE,DELETE)
//

./ ADD NAME=ACBJBAJI
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJI) COMP(5695DF123): BATCH - COPY POOL LIST            */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 2002  IBM CORP.                                    */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $W0=COPY POOL,HDZ11H0,01/08/02,SNJTCS: INITIAL VERSION           */
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate ISMF Copy Pool list and save it.          *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate ISMF Copy Pool list and save it                 *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   CPNAMES   - Saved list name        (Output)                    *
//*   SCDS      - SCDS dataset name      (Valid SCSD dataset name)   *
//*                                      (      or 'ACTIVE'      )   *
//*   COPY POOL - Copy Pool name         (wild cards allowed)        *
//*                                                                  *
//********************************************************************
//GENSGLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAIJ SAVE CPNAMES +
SCDS(SCDS) COPYPOOL(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAJJ
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJJ) COMP(DF123): BATCH - COPYPOOL REPORT           ‡Z1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2‡E1C*/
//* COPYRIGHT IBM CORP. 2002, 2013                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $W0=COPYPOOL,HDZ11H0,01/08/02,SNJTCS: INITIAL VERSION            */
//* $Z1=HSMFR2  ,HDZ1180,050420,TCS: HSMFR STAGE2 CHANGES        ‡Z1A*/
//* $B1=HSMFLSH ,HDZ1B10,08/05/26,IBSTG: HSM Fast Replication    ‡B1A*/
//*                                      Enhancement support     ‡B1A*/
//* $B2=K1B0876 ,HDZ1B10,09/01/12,IBSTG: Change back Metro       ‡B2A*/
//*                                      Mirror to PPRC (DCR)    ‡B2A*/
//* $C1=HSMFRVRC,HDZ1C10,09/06/03,IBSTG: HSM Fast Reverse        ‡C1A*/
//*                                      Restore support.        ‡C1A*/
//* $E1=HSMFCCG ,HDZ2210,12/05/02,IBSTG: HSM Fast Replication    ‡E1A*/
//*                                      Enhancements (LI3117)   ‡E1A*/
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate CopyPool report from a previously saved   *
//* ISMF copypool list.                                              *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELREPDS EXEC  PGM=IDCAMS
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
 DELETE IBMUSER.CPNAMES.REPORT
/*
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: the data set being allocated should not be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=IBMUSER.CPNAMES.REPORT,DISP=(NEW,CATLG),
//         BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
/*
//********************************************************************
//*                                                                  *
//* Report generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBARJ :-                              *
//*                                                                  *
//*       CPNAMES - ISMF saved list name (input)                     *
//*                                                                  *
//*     ISPFILE - CopyPool report DSN                                *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*     The following keywords can be used in SYSIN DS.              *
//*                                                                  *
//*  ----------------------------------------------------------      *
//*     LEN       KEYWORD         DESC                               *
//*  ----------------------------------------------------------      *
//*                                                                  *
//*     31        CPNAME       -  CopyPool Name.                     *
//*     10        NOBKPVERS    -  £ of Backup versions.              *
//*      8        AUTODUMP     -  Auto Dump.                   2‡Z1A *
//*      9        DMPSYSNM     -  Dump Sys or Sys Grp.               *
//*      9        LSTMODID     -  Last modified USERID.              *
//*     11        LSTMODDATE   -  Last DATE modified.                *
//*     11        LSTMODTIME   -  Last TIME modified.                *
//*     10        DUMPCLAS1    -  Dump Class.                  5‡Z1A *
//*     10        DUMPCLAS2    -  Dump Class.                        *
//*     10        DUMPCLAS3    -  Dump Class.                        *
//*     10        DUMPCLAS4    -  Dump Class.                        *
//*     10        DUMPCLAS5    -  Dump Class.            2‡B2C 3‡B1A *
//*     10        FCTOPPRCB    -  FRBACKUP to PPRC Primary Volumes   *
//*     10        FCTOPPRCR    -  FRRECOV to PPRC Primary Volumes    *
//*     10        CATINFO      -  Capture Catalog Information.       *
//*     11        ALLOWFCFRR   -  Allow Fast Reverse Restore.   ‡C1A *
//*     10        FCCONSGRP    -  FlashCopy Consistency Group.  ‡E1A *
//*     10        POOLSGNM1    -  Storage Group Name.          5‡Z1C *
//*     10        POOLSGNM2    -  Storage Group Name.                *
//*     10        POOLSGNM3    -  Storage Group Name.                *
//*     10        POOLSGNM4    -  Storage Group Name.                *
//*     10        POOLSGNM5    -  Storage Group Name.                *
//*     10        POOLSGNM6    -  Storage Group Name.         25‡Z1A *
//*     10        POOLSGNM7    -  Storage Group Name.                *
//*     10        POOLSGNM8    -  Storage Group Name.                *
//*     10        POOLSGNM9    -  Storage Group Name.                *
//*     11        POOLSGNM10   -  Storage Group Name.                *
//*     11        POOLSGNM11   -  Storage Group Name.                *
//*     11        POOLSGNM12   -  Storage Group Name.                *
//*     11        POOLSGNM13   -  Storage Group Name.                *
//*     11        POOLSGNM14   -  Storage Group Name.                *
//*     11        POOLSGNM15   -  Storage Group Name.                *
//*     11        POOLSGNM16   -  Storage Group Name.                *
//*     11        POOLSGNM17   -  Storage Group Name.                *
//*     11        POOLSGNM18   -  Storage Group Name.                *
//*     11        POOLSGNM19   -  Storage Group Name.                *
//*     11        POOLSGNM20   -  Storage Group Name.                *
//*     11        POOLSGNM21   -  Storage Group Name.                *
//*     11        POOLSGNM22   -  Storage Group Name.                *
//*     11        POOLSGNM23   -  Storage Group Name.                *
//*     11        POOLSGNM24   -  Storage Group Name.                *
//*     11        POOLSGNM25   -  Storage Group Name.                *
//*     11        POOLSGNM26   -  Storage Group Name.                *
//*     11        POOLSGNM27   -  Storage Group Name.                *
//*     11        POOLSGNM28   -  Storage Group Name.                *
//*     11        POOLSGNM29   -  Storage Group Name.                *
//*     11        POOLSGNM30   -  Storage Group Name.                *
//********************************************************************
//GENSGREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//ISPFILE  DD    DSN=IBMUSER.CPNAMES.REPORT,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBARL CPNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
CPNAME
NOBKPVERS
AUTODUMP
DMPSYSNM
LSTMODID
LSTMODDATE
LSTMODTIME
DUMPCLAS1
DUMPCLAS2
DUMPCLAS3
DUMPCLAS4
DUMPCLAS5
FCTOPPRCB
FCTOPPRCR
CATINFO
ALLOWFCFRR
FCCONSGRP
POOLSGNM1
POOLSGNM2
POOLSGNM3
POOLSGNM4
POOLSGNM5
POOLSGNM6
POOLSGNM7
POOLSGNM8
POOLSGNM9
POOLSGNM10
POOLSGNM11
POOLSGNM12
POOLSGNM13
POOLSGNM14
POOLSGNM15
POOLSGNM16
POOLSGNM17
POOLSGNM18
POOLSGNM19
POOLSGNM20
POOLSGNM21
POOLSGNM22
POOLSGNM23
POOLSGNM24
POOLSGNM25
POOLSGNM26
POOLSGNM27
POOLSGNM28
POOLSGNM29
POOLSGNM30
TITLE=STATUS OF COPYPOOL AS ON 13/05/01
/*
//********************************************************************
//*                                                                  *
//* Copy the COPYPOOL report                                         *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYSGREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=IBMUSER.CPNAMES.REPORT,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAJK
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJK) COMP(DF123): BATCH  - GENERATES COPYPOOL LIST  ‡Z1C*/
//*                                         AND REPORT               */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2‡E1C*/
//* COPYRIGHT IBM CORP. 2002, 2013                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $W0=COPYPOOL,HDZ11H0,01/08/02,SNJTCS: INITIAL VERSION            */
//* $Z1=HSMFR2  ,HDZ1180,050420,TCS: HSMFR STAGE2 CHANGES        ‡Z1A*/
//* $B1=HSMFLSH ,HDZ1B10,08/05/26,IBSTG: HSM Fast Replication    ‡B1A*/
//*                                      Enhancement support     ‡B1A*/
//* $B2=K1B0876 ,HDZ1B10,09/01/12,IBSTG: Change back Metro       ‡B2A*/
//*                                      Mirror to PPRC (DCR)    ‡B2A*/
//* $C1=HSMFRVRC,HDZ1C10,09/06/03,IBSTG: HSM Fast Reverse        ‡C1A*/
//*                                      Restore support.        ‡C1A*/
//* $E1=HSMFCCG ,HDZ2210,12/05/02,IBSTG: HSM Fast Replication    ‡E1A*/
//*                                      Enhancements (LI3117)   ‡E1A*/
//********************************************************************
//*                                                                  *
//* Sample JCL to generate an ISMF CopyPool list, save it, and       *
//* generate  CopyPool report from it.                               *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate CopyPool list and save it                       *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   CPNAMES - Saved list name         (Output)                     *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   COPYPOOL- COPYPOOL name           (Wild cards allowed)         *
//*                                                                  *
//********************************************************************
//GENSCLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAIJ SAVE CPNAMES +
SCDS(SCDS) COPYPOOL(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELREPDS EXEC  PGM=IDCAMS
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
 DELETE IBMUSER.CPNAMS.REPORT
/*
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: the data set being allocated should not be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=IBMUSER.CPNAMS.REPORT,DISP=(NEW,CATLG),
//         BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
/*
//********************************************************************
//*                                                                  *
//* Report generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBARL :-                              *
//*                                                                  *
//*     CPNAMES - ISMF saved list name (input)                       *
//*                                                                  *
//*     ISPFILE - CopyPool report DSN                                *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*     The following keywords can be used in SYSIN DS.              *
//*                                                                  *
//*   --------------------------------------------------------       *
//*     LEN       KEYWORD       DESC                                 *
//*   --------------------------------------------------------       *
//*                                                                  *
//*     31        CPNAME       -  CopyPool Name.                     *
//*     10        NOBKPVERS    -  £ of Backup versions.              *
//*      8        AUTODUMP     -  Eligiblity for Automatic Dump. ‡Z1A*
//*      9        DMPSYSNM     -  System Group Name .            ‡Z1A*
//*      9        LSTMODID     -  Last modified USERID.              *
//*     11        LSTMODDATE   -  Last DATE modified.                *
//*     11        LSTMODTIME   -  Last TIME modified.                *
//*     10        DUMPCLAS1    -  Dump Class Required or Not    5‡Z1A*
//*     10        DUMPCLAS2    -  Dump Class Required or Not         *
//*     10        DUMPCLAS3    -  Dump Class Required or Not         *
//*     10        DUMPCLAS4    -  Dump Class Required or Not         *
//*     10        DUMPCLAS5    -  Dump Class Required or Not    2‡B2C*
//*     10        FCTOPPRCB    -  FRBACKUP to PPRC Primary Volumes   *
//*     10        FCTOPPRCR    -  FRRECOV to PPRC Primary Volumes    *
//*     10        CATINFO      -  Capture Catalog Information.       *
//*     11        ALLOWFCFRR   -  Allow Fast Reverse Restore.    ‡C1A*
//*     10        FCCONSGRP    -  FlashCopy Consistency Group.   ‡E1A*
//*     10        POOLSGNM1    -  Storage Group Name.           5‡Z1C*
//*     10        POOLSGNM2    -  Storage Group Name.                *
//*     10        POOLSGNM3    -  Storage Group Name.                *
//*     10        POOLSGNM4    -  Storage Group Name.                *
//*     10        POOLSGNM5    -  Storage Group Name.                *
//*     10        POOLSGNM6    -  Storage Group Name.          25‡Z1A*
//*     10        POOLSGNM7    -  Storage Group Name.                *
//*     10        POOLSGNM8    -  Storage Group Name.                *
//*     10        POOLSGNM9    -  Storage Group Name.                *
//*     11        POOLSGNM10   -  Storage Group Name.                *
//*     11        POOLSGNM11   -  Storage Group Name.                *
//*     11        POOLSGNM12   -  Storage Group Name.                *
//*     11        POOLSGNM13   -  Storage Group Name.                *
//*     11        POOLSGNM14   -  Storage Group Name.                *
//*     11        POOLSGNM15   -  Storage Group Name.                *
//*     11        POOLSGNM16   -  Storage Group Name.                *
//*     11        POOLSGNM17   -  Storage Group Name.                *
//*     11        POOLSGNM18   -  Storage Group Name.                *
//*     11        POOLSGNM19   -  Storage Group Name.                *
//*     11        POOLSGNM20   -  Storage Group Name.                *
//*     11        POOLSGNM21   -  Storage Group Name.                *
//*     11        POOLSGNM22   -  Storage Group Name.                *
//*     11        POOLSGNM23   -  Storage Group Name.                *
//*     11        POOLSGNM24   -  Storage Group Name.                *
//*     11        POOLSGNM25   -  Storage Group Name.                *
//*     11        POOLSGNM26   -  Storage Group Name.                *
//*     11        POOLSGNM27   -  Storage Group Name.                *
//*     11        POOLSGNM28   -  Storage Group Name.                *
//*     11        POOLSGNM29   -  Storage Group Name.                *
//*     11        POOLSGNM30   -  Storage Group Name.                *
//********************************************************************
//GENSCREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//ISPFILE  DD    DSN=IBMUSER.CPNAMS.REPORT,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBARL CPNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
CPNAME
NOBKPVERS
AUTODUMP
LSTMODID
LSTMODDATE
LSTMODTIME
DMPSYSNM
DUMPCLAS1
DUMPCLAS2
DUMPCLAS3
DUMPCLAS4
DUMPCLAS5
FCTOPPRCB
FCTOPPRCR
CATINFO
ALLOWFCFRR
FCCONSGRP
POOLSGNM1
POOLSGNM2
POOLSGNM3
POOLSGNM4
POOLSGNM5
POOLSGNM6
POOLSGNM7
POOLSGNM8
POOLSGNM9
POOLSGNM10
POOLSGNM11
POOLSGNM12
POOLSGNM13
POOLSGNM14
POOLSGNM15
POOLSGNM16
POOLSGNM17
POOLSGNM18
POOLSGNM19
POOLSGNM20
POOLSGNM21
POOLSGNM22
POOLSGNM23
POOLSGNM24
POOLSGNM25
POOLSGNM26
POOLSGNM27
POOLSGNM28
POOLSGNM29
POOLSGNM30
TITLE=STATUS OF COPYPOOL AS ON 13/05/01
/*
//********************************************************************
//*                                                                  *
//* Copy the COPYPOOL report                                         *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYSCREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=IBMUSER.CPNAMS.REPORT,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAJL
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJL) COMP(5695DF123): BATCH - COPYPOOL DELETE           */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 2002,2006  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $W0=COPYPOOL,HDZ11H0,02/01/08,SNJTCS: INITIAL VERSION            */
//* $Y1=OA13015 ,HDZ11K0,05/08/31,SNJCCY: add table2             ‡Y1A*/
//********************************************************************
//*                                                                  *
//* Sample JCL to Delete COPYPOOL                                    *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*       CHANGE JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to Delete,            *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* STEP TO DELETE A COPYPOOL                                        *
//*                                                                  *
//*   PARAMETERS FOLLOWING DELETE :-                                 *
//*                                                                  *
//*   SCDS       - SCDS dataset name     (Valid SCDS dataset name)   *
//*   COPYPOOL   - Copy Pool name         (Wild cards not allowed)   *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                                   *
//*                Possible values : Y/N/BLANK                       *
//*                                                                  *
//********************************************************************
//GENLIST  EXEC  ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAIJ DELETE +
SCDS(TEMP.SCDS) +
COPYPOOL() +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAJ1
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJ1) COMP(DF123): BATCH - MC DEFINE/ALTER/DISPLAY   ‡A0C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                     ‡E1C*/
//* COPYRIGHT IBM CORP. 1996, 2017                               ‡G1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: INITIAL VERSION       ‡L0A*/
//* 10/14/96 CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//* $T1=NQ5,HDZ11E0,061997,SNJTCS:   NaviQuest Batch Support     ‡T1A*/
//* $T2=K151321,HDZ11E0,091998,SNJTCS: Possible values          2‡T2A*/
//*                                    documentation                 */
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  ‡WA41441*/
//* 05/23/01 TCS - HDZ11F0: Prolog Updation                  ‡WA49380*/
//* 08/06/02 TCS - HDZ11G0: Support for defining Multiple    ‡WA55817*/
//*                         Management Classes               ‡WA55817*/
//* 08/30/05 CCY - HDZ11K0: Add table2 to step2              ‡AA13015*/
//* $A0=EAV    ,HDZ1A10,06/09/27,IBSTG: EAV Support              ‡A0A*/
//* $D1=DSRET99,HDZ1D10,10/05/18,SVLCY: Retention>9999 support   ‡D1A*/
//* $E1=STIERS ,HDZ2210,11/04/15,IBSTG: HSM STORAGE TIERS        ‡E1A*/
//* $E2=OA43011,HDZ2210,13/08/06,IBSTG: Fix incorrect copyright  ‡E2A*/
//* $F1=SM02061,HDZ2220,13/08/23,IBSTG: Add default values for   ‡F1A*/
//*                                     quarterly/yearly on day  ‡F1A*/
//* $F2=SM02683,HDZ2220,14/08/19,IBSTG: Change maximum GDG Limit ‡F2A*/
//*                                     from 255 to 999          ‡F2A*/
//* $G1=RMMTAPE,HDZ2230,16/07/22,IBSTK: Support Tape Management  ‡G1A*/
//*                                     attributes for RMM       ‡G1A*/
//* $G2=146339, HDZ2230,16/12/05,IBSTK: Fix EXCLVRSEL description‡G2A*/
//* $G3=CLOUD2 ,HDZ2230,17/04/10,IBSTK: FP2096 MCStore2 support  ‡G3A*/
//*                                  Auto Migration Enhancement  ‡G3A*/
//* $G4=OA55351,HDZ2230,18/03/14,IBSTG: RPFC for XRC GA support  ‡G4A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER/DISPLAY MANAGEMENT CLASSES IN BATCH   *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//*   PARAMETER FOLLOWING ACBQBAJ1 - DEFINE or ALTER or DISPLAY      *
//* ********************** ADD BEG ***********************************
//*  (Define or Alter)                                               *
//*                                                                  *
//* Required Fields:                                     2‡WA49380   *
//*                                                                  *
//*   SCDS - SCDS in which MANAGEMENT CLASS is to be DEF/ALT/DISP    *
//*                                                                  *
//*   MGMTCLAS - MANAGEMENT CLASS to be DEFINED/ALTERED/DISPLAYED    *
//*                                                                  *
//* Optional Fields:                                       2‡WA49380 *
//*                                                                  *
//*   DESCR    : Type in  remarks  about the MGMTCLAS which is being *
//*              defined/altered, not  exceeding  120  chars.        *
//*                                                                  *
//*   EXPNOUSE : The datasets  will  expire if they are not used for *
//*              the number of days specified here.                  *
//*                                                              ‡D1C*
//*              Possible values  1 - 93000, NOLIMIT.  If NOLIMIT is *
//*              specified the DS would not expire.                  *
//*              Valid  only if retention  period or expiration date *
//*              is not specified by the end user or is not derived  *
//*              from the data class.                                *
//*                                                                  *
//*   EXPDTDY  : Datasets expires after  DATE/DAYS entered here. ‡D1C*
//*              Possible values   0 - 93000, YYYY/MM/DD or NOLIMIT. *
//*                                                                  *
//*   RETNLIM  : Possible values 0 - 93000, NOLIMIT.             ‡D1C*
//*              Use this field to control what a user or Data class *
//*              can specify for retention period or expiration date *
//*              during allocation. The affect of the values entered *
//*              in this field are explained below.                  *
//*                                                                  *
//*              0         ->  Do not  use  the RETPD and EXPDT that *
//*                            the user or Dataclass specified.      *
//*              1 - 93000 ->  Use  this  value only if the RETPD or *
//*                            EXPDT is more than this limit.    ‡D1C*
//*              NOLIMIT   ->  Do not set a limit to RETPD or EXPDT. *
//*                                                                  *
//*   PARTREL  : Possible values  Y, C, YI, CI or N .                *
//*              Use this field (PARTIAL RELEASE) to specify whether *
//*              allocated but unused space can be  released for DSs *
//*              in this MGMTCLS. This one applies  only to VSAM DSs *
//*              in extended format or NON-VSAM datasets. The values *
//*              entered would have following results.               *
//*                                                                  *
//*              Y  -> Release unused space automatically during the *
//*                    Space Management cycle.                       *
//*                                                                  *
//*              C  -> Unused  space  can  be released automatically *
//*                    only if a secondary allocation exists for the *
//*                    dataset.                                      *
//*                                                                  *
//*              YI -> Release unused space when a dataset is closed *
//*                    or during the Space Management cycle,whichever*
//*                    comes first.                                  *
//*                                                                  *
//*              CI -> Unused  space  for  data sets  with secondary *
//*                    allocation is released either when a data set *
//*                    is  closed  or  during  the  Space Management *
//*                    cycle, whichever comes first.                 *
//*                                                                  *
//*              N  -> Do not release unused space.                  *
//*                                                                  *
//*   PRINOUSE : Use this  field to specify when to migrate the DSs  *
//*              in this class. The possible values are              *
//*                                                                  *
//*              0         ->  To Migrate data sets  as  soon as the *
//*                            space management function of DFSMShsm *
//*                            is run and data integrity age is met. *
//*                                                                  *
//*              1 to 9999 ->  Migrate  data  sets  out  of  primary *
//*                            storage if  they have been unused for *
//*                            this number of days or longer.        *
//*                                                                  *
//*              BLANK     ->                                        *
//*                                                                  *
//*   LVINOUSE : Use this filed to  specify whether DSs  can migrate *
//*              to  LEVEL 1 storage  and  how  long they can remain *
//*              there. The possible values are,                     *
//*                                                                  *
//*              0         -> No  migration to Level 1. DSs  migrate *
//*                           directly from primary storage to LVL 2 *
//*                                                                  *
//*              1 to 9999 -> The  total  number of consecutive days *
//*                           that datasets  must  remain unaccessed *
//*                           before  becoming  eligible  to migrate *
//*                           from LVL 1 to LVL 2.                   *
//*                                                                  *
//*              NOLIMIT   -> Datasets  can  not  migrate to LEVEL 2 *
//*                           automatically, and remain in LVL 1 for *
//*                           an unlimited period.                   *
//*                                                                  *
//*              BLANK     ->                                        *
//*                                                                  *
//*   L2DNOUSE : Use this filed to specify whether data sets   13‡G3A*
//*              will migrate to cloud storage. It is to be managed  *
//*              by DFSMShsm. Possible values are,                   *
//*                                                                  *
//*              0         -> Data sets will migrate directly to     *
//*                           to cloud storage.                      *
//*                                                                  *
//*              NOLIMIT   -> Data that migrates to ML2 will not     *
//*                           further migrate to cloud storage.      *
//*                                                                  *
//*              BLANK     -> Default (NOLIMIT) is assumed.          *
//*                                                                  *
//*   CMDORAUT : If  migration is allowed, this field determines how *
//*              the  migration is initiated. Possible values are,   *
//*                                                                  *
//*              BOTH     -> DSs  can migrate either automatically   *
//*                          or by command.                          *
//*              COMMAND  -> Data sets can migrate by command only.  *
//*                                                                  *
//*              NONE     -> Data sets cannot migrate.               *
//*                                                                  *
//*   SIZELTE  : Use this field to specify the Low data set     9‡G3A*
//*              size threshold when data sets will be processed     *
//*              according to the actions, defined in field ACTLTE.  *
//*              Possible values are,                                *
//*                                                                  *
//*              1 to 4294967295 -> Data set size in tracks.         *
//*                                                                  *
//*              BLANK     ->                                        *
//*                                                                  *
//*   ACTLTE   : Use this field to specify which action to     13‡G3A*
//*              perform if the data set size is less than or equal  *
//*              to the given size, defined in field SIZELTE.        *
//*              Possible values are,                                *
//*                                                                  *
//*              NONE      -> No action is taken.                    *
//*              ML1       -> Target migration level is ML1.         *
//*              ML2       -> Target migration level is ML2.         *
//*              MIG       -> Target migration level is ML1 or ML2.  *
//*              TRANS     -> Data Set transition.                   *
//*              CLOUD     -> Target migration level is CLOUD.       *
//*              BLANK     ->                                        *
//*                                                                  *
//*   SIZEGT   : Use this field to specify the High data set    9‡G3A*
//*              size threshold when data sets will be processed     *
//*              according to the actions, defined in Action (GT).   *
//*              Possible values are,                                *
//*                                                                  *
//*              1 to 4294967295 -> Data set size in tracks.         *
//*                                                                  *
//*              BLANK     ->                                        *
//*                                                                  *
//*   ACTGT    : Use this field to specify which action to     13‡G3A*
//*              perform if the data set size is greater than        *
//*              the given size, defined in field SIZEGT.            *
//*              Possible values are,                                *
//*                                                                  *
//*              NONE      -> No action is taken.                    *
//*              ML1       -> Target migration level is ML1.         *
//*              ML2       -> Target migration level is ML2.         *
//*              MIG       -> Target migration level is ML1 or ML2.  *
//*              TRANS     -> Data Set transition.                   *
//*              CLOUD     -> Target migration level is CLOUD.       *
//*              BLANK     ->                                        *
//*                                                                  *
//*   PRIGDGEL : Valid  for  Generation  Data Group (GDG) DSs  only. *
//*              This  field  specifies  how  many  of  the  newest  *
//*              generations  of a GDG are to have  normal priority. *
//*              Possible values are 0-999 or blank. For Example ‡F2C*
//*              enter    100  if  you  want GDG generations  older  *
//*              than the  most recent 100, to  migrate before  non  *
//*              generation datasets.                                *
//*                                                                  *
//*   GDGROLL  : This field  specifies  whether the  Generation  DSs *
//*              in  this  MGMTCLS will expire or migrate after they *
//*              have  been  removed  from  the  GDG. The  possible  *
//*              values are, MIGRATE,EXPIRE or blank.                *
//*                                                                  *
//*   BACKUPFR : This  field  specifies the  backup frequency.   The *
//*              possible values are,                                *
//*                                                                  *
//*              0        -> Backup each dataset only when the volume*
//*                          it resides on is backed up.             *
//*              1 - 9999 -> If dataset is  changed  in the interval *
//*                          between  backups, extend  the  interval *
//*                          for atleast this many number of days.   *
//*              BLANK    ->                                         *
//*                                                                  *
//*   NUMBKDSE : Maximum  number  of  Backups  that   can   be  kept *
//*              concurrently. Possible values are, 1 - 100,BLANK.   *
//*                                                                  *
//*   NUMBKDSD : Specifies  the  maximum no of Backups to keep after *
//*              the dataset is deleted. Possible values are         *
//*                                                                  *
//*              0       -> All backups that were created are erased *
//*                         after the dataset is deleted.            *
//*              1 - 100 -> The maximum no. of backups to keep after *
//*                         a dataset has been deleted.              *
//*              BLANK    ->                                         *
//*                                                                  *
//*   RETDYDSD : Specifies how long a most recent  backup version of *
//*              a deleted dataset will be kept. Possible values are *
//*                                                                  *
//*              1 - 9999 -> After a dataset is deleted keep its most*
//*                          recent  backup  version  for these many *
//*                          days.                                   *
//*                                                                  *
//*              NOLIMIT  -> The  backup  version  will  be kept for *
//*                          unlimited period.                       *
//*                                                                  *
//*              BLANK    ->                                         *
//*                                                                  *
//*   RETDYEXT : Specifies the retention period  for  a dataset that *
//*              pre-date  the  most recent  backup. Possible values *
//*              are,                                                *
//*                                                                  *
//*              1 - 9999 -> Each backup version of a  dataset other *
//*                          than the  recent copy will be  kept for *
//*                          these many days.                        *
//*                                                                  *
//*              NOLIMIT  -> All  backup  versions will  be kept for *
//*                          unlimited period.                       *
//*                                                                  *
//*              BLANK    ->                                         *
//*                                                                  *
//*   CMDBKUP  : Specifies who will have authority to perform command*
//*              backups. Possible values are,                       *
//*                                                                  *
//*              ADMIN  -> Only Storage Administrator ,              *
//*                                                                  *
//*              BOTH   -> Both Storage Administrator and end users. *
//*                                                                  *
//*              NONE   -> Neither end user nor Storage Administrator*
//*                                                                  *
//*   AUTOBKUP : Specifies whether the datasets in this  MGMTCLS are *
//*              eligible for automatic backup. Possible  values are *
//*              Y -> Yes , N -> No                                  *
//*                                                                  *
//*   BKUPTECH : Specifies  BACKUP COPY TECHNIQUE to be used.        *
//*              Possible values are,                                *
//*                                                                  *
//*              R  -> Concurrent copy technique must be used.       *
//*              P  -> Concurrent copy technique should be used.     *
//*              S  -> With out the concurrent copy technique.       *
//*              VR -> Virtual concurrent copy technique        9‡A0A*
//*                    must be used.                                 *
//*              VP -> Virtual concurrent copy technique             *
//*                    should be used.                               *
//*              CR -> Cache-based concurrent copy technique         *
//*                    must be used.                                 *
//*              CP -> Cache-based concurrent copy technique         *
//*                    should be used.                               *
//*                                                                  *
//*   TMSCYRS  : No of years  that must pass since the creation date *
//*              before class transition occurs. Possible values are *
//*              0 - 9999, or BLANK.                                 *
//*                                                                  *
//*   TMSCMTH  : No of months that must pass since the creation date *
//*              before class transition occurs. Possible values are *
//*              0 - 9999, or BLANK.                                 *
//*                                                                  *
//*   TMSCDYS  : No of days   that must pass since the creation date *
//*              before class transition occurs. Possible values are *
//*              0 - 9999, or BLANK.                                 *
//*                                                                  *
//*   TMSLUYRS : No of years that must pass since the last reference *
//*              date before class transition occurs.Possible values *
//*              are 0 - 9999, or BLANK.                             *
//*                                                                  *
//*   TMSLUMTH : No of months that must pass since the last reference*
//*              date before class transition occurs.Possible values *
//*              are 0 - 9999, or BLANK.                             *
//*                                                                  *
//*   TMSLUDYS : No of days  that must pass since the last reference *
//*              date before class transition occurs.Possible values *
//*              are 0 - 9999, or BLANK.                             *
//*                                                                  *
//*   PMTHODAY : The day of the month that class transition occurs.  *
//*              Possible values, 1 - 31, FIRST, LAST or BLANK       *
//*                                                                  *
//*   PQUAODAY : The day of the each quarter the CT occurs.          *
//*              Possible values, 1 - 92, FIRST, LAST or BLANK.      *
//*              Default: FIRST is assumed if PQUAIMTH is       2‡F1A*
//*              specified.                                          *
//*                                                                  *
//*   PQUAIMTH : Month of each quarter the CT occurs.                *
//*              Possible values, 1 - 3, or BLANK                    *
//*                                                                  *
//*   PYRLODAY : The day of each year the CT occurs.                 *
//*              Possible values, 1 - 366, FIRST, LAST or BLANK.     *
//*              Default: FIRST is assumed if PYRLIMTH is       2‡F1A*
//*              specified.                                          *
//*                                                                  *
//*   PYRLIMTH : The month of each year the CT occurs.               *
//*              Possible values, 1 - 12, or BLANK                   *
//*                                                                  *
//*   VERSIONS : Specify  how  many versions of an  aggregate  group *
//*              associated  with  the  management  class  are to be *
//*              maintained. Possible values are 1 - 9999, NOLIMT or *
//*              BLANK. If BLANK is specified no aggregate group BKP *
//*              is maintained.                                      *
//*                                                                  *
//*   RTNOVERS : Specify  how  long the only version of an aggregate *
//*              group is kept. Possible values are 1 - 9999,NOLIMIT *
//*              or BLANK.                                           *
//*                                                                  *
//*   RTOVUNIT : Specify  the  unit of measure for the length of time*
//*              specified in the above field. Possible  values  are *
//*              D -> Days, W -> Weeks, M -> Months, Y -> Years  and *
//*              BLANK.                                              *
//*                                                                  *
//*   RTNEVERS : Specify the  time  periods for which backup versions*
//*              of an aggregate group are to be kept.Possible values*
//*              are 1 - 9999,NOLIMIT and BLANK.                     *
//*                                                                  *
//*   RTEVUNIT : Specify the unit  of measure for the length of time *
//*              specified in the above field. Possible  values  are *
//*              D -> Days, W -> Weeks, M -> Months, Y -> Years  and *
//*              BLANK.                                              *
//*                                                                  *
//*   CPYSERLN : Specifies  whether you want  processing of a backup *
//*              copy of an aggregate group to continue if a  shared *
//*              enqueue cannot be obtained for the  datasets  being *
//*              backed up. Possible values are,                     *
//*              C -> Continue, F -> Fail or BLANK.                  *
//*                                                                  *
//*   ACPYTECH : Specifies ABACKUP COPY TECHNIQUE to be used.        *
//*              Possible values are,                                *
//*                                                                  *
//*              R  -> Concurrent copy technique must be used.       *
//*              P  -> Concurrent copy technique should be used.     *
//*              S  -> With out the concurrent copy technique.       *
//*              VR -> Virtual concurrent copy technique        9‡A0A*
//*                    must be used.                                 *
//*              VP -> Virtual concurrent copy technique             *
//*                    should be used.                               *
//*              CR -> Cache-based concurrent copy technique         *
//*                    must be used.                                 *
//*              CP -> Cache-based concurrent copy technique         *
//*                    should be used.                               *
//*                                                                  *
//*  TRCPYTECH : Specifies which copy technique should be used  9‡E1A*
//*              for the class transition of data associated with    *
//*              this management class. Possible values are          *
//*              FRP -> FR PREFERRED.                                *
//*              FRR -> FR REQUIRED.                                 *
//*              STD -> STANDARD.                                    *
//*              PMP -> FC PRESMIRPREF.                              *
//*              PMR -> FC PRESMIRREQ.                               *
//*              FCX -> FC XRCPRIMARY - can be specified only   6‡G4A*
//*                     if RPFC for XRC support is enabled           *
//*                     (FLASHCOPYTOXRC=YES parameter is set in      *
//*                     the DEVSUPxx PARMLIB member and activated).  *
//*                     For more information, see "z/OS DFSMS        *
//*                     Advanced Copy Services".                     *
//*                                                                  *
//* SERIALERREX: Specifies the database/exit to invoke when     5‡E1A*
//*              there is a serialization error. Possible values are *
//*              DB2, CICS, ZFS, EXIT -> invokes an user exit, or    *
//*              NONE.                                               *
//*                                                                  *
//* CLOUDNAME:   Specifies the name of a previously defined    13‡G3A*
//*              cloud construct for the data set migration to       *
//*              the cloud storage during automatic migration        *
//*              (Primary Space Management, Interval migration,      *
//*               and On-demand migration).                          *
//*              Possible values are,                                *
//*                                                                  *
//*              1 to 30 alphanumeric or national characters starting*
//*                      with alphabetic or national character       *
//*                      (‡, £, $).                                  *
//*                                                                  *
//*              BLANK    ->                                         *
//*                                                                  *
//* RETMETHOD:   Specifies how new tape volumes are to be      61‡G1A*
//*              managed by DFSMSrmm. The retention method           *
//*              for a volume set is chosen when its first           *
//*              file is written. Possible values are,               *
//*              EXPDT -> Retention and expiration is managed        *
//*                       based on expiration date, date of          *
//*                       last reference, or catalog status.         *
//*              VRSEL -> Policy management is to be managed         *
//*                       by DFSMSrmm based on VRSes using           *
//*                       existing, supported combinations           *
//*                       of data set name, jobname and the          *
//*                       MC name.                                   *
//*              blank -> Value is not specified.                    *
//* VOLSETMGL:   Specifies how DFSMSrmm is to retain volumes         *
//*              or multivolume sets that are managed by the         *
//*              EXPDT retention method. Possible values are,        *
//*              VOLUME -> The expiration date is determined         *
//*                        separately for each volume in the         *
//*                        set. Unless defined differently,          *
//*                        the expiration date is the maximum        *
//*                        of all data set expiration dates on       *
//*                        the volume. Each file on a volume         *
//*                        can increment  the volume expiration      *
//*                        date. All files of a multivolume data     *
//*                        set have the same expiration date.        *
//*           FIRSTFILE -> the expiration attributes of the first    *
//*                        file are used for the whole volume        *
//*                        set.                                      *
//*               SET   -> the highest data set expiration date      *
//*                        set for all files on a tape volume set    *
//*                        determines the expiration date for all    *
//*                        volumes in the set.                       *
//*               blank -> Value is not specified.                   *
//*                                                                  *
//* EXCLVRSEL:   Specifies that any tape data sets created on a      *
//*              tape volume set which is managed by the VRSEL       *
//*              retention method can be excluded from VRSEL         *
//*              inventory management. The data set VRSELEXCLUDE     *
//*              attribute is set for all data sets on volumes       *
//*              managed by the EXPDT retention method and is not    *
//*              affected by this support. Possible values are,      *
//*               Y  -> Yes, if the data set is on a volume     4‡G2C*
//*                     managed by the VRSEL retention method, the   *
//*                     data set is excluded from VRSEL inventory    *
//*                     management processing.                       *
//*               N  -> No, no exclusion, used only for data    3‡G2C*
//*                     sets on a volume managed by the VRSEL        *
//*                     retention method.                            *
//*            blank -> Value is not specified.                      *
//*                                                                  *
//* WHILECTLG:   Specifies the default WHILECATALOG value for data   *
//*              sets on volumes managed by the EXPDT retention      *
//*              method. Possible values are,                        *
//*              OFF ->  The catalog status of the data set has no   *
//*                      effect on when it expires.                  *
//*              ON  ->  The data set will be retained past its      *
//*                      expiration date if it is cataloged.         *
//*     UNTILEXPIRED ->  The data set will expire after              *
//*                      its status changes to uncataloged           *
//*                      or if the expiration date is reached.       *
//*              blank -> Value is not specified.                    *
//*                                                                  *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                           ‡WA41441*
//*                                                                  *
//*                Possible values : Y/N/BLANK               ‡WA41441*
//************************ ADD END ***********************************
//********************************************************************
//*
//*   STEP1 - SET UP PARAMETERS
//*
//********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//TEMPFILE  DD  DSN=&&TEMPFILE,DISP=(MOD,PASS),
//  SPACE=(TRK,(1,1)),LRECL=300,RECFM=F,BLKSIZE=300
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAJ1 DEFINE/ALTER +
SCDS(TEMP.SCDS) +
MGMTCLAS() +
DESCR() +
EXPNOUSE() +
EXPDTDY() +
RETNLIM() +
PARTREL() +
PRINOUSE() +
LVINOUSE() +
L2DNOUSE() +
CMDORAUT() +
SIZELTE() +
ACTLTE() +
SIZEGT() +
ACTGT() +
PRIGDGEL() +
GDGROLL() +
BACKUPFR() +
NUMBKDSE() +
NUMBKDSD() +
RETDYDSD() +
RETDYEXT() +
CMDBKUP() +
AUTOBKUP() +
BKUPTECH() +
TMSCYRS() +
TMSCMTH() +
TMSCDYS() +
TMSLUYRS() +
TMSLUMTH() +
TMSLUDYS() +
PMTHODAY() +
PQUAODAY() +
PQUAIMTH() +
PYRLODAY() +
PYRLIMTH() +
VERSIONS() +
RTNOVERS() +
RTOVUNIT() +
RTNEVERS() +
RTEVUNIT() +
CPYSERLN() +
ACPYTECH() +
TRCPYTECH() +
SERIALERREX() +
CLOUDNAME() +
RETMETHOD() +
VOLSETMGL() +
EXCLVRSEL() +
WHILECTLG() +
UPDHLVLSCDS() +
)
/*
//********************************************************************
//*
//*   STEP2 - EXECUTE THE DEFINE/ALTER
//*
//********************************************************************
//STEP2   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD DSN=&&TEMPFILE,DISP=(OLD,DELETE,DELETE)
//********************************************************************
//*
//*   STEP3 - SET UP PARAMETERS
//*
//********************************************************************
//STEP3   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAJ1 DISPLAY +
SCDS(TEMP.SCDS) +
MGMTCLAS() +
)
/*

./ ADD NAME=ACBJBAJ2
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJ2) COMP(DF123): BATCH - POOL SG DEFINE, ALTER,    ‡D1C*/
//*                            DISPLAY                           ‡D1A*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                     ‡E1C*/
//* COPYRIGHT IBM CORP. 1996, 2015                               ‡F1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: INITIAL VERSION        ‡L0A*/
//*$L1=KN20040,HACS120,96/07/13,SNJTCS: TYPO CORRECTED           ‡L1A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//* $T3=K151321,HDZ11E0,091998,SNJTCS: Possible values          2‡T3A*/
//*                                    documentation                 */
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  ‡WA41441*/
//* $V1=SGName   ,HDZ11G0,09/19/00,TCS: Overflow and            2‡V1A*/
//*                                     Extend SG Name Support       */
//* 05/23/01 TCS - HDZ11F0: Prolog Updation                  ‡WA49380*/
//* $W1=COPY POOL,HDZ11H0,01/02/02,TCS: Copy Pool Backup        2‡W1A*/
//*                                    SG Name Support               */
//* 04/25/02 TCS - HDZ11G0: Add a new parameter SGSTSALL()   ‡WA53756*/
//* 08/28/02 TCS - HDZ11G0: Support for defining Multiple    ‡WA55817*/
//*                         Pool Storage Groups              ‡WA55817*/
//* $A0=EAV    ,HDZ1A10,06/09/28,IBSTG : EAV Support             ‡A0A*/
//* $A1=K1A0193,HDZ1A10,06/11/24,IBSTG : EAV fix                 ‡A1A*/
//* $C1=SMSR12 ,HDZ1C10,09/05/07,IBSTG : SMSR12 Enhancements     ‡C1A*/
//* $D1=SGDISP ,HDZ1D10,10/03/26,IBSTG : SG DISPLAY Support      ‡D1A*/
//* $D2=SMASG  ,HDZ1D10,10/08/09,IBSTG : SMA SUPPORT             ‡D2A*/
//* $E1=STIERS ,HDZ2210,11/04/15,IBSTG : HSM STORAGE TIERS       ‡E1A*/
//* $D3=OA38679,HDZ1D10,12/03/13,IBSTG : Back out SMA Support    ‡D3A*/
//* $E2=OA45067,HDZ2210,14/04/29,IBSTG : Add possible values     ‡E2A*/
//* $F1=ALRTMSG,HDZ2220,13/10/15,IBSTG : Space alert thresholds  ‡F1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER/DISPLAY POOL TYPE STORAGE GROUPS  ‡D1C*
//* IN BATCH                                                     ‡D1A*
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//************************** ADD BEG *********************************
//*                                                        3‡WA49380 *
//* Required Fields:                                                 *
//*                                                                  *
//*  SCDS     :  Name of SCDS, length 1-44 characters                *
//*                                                                  *
//*  STORGRP  :  Name of the storage group                           *
//*                                                                  *
//*  LOWTHRS  : Low   value  of allocation/migration  threshold  to  *
//*             optimize the use of DASD space in a pool SG.         *
//*             Possible values 0-99.                                *
//*                                                                  *
//* TRKLOWTHRS: Use the low value of allocation/migration       5‡A1C*
//*             threshold track-managed to specify the threshold     *
//*             percentage of space allocation in the track-managed  *
//*             space that triggers or stops migration of data sets  *
//*             from volumes in this storage group during interval   *
//*             migration.                                           *
//*             Possible values 0-99.                                *
//*                                                                  *
//*  GUARBKFR : Specifies the maximum number of days that can elapse *
//*             between backups. Possible values 1 - 9999,NOLIMIT.   *
//*                                                             3‡E1A*
//*  PROCPRIOR: Specifies the processing priority of the storage     *
//*             group. It is used during DFSMShsm space management.  *
//*             Possible values 1-100, default value is 50.      ‡E2A*
//*                                                                  *
//* Optional Fields:                                       2‡WA49380 *
//*                                                                  *
//*  DESCR    :  Remarks about  the  Storage  group  being defined / *
//*              altered.    Maximum length up to 120 characters.    *
//*                                                                  *
//*  AUTOMIG  :  Specifies whether the datasets  on volumes in this  *
//*              storage group can be moved to  DASD or TAPE by the  *
//*              primary  space  management and interval  migration  *
//*              functions of DFSMShsm. Possible values are,         *
//*                                                                  *
//*              Y  -> Datasets are eligible for primary space       *
//*                    management migration.                         *
//*                                                                  *
//*              N  -> Datasets are not eligible for automatic       *
//*                    migration.                                    *
//*                                                                  *
//*              I  -> Datasets are eligible for primary space       *
//*                    management and interval migration.            *
//*                                                                  *
//*              P  -> Datasets are eligible for primary space       *
//*                    management but not interval migration.        *
//*                                                                  *
//*  MIGSYSNM : Name of the system or system  group where automatic  *
//*             migration and  space  management of the volumes  in  *
//*             this  storage  group  would be  performed. Possible  *
//*             values: System or system group names 1 - 8           *
//*             alphanumeric characters in length.                   *
//*                                                                  *
//*  AUTOBKUP : Specifies whether all  the  volumes in  the storage  *
//*             are eligible for  automatic backup. Possible values  *
//*             are Y -> Yes and N -> No                             *
//*                                                                  *
//*  BKUPSYS  : Name of the system or  system group where automatic  *
//*             backup function will be processed.                   *
//*             Possible values: System or system group names 1 - 8  *
//*             alphanumeric characters in length.                   *
//*                                                                  *
//*  AUTODUMP : Specifies whether the volumes in this storage group  *
//*             are to be eligible for automatic  dumping. Possible  *
//*             values are Y -> Yes and N -> No.                     *
//*                                                                  *
//*  DMPSYSNM : Name of the system or  system  group  where volumes  *
//*             in this storage  group  will  automatically dump to  *
//*             backup devices.                                      *
//*             Possible values: System or system group names   2‡E2A*
//*             1 - 8 alphanumeric characters in length.             *
//*                                                         13‡V1A   *
//*  OVRFLOW  : Use this field to indicate whether the Storage Group *
//*             is an overflow Storage Group. Overflow storage groups*
//*             are reserved storage pools to handle periods of high *
//*             demand for primary space allocations.                *
//*             Possible values are Y -> Yes and N -> No.       2‡E2A*
//*             Default value: N.                                    *
//*                                                                  *
//*  EXTSGNM  : Use this field to specify the  name of another pool  *
//*             storage group, the group where sets from the primary *
//*             storage group can be extended to. When an extend     *
//*             storage group name is specified a data set may be    *
//*             extended to that storage group when it can not be    *
//*             exteneded to its currently allocated storage group.  *
//*             Possible values: 1 - 8 alphanumeric characters.  ‡E2A*
//*                                                          4‡W1A   *
//*  CPBSGN   : Use this field to specify the name of the storage    *
//*             group, which contains the eligible volumes           *
//*             for fast replication backup versions.                *
//*             Possible values: 1 - 8 alphanumeric characters.  ‡E2A*
//*                                                                  *
//*  DUMPCLAS : Use this field to specify 1 to 5 dump classes. ISMF  *
//*             neither  processes  nor verifies the values of DUMP  *
//*             CLASS. 1 - 8 alphanumeric characters.                *
//*             Classes will be separated by ','.                    *
//*                                                                  *
//*  HIGHTHRS : High  value  of allocation/migration  threshold  to  *
//*             optimize the use of DASD space in a pool SG.         *
//*             Possible values 1-100.                           ‡C1C*
//*                                                                  *
//*  TRKHITHRS: Use the high value of allocation/migration      5‡A1C*
//*             threshold track-managed to specify the threshold     *
//*             percentage of space allocation in the track-managed  *
//*             space that triggers or stops migration of data sets  *
//*             from volumes in this storage group during interval   *
//*             migration.                                           *
//*             Possible values 1-100.                           ‡C1C*
//*                                                            10‡F1A*
//* TOTSPALERT: Indicates an alert message will be issued when       *
//*             a minimum percentage of the total space usage on     *
//*             the selected storage group has been reached.         *
//*             Possible values 0-99.                                *
//*                                                                  *
//* TRKSPALERT: Indicates an alert message will be issued when       *
//*             a minimum percentage of the track-managed space      *
//*             usage on the selected storage group has been reached.*
//*             Possible values 0-99.                                *
//*                                                                  *
//*  BREAKPT  : Use this field to specify the disk space        5‡A1C*
//*             request, expressed  in number of cylinders,          *
//*             where the system should prefer the cylinder-managed  *
//*             space on an EAV.                                     *
//*             Possible values 0-65520 or blank.                    *
//*                                                                  *
//*  SGSTATUS : specify this field to designate the relationship or  *
//*             status between storage groups and the systems in a   *
//*             a complex. Possible values are,                      *
//*                                                                  *
//*              ENABLE  ->  System or System  Group  can allocate   *
//*                          and access datasets in SG. Default.     *
//*              DISALL  ->  System or System Group can't allocate   *
//*                          or  access datasets in SG.              *
//*              DISNEW  ->  System or System Group can't allocate   *
//*                          new datasets in the SG.                 *
//*              NOTCON  ->  System or System Group is  physically   *
//*                          disconnected  form the SG and can not   *
//*                          allocate datasets in it.                *
//*              QUIALL  ->  If JES3, system can not schedule jobs   *
//*                          that allocate or access   datasets in   *
//*                          the SG.  In JES2 system uses  volumes   *
//*                          in the SG for new allocations only if   *
//*                          other volumes are not available.        *
//*              QUINEW  ->  If JES3, system can not schedule jobs   *
//*                          that allocate new datasets in the SG.   *
//*                          In case of JES2, system uses  volumes   *
//*                          in the SG for new allocations only if   *
//*                          other volumes are not available.        *
//*                                                                  *
//*              Up to 32 statuses can be specified separated by     *
//*              commas to match the 32 systems.  If a status is     *
//*              skipped, the system status that falls in between two*
//*              commas will have default value of ENABLE.           *
//*                                                       15A‡WA53756*
//*  SGSTSALL :  This field is similar to SGSTATUS in functionality. *
//*              The difference is that this field accepts a single  *
//*              status value and sets the status of the POOL        *
//*              storage group on all the systems and system groups  *
//*              to this value.                                      *
//*                                                                  *
//*              Possible Values :                                   *
//*                 ENABLE/NOTCON/DISALL/DISNEW/QUIALL/QUINEW        *
//*                                                                  *
//*           Note:  SGSTSALL and SGSTATUS are mutually exclusive.   *
//*                  And so, while specifying value for one of these *
//*                  parameters, either the other parameter should   *
//*                  not be specified or if specified, it should not *
//*                  have any value specified.                       *
//*                                                                  *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                           ‡WA41441*
//*                                                                  *
//*                Possible values : Y/N/BLANK               ‡WA41441*
//************************** ADD END *********************************
//********************************************************************
//*
//STEP1   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAJ2 +
DEFINE/ALTER +
SCDS(TEST.CDS) +
STORGRP(POOLSTGP) +
DESCR(THIS IS TO DEFINE POOL STORAGE GROUP POOLSTGP) +
AUTOMIG() +
MIGSYSNM() +
AUTOBKUP() +
BKUPSYS() +
AUTODUMP() +
DMPSYSNM() +
OVRFLOW() +
EXTSGNM() +
CPBSGN() +
DUMPCLAS() +
HIGHTHRS() +
LOWTHRS(50) +
GUARBKFR(NOLIMIT) +
SGSTATUS() +
SGSTSALL() +
BREAKPT() +
TRKHITHRS() +
TRKLOWTHRS() +
TOTSPALERT() +
TRKSPALERT() +
PROCPRIOR() +
UPDHLVLSCDS() +
)
/*
//TEMPFILE  DD  DSN=&&TEMPFILE,DISP=(MOD,PASS),
//  SPACE=(TRK,(1,1)),LRECL=300,RECFM=F,BLKSIZE=300
//*
//STEP2   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD DSN=&&TEMPFILE,DISP=(OLD,DELETE,DELETE)
/*
//STEP3   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAJ2 DISPLAY +
SCDS(TEST.CDS) +
STORGRP() +
)
//

./ ADD NAME=ACBJBAJ3
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJ3) COMP(5695DF123): BATCH - TAPE SG DEFINE/ALTER/ ‡E1C*/
//*                                DISPLAY                       ‡E1C*/
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2‡E1C*/
//* COPYRIGHT IBM CORP. 1996, 2013                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: INITIAL VERSION        ‡L0A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//* $T3=K151321,HDZ11E0,091998,SNJTCS: Possible values          2‡T3A*/
//*                                    documentation                 */
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  ‡WA41441*/
//* 05/23/01 TCS - HDZ11F0: Prolog Updation                  ‡WA49380*/
//* 04/25/02 TCS - HDZ11G0: Add a new parameter SGSTSALL()   ‡WA53756*/
//* 08/28/02 TCS - HDZ11G0: Support for defining Multiple    ‡WA55817*/
//*                         Tape Storage Groups              ‡WA55817*/
//* $E1=SGDISPL,HDZ2210,12/04/02,IBSTG: OBJECT & TAPE SG DISPLAY ‡E1A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER/DISPLAY TAPE TYPE STORAGE GROUPS  ‡E1C*
//* IN BATCH                                                     ‡E1A*
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//******************* ADD BEG ****************************************
//*                                                        3‡WA49380 *
//* Required Fields:                                                 *
//*                                                                  *
//*  SCDS     : Name of SCDS, length 1-44 characters                 *
//*                                                                  *
//*  STORGRP  : Name of the storage group that is being defined /    *
//*             altered.                                             *
//*                                                                  *
//*  LIBNAME  : Specify the name of the tape library to  which the   *
//*             volume belongs. Possible  values,  library name of   *
//*             up to 1 - 8  characters each. Up to eight libraries  *
//*             can be specified separated by commas.                *
//*                                                                  *
//* Optional Fields:                                       2‡WA49380 *
//*                                                                  *
//*  DESCR    : Remarks about the Storage group being defined/altered*
//*             Maximum length up to 120 characters.                 *
//*                                                                  *
//*  SGSTATUS : Use this field to set the status of the TAPE         *
//*             storage group on the system or system groups         *
//*             in the  complex.                                     *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              ENABLE  ->  System or System  Group  can allocate   *
//*                          and access datasets in SG. Default.     *
//*              DISALL  ->  System or System Group can't allocate   *
//*                          or  access datasets in SG.              *
//*              DISNEW  ->  System or System Group can't allocate   *
//*                          new datasets in the SG.                 *
//*              NOTCON  ->  System or System Group is  physically   *
//*                          disconnected  form the SG and can not   *
//*                          allocate or access datasets in it.      *
//*                                                                  *
//*              Up to 32 statuses can be specified separated by     *
//*              commas to match the 32 systems.  If a status is     *
//*              skipped, the system status that falls in between two*
//*              commas will have default value of ENABLE.           *
//*                                                       15A‡WA53756*
//*  SGSTSALL :  This field is similar to SGSTATUS in functionality. *
//*              The difference is that this field accepts a single  *
//*              status value and sets the status of the TAPE storage*
//*              group on all the systems and system groups to this  *
//*              value.                                              *
//*                                                                  *
//*              Possible Values :                                   *
//*                 ENABLE/NOTCON/DISALL/DISNEW                      *
//*                                                                  *
//*           Note:  SGSTSALL and SGSTATUS are mutually exclusive.   *
//*                  And so, while specifying value for one of these *
//*                  parameters, either the other parameter should   *
//*                  not be specified or if specified, it should not *
//*                  have any value specified.                       *
//*                                                                  *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                           ‡WA41441*
//*                                                                  *
//*                Possible values : Y/N/BLANK               ‡WA41441*
//******************* ADD END ****************************************
//********************************************************************
//*
//STEP1   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAJ3 +
DEFINE/ALTER +
SCDS(TEST.CDS) +
STORGRP(TAPESTGP) +
DESCR(THIS IS TO DEFINE TAPE STORAGE GROUP TAPESTGP) +
LIBNAME() +
SGSTATUS() +
SGSTSALL() +
UPDHLVLSCDS() +
)
/*
//TEMPFILE  DD  DSN=&&TEMPFILE,DISP=(MOD,PASS),
//  SPACE=(TRK,(1,1)),LRECL=300,RECFM=F,BLKSIZE=300
//*
//STEP2   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD DSN=&&TEMPFILE,DISP=(OLD,DELETE,DELETE)
/*
//STEP3   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAJ3 +
DISPLAY +
SCDS(TEST.CDS) +
STORGRP() +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
//

./ ADD NAME=ACBJBAJ7
//IBMUSERA JOB (),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJ7) COMP(5695DF123): BATCH - OBJ BKUP SG DEFINE/ALTER  */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2‡G1C*/
//* COPYRIGHT IBM CORP. 1998, 2017                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $T1=NQ5,HDZ11E0,061997,SNJTCS:   NaviQuest Batch Support     ‡T1A*/
//* $T2=K151321,HDZ11E0,091998,SNJTCS: Possible values          2‡T2A*/
//*                                    documentation                 */
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  ‡WA41441*/
//* 05/23/01 TCS - HDZ11F0: Prolog Updation                  ‡WA49380*/
//* $W1=OAM,HDZ11H0,081301,SNJTCS: Add fields cycle start/end   2‡W1A*/
//*                                & OSMC processing system          */
//* 04/03/02 TCS - HDZ11G0: Add a new parameter SGSTSALL()   ‡WA53756*/
//* $F1=OA48375,HDZ2220,15/07/17,IBSTG: Update for OSMC system   ‡F1A*/
//* $G1=OAMDB2ID,HDZ2230,16/02/01,IBSTG: Multiple OAM Address    ‡G1A*/
//*                                      Spaces support          ‡G1A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER OBJ BACKUP TYPE STORAGE GROUP IN BATCH*
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//*   PARAMETER FOLLOWING ACBQBAJ7 - DEFINE OR ALTER                 *
//************************** ADD BEG *********************************
//*                                                        3‡WA49380 *
//* Required Fields:                                                 *
//*                                                                  *
//*  SCDS     :  Name of SCDS, length 1-44 characters                *
//*                                                                  *
//*  STORGRP  :  Name of the storage group being defined/altered.    *
//*                                                          12‡W1A  *
//*  CYCLEST  :  Beginning of a window of  time in which the         *
//*              OAM can begin storage management processing         *
//*              for this SG.                                        *
//*                                                                  *
//*              Possible values ; 0 - 23 (HR of DAY), Blank         *
//*                                                                  *
//*  CYCLEET  :  End of a window of  time in which  the  OAM         *
//*              can begin storage management processing for         *
//*              this SG.                                            *
//*                                                                  *
//*              Possible values ; 0 - 23 (HR of DAY), Blank         *
//*                                                                  *
//*  SGSTATUS : This field sets the status of this object or object  *
//*             backup  storage  group, on each  system in  the SMS  *
//*             complex.                                             *
//*                                                                  *
//*             Possible values ;                                    *
//*                                                                  *
//*             NOTCON -> The system can not process this object     *
//*                       backup  storage  group. NOTCON is default. *
//*                                                                  *
//*             ENABLE -> The system can access the Volume set.      *
//*                                                                  *
//*             DISNEW -> The system can use the OSREQ functions     *
//*                       RETRIEVE and DELETE but not STORE.         *
//*                                                                  *
//*             DISALL -> The system can use the OSREQ functions     *
//*                       RETRIEVE, DELETE or STORE.                 *
//*             Up to 32 statuses can be specified separated by      *
//*             commas to match the 32 systems.  If a status is      *
//*             skipped, the system status that falls in between two *
//*             commas will have default value of ENABLE.            *
//*                                                       15A‡WA53756*
//*  SGSTSALL :  This field is similar to SGSTATUS in functionality. *
//*              The difference is that this field accepts a single  *
//*              status value and sets the status of the OBJECT      *
//*              BACKUP storage group on all the systems to this     *
//*              value.                                              *
//*                                                                  *
//*              Possible Values :                                   *
//*                 ENABLE/DISALL/DISNEW                             *
//*                                                                  *
//*           Note:  SGSTSALL and SGSTATUS are mutually exclusive.   *
//*                  And so, while specifying value for one of these *
//*                  parameters, either the other parameter should   *
//*                  not be specified or if specified, it should not *
//*                  have any value specified.                       *
//*                                                                  *
//* Optional Fields:                                       2‡WA49380 *
//*                                                                  *
//*  DESCR    :  Remarks about the Storage group being defined/      *
//*              altered.   Maximum length up to 120 characters.     *
//*                                                           8‡W1A  *
//*  OSMCPS   :  Identifies the system where OSMC Processing is      *
//*              to be done for this object backup storage           *
//*              group.                                              *
//*                                                                  *
//*              Possible values ;                                   *
//*              must be 1 to 8 alphanumeric or national        2‡F1C*
//*              ($, ‡ or £) characters.                             *
//*                                                                  *
//*  LIBNAME  :  Library name that represents  a defined optical     *
//*              drive configuration or Pseudo library name that     *
//*              represents stand-alone optical drives and shelf     *
//*              resident optical volumes.                           *
//*                                                                  *
//*              Possible values ;                                   *
//*                                                                  *
//*              You  can  specify  up  to  8  libraries  of 1-8     *
//*              alphanumeric chars each.                            *
//*                                                                  *
//*  VOLFTHRS :  No. of free  sectors required  for an optical       *
//*              volume (VOLUME FULL THRESHOLD) within this SG.      *
//*                                                                  *
//*              Possible values ; 0 - 9999                          *
//*                                                                  *
//*  DRVSTHRS :  Max no of outstanding  object write  requests       *
//*              for an optical drive (DRIVE START THRESHOLD).       *
//*                                                                  *
//*              Possible values ; 0 - 9999                          *
//*                                                                  *
//*  VOLFWERR :  This field VOLUME-FULL-AT-WRITE ERROR indicates     *
//*              whether a " mark  volume  full  on  first write     *
//*              failure" criteria applies to optical volumes        *
//*              in this SG.                                         *
//*                                                                  *
//*              Possible values ;                                   *
//*                                                                  *
//*              Y ->  OAM marks an optical volume full the first    *
//*                    time an attempt to write an  object on the    *
//*                    optical volume fails, because insufficient    *
//*                    space.                                        *
//*              N ->  OAM marks an object volume full  only when    *
//*                    the no. of  available sectors in  the user    *
//*                    data  area  falls  below  the  VOLUME FULL    *
//*                    THRESHOLD.                                    *
//*                                                                  *
//*  OAMDB2ID :  This field (applicable in a multiple OAM      35‡G1A*
//*              configuration only; otherwise ignored) specifies    *
//*              the SSID(s) and/or Group Attachment Name(s) of      *
//*              the DB2 subsystem(s) associated with the OAM Object *
//*              instance(s) in a multiple OAM configuration that    *
//*              can use this storage group name.                    *
//*                                                                  *
//*              Possible values: 1 - 4 alphanumeric or national     *
//*              characters;                                         *
//*              - wild card characters (%) can be included in any   *
//*              position in the specification to allow multiple OAM *
//*              instances to use the storage group name and         *
//*              definition;                                         *
//*              - blank.                                            *
//*              Default: %%%% (all OAM instances on a system can    *
//*              use the storage group name and definition).         *
//*                                                                  *
//*              Notes:                                              *
//*              - Blank is treated the same as the default (%%%%).  *
//*              - Values with trailing blanks will not match an     *
//*              SSID/Group Attachment Name longer than the number   *
//*              of characters specified in OAMDBID. For example,    *
//*              a value of DB% will only match DB or DB followed by *
//*              a single character and a value of %% will only      *
//*              match an SSID or Group Attachment Name that is one  *
//*              or two characters long.                             *
//*              - Where multiple OAM instances match the specified  *
//*              ID, all matching instances can use the same storage *
//*              group name and values specified in the storage      *
//*              group definition. Each OAM instance is associated   *
//*              a different DB2 subsystem, however, so each         *
//*              instance will have a different set of DB2 tables    *
//*              and therefore data is not shared between OAM        *
//*              instances.                                          *
//*                                                                  *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                           ‡WA41441*
//*                                                                  *
//*                Possible values : Y/N/BLANK               ‡WA41441*
//************************** ADD END *********************************
//********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAJ7 +
DEFINE/ALTER +
SCDS(TEST.CDS) +
STORGRP(SGOBJBKP) +
DESCR() +
CYCLEST() +
CYCLEET() +
OSMCPS() +
LIBNAME() +
VOLFTHRS() +
DRVSTHRS() +
VOLFWERR() +
OAMDB2ID() +
SGSTATUS() +
SGSTSALL() +
UPDHLVLSCDS() +
)
/*
//

./ ADD NAME=ACBJBAJ8
//IBMUSERA JOB (),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJ8) COMP(5695DF123): BATCH - VIO SG DEFINE/ALTER       */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 1998,2002  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $T1=NQ5,HDZ11E0,061997,SNJTCS:   NaviQuest Batch Support     ‡T1A*/
//* $T2=K151321,HDZ11E0,091998,SNJTCS: Possible values          2‡T2A*/
//*                                    documentation                 */
//* $U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for  2‡U1A*/
//*                                       DFSMS/MVS ISMF V2R10       */
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  ‡WA41441*/
//* 05/23/01 TCS - HDZ11F0: Prolog Updation                  ‡WA49380*/
//* 04/25/02 TCS - HDZ11G0: Add a new parameter SGSTSALL()   ‡WA53756*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER VIO TYPE STORAGE GROUPS IN BATCH      *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//*   PARAMETER FOLLOWING ACBQBAJ8 - DEFINE OR ALTER                 *
//************************** ADD BEG *********************************
//*                                                        3‡WA49380 *
//* Required Fields:                                                 *
//*                                                                  *
//*  SCDS     :  Name of SCDS, length 1-44 characters                *
//*                                                                  *
//*  STORGRP  :  Name of the storage group  being defined.           *
//*                                                                  *
//*  VIOMAX   :  Specify in KB the largest VIO dataset that can be   *
//*              created for the SG.                                 *
//*                                                                  *
//*              Possible Values : 8  - 2000000                      *
//*                                                                  *
//*  VIOUNIT  :  Specify this field to select the storage device     *
//*              type to be simulated by the VIO SG.                 *
//*                                                                  *
//*              Possible Values :Any valid device type              *
//*                               (3380, 3390 etc.)                  *
//*                                                                  *
//* Optional Fields:                                       2‡WA49380 *
//*                                                                  *
//*  DESCR    :  Remarks about the Storage group being defined /     *
//*              altered.  Maximum length of up to 120 characters.   *
//*                                                                  *
//*  SGSTATUS :  Use this field to set the status of the VIO         *
//*              storage group on the system or system groups        *
//*              in your complex.                                    *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              ENABLE  ->  System or System  Group  can allocate   *
//*                          and access datasets in SG. Default.     *
//*              DISALL  ->  System or System Group can't allocate   *
//*                          or  access datasets in SG.              *
//*              DISNEW  ->  System or System Group can't allocate   *
//*                          new datasets in the SG.                 *
//*              NOTCON  ->  System or System Group is  physically   *
//*                          disconnected  form the SG and can not   *
//*                          allocate datasets in it.                *
//*              QUIALL  ->  If JES3, system can not schedule jobs   *
//*                          that allocate or access   datasets in   *
//*                          the SG.  In JES2 system uses  volumes   *
//*                          in the SG for new allocations only if   *
//*                          other volumes are not available.        *
//*              QUINEW  ->  If JES3, system can not schedule jobs   *
//*                          that allocate new datasets in the SG.   *
//*                          In case of JES2, system uses  volumes   *
//*                          in the SG for new allocations only if   *
//*                          other volumes are not available.        *
//*                                                                  *
//*              Up to 32 statuses can be specified separated by     *
//*              commas to match the 32 systems.  If a status is     *
//*              skipped, the system status that falls in between two*
//*              commas will have default value of ENABLE.           *
//*                                                       15A‡WA53756*
//*  SGSTSALL :  This field is similar to SGSTATUS in functionality. *
//*              The difference is that this field accepts a single  *
//*              status value and sets the status of the VIO Storage *
//*              group on all the systems and system groups to this  *
//*              value.                                              *
//*                                                                  *
//*              Possible Values :                                   *
//*                 ENABLE/NOTCON/DISALL/DISNEW/QUIALL/QUINEW        *
//*                                                                  *
//*           Note:  SGSTSALL and SGSTATUS are mutually exclusive.   *
//*                  And so, while specifying value for one of these *
//*                  parameters, either the other parameter should   *
//*                  not be specified or if specified, it should not *
//*                  have any value specified.                       *
//*                                                                  *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                           ‡WA41441*
//*                                                                  *
//*                Possible values : Y/N/BLANK               ‡WA41441*
//************************** ADD END *********************************
//********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAJ8 +
DEFINE/ALTER +
SCDS(TEST.CDS) +
STORGRP(SGVIO) +
DESCR() +
VIOMAX() +
VIOUNIT() +
SGSTATUS() +
SGSTSALL() +
UPDHLVLSCDS() +
)
/*
//

./ ADD NAME=ACBJBAK1
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAK1) COMP(DF123): BATCH - CF LOCK SET DISPLAY /         */
//*                                    UPDATE (DEFINE/ALTER/DELETE)  */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                         */
//* COPYRIGHT IBM CORP. 2008, 2013                               ‡E1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $A0=MULTLCK,HDZ1A10,07/04/27,IBSAS: Support of MULTILOCK     ‡A0A*/
//* $C1=OA34883,HDZ1C10,11/01/14,SVLCY: Correct continuation     ‡C1A*/
//* $E1=OA43011,HDZ2210,13/08/06,IBSTG: Fix incorrect copyright  ‡E1C*/
//********************************************************************/
//*********************************************************************
//*                                                                   *
//* SAMPLE JCL TO DISPLAY / UPDATE CF LOCK SET IN BATCH               *
//*                                                                   *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                 *
//*                                                                   *
//*     CHANGE JOBCARD                                                *
//*     CHANGE PREFIX                                                 *
//*     CHANGE PARAMETERS                                             *
//*                                                                   *
//*   PARAMETER FOLLOWING ACBQBAK1 - UPDATE OR DISPLAY                *
//*********************************************************************
//*                                                                   *
//* Required Fields:                                                  *
//*                                                                   *
//*   SCDS       : Specify the name of the CDS that contains the      *
//*                CF Lock Set you want to Update/Display.            *
//*                                                                   *
//*                Possible values : Valid CDS name.                  *
//*                                                                   *
//*   LSNAME     : Name of the CF Lock Set.                           *
//*   (Note: LSNAME field is required only for display)               *
//*                                                                   *
//*                Possible values :                                  *
//*                                                                   *
//*                1 to 8 alphanumeric characters starting with       *
//*                alphabetic, $, ‡ or £.                             *
//*                                                                   *
//* Optional Fields:                                                  *
//*                                                                   *
//*   LSNAMnnn   : Specify the name of the CF Lock Set that you want  *
//*                to define/alter.  You can define upto 256 CF Lock  *
//*                Sets (nnn = 001 to 256).                           *
//*                                                                   *
//*                Possible Values :                                  *
//*                                                                   *
//*                1 to 8 alphanumeric characters starting with       *
//*                alphabetic, $, ‡ or £.                             *
//*                                                                   *
//*   LSTRNMnnn  : Specify the name of the Structure that you want to *
//*                associate with a particular CF Lock Set. You can   *
//*                define upto 256 Structure Names(nnn = 001 to 256). *
//*                                                                   *
//*                Possible values :                                  *
//*                                                                   *
//*                1 to 16 alphanumerics/underscores starting with    *
//*                with alphabetic, $, ‡, or £                        *
//*                                                                   *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a  *
//*                higher level of SMS, using a lower level of SMS    *
//*                will make this application fail unless you         *
//*                specify the UPDHLVLSCDS parameter as 'Y'.          *
//*                Default is 'N'.                                    *
//*                                                                   *
//*                Possible values : Y/N/BLANK                        *
//*********************************************************************
//*********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAK1 +
UPDATE +
SCDS(TEST.CDS) +
LSNAM001(LSNAM001) +
LSNAM002(LSNAM002) +
LSNAM...(LSNAM...) +
LSNAM256(LSNAM256) +
LSTRNM001(LOCKSTRUCTNM0011) +
LSTRNM002(LOCKSTRUCTNM0021) +
LSTRNM...(LOCKSTRUCTNM...1) +
LSTRNM256(LOCKSTRUCTNM2561) +
UPDHLVLSCDS() +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
/*
//STEP2   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAK1 +
DISPLAY +
SCDS(TEST.CDS) +
LSNAME(*) +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
//

./ ADD NAME=ACBJBAK4
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAK4) COMP(DF123): BATCH - SC CF LOCK DISPLAY            */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//*     COPYRIGHT 2008  IBM CORP.                                    */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $A0=MULTLCK,HDZ1A10,07/04/27,IBSAS: Support of MULTILOCK     ‡A0A*/
//* $A1=K1A1279,HDZ1A10,07/09/22,IBSTG: PTM K1A1279 for MULTLCK  ‡A1A*/
//********************************************************************/
//*********************************************************************
//*                                                                   *
//* SAMPLE JCL TO DISPLAY SC CF LOCK IN BATCH                         *
//*                                                                   *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                 *
//*                                                                   *
//*     CHANGE JOBCARD                                                *
//*     CHANGE PREFIX                                                 *
//*     CHANGE PARAMETERS                                             *
//*                                                                   *
//*   PARAMETER FOLLOWING ACBQBAK4 - DISPLAYLS                   ‡A1C *
//*********************************************************************
//*                                                                   *
//* Required Fields:                                                  *
//*                                                                   *
//*   SCDS       : Specify the name of the CDS that contains the      *
//*                CF LOCK STRUCTURE you want to Display.             *
//*                                                                   *
//*                Possible values : Valid CDS name.                  *
//*                                                                   *
//*   LSTRNM     : Name of the CF LOCK STRUCTURE.                     *
//*                                                                   *
//*                Possible values :                                  *
//*                                                                   *
//*                1 to 16 alphanumerics/underscores starting with    *
//*                alphabetic, $, ‡, or £.  You cannot specify wild   *
//*                characters.                                        *
//*                                                                   *
//*                                                              9‡A1D*
//*********************************************************************
//*********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAS1 +
DISPLAYLS +
SCDS(TEST.CDS) +
LSTRNM(LOCKSTRUCTNAME01) +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
/*

./ ADD NAME=ACBJBAL1
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAL1) COMP(DF123): BATCH - LM DEFINE/ALTER/DISPLAY       */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                         */
//* COPYRIGHT IBM CORP. 2006, 2013                               ‡E1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $Z0=NQTAPELB,HDZ1180,05/05/18,SNJTCS:INITIAL VERSION - TAPELIB   */
//*                                      NQ SUPPORT                  */
//* $A1=K1A1900 ,HDZ1A10,07/10/17,IBSTG : TAPE LIB FIX           ‡A1A*/
//* $D1=OA33953 ,HDZ1D10,11/04/11,IBSTG : Support of 3592 Gen4   ‡D1A*/
//* $E1=OA43011 ,HDZ2210,13/08/06,IBSTG: Fix incorrect copyright ‡E1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER/DISPLAY TAPE LIBRARY IN BATCH         *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//*   PARAMETER FOLLOWING ACBQBAL1 - DEFINE OR ALTER OR DISPLAY      *
//************************* ADD BEG **********************************
//*                                                                  *
//* Required Fields:                                                 *
//*                                                                  *
//*   SCDS       : Specify the name of the CDS  that  contains the   *
//*                Tape Library you want to Define/Alter/Display.    *
//*                                                                  *
//*                Possible values : Valid CDS name                  *
//*                                                                  *
//*   LMNAME     : Name of the Tape Library.                         *
//*                                                                  *
//*                Possible values : 1 - 8 characters                *
//*                                                                  *
//*   LIBID      : Specify the EBCDIC representation of the five     *
//*                digit hexadecimal library sequence number returned*
//*                by the tape control unit in response to a Read    *
//*                Device Characteristics command.                   *
//*                                                                  *
//*                Possible values : 00001 to FFFFF                  *
//*                                                                  *
//*   ENTDEFUSAT : Specify the default volume type for inserted tape *
//*                cartridges.                                       *
//*                                                                  *
//*                Possible values :                                 *
//*                                                                  *
//*                P    ->  PRIVATE                                  *
//*                S    ->  SCRATCH                                  *
//*                                                                  *
//*   EJECTDEF   : Specify the default action for the Tape           *
//*                Configuration Data Base volume record when a tape *
//*                cartridge is ejected from this library.           *
//*                                                                  *
//*                Possible values :                                 *
//*                                                                  *
//*                P    ->  PURGE                                    *
//*                K    ->  KEEP                                     *
//*                                                                  *
//* Optional Fields:                                                 *
//*                                                                  *
//*   CONSOLE    : Specify the name of the MVS console that will be  *
//*                associated with the tape library.                 *
//*                                                                  *
//*                Possible Values :                                 *
//*                                                                  *
//*                2 to 8 alphanumeric characters. The characters    *
//*                £, ‡ or $ is is allowed. The first character must *
//*                be non-numeric.                                   *
//*                                                                  *
//*   ENTDEFDC   : Specify the default data class for inserted tape  *
//*                cartridges.                                       *
//*                                                                  *
//*                Possible values :                                 *
//*                                                                  *
//*                1 to 8 alphanumeric characters. The characters    *
//*                £, ‡ or $ is is allowed. The first character must *
//*                be non-numeric.                                   *
//*                                                                  *
//*   MEDnSCRTHR : Specify the scratch volume message thresholds for *
//*                each supported tape library media type. The tape  *
//*                media types supported are:                        *
//*                                                                  *
//*                  MEDIA1 -> Non Scalable Cartridge System Tape    *
//*                  MEDIA2 -> Enhanced Capacity Non Scalable        *
//*                            Cartridge System Tape                 *
//*                  MEDIA3 -> High Performance Non Scalable         *
//*                            Cartridge Tape                        *
//*                  MEDIA4 -> Extended High Performance Non Scalable*
//*                            Cartridge Tape                        *
//*                  MEDIA5 -> Enterprise Tape Cartridge 3592        *
//*                  MEDIA6 -> 300 GB WORM Non Scalable Cartridge    *
//*                  MEDIA7 -> 60 GB RW Non Scalable Cartridge       *
//*                  MEDIA8 -> 60 GB WORM Non Scalable Cartridge     *
//*                  MEDIA9 -> Enterprise Extended Tape        4‡A1A *
//*                            Cartridge 3592                        *
//*                  MEDIA10-> Enterprise Extended WORM Tape         *
//*                            Cartridge 3592                        *
//*                  MEDIA11-> Enterprise Advanced Tape        6‡D1A *
//*                            Cartridge 3592                        *
//*                  MEDIA12-> Enterprise Advanced WORM Tape         *
//*                            Cartridge 3592                        *
//*                  MEDIA13-> Enterprise Advanced Economy Tape      *
//*                            Cartridge 3592                        *
//*                                                                  *
//*                Possible Values : 0 to 999999                     *
//*                                                                  *
//*   INONSTAT   : Specify the initial status of a tape library, on  *
//*                the systems and system groups defined in an SCDS. *
//*                                                                  *
//*                Possible Values : YES, NO or Blank                *
//*                                                                  *
//*                Up to 32 statuses can be specified separated by   *
//*                commas to match the 32 systems.  If a status is   *
//*                skipped, the system status that falls in between  *
//*                two commas will have default value of Blank.      *
//*                                                                  *
//*   INSTATALL  : This field is similar to INONSTAT in              *
//*                functionality. The difference is that this field  *
//*                accepts a single status value and sets the status *
//*                of the Tape Library on all the systems and system *
//*                groups to this value.                             *
//*                                                                  *
//*                Possible Values : YES, NO or Blank                *
//*                                                                  *
//*        Note  : INONSTAT and INSTATAL are mutually exclusive.     *
//*                And so, while specifying value for one of these   *
//*                parameters, either the other parameter should     *
//*                not be specified or if specified, it should not   *
//*                have any value specified.                         *
//*                                                                  *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                                   *
//*                                                                  *
//*                Possible values : YES, NO or Blank                *
//************************* ADD BEG **********************************
//********************************************************************
//********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAL1 +
DEFINE/ALTER +
SCDS(TEST.CDS) +
LMNAME() +
DESCR() +
LIBID() +
ENTDEFUSAT() +
EJECTDEF() +
CONSOLE() +
ENTDEFDC() +
MD1SCRTH(0) +
MD2SCRTH(0) +
MD3SCRTH(0) +
MD4SCRTH(0) +
MD5SCRTH(0) +
MD6SCRTH(0) +
MD7SCRTH(0) +
MD8SCRTH(0) +
MD9SCRTH(0) +
MD10SCRTH(0) +
MD11SCRTH(0) +
MD12SCRTH(0) +
MD13SCRTH(0) +
INONSTAT() +
INSTATALL() +
UPDHLVLSCDS() +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
/*
//STEP2   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAL1 +
DISPLAY +
SCDS(TEST.CDS) +
LMNAME() +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
//

./ ADD NAME=ACBJBAL4
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAL4) COMP(DF123): BATCH - Tape Library List             */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 2006 IBM CORP.                                     */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $Z0=NQTAPELB,HDZ1180,05/15/08,SNJTCS:INITIAL VERSION - TAPELIB   */
//*                                      NQ SUPPORT                  */
//********************************************************************
//*                                                                  *
//* Sample JCL to generate Tape Library list and save it.            *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Tape Library list and save it                   *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   LMNAMES - Saved list name         (OUTPUT)                     *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   LIBRARY - Tape Library name         (Wild cards allowed)       *
//*                                                                  *
//********************************************************************
//GENDCLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAL4 SAVE LMNAMES +
SCDS(SCDS) LIBRARY(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAL5
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAL5) COMP(DF123): BATCH - Tape Library Report           */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                         */
//* COPYRIGHT IBM CORP. 2006, 2013                               ‡E1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $Z0=NQTAPELB,HDZ1180,05/15/08,SNJTCS:INITIAL VERSION - TAPELIB   */
//*                                      NQ SUPPORT                  */
//* $A1=OA23769 ,HDZ1A10,08/04/23,IBSTG : TAPE LIB FIX           ‡A1A*/
//* $D1=OA33953 ,HDZ1D10,11/04/11,IBSTG : Support of 3592 Gen4   ‡D1A*/
//* $E1=OA43011 ,HDZ2210,13/08/06,IBSTG: Fix incorrect copyright ‡E1A*/
//********************************************************************/
//* Sample JCL to generate Tape Library report from a previously     *
//* saved ISMF Tape Library list.                                    *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELREPDS EXEC  PGM=IDCAMS
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
 DELETE IBMUSER.LMNAMS.REPORT
/*
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: the data set being allocated should NOT be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=IBMUSER.LMNAMS.REPORT,DISP=(NEW,CATLG),
//         BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
/*
//********************************************************************
//*                                                                  *
//* Report generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBAL5 :-                              *
//*                                                                  *
//*     ISPFILE - Tape Library report  DSN                           *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*    The following keywords can be used in the SYSIN DS.           *
//*                                                                  *
//*  ------------------------------------------------------------    *
//*    LEN    KEYWORD                  DESC                          *
//*  ------------------------------------------------------------    *
//*                                                                  *
//*     9     LIBRARY                - Library Name.                 *
//*     9     DEVICE                 - Device Type.                  *
//*     10    LIBTYPE                - Library Type.                 *
//*     8     LIBID                  - Library Id.                   *
//*     9     CONSOLE                - Console Name.                 *
//*     11    ENTDEFDC               - Entry Def Data Class.         *
//*     10    ENTDEFUSAT             - Entry Def Use Attr.           *
//*     8     EJECTDEF               - Eject Default.                *
//*     7     NUMSLOT                - Num Slots.                    *
//*     7     EMPTSLOT               - Empty Slots.                  *
//*     8     MD1SCRNM               - Media1 SCR NUM.               *
//*     8     MD1SCRTH               - Media1 SCR THR.               *
//*     8     MD2SCRNM               - Media2 SCR NUM.               *
//*     8     MD2SCRTH               - Media2 SCR THR.               *
//*     8     MD3SCRNM               - Media3 SCR NUM.               *
//*     8     MD3SCRTH               - Media3 SCR THR.               *
//*     8     MD4SCRNM               - Media4 SCR NUM.               *
//*     8     MD4SCRTH               - Media4 SCR THR.               *
//*     8     MD5SCRNM               - Media5 SCR NUM.               *
//*     8     MD5SCRTH               - Media5 SCR THR.               *
//*     8     MD6SCRNM               - Media6 SCR NUM.               *
//*     8     MD6SCRTH               - Media6 SCR THR.               *
//*     8     MD7SCRNM               - Media7 SCR NUM.               *
//*     8     MD7SCRTH               - Media7 SCR THR.               *
//*     8     MD8SCRNM               - Media8 SCR NUM.               *
//*     8     MD8SCRTH               - Media8 SCR THR.               *
//*     8     MD9SCRNM               - Media9 SCR NUM.          4‡A1A*
//*     8     MD9SCRTH               - Media9 SCR THR.               *
//*     8     MD10SCRN               - Media10 SCR NUM.              *
//*     8     MD10SCRT               - Media10 SCR THR.              *
//*     8     MD11SCRN               - Media11 SCR NUM.         6‡D1A*
//*     8     MD11SCRT               - Media11 SCR THR.              *
//*     8     MD12SCRN               - Media12 SCR NUM.              *
//*     8     MD12SCRT               - Media12 SCR THR.              *
//*     8     MD13SCRN               - Media13 SCR NUM.              *
//*     8     MD13SCRT               - Media13 SCR THR.              *
//*     9     LSTMDUID               - Last mod userid.              *
//*    11     LSTMDDATE              - Last date modified.           *
//*    10     LSTMDTIME              - Last time modified.           *
//********************************************************************
//GENDCREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//ISPFILE  DD    DSN=IBMUSER.LMNAMS.REPORT,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAL5 LMNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
LIBRARY
DEVICE
LIBTYPE
TITLE=STATUS OF Tape Libraries AS OF 07/21/2012
/*
//********************************************************************
//*                                                                  *
//* Copy the Tape Library report                                     *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYDCREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=IBMUSER.LMNAMS.REPORT,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAL6
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAL6) COMP(DF123): BATCH  - Generates Tape Library       */
//*                                     list and Report              */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                         */
//* COPYRIGHT IBM CORP. 2006, 2013                               ‡E1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $Z0=NQTAPELB,HDZ1180,05/15/08,SNJTCS:INITIAL VERSION - TAPELIB   */
//*                                      NQ SUPPORT                  */
//* $A1=OA23769 ,HDZ1A10,08/04/23,IBSTG : TAPE LIB FIX           ‡A1A*/
//* $D1=OA33953 ,HDZ1D10,11/04/11,IBSTG : Support of 3592 Gen4   ‡D1A*/
//* $E1=OA43011 ,HDZ2210,13/08/06,IBSTG: Fix incorrect copyright ‡E1A*/
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate an ISMF Tape Library list, save it, and   *
//* generate Tape Library report from it.                            *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Tape Library list and save it                   *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   LMNAMES  - Saved list name        (OUTPUT)                     *
//*   SCDS     - SCDS dataset name      (Valid SCDS dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   LIBRARY  - Tape Library Name      (Wild cards allowed)         *
//*                                                                  *
//********************************************************************
//GENDCLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAL4 SAVE LMNAMES +
SCDS(SCDS) LIBRARY(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELREPDS EXEC  PGM=IDCAMS
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
 DELETE IBMUSER.LMNAMS.REPORT
/*
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: the data set being allocated should NOT be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=IBMUSER.LMNAMS.REPORT,DISP=(NEW,CATLG),
//         BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
/*
//********************************************************************
//*                                                                  *
//* Report Generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBAL5 :-                              *
//*                                                                  *
//*       LMNAMES - ISMF saved list name (input)                     *
//*                                                                  *
//*     ISPFILE - Tape Library report  DSN                           *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*    The following keywords can be used in the SYSIN DS.           *
//*                                                                  *
//*  ------------------------------------------------------------    *
//*    LEN    KEYWORD                  DESC                          *
//*  ------------------------------------------------------------    *
//*                                                                  *
//*     9     LIBRARY                - Library Name.                 *
//*     9     DEVICE                 - Device Type.                  *
//*     10    LIBTYPE                - Library Type.                 *
//*     8     LIBID                  - Library Id.                   *
//*     9     CONSOLE                - Console Name.                 *
//*     11    ENTDEFDC               - Entry Def Data Class.         *
//*     10    ENTDEFUSAT             - Entry Def Use Attr.           *
//*     8     EJECTDEF               - Eject Default.                *
//*     7     NUMSLOT                - Num Slots.                    *
//*     7     EMPTSLOT               - Empty Slots.                  *
//*     8     MD1SCRNM               - Media1 SCR NUM.               *
//*     8     MD1SCRTH               - Media1 SCR THR.               *
//*     8     MD2SCRNM               - Media2 SCR NUM.               *
//*     8     MD2SCRTH               - Media2 SCR THR.               *
//*     8     MD3SCRNM               - Media3 SCR NUM.               *
//*     8     MD3SCRTH               - Media3 SCR THR.               *
//*     8     MD4SCRNM               - Media4 SCR NUM.               *
//*     8     MD4SCRTH               - Media4 SCR THR.               *
//*     8     MD5SCRNM               - Media5 SCR NUM.               *
//*     8     MD5SCRTH               - Media5 SCR THR.               *
//*     8     MD6SCRNM               - Media6 SCR NUM.               *
//*     8     MD6SCRTH               - Media6 SCR THR.               *
//*     8     MD7SCRNM               - Media7 SCR NUM.               *
//*     8     MD7SCRTH               - Media7 SCR THR.               *
//*     8     MD8SCRNM               - Media8 SCR NUM.               *
//*     8     MD8SCRTH               - Media8 SCR THR.               *
//*     8     MD9SCRNM               - Media9 SCR NUM.          4‡A1A*
//*     8     MD9SCRTH               - Media9 SCR THR.               *
//*     8     MD10SCRN               - Media10 SCR NUM.              *
//*     8     MD10SCRT               - Media10 SCR THR.              *
//*     8     MD11SCRN               - Media11 SCR NUM.         6‡D1A*
//*     8     MD11SCRT               - Media11 SCR THR.              *
//*     8     MD12SCRN               - Media12 SCR NUM.              *
//*     8     MD12SCRT               - Media12 SCR THR.              *
//*     8     MD13SCRN               - Media13 SCR NUM.              *
//*     8     MD13SCRT               - Media13 SCR THR.              *
//*     9     LSTMDUID               - Last mod userid.              *
//*    11     LSTMDDATE              - Last date modified.           *
//*    10     LSTMDTIME              - Last time modified.           *
//********************************************************************
//GENDCREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//ISPFILE  DD    DSN=IBMUSER.LMNAMS.REPORT,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAL5 LMNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
LIBRARY
DEVICE
LIBTYPE
TITLE=STATUS OF Tape Libraries AS OF 07/21/2012
/*
//********************************************************************
//*                                                                  *
//* Copy the Tape Library report                                     *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYDCREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=IBMUSER.LMNAMS.REPORT,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAL7
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAL7) COMP(DF123): BATCH - Tape Library Delete           */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 2006 IBM CORP.                                     */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $Z0=NQTAPELB,HDZ1180,05/15/08,SNJTCS:INITIAL VERSION - TAPELIB   */
//*                                      NQ SUPPORT                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* Sample JCL to Delete a Tape Library construct                    *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*       CHANGE JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to Delete             *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* STEP TO DELETE A DATA CLASS                                      *
//*                                                                  *
//*   PARAMETERS FOLLOWING DELETE :-                                 *
//*                                                                  *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*   LIBRARY - Library Name            (Wild cards not allowed)     *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                                   *
//*                Possible values : Yes, No or Blank                *
//*                                                                  *
//********************************************************************
//GENLIST  EXEC  ACBJBAOB
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAL4 DELETE +
SCDS(TEMP.SCDS) +
LIBRARY() +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAM1
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//*******************************************************************/
//*$MAC(ACBJBAM1) COMP(5695DF123): BATCH  - GENERATES MODEL COMMANDS */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5695-DF1                                                         */
//* (C) COPYRIGHT 1996,1998  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*10/15/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE MODEL COMMANDS FROM A SAVED ISMF DATA     *
//* SET LIST IN BATCH                                                *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                                  *
//*   PARAMETERS:                                                    *
//*                                                                  *
//*      PARAMETER FOLLOWING ACBQBAM1 - SAVED ISMF LIST NAME         *
//*                                     DATA SET OR DASD VOLUME LIST *
//*      REST OF THE PARAMETERS - MODEL COMMAND FOR GENERATION       *
//*                                                                  *
//********************************************************************
//GENCMDS EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB,TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(%ACBQBAM1 DSNLIST +
DD DSN=/,VOL=SER=‡ +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//*

./ ADD NAME=ACBJBAM2
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAM2) COMP(5695DF123): BATCH  - XXXX                     */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5695-DF1                                                         */
//* (C) COPYRIGHT 1996, 1998 IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//*                                                                  */
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: INITIAL VERSION        ‡L0A*/
//*$L1=KN20035,HACS120,96/07/13,SNJTCS: CHANGED PARAMETERS       ‡L1A*/
//*10/15/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE MODEL COMMANDS FROM DCOLLECT DATA         *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*     CHANGE DCOLIN DD                                             *
//*                                                                  *
//*   PARAMETERS:                                                    *
//*                                                                  *
//*     DCOLIN - DCOLLECT DATA (INPUT)                               *
//*     PARAMETERS FOLLOWING ACBQBAM2 - MODEL COMMAND FOR GENERATION *
//*                                                                  *
//********************************************************************
//STEP1   EXEC  ACBJBAOB,TABL2=userid.TEST.ISPTABL
//DCOLIN  DD  DSN=IBMUSER.DCOLLECT.DATA,DISP=SHR
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(%ACBQBAM2 DSN=/,VOL=SER=‡) +
BDISPMAX(999999999) BREDIMAX(3) BATSCRW(132) BATSCRD(27)
/*
//*

./ ADD NAME=ACBJBAN1
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAN1) COMP(DF123): BATCH - CF CACHE SET DISPLAY /        */
//*                                    UPDATE (DEFINE/ALTER/DELETE)  */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//*     COPYRIGHT 2008  IBM CORP.                                    */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $A0=MULTLCK,HDZ1A10,07/04/27,IBSAS: Support of MULTILOCK     ‡A0A*/
//********************************************************************/
//*********************************************************************
//*                                                                   *
//* SAMPLE JCL TO DISPLAY / UPDATE CF CACHE SET IN BATCH              *
//*                                                                   *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                 *
//*                                                                   *
//*     CHANGE JOBCARD                                                *
//*     CHANGE PREFIX                                                 *
//*     CHANGE PARAMETERS                                             *
//*                                                                   *
//*   PARAMETER FOLLOWING ACBQBAN1 - UPDATE OR DISPLAY                *
//*********************************************************************
//*                                                                   *
//* Required Fields:                                                  *
//*                                                                   *
//*  SCDS       : Specify the name of the CDS that contains the       *
//*               CF Cache Set you want to Update/Display.            *
//*                                                                   *
//*               Possible values : Valid CDS name.                   *
//*                                                                   *
//*  CSNAME     : Name of the CF Cache Set.                           *
//*  (Note: CSNAME field is required only for display)                *
//*                                                                   *
//*               Possible values : 1 - 8 characters                  *
//*                                                                   *
//* Optional Fields:                                                  *
//*                                                                   *
//*  CSNAMnnn  :  Specify the name of the CF Cache Set that you want  *
//*               to define/alter.  You can define upto 256 CF Cache  *
//*               Sets (nnn = 001 to 256).                            *
//*                                                                   *
//*               Possible Values :                                   *
//*                                                                   *
//*               1 to 8 alphanumeric characters starting with        *
//*               alphabetic, $, ‡ or £.                              *
//*                                                                   *
//*  CSTRNMnnn  : Specify the names of the Structures that you want   *
//*               to associate with a particular CF Cache Set. Each   *
//*               Keyword CSTRNMnnn (nnn = 001 to 256) can have upto  *
//*               8 (comma delimited) Cache Structure names.          *
//*                                                                   *
//*               Possible values :                                   *
//*                                                                   *
//*               1 to 16 alphanumerics/underscores starting with     *
//*               with alphabetic, $, ‡, or £                         *
//*                                                                   *
//*  UPDHLVLSCDS: When modifying an SCDS, that was formatted with a   *
//*               higher level of SMS, using a lower level of SMS     *
//*               will make this application fail unless you          *
//*               specify the UPDHLVLSCDS parameter as 'Y'.           *
//*               Default is 'N'.                                     *
//*                                                                   *
//*               Possible values : Y/N/BLANK                         *
//*********************************************************************
//*********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAN1 +
UPDATE +
SCDS(TEST.CDS) +
CSNAM001(CACHE001) +
CSNAM002(CACHE002) +
CSNAM...(CACHE...) +
CSNAM256(CACHE256) +
CSTRNM001(CACHESTRCTNM0011,CACHESTRCTNM0012,CACHESTRCTNM0013, +
 CACHESTRCTNM0014,CACHESTRCTNM0015,CACHESTRCTNM0016, +
 CACHESTRCTNM0017,CACHESTRCTNM0018) +
CSTRNM002(CACHESTRCTNM0021,CACHESTRCTNM0022,CACHESTRCTNM0023) +
CSTRNM...() +
CSTRNM256() +
UPDHLVLSCDS() +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
/*
//STEP2   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAN1 +
DISPLAY +
SCDS(TEST.CDS) +
CSNAME(*) +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
//

./ ADD NAME=ACBJBAN4
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAN4) COMP(DF123): BATCH - SC CF CACHE DISPLAY           */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                     ‡G1C*/
//* COPYRIGHT IBM CORP. 2008, 2017                               ‡G1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $A0=MULTLCK,HDZ1A10,07/04/27,IBSAS: Support of MULTILOCK     ‡A0A*/
//* $A1=K1A1279,HDZ1A10,07/09/22,IBSTG: PTM K1A1279 for MULTLCK  ‡A1A*/
//* $G1=159075 ,HDZ2230,17/02/15,IBSTG: Fix for uplevel SCDS     ‡G1A*/
//********************************************************************/
//*********************************************************************
//*                                                                   *
//* SAMPLE JCL TO DISPLAY SC CF CACHE IN BATCH                        *
//*                                                                   *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                 *
//*                                                                   *
//*     CHANGE JOBCARD                                                *
//*     CHANGE PREFIX                                                 *
//*     CHANGE PARAMETERS                                             *
//*                                                                   *
//*   PARAMETER FOLLOWING ACBQBAK4 - DISPLAYCS                    ‡A1C*
//*********************************************************************
//*                                                                   *
//* Required Fields:                                                  *
//*                                                                   *
//*   SCDS       : Specify the name of the CDS that contains the      *
//*                CF CACHE STRUCTURE you want to Display.            *
//*                                                                   *
//*                Possible values : Valid CDS name.                  *
//*                                                                   *
//*   CSTRNM     : Name of the CF CACHE STRUCTURE.                    *
//*                                                                   *
//*                Possible values :                                  *
//*                                                                   *
//*                1 to 16 alphanumerics/underscores starting with    *
//*                alphabetic, $, ‡, or £.  You cannot specify wild   *
//*                characters.                                        *
//*                                                                   *
//*                                                              9‡A1D*
//*********************************************************************
//*********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAS1 +
DISPLAYCS +
SCDS(TEST.CDS) +
CSTRNM(CACHESTRUCTNAME1) +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
/*

./ ADD NAME=ACBJBAOB
//ACBJBAOB PROC CLIST1='SYS1.DGTCLIB',
//*------------------------------------------------------------------*/
//* CLIST1 SHOULD BE THE FILE £1 FROM THE INSTALLATION TAPE          */
//* NOTE THAT THIS IS A FB CLIST LIBRARY; IF YOUR INSTALLATION       */
//* USES VB CLIST LIBRARIES, YOU MUST CONVERT THEM YOURSELF          */
//*------------------------------------------------------------------*/
//             PLIB1='SYS1.DGTPLIB',
//*------------------------------------------------------------------*/
//* PLIB1 SHOULD BE THE FILE £3 FROM THE INSTALLATION TAPE           */
//*------------------------------------------------------------------*/
//             LOAD1='SYS1.DGTLLIB',
//*------------------------------------------------------------------*/
//* LOAD1 SHOULD BE THE FILE £5 FROM THE INSTALLATION TAPE           */
//*------------------------------------------------------------------*/
//             MLIB1='SYS1.DGTMLIB',
//*------------------------------------------------------------------*/
//* MLIB1 SHOULD BE THE FILE £6 FROM THE INSTALLATION TAPE           */
//*------------------------------------------------------------------*/
//             TABL2='userid.TEST.ISPTABL'
//*------------------------------------------------------------------*/
//* TABL2 IS THE DATA SET FOR SAVING ISMF TABLES; YOU SHOULD         */
//* ALLOCATE THIS DATA SET WITH THE SAME DCB PARAMETERS AS THE       */
//* ISMF DGTTLIB DATA SET; TABLE CAN BE LARGE - ALLOCATE A LARGE     */
//* DATA SET.  Be sure you change 'userid' to YOUR userid.           */
//*------------------------------------------------------------------*/
//********************************************************************/
//*$MAC(ACBJBAOB) COMP(5695DF123): BATCH  - CALLED PROC              */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5647-A01                                                         */
//* (C) COPYRIGHT 1995, 2000  IBM CORP.                              */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        ‡WA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*$L1=KN20035,HACS120,96/07/12,SNJTCS: TYPO CORRECTED           ‡L0A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//*06/13/97  CCY - HDZ11D0: Change IBMUSER to 'userid'       ‡WA27246*/
//*$T1=NQ5,HDZ11E0,061997,SNJTCS: ISP V3R5M0 Datasets deleted    ‡T1A*/
//*08/27/98  TCS - HDZ11D0: BLKSIZE=0  fix                   ‡WA34895*/
//*11/23/98  TCS - HDZ11E0: Add missing comma                ‡WA36007*/
//*01/21/99  TCS - HDZ11E0: Changing UNIT from 3380 to SYSDA ‡WA36897*/
//*                                                                  */
//********************************************************************/
//********************************************************************/
//* PROC STEP STEP1 - INVOKES IKJEFT01                               */
//********************************************************************/
//STEP1    EXEC PGM=IKJEFT01,DYNAMNBR=50,REGION=(6144K),TIME=(300)
//*------------------------------------------------------------------*/
//STEPLIB  DD DSN=&LOAD1,DISP=SHR
//*------------------------------------------------------------------*/
//* IN ISPPLIB, INCLUDE THE ISPF, PDF, ISMF AND NAVIQUEST PANELS     */
//*------------------------------------------------------------------*/
//ISPPLIB  DD DSN=&PLIB1,DISP=SHR,BLKSIZE=0
//         DD DSN=ISP.SISPPENU,DISP=SHR            /* ISPF PANELS    */
//*        DD DSN=SYS1.DGTPLIB,DISP=SHR            /* ISMF PANELS    */
//*------------------------------------------------------------------*/
//* IN ISPMLIB, INCLUDE THE ISPF, PDF, ISMF AND NAVIQUEST MESSAGES   */
//*------------------------------------------------------------------*/
//ISPMLIB  DD DSN=&MLIB1,DISP=SHR,BLKSIZE=0
//         DD DSN=ISP.SISPMENU,DISP=SHR            /* ISPF MESSAGES  */
//*        DD DSN=SYS1.DGTMLIB,DISP=SHR            /* ISMF MESSAGES  */
//*------------------------------------------------------------------*/
//* IN ISPSLIB, INCLUDE THE ISPF, PDF AND ISMF SKELETONS             */
//*------------------------------------------------------------------*/
//ISPSLIB  DD DSN=ISP.SISPSENU,DISP=SHR,           /* ISPF SKELETONS */
//          BLKSIZE=0
//         DD DSN=SYS1.DGTSLIB,DISP=SHR            /* ISMF SKELETONS */
//*------------------------------------------------------------------*/
//* IN ISPTLIB, INCLUDE THE ISPF, PDF, ISMF AND NAVIQUEST TABLES     */
//*------------------------------------------------------------------*/
//ISPTLIB  DD DSN=&&TEMP,DISP=NEW,UNIT=SYSDA,BLKSIZE=0,
//            SPACE=(TRK,(1,1,1)),DCB=(ISP.SISPTENU)
//         DD DSN=&TABL2,DISP=SHR
//         DD DSN=ISP.SISPTENU,DISP=SHR            /* ISPF TABLES    */
//         DD DSN=SYS1.DGTTLIB,DISP=SHR            /* ISMF TABLES    */
//*------------------------------------------------------------------*/
//* IN SYSPROC, INCLUDE THE ISPF, PDF, ISMF AND NAVIQUEST CLISTS     */
//*------------------------------------------------------------------*/
//SYSPROC  DD DSN=&CLIST1,DISP=SHR,BLKSIZE=0
//         DD DSN=ISP.SISPCLIB,DISP=SHR            /* ISPF CLISTS    */
//*        DD DSN=SYS1.DGTCLIB,DISP=SHR            /* ISMF CLISTS    */
//*------------------------------------------------------------------*/
//ISPTABL  DD DSN=&TABL2,DISP=SHR,BLKSIZE=0
//SYSPRINT DD SYSOUT=(,)
//SYSUDUMP DD SYSOUT=*
//SYSTSPRT DD SYSOUT=(,),OUTLIM=20000
//ISPLOG   DD SYSOUT=(,),DCB=(LRECL=125,BLKSIZE=129,RECFM=VA)
//ISPPROF  DD DSN=&&PROF,DISP=(NEW,DELETE,DELETE),
//         DCB=(ISP.SISPTENU),SPACE=(TRK,(1,1,1)),UNIT=SYSDA
//         PEND

./ ADD NAME=ACBJBAOD
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAOD) COMP(DF123):BATCH-GENERATE REPORT FROM DSN TBL ‡A1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2‡G1C*/
//* COPYRIGHT IBM CORP. 1996, 2017                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        ‡WA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//*11/18/98  TCS - HDZ11E0: Fix for ISPFILE problem          ‡WA36007*/
//*$U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for   2‡U1A*/
//*                                       DFSMS/MVS ISMF V2R10       */
//*$U2=K160456  ,HDZ11F0,99/09/16,SNJTCS: Documentation Erros   2‡U2A*/
//*                                       in $U1.                    */
//*$A1=MULTLCK,HDZ1A10,07/04/27,IBSAS: Support of MULTILOCK      ‡A1A*/
//*$B1=EAV2   ,HDZ1B10,08/06/10,IBSTG: EATTR keyword support     ‡B1A*/
//*$G1=FP0454 ,HDZ2230,15/10/26,IBSTG: DS Encryption             ‡G1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE DATA SET REPORT FROM A PREVIOUSLY SAVED   *
//* ISMF DATA SET LIST                                               *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* DELETE STEP TO DELETE THE REPORT DATA SET IF IT EXISTS ALREADY   *
//*                                                                  *
//********************************************************************
//DELREP   EXEC  PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 DELETE IBMUSER.DATASET.REPORT
/*
//********************************************************************
//*                                                                  *
//* STEP TO ALLOCATE ISPFILE, WHERE THE GENERATED REPORT IS SAVED    *
//* NOTE: THE DATA SET BEING ALLOCATED SHOULD NOT BE A TEMPORARY     *
//*       DATA SET.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=IBMUSER.DATASET.REPORT,DISP=(NEW,CATLG),
//    BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD SYSOUT=*
//SYSIN  DD *
/*
//********************************************************************
//*                                                                  *
//* DATA SET REPORT GENERATION STEP                                  *
//*                                                                  *
//*    PARAMETER FOLLOWING ACBQBAR1 - SAVED ISMF LIST (INPUT)        *
//*    ISPFILE - DATA SET REPORT (OUTPUT, FROM ALCISPFL STEP)        *
//*    SYSIN   - KEY WORDS SPECIFYING DATA IN THE REPORT             *
//*                                                                  *
//*    The Following parameters can be specified in SYSIN      42‡U1A*
//*                                                                  *
//*    %NOTUSED                ->   % Space Not Used.                *
//*    ALLOCSP    ! ALLOCSPC   ->   Allocated Space.                 *
//*    ALLOCUSED               ->   Used Space.                      *
//*    BACKUP     ! LASTBKUP   ->   Last Backup Date.                *
//*    BLKSIZE    ! CISIZE     ->   Block/CI Size.                   *
//*    BLKUNUSED               ->   Blocks Unused.                   *
//*    CCSIDDES                ->   CCSID Description.               *
//*    CFMONST                 ->   CF Monitor Status.               *
//*    CFSTATUS                ->   CF Status Indicator.             *
//*    CHANGE     ! CHGIND     ->   Change Indicator.                *
//*    COMPRESS                ->   Compressed Format.               *
//*    CREATE     ! CREATEDT   ->   Creation Date.                   *
//*    CSETNAME                ->   CF Cache set name.          1‡U2C*
//*    CSTRNAME                ->   CF Cache Structure Name.         *
//*    DC         ! DATACLAS   ->   Data Class Name.                 *
//*    DDMATTR                 ->   DDM attribute.                   *
//*    DEVICE     ! DEVTYPE    ->   Device Type.                     *
//*    DSNAME     ! DSN        ->   Dataset Name.                    *
//*    DSNAMETY                ->   Dataset Name Type.               *
//*    DSORG                   ->   Data Set Organization.           *
//*    ENCRIND                 ->   Encryption Indicator.        ‡G1A*
//*    ENTRY      ! ENTRYTYPE  ->   Dataset Entry Type.              *
//*    ENVIRONMANT! ENVIR      ->   Dataset Environment.             *
//*    EXPIRE     ! EXPIREDT   ->   Expiration Date.                 *
//*    LASTREF    ! LASTREFDT  ->   Last referenced Date.            *
//*    LRECL                   ->   Record Length.                   *
//*    MC         ! MGMTCLAS   ->   Management Class Name.           *
//*    MULTVOL                 ->   Multi Volume Status.             *
//*    NUMEXT     ! EXTNUM     ->   Number of Extents.               *
//*    NUMSTR                  ->   Number of Stripes.               *
//*    OPTIMAL                 ->   Optimal Block/CI Size.           *
//*    OWNER                   ->   Owner.                           *
//*    REBLK      ! REBLOCK    ->   Reblock Indicator.               *
//*    RECFM      ! RECFMT     ->   Record Format.                   *
//*    SC         ! STORCLAS   ->   Storage Class Name.              *
//*    SECALLOC   ! ALLOCSEC   ->   Secondary Allocation.            *
//*    TOTALS                  ->                                    *
//*    UNIT       ! ALLOCUNI   ->   Allocation Unit.                 *
//*    USERRED%                ->   % User Data Reduction.           *
//*    VOLSER                  ->   Volume Serial.                   *
//*    LSETNAME                ->   CF Lock set name.            ‡A1A*
//*    LSTRNAME                ->   CF Lock Structure Name .     ‡A1A*
//*    EATTR                   ->   EATTR.                       ‡B1A*
//********************************************************************
//GENREP  EXEC ACBJBAOB,
//        PLIB1=SYS1.DGTPLIB,
//        TABL2=userid.TEST.ISPTABL
//ISPFILE DD  DSN=IBMUSER.DATASET.REPORT,DISP=OLD
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAR1 DSNLIST) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN DD  *
TITLE=LIST OF DATASETS FOR HIGHLEVEL QUALIFIER IBMUSER
DSN
VOLSER
LASTREF
EXTNUM
TOTALS
/*
//********************************************************************
//*                                                                  *
//* COPY THE DATA SET REPORT                                         *
//*                                                                  *
//*    SYSUT1 - INPUT (FROM PREVIOUS STEP)                           *
//*    SYSUT2 - OUTPUT                                               *
//*                                                                  *
//********************************************************************
//STEP2  EXEC PGM=IEBGENER
//SYSUT1   DD  DSN=IBMUSER.DATASET.REPORT,DISP=SHR
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//*

./ ADD NAME=ACBJBAOF
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAOF) COMP(DF123):BATCH-GENERATES REPORT FROM VOLUME ‡A0C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                    2‡A0C*/
//* COPYRIGHT 1996,2011  IBM CORP.                               ‡D1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        ‡WA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//*11/18/98  TCS - HDZ11E0: Fix for ISPFILE problem          ‡WA36007*/
//*$U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for   2‡U1A*/
//*                                       DFSMS/MVS ISMF V2R10       */
//*$A0=EAV    ,HDZ1A10,06/09/27,IBSTG : EAV Support              ‡A0A*/
//*$D1=SORT   ,HDZ1D10,10/03/26,IBSTG : SORT Volume List Support ‡D1A*/
//*$D2=OA38673,HDZ1D10,11/11/28,IBSTG : Support of SMA SPE       ‡D2A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO SORT A PREVIOUSLY SAVED DASD VOLUME LIST AND   ‡D1C*
//* GENERATE A DASD VOLUME REPORT FROM IT.                       ‡D1C*
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*       CHANGE JOBCARD                                             *
//*       CHANGE PREFIX                                              *
//*       CHANGE PARAMETERS                                          *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* DELETE STEP TO DELETE THE REPORT IF IT EXISTS ALREADY            *
//*                                                                  *
//********************************************************************
//DELREP  EXEC  PGM=IDCAMS
//SYSPRINT  DD  SYSOUT=*
//SYSIN     DD  *
 DELETE IBMUSER.DASDVOL.REPORT
/*
//********************************************************************
//*                                                                  *
//* STEP TO ALLOCATE ISPFILE, WHERE THE GENERATED REPORT IS SAVED    *
//* NOTE: THE DATA SET BEING ALLOCATED SHOULD NOT BE A TEMPORARY     *
//*       DATA SET.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=IBMUSER.DASDVOL.REPORT,DISP=(NEW,CATLG),
//    BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD SYSOUT=*
//SYSIN  DD *
/*
//********************************************************************
//*                                                                  *
//* STEP TO SORT A PREVIOUSLY SAVED DASD VOLUME LIST AND         ‡D1C*
//* GENERATE A DASD VOLUME REPORT FROM IT.                       ‡D1A*
//*                                                                  *
//* PARAMETERS FOLLOWING ACBQVAR1 - ISMF SAVED LIST (INPUT);     ‡D1C*
//*                                 SORT(column name) (INPUT) - 3‡D1A*
//*                                 to sort list by the data column  *
//*                                 in ascending order.              *
//*    ISPFILE - DASD VOLUME REPORT (OUTPUT, FROM ALCISPFL STEP)     *
//*    SYSIN   - KEY WORDS TO SPECIFY THE DATA IN THE REPORT         *
//*                                                                  *
//*    The following parameters can be specified in SYSIN.    25‡U1A *
//*                                                                  *
//*    VOLSER                 ->    Volume Serial                    *
//*    FREESPC   ! FREESP     ->    Free Space                       *
//*    FRSPCTRK  ! FRSPTRK    ->    Free Space in TRK-Managed    ‡A0A*
//*    %FREE                  ->    % Free                           *
//*    ALLOCSPC  ! ALLOCSP    ->    Allocated Space                  *
//*    ALSPCTRK  ! ALSPTRK    ->    Alloc Space in TRK-Managed   ‡A0A*
//*    FRAG      ! FRAGINDX   ->    Fragmentation Index              *
//*    LRGEXT    ! EXTLRG     ->    Largest Extent                   *
//*    LGEXTRK   ! EXTLGTRK   ->    Largest Ext in TRK-Managed   ‡A0A*
//*    FREEXT    ! EXTFREE    ->    Free Extents                     *
//*    INDXSTAT  ! STATINDX   ->    Index Status                     *
//*    FREEDSCB  ! DSCBFREE   ->    Free DSCBS                       *
//*    FREEVIRS  ! VIRSFREE   ->    Free Vtoc Index Records          *
//*    DEVICE    ! DEVICETYPE ->    Device Type                      *
//*    DEVNUM    ! ADDRESS    ->    Device Number                    *
//*    SHARE     ! SHRDASD    ->    Shared DASD                      *
//*    USE       ! USEATTR    ->    Use Attributes                   *
//*    RDCACHE   ! RDSTAT     ->    RD Cache Status                  *
//*    DASDFW                 ->    DASD FW Status                   *
//*    CACHEFW                ->    Cache FW Status                  *
//*    DUPLEX    ! DUPLEXST   ->    Duplex Status                    *
//*    OTHER     ! OTHERDEV   ->    Other Device                     *
//*    SUBSYS    ! SUBSYSID   ->    Subsys ID                        *
//*    PHYSTAT   ! STATPHYS   ->    Physical Status                  *
//*    STORGRP   ! SG         ->    Storage Group Name               *
//*    CFVOLST                ->    CF Volume Status                 *
//*    INIASRES               ->    Initialized as Reserved      ‡D2A*
//*    OWNERID                ->    Owner ID                     ‡D2A*
//********************************************************************
//GENREP  EXEC ACBJBAOB,
//        PLIB1=SYS1.DGTPLIB,
//        TABL2=userid.TEST.ISPTABL
//ISPFILE DD  DSN=IBMUSER.DASDVOL.REPORT,DISP=OLD
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQVAR1 DASDLIST SORT(column name)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN DD  *
VOLSER
INDXSTAT
FRAG
USEATTR
SG
TITLE=STATUS OF VOLUMES THAT ARE SMS MANAGED
/*
//********************************************************************
//*                                                                  *
//* COPY THE DASD VOLUME REPORT                                      *
//*                                                                  *
//*     SYSUT1 - INPUT (FROM PREVIOUS STEP)                          *
//*     SYSUT2 - OUTPUT                                              *
//*                                                                  *
//********************************************************************
//REPGEN   EXEC PGM=IEBGENER
//SYSUT1   DD  DSN=IBMUSER.DASDVOL.REPORT,DISP=SHR
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//*

./ ADD NAME=ACBJBAOI
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAOI) COMP(DF123): BATCH - ACS OBJECT INFORMATION DISPLAY*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* COPYRIGHT 2009,2010  IBM CORP.                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $B0=K1B0935,HDZ1B10,08/11/26,IBSTG: INITIAL VERSION          ‡B0A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DISPLAY ACS OBJECT INFORMATION IN BATCH            *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//*   REQUIRED FIELD:                                                *
//*                                                                  *
//*    CDSNAME - NAME OF CDS THAT CONTAINS THE ACS OBJECTS TO BE     *
//*              DISPLAYED, OR 'ACTIVE' FOR THE ACTIVE CDS.          *
//*                                                                  *
//********************************************************************
//********************************************************************
//ACSOBJ   EXEC ACBJBAOB,
//         TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAOI +
CDSNAME('ACTIVE')) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*

./ ADD NAME=ACBJBAOQ
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAOQ) COMP(DF123):BATCH - TRANSLATE ACS ROUTINES     ‡D1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                     ‡D1C*/
//* COPYRIGHT 1996, 2011 IBM CORP.                               ‡D1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        ‡K0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       ‡K1C*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*$L1=KN20035,HACS120,96/07/13,SNJTCS: MINOR CORRECTIONS        ‡L1A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//*$T2=k150142,HDZ11E0,11/19/97,SNJTCS: Adding TABL2 parameter / ‡T2A*/
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  ‡WA41441*/
//*$D1=OA32019,HDZ1D10,10/22/10,IBSTG: Inconsistent use of SCDS  ‡D1A*/
//*                                    (KFI0634)                 ‡D1A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO TARNSLATE THE ACS ROUTINES IN BATCH                *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* TRANSLATE STEP:                                                  *
//*                                                                  *
//*   ACSSRC   - PDS CONTAINING ACS ROUTINES TO BE TRANSLATED (INPUT)*
//*   MEMBER   - MEMBER NAME OF THE ROUTINE TO BE TRANSLATED (INPUT) *
//*   SCDS     - NAME OF SCDS INTO WHICH THE ACS ROUTINES ARE    ‡D1C*
//*              TO BE TRANSLATED (OUTPUT)                       ‡D1C*
//*   LISTNAME - TRANSLATE LISTING (OUTPUT)                          *
//*   UPDHLVLSCDS - When modifying an SCDS, that was formatted with  *
//*                 a higher level of SMS, using a lower level of    *
//*                 SMS will make this application fail unless you   *
//*                 specify the UPDHLVLSCDS parameter as 'Y'.        *
//*                 Default is 'N'.                          ‡WA41441*
//*                                                                  *
//*                 Possible values : Y/N/BLANK              ‡WA41441*
//********************************************************************
//TRANSLAT EXEC ACBJBAOB,
//         PLIB1='SYS1.DGTPLIB',
//         TABL2=userid.TEST.ISPTABL
//SYSUDUMP   DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
DEL 'IBMUSER.DATACLAS.LISTING'
DEL 'IBMUSER.MGMTCLAS.LISTING'
DEL 'IBMUSER.STORCLAS.LISTING'
DEL 'IBMUSER.STORGRP.LISTING'
ISPSTART CMD(ACBQBAO1 +
ACSSRC('IBMUSER.ACS.SOURCE') MEMBER(DATACLAS) +
SCDS('IBMUSER.MYSCDS') +
LISTNAME('IBMUSER.DATACLAS.LISTING') +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)

ISPSTART CMD(ACBQBAO1 +
ACSSRC('IBMUSER.ACS.SOURCE') MEMBER(MGMTCLAS) +
SCDS('IBMUSER.MYSCDS') +
LISTNAME('IBMUSER.MGMTCLAS.LISTING') +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)

ISPSTART CMD(ACBQBAO1 +
ACSSRC('IBMUSER.ACS.SOURCE') MEMBER(STORCLAS) +
SCDS('IBMUSER.MYSCDS') +
LISTNAME('IBMUSER.STORCLAS.LISTING') +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)

ISPSTART CMD(ACBQBAO1 +
ACSSRC('IBMUSER.ACS.SOURCE') MEMBER(STORGRP) +
SCDS('IBMUSER.MYSCDS') +
LISTNAME('IBMUSER.STORGRP.LISTING') +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)

/*
//********************************************************************
//*                                                                  *
//*   COPY THE TRANSLATE LISTINGS                                    *
//*                                                                  *
//*      SYSUT1 - INPUT (FROM PREVIOUS STEP)                         *
//*      SYSUT2 - OUTPUT                                             *
//*                                                                  *
//********************************************************************
//REPGEN EXEC  PGM=IEBGENER
//SYSUT1   DD  DSN=IBMUSER.DATACLAS.LISTING,DISP=SHR
//*        DD  DSN=IBMUSER.STORCLAS.LISTING,DISP=SHR
//*        DD  DSN=IBMUSER.MGMTCLAS.LISTING,DISP=SHR
//*        DD  DSN=IBMUSER.STORGRP.LISTING,DISP=SHR
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAOS
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAOS) COMP(DF123): BATCH - VALIDATE ACS ROUTINES     ‡D1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                     ‡D1C*/
//* COPYRIGHT 1996,2011 IBM CORP.                                ‡D1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION       ‡K0A*/
//* $L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES     ‡L0A*/
//* 10/14/96  CCY - HDZ11C0: Ship as SPE                     ‡WA22861*/
//* $T2=k150142,HDZ11E0,11/19/97,SNJTCS: Adding TABL2 parameter  ‡T2A*/
//* 03/30/99  CCY - HDZ11D0: Add note for ISPSTART cmd line  ‡WA38094*/
//* 07/01/99 TCS - HDZ11E0: Remove note for ISPSTART cmd lin ‡WA39926*/
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  ‡WA41441*/
//* $D1=OA32019,HDZ1D10,10/22/10,IBSTG: Inconsistent use of SCDS ‡D1A*/
//*                                     (KFI0634)                ‡D1A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO PERFORM ISMF ACS VALIDATE IN BATCH                 *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//*   VALIDATE STEP:                                                 *
//*                                                                  *
//*    SCDS     - NAME OF SCDS THAT CONTAINS THE TRANSLATED ACS  ‡D1C*
//*               ROUTINES TO BE VALIDATED (INPUT)                   *
//*    TYPE     - TYPE OF ACS ROUTINE TO BE VALIDATED (INPUT)        *
//*    LISTNAME - VALIDATE LISTING (OUTPUT)                          *
//*    UPDHLVLSCDS - When modifying an SCDS, that was formatted with *
//*                  a higher level of SMS, using a lower level of   *
//*                  SMS will make this application fail unless you  *
//*                  specify the UPDHLVLSCDS parameter as 'Y'.       *
//*                  Default is 'N'.                         ‡WA41441*
//*                                                                  *
//*                  Possible values : Y/N/BLANK             ‡WA41441*
//********************************************************************
//VALIDAT  EXEC ACBJBAOB,
//         PLIB1='SYS1.DGTPLIB',
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
DEL VALIDAT.LISTING
ISPSTART CMD(ACBQBAO2 +
SCDS(DSNREPN) TYPE(*) +
LISTNAME(VALIDAT.LISTING) +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//* COPY THE VALIDATE LISTING DATA SET                               *
//*                                                                  *
//*    SYSUT1 - INPUT (FROM PREVIOUS STEP)                           *
//*    SYSUT2 - OUTPUT                                               *
//*                                                                  *
//********************************************************************
//STEP2  EXEC  PGM=IEBGENER
//SYSUT1   DD  DSN=IBMUSER.VALIDAT.LISTING,DISP=SHR
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAOT
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAOT) COMP(5695DF123): BATCH - TAPE VOLUME REPORT        */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5695-DF1                                                         */
//* (C) COPYRIGHT 1996, 1998 IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//*                                                                  */
//* $K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION       ‡K0A*/
//* $K1=KNQ0003,HACS110,95/08/14,SNJADR: COMMENT CORRECTION      ‡K1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        ‡WA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//*11/18/98  TCS - HDZ11E0: Fix for ISPFILE problem          ‡WA36007*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE TAPE VOLUME REPORT FROM A PREVIOUSLY      *
//* SAVED ISMF MOUNTABLE TAPE VOLUME LIST                            *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* DELETE STEP, TO DELETE THE REPORT DATA SET IF IT EXISTS ALREADY  *
//*                                                                  *
//********************************************************************
//DELREP  EXEC  PGM=IDCAMS
//SYSPRINT  DD  SYSOUT=*
//SYSIN     DD  *
 DELETE IBMUSER.TAPEVOL.REPORT
/*
//********************************************************************
//*                                                                  *
//* STEP TO ALLOCATE ISPFILE, WHERE THE GENERATED REPORT IS SAVED    *
//* NOTE: THE DATA SET BEING ALLOCATED SHOULD NOT BE A TEMPORARY     *
//*       DATA SET.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=IBMUSER.TAPEVOL.REPORT,DISP=(NEW,CATLG),
//    BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD SYSOUT=*
//SYSIN  DD *
/*
//********************************************************************
//*                                                                  *
//* REPORT GENERATION STEP                                           *
//*                                                                  *
//*     PARAMETER FOLLOWING ACBQBAR4 - ISMF SAVED LIST NAME (INPUT)  *
//*     ISPFILE - TAPE VOLUME REPORT (OUTPUT, FROM ALCISPFL STEP)    *
//*     SYSIN   - KEYWORDS SPECIFYING THE DATA IN THE REPORT         *
//*                                                                  *
//********************************************************************
//GENREP  EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB,TABL2=userid.TEST.ISPTABL
//ISPFILE DD  DSN=IBMUSER.TAPEVOL.REPORT,DISP=OLD
//SYSTSIN DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAR4 TAPELIST) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN DD  *
VOLSER
LASTMOUNT
LASTEJECT
USEATTR
STORGRP
LIBNAME
TITLE=STATUS OF TAPES AS ON 06/01/96
/*
//********************************************************************
//*                                                                  *
//* COPY THE TAPE VOLUME REPORT                                      *
//*                                                                  *
//*   SYSUT1 - INPUT (FROM PREVIOUS STEP)                            *
//*   SYSUT2 - OUTPUT                                                *
//*                                                                  *
//********************************************************************
//REPGEN EXEC PGM=IEBGENER
//SYSUT1   DD  DSN=IBMUSER.TAPEVOL.REPORT,DISP=SHR
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAOU
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAOU) COMP(DF123): BATCH  - GENERATES DSN LIST       ‡Y1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2‡E1C*/
//* COPYRIGHT IBM CORP. 1996, 2017                               ‡G1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION       ‡K0A*/
//* $K1=KNQ0003,HACS110,95/08/14,SNJADR: COMMENT CORRECTION      ‡K1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        ‡WA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*$L1=KN20035,HACS120,96/07/13,SNJTCS: CHANGED PARAMETERS       ‡L1A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//*09/03/97 TCS - HDZ11D0 : Generation of dataset list, user ‡WA28670*/
//*  is not able to direct the search to a specific VOLSER.  ‡WA28670*/
//*$T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter     ‡T2A*/
//*11/18/98  TCS - HDZ11E0: Fix for ISPFILE problem          ‡WA36007*/
//*$U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for   2‡U1A*/
//*                                       DFSMS/MVS ISMF V2R10       */
//*$U2=K160456  ,HDZ11F0,99/09/16,SNJTCS: Documentation Erros   2‡U2A*/
//*                                       in $U1.                    */
//*$Y1=K1K0688  ,HDZ11K0,04/12/22,SNJTCS: DS List via SG, GT64K  ‡Y1A*/
//*$Y2=K1K0791,HDZ11K0,05/02/21,SNJTCS:DS List Space Ovrflw Fix  ‡Y2A*/
//*$A0=EAV    ,HDZ1A10,06/09/25,IBSTG : EAV Support              ‡A0A*/
//* $A1=MULTLCK,HDZ1A10,07/04/27,IBSAS: Support of MULTILOCK     ‡A1A*/
//*$B1=EAV2    ,HDZ1B10,08/06/10,IBSTG: EATTR keyword support    ‡B1A*/
//*$E1=PDSESPU ,HDZ2210,12/09/04,IBSTG: PDSE Space Utilization   ‡E1A*/
//*                                     Support (LI3039)         ‡E1A*/
//*$E2=OA45038 ,HDZ2210,14/04/15,IBSTG: Update DSN Type          ‡E2A*/
//*$G1=FP0454  ,HDZ2230,15/10/26,IBSTG: DS Encryption            ‡G1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE AN ISMF DATA SET LIST IN BATCH, SAVE IT,  *
//* AND GENERATE A DATA SET REPORT FROM THE SAVED LIST               *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* DATA SET LIST GENERATION STEP                                    *
//*                                                                  *
//*                                                    46A/C ‡WA28670*
//*     PARAMETER FOLLOWING SAVE - NAME OF THE SAVED LIST (OUTPUT)   *
//*     ALLOCSP - 0 to 99999999 followed by K (kilobytes) or     ‡A0C*
//*               M (megabytes). If K or M aren't specified     2‡A0A*
//*               the value will be defaulted to K.                  *
//*     ALLOCUT - Allocation Unit, BLK/TRK/ABS/CYL/MB/KB/BYT     ‡U1A*
//*     BLKSIZE - 0 to 99999 (in Bytes)                              *
//*     BLKUNUSED - 0 to 99999999 (in Kilo Bytes)                ‡Y2C*
//*     CATNAME - ICF CATALOG name                                   *
//*     CATVOL  - VOLUME used in catalog list                        *
//*     CHGIND  - YES/NO                                             *
//*     COMPFMT - YES/NO                                             *
//*     CREATEDT - YYYY/MM/DD  (1900/01/01 to 2155/12/31)            *
//*                YY/MM/DD ( (19)00/01/01 to (19)99/12/31 )         *
//*     CCSIDDSC - CCSID Description                            3‡U1A*
//*                0 to 65534 or A 1 to 17 character string          *
//*                that is not a number 0-65534                      *
//*     CFCSTNM  - CF Cache Structure name                       ‡U1A*
//*     CFCTNM   - CF Cache Set name                             ‡U1A*
//*     CFMOST   - CF Monitor status ON/OFF                      ‡U1A*
//*     CFSTIND  - CF status indicator CE/CQ/VRRQ/VRLS/VQ        ‡U1A*
//*     DATACLS - DATA CLASS name                                    *
//*     DDMATTR - DDM Attributes YES/NO                          ‡U1A*
//*     DEVTYPE - 3380/3390/9345 for DASD types                      *
//*             - 3480/3480X/3490/3590-1 for TAPE types              *
//*     DSENV   - Dataset Environment MANAGED/UNMANAGED          ‡U1A*
//*     DSNTYP  - DS name type EXTENDED/HFS/LIBRARY,1/LIBRARY,2/ ‡E1C*
//*               LIBRARY/LARGE/OTHERS                           ‡E2C*
//*     DSN     - DATA SET NAME                                      *
//*               ('**' requires catalog name)                       *
//*     DSORG   - DA/DAU/IS/ISU/PO/POU/PS/PSU/UN/VS                  *
//*     ENCRIND - YES/NO                                         ‡G1A*
//*     ENTRYTYP - AIX/ALIAS/CATALOG/DATA/INDEX/NONVSAM/PATH/        *
//*                DEFERRED/GDG/GDS/ROLLOFF                          *
//*     EXPIREDT - YYYY/MM/DD (1900/01/01 to 2155/12/31)         or  *
//*              - YY/MM/DD ( (19)00/01/01 TO (19)99/12/31 )     or  *
//*              - NEVER    or     1999/00/00                        *
//*     HSMDATA  - Y / N  (Catalog List)                             *
//*     LASTBKUP - YYYY/MM/DD  (1900/01/01 to 2155/12/31)            *
//*                YY/MM/DD ( (19)00/01/01 to (19)99/12/31 )         *
//*     LASTREF  - YYYY/MM/DD  (1900/01/01 to 2155/12/31)            *
//*                YY/MM/DD ( (19)00/01/01 to (19)99/12/31 )         *
//*     LISTTYP  - Inclusive/Exclusive or I/E                   3‡U1A*
//*                Inclusive: Display list by Inclusive criteria     *
//*                Exclusive: Display list by Enclusive criteria     *
//*     LRECL   - 0 to 99999 (in Bytes)                              *
//*     MGMTCLS - MANAGEMENT CLASS name                              *
//*     MULTVOL - YES/NO                                             *
//*     NOTUSED% - 0 to 100                                          *
//*     NUMEXT   - 0 to 999                                          *
//*     NUMSTRIPE - 1 to 16                                          *
//*     OPTIMAL - 0 to 99999 (in Bytes)                              *
//*     OWNER   - OWNER of the datasets                              *
//*     QSAVE   - QUERY Name to be saved                             *
//*     QUERY   - QUERY Name to be used                              *
//*     REBLOCK - YES/NO                                             *
//*     RECFMT  - A/B/D/F/M/FS/VS/T/U/V                              *
//*     SECALLOC - 0 to 99999999 followed by K (kilobytes) or    ‡A0C*
//*                M (megabytes). If K or M aren't specified    2‡A0A*
//*                the value will be defaulted to K.                 *
//*     SOURCEGL - 1 / 2 (2-new list)                                *
//*     SOURCENL - 1 / 2 (1-VTOC 2-catalog)                          *
//*     STORCLS - STORAGE CLASS name                                 *
//*     STORGRP - STORAGE GROUP name                             ‡Y1A*
//*     USEDSPC - 0 to 99999999 followed by K (kilobytes) or     ‡A0C*
//*               M (megabytes). If K or M aren't specified     2‡A0A*
//*               the value will be defaulted to K.                  *
//*     USERDATAREDUCT% - 0 to 99                                    *
//*     VTOCDATA - Y / N (Catalog List)                              *
//*     VTOCVSER - VTOC VOLUME SERIAL NUMBERS (VTOC list)            *
//*     CFLSTNM  - CF Lock Structure name                        ‡A1A*
//*     CFLTNM   - CF Lock Set name                              ‡A1A*
//*     EATTR    - EATTR.                                        ‡B1A*
//*                                                                  *
//********************************************************************
//SAVELIST EXEC ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
DELETE DATASET.REPORT
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAI2 SAVE DSNLIST +
VTOCDATA(Y) HSMDATA(Y) +
DSN('IBMUSER.**') NOTUSED%(LE 70)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//* STEP TO ALLOCATE ISPFILE, WHERE THE GENERATED REPORT IS SAVED    *
//* NOTE: THE DATA SET BEING ALLOCATED SHOULD NOT BE A TEMPORARY     *
//*       DATA SET.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=IBMUSER.DATASET.REPORT,DISP=(NEW,CATLG),
//    BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD SYSOUT=*
//SYSIN  DD *
/*
//********************************************************************
//*                                                                  *
//* DATA SET REPORT GENERATION STEP                                  *
//*                                                                  *
//*    PARAMETER FOLLOWING ACBQBAR1 - ISMF SAVED LIST NAME (INPUT)   *
//*    ISPFILE - DATA SET REPORT (OUTPUT, FROM ALCISPFL STEP)        *
//*    SYSIN   - KEY WORDS TO SPECIFY THE DATA IN THE REPORT         *
//*                                                                  *
//*    The Following parameters can be specified in SYSIN      42‡U1A*
//*                                                                  *
//*    %NOTUSED                ->   % Space Not Used.                *
//*    ALLOCSP    ! ALLOCSPC   ->   Allocated Space.                 *
//*    ALLOCUSED               ->   Used Space.                      *
//*    BACKUP     ! LASTBKUP   ->   Last Backup Date.                *
//*    BLKSIZE    ! CISIZE     ->   Block/CI Size.                   *
//*    BLKUNUSED               ->   Blocks Unused.                   *
//*    CCSIDDES                ->   CCSID Description.               *
//*    CFMONST                 ->   CF Monitor Status.               *
//*    CFSTATUS                ->   CF Status Indicator.             *
//*    CHANGE     ! CHGIND     ->   Change Indicator.                *
//*    COMPRESS                ->   Compressed Format.               *
//*    CREATE     ! CREATEDT   ->   Creation Date.                   *
//*    CSETNAME                ->   CF Cache set name.          1‡U2C*
//*    CSTRNAME                ->   CF Cache Structure Name.         *
//*    DC         ! DATACLAS   ->   Data Class Name.                 *
//*    DDMATTR                 ->   DDM attribute.                   *
//*    DEVICE     ! DEVTYPE    ->   Device Type.                     *
//*    DSNAME     ! DSN        ->   Dataset Name.                    *
//*    DSNAMETY                ->   Dataset Name Type.               *
//*    DSORG                   ->   Data Set Organization.           *
//*    ENCRIND                 ->   Encryption Indicator.        ‡G1A*
//*    ENTRY      ! ENTRYTYPE  ->   Dataset Entry Type.              *
//*    ENVIRONMANT! ENVIR      ->   Dataset Environment.             *
//*    EXPIRE     ! EXPIREDT   ->   Expiration Date.                 *
//*    LASTREF    ! LASTREFDT  ->   Last referenced Date.            *
//*    LRECL                   ->   Record Length.                   *
//*    MC         ! MGMTCLAS   ->   Management Class Name.           *
//*    MULTVOL                 ->   Multi Volume Status.             *
//*    NUMEXT     ! EXTNUM     ->   Number of Extents.               *
//*    NUMSTR                  ->   Number of Stripes.               *
//*    OPTIMAL                 ->   Optimal Block/CI Size.           *
//*    OWNER                   ->   Owner.                           *
//*    REBLK      ! REBLOCK    ->   Reblock Indicator.               *
//*    RECFM      ! RECFMT     ->   Record Format.                   *
//*    SC         ! STORCLAS   ->   Storage Class Name.              *
//*    SECALLOC   ! ALLOCSEC   ->   Secondary Allocation.            *
//*    TOTALS                  ->                                    *
//*    UNIT       ! ALLOCUNI   ->   Allocation Unit.                 *
//*    USERRED%                ->   % User Data Reduction.           *
//*    VOLSER                  ->   Volume Serial.                   *
//*    LSETNAME                ->   CF Lock set name.            ‡A1A*
//*    LSTRNAME                ->   CF Lock Structure Name.      ‡A1A*
//*    EATTR                   ->   EATTR.                       ‡B1A*
//********************************************************************
//GENREP  EXEC ACBJBAOB,
//        PLIB1=SYS1.DGTPLIB,
//        TABL2=userid.TEST.ISPTABL
//ISPFILE DD  DSN=IBMUSER.DATASET.REPORT,DISP=OLD
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAR1 DSNLIST) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN DD  *
DSN
VOLSER
LASTREF
EXTNUM
%NOTUSED
/*
//********************************************************************
//*                                                                  *
//* COPY THE DATA SET REPORT                                         *
//*                                                                  *
//*    SYSUT1 - INPUT (FROM PREVIOUS STEP)                           *
//*    SYSUT2 - OUTPUT                                               *
//*                                                                  *
//********************************************************************
//REPGEN EXEC PGM=IEBGENER
//SYSUT1   DD  DSN=IBMUSER.DATASET.REPORT,DISP=(SHR,DELETE)
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAOW
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAOW) COMP(5695DF123): BATCH  - TESTCASES FROM VMA DATA  */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5695-DF1                                                         */
//* (C) COPYRIGHT 1996, 1998 IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//*                                                                  */
//* $K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION       ‡K0A*/
//* $K1=KNQ0003,HACS110,95/08/14,SNJADR: COMMENT CORRECTION      ‡K1C*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE TEST CASES FROM VMA EXTRACT DATA          *
//*                                                                  *
//* INSTRUCTIONS BEFORE SUBMITTING:                                  *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                                  *
//* PARAMETERS:                                                      *
//*                                                                  *
//*   PARAMETER 1 - DATA SET CONTAINING VMA EXTRACT DATA             *
//*   PARAMETER 2 - NUMBER OF TEST CASES TO BE GENERATED             *
//*   PARAMETER 3 - MEMBER NAME PREFIX                               *
//*   PARAMETER 4 - PROGRAM NAME TO FILTER ON                        *
//*                                                                  *
//********************************************************************
//TESTGEN EXEC ACBJBAOB,PLIB1=SYS1.DGTPLIB,TABL2=userid.TEST.ISPTABL
//SYSTSIN DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(%ACBQBAO3 'IBMUSER.VMA.DATA' 100 TEST) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************

./ ADD NAME=ACBJBAO7
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//********************************************************************/
//*$MAC(ACBJBAO7) COMP(DF123): BATCH  - GENERATES DCOLLECT DATA  ‡90C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* COPYRIGHT 1996,2008  IBM CORP.                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION       ‡K0A*/
//* $K1=KNQ0003,HACS110,95/08/14,SNJADR: COMMENT CORRECTION      ‡K1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        ‡WA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*$L1=KN20035,HACS120,96/07/13,SNJTCS: CHANGED PARAMETERS       ‡L1A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//*$90=KFI0416,HDZ1190,06/12/07,IBSTG : SG name and LRECL fix    ‡90A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO COLLECT DCOLLECT DATA                              *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* DELETE STEP - TO DELETE THE OUTPUT DATA SET IF IT EXISTS ALREADY *
//*                                                                  *
//********************************************************************
//DELDAT EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  DELETE IBMUSER.DCOLLECT.DATA
/*
//********************************************************************
//*                                                                  *
//* DCOLLECT DATA COLLECTION STEP                                    *
//*                                                                  *
//*    MCDS  - MIGRATION CONTROL DATA SET                            *
//*    BCDS  - BACKUP CONTROL DATA SET                               *
//*    OUTDS - DCOLLECT DATA (OUTPUT)                                *
//*    SYSIN - PARAMETERS                                            *
//*                                                                  *
//********************************************************************
//GENDAT   EXEC PGM=IDCAMS,REGION=4M
//SYSPRINT DD SYSOUT=*
//MCDS     DD DSN=DFHSM.MCDS,DISP=SHR
//BCDS     DD DSN=DFHSM.BCDS,DISP=SHR
//OUTDS    DD DSN=IBMUSER.DCOLLECT.DATA,
//    RECFM=VB,LRECL=988,DSORG=PS,UNIT=3380,
//    SPACE=(1,(100,100),RLSE),AVGREC=K,
//    DISP=(,CATLG)
//SYSIN    DD *
  DCOLLECT +
  OFILE(OUTDS) +
  VOLUME(*) +
  STORAGEGROUP(SGNAME1) +
  SMSDATA(ACTIVE) +
  MIGRATEDATA +
  CAPPLANDATA +
  BACKUPDATA
/*
//********************************************************************

./ ADD NAME=ACBJBAP1
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAP1) COMP(DF123): BATCH - COPYPOOL DEFINE/ALTER/    ‡Z1C*/
//*                                                 DISPLAY          */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2‡E1C*/
//* COPYRIGHT IBM CORP. 2002, 2017                               ‡G1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $W0=COPYPOOL,HDZ11H0,01/08/02,TCS: INITIAL VERSION               */
//* $Z1=HSMFR2  ,HDZ1180,050420,TCS: HSMFR STAGE2 CHANGES        ‡Z1A*/
//* $Z2=OA16354 ,HDZ1180,060619,CCY: Update copy pool name       ‡Z2A*/
//* $B1=HSMFLSH ,HDZ1B10,08/05/26,IBSTG: HSM Fast Replication    ‡B1A*/
//*                                      Enhancement support     ‡B1A*/
//* $B2=K1B0399 ,HDZ1B10,08/09/24,IBSTG: Change CATINFO default  ‡B2A*/
//* $B3=K1B0876 ,HDZ1B10,09/01/12,IBSTG: Change back Metro       ‡B3A*/
//*                                      Mirror to PPRC (DCR)    ‡B3A*/
//* $C1=HSMFRVRC,HDZ1C10,09/06/03,IBSTG: HSM Fast Reverse        ‡C1A*/
//*                                      Restore support.        ‡C1A*/
//* $E1=HSMFCCG ,HDZ2210,12/05/02,IBSTG: HSM Fast Replication    ‡E1A*/
//*                                      Enhancements (LI3117)   ‡E1A*/
//* $G1=OA55351 ,HDZ2230,18/03/14,IBSTG: RPFC for XRC GA support ‡G1A*/
//*                                                                  */
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER/DISPLAY COPYPOOL IN BATCH             *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//************************** ADD BEG *********************************
//*                                                                  *
//* Required Fields:                                                 *
//*                                                                  *
//*  SCDS     :  Name of SCDS, length 1-44 characters.               *
//*                                                                  *
//*  COPYPOOL :  Name of the CopyPool, length 1-30 characters for    *
//*              alter and display, 1-23 characters for define.  ‡Z2C*
//*                                                            12‡Z1A*
//*  AUTODUMP :  Specify whether volumes in this Copy Pool are to be *
//*              eligible for Automatic Dump Processing              *
//*                                                                  *
//*              Possible Values: Y/N                                *
//*                                                                  *
//*  DMPSYSNM :  System or system group name where volumes in this   *
//*              copy pool will automatically dump to back-up volumes*
//*                                                                  *
//*              Possible Values:                                    *
//*                 A valid System or System Group Name.             *
//*                                                                  *
//*  NUMVERS  :  Number of backup versions of the pool DFSMShsm      *
//*              should be maintained. Zero means DFSMShsm is   2‡C1C*
//*              to create one DASD backup version with the NOCOPY   *
//*              mode. Valid values are 0 to 85 or blank.       2‡C1A*
//*              Default value is 2.                                 *
//*                                                             3‡Z1A*
//*  DUMPCLAS :  Name of the Dump Classes (upto 5, each of           *
//*              length 1-8 characters) delimited by commas.         *
//*                                                                  *
//*  CATNAME  :  Specify catalog names (up to 10, each of      43‡B1A*
//*              length 1-44 alphanumeric characters, including      *
//*              delimiters, fully qualified data set name,          *
//*              unquoted), delimited by commas.                     *
//*                                                                  *
//*  CATINFO  :  Capture Catalog Information for Data Set Recovery - *
//*              indicates to FRBACKUP processing whether or not to  *
//*              collect catalog information.                        *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*                R - Required, if not able to capture catalog      *
//*                    information, fail the backup version.         *
//*                P - Preferred, if not able to capture catalog     *
//*                    information, issue a warning and do not       *
//*                    fail the backup version.                      *
//*                N - No, do not capture catalog information.       *
//*                Default:  N - No, do not capture.             ‡B3C*
//*                                                                  *
//*  FCTOPPRCB:  FRBACKUP to PPRC Primary Volumes allowed -     3‡B3C*
//*              indicates HSM will target PPRC Primary volumes if   *
//*              available for FRBACKUP processing.                  *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*                NO - no, do not use target PPRC Primary volumes.  *
//*                PN - PMNO, do not target PPRC Primary volumes.    *
//*                PP - PMPREF, target PPRC Primary volumes preferred*
//*                PR - PMREQ, target PPRC Primary volumes required. *
//*                Blank - none specified.                           *
//*                                                                  *
//*  FCTOPPRCR:  FRRECOV to PPRC Primary Volumes allowed -      3‡B3C*
//*              indicates HSM will target PPRC Primary volumes if   *
//*              available for FRRECOV processing.                   *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*                NO - no, do not use target PPRC Primary volumes.  *
//*                PN - PMNO, do not target PPRC Primary volumes.    *
//*                PP - PMPREF, target PPRC Primary volumes preferred*
//*                PR - PMREQ, target PPRC Primary volumes required. *
//*                Blank - none specified.                           *
//*                                                                  *
//*  ALLOWFCFRR: Allow Fast Reverse Restore - when specified,   7‡C1A*
//*              allows FR recovery to FlashCopy from an active      *
//*              FlashCopy target to its source volume without       *
//*              first waiting for background copy to complete.      *
//*                                                                  *
//*              Possible values : Y/N                               *
//*                                                                  *
//*  FCCONSGRP:  FlashCopy Consistency Group - indicates        6‡E1A*
//*              whether or not to perform consistency group         *
//*              FlashCopy.                                          *
//*                                                                  *
//*              Possible values : Y/N                               *
//*                                                                  *
//*  POOLSGNM :  Name of valid storage group names (upto 256,    ‡Z1C*
//*              each of length 1-8 characters) delimited by    2‡Z1A*
//*              commas.                                             *
//*                                                                  *
//* Optional Fields:                                                 *
//*                                                                  *
//*  DESCR    :  Remarks about  the  CopyPool being defined /altered *
//*              Maximum length up to 120 characters.                *
//*                                                            38‡G1A*
//*  FCTOXRCB    FRBACKUP to XRC Primary Volumes allowed - indicates *
//*              whether an XRC primary volume is eligible to become *
//*              a FlashCopy target volume for FRBACKUP processing   *
//*              during volume pairing.                              *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*                Y - yes, XRC primary volume is eligible to become *
//*                    a Flashcopy target volume.                    *
//*                N - no, XRC primary volume is not eligible to     *
//*                    become a Flashcopy target volume.             *
//*                Blank - value not specified, same as N.           *
//*                                                                  *
//*              Note: the value is saved only if RPFC for XRC       *
//*                    support is enabled (FLASHCOPYTOXRC=YES        *
//*                    parameter is set in the DEVSUPxx PARMLIB      *
//*                    member and activated). For more information,  *
//*                    see "z/OS DFSMS Advanced Copy Services".      *
//*                                                                  *
//*  FCTOXRCR    FRRECOV to XRC Primary Volumes allowed - indicates  *
//*              whether an XRC primary volume is eligible to become *
//*              a FlashCopy target volume for FRRECOV processing.   *
//*              The value is passed to DFSMSdss.                    *
//*                                                                  *
//*              Possible values :                                   *
//*                                                                  *
//*                Y - yes, XRC primary volume is eligible to become *
//*                    a Flashcopy target volume.                    *
//*                N - no, XRC primary volume is not eligible to     *
//*                    become a Flashcopy target volume.             *
//*                Blank - value not specified, same as N.           *
//*                                                                  *
//*              Note: the value is saved only if RPFC for XRC       *
//*                    support is enabled (FLASHCOPYTOXRC=YES        *
//*                    parameter is set in the DEVSUPxx PARMLIB      *
//*                    member and activated). For more information,  *
//*                    see "z/OS DFSMS Advanced Copy Services".      *
//*                                                                  *
//*  UPDHLVLSCDS : When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                                   *
//*                                                                  *
//*                Possible values : Y/N/BLANK                       *
//************************** ADD END *********************************
//********************************************************************
//*
//STEP1   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAP1 +
DEFINE/ALTER +
SCDS(TEST.CDS) +
COPYPOOL(COPYPOOLAPPLICATIONNAME) +
DESCR(THIS IS TO DEFINE COPY POOL COPYPOOLAPPLICATIONNAME) +
NUMVERS() +
AUTODUMP() +
DMPSYSNM() +
DUMPCLAS() +
CATNAME() +
CATINFO(N) +
FCTOPPRCB() +
FCTOPPRCR() +
ALLOWFCFRR(N) +
FCCONSGRP(N) +
FCTOXRCB() +
FCTOXRCR() +
POOLSGNM() +
UPDHLVLSCDS() +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
/*
//STEP2   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAP1 +
DISPLAY +
SCDS(TEST.CDS) +
COPYPOOL(COPYPOOLAPPLICATIONNAME) +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)
//

./ ADD NAME=ACBJBARD
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBARD) COMP(DF123):BATCH- GENERATES REPORT DCOLLECT D ‡B1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2‡G1C*/
//* COPYRIGHT IBM CORP. 1996, 2017                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//*                                                                  */
//* $K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION       ‡K0A*/
//* $K1=KNQ0003,HACS110,95/08/14,SNJADR: COMMENT CORRECTION      ‡K1C*/
//* 02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS       ‡WA18945*/
//* $L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES     ‡L0A*/
//* 10/15/96  CCY - HDZ11C0: Ship as SPE                     ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//* 11/18/98  TCS - HDZ11E0: Fix for ISPFILE problem         ‡WA36007*/
//* $B1=EAV2   ,HDZ1B10,08/06/10,IBSTG: EATTR keyword support    ‡B1A*/
//* $B2=K1B0977,HDZ1B10,09/01/13,IBSTG: Update for EAV2          ‡B2A*/
//* $G1=FP0454 ,HDZ2230,16/09/10,IBSTG: DS Encryption            ‡G1A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE DATA SET REPORT FROM DCOLLECT DATA        *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* DELETE STEP - TO DELETE THE REPORT DATA SET IF IT EXISTS ALREADY *
//*                                                                  *
//********************************************************************
//DELREP    EXEC  PGM=IDCAMS
//SYSPRINT  DD  SYSOUT=*
//SYSIN     DD  *
 DELETE IBMUSER.DATASET.REPORT
/*
//********************************************************************
//*                                                                  *
//* STEP TO ALLOCATE ISPFILE, WHERE THE GENERATED REPORT IS SAVED    *
//* NOTE: THE DATA SET BEING ALLOCATED SHOULD NOT BE A TEMPORARY     *
//*       DATA SET.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=IBMUSER.DATASET.REPORT,DISP=(NEW,CATLG),
//    BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD SYSOUT=*
//SYSIN  DD *
/*
//********************************************************************
//*                                                                  *
//* REPORT GENERATION STEP                                           *
//*                                                                  *
//*    DCOLIN  - DCOLLECT DATA (INPUT)                               *
//*    ISPFILE - DATA SET REPORT (OUTPUT, FROM ALCISPFL STEP)        *
//*    SYSIN   - KEY WORDS TO SPECIFY THE DATA IN THE OUTPUT         *
//*                                                                  *
//*   CHOOSE FROM THE FOLLOWING PARAMETERS FOR DATA TO BE LISTED     *
//*   THE ORDER CHOSEN DETERMINES THE ORDER IN THE REPORT            *
//*   THE TOTAL REPORT WIDTH MAY NOT EXCEED 133                      *
//*                                                                  *
//*   PARAMETERS:                                                    *
//*                                                                  *
//*      ALLOCSP ! ALLOCSPC  -   ALLOCATED SPACE                     *
//*      BACKUP ! LASTBKUP   -   DATA SET'S LAST BACKUP DATE         *
//*      BLKUNUSED           -   BLOCKS UNUSED                       *
//*      CHANGE ! CHGIND     -   CHANGE INDICATOR FOR DATA SET       *
//*      CREATE ! CREATEDT   -   DATA SET CREATION DATE              *
//*      DATACLAS ! DC       -   DATACLAS OF DATA SET                *
//*      DSNAME ! DSN        -   DATASETNAME                         *
//*      DSNLENGTH           -   LIMIT DATASET NAME TO THIS NUMBER   *
//*                          -   OF CHARACTERS                       *
//*      DSORG               -   DATA SET ORGANIZATION               *
//*      EATTR               -   EATTR                           ‡B1A*
//*      ENCRTYPE            -   ENCRYPTION TYPE                 ‡G1A*
//*      ENCRKEYLABEL        -   ENCRYPTION KEY LABEL            ‡G1A*
//*      ENTRYTYPE           -   ENTRY TYPE OF DATA SET              *
//*      EXPIRE ! EXPIREDT   -   DATA SET EXPIRATION DATE            *
//*      LASTREF ! LASTREFDT -   DATA SET LAST REFERENCE DATE        *
//*      LRECL               -   RECORD LENGTH                       *
//*      MGMTCLAS ! MC       -   MANAGEMENT CLASS FOR DATA SET       *
//*      MULTVOL             -   IS THE DATA SET MULI-VOLUME?        *
//*      NUMEXT ! EXTNUM     -   NUMBER OF EXTENTS                   *
//*      PAGELENGTH          -   NUMBER OF LINES PER PAGE (DEF IS 60)*
//*      PDSE                -   IS THE DATA SET A PDSE?             *
//*      REBLOCK ! REBLK     -   IS THE DATA SET REBLOCKABLE?        *
//*      RECFM ! RECFMT      -   RECORD FORMAT                       *
//*      SMS ! MANAGED       -   IS THE DATA SET MANAGED?            *
//*      STORCLAS ! SC       -   STORAGE CLASS FOR DATA SET          *
//*      STORGRP ! SG        -   STORAGE GROUP FOR DATA SET          *
//*      SPACEUSD            -   SPACE USED                      ‡B2A*
//*      TITLE=XXXXX         -   TITLE FOR REPORT                    *
//*      TOTALS              -   PRINT DSN SPACE TOTALS              *
//*      USED%               -   USED SPACE %                        *
//*      VOLSEQ              -   VOLUME SEQUENCE NUMBER              *
//*      VOLSER              -   VOLUME SERIAL                       *
//*      VVRCHK ! VVR        -   IF SMS, IS THERE A VVR OR NVR?      *
//*                                                                  *
//********************************************************************
//GENREP   EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB,TABL2=userid.TEST.ISPTABL
//DCOLIN  DD  DSN=IBMUSER.DCOLLECT.DATA,DISP=SHR
//ISPFILE DD  DSN=IBMUSER.DATASET.REPORT,DISP=OLD
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAR7) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN DD  *
DSN
VOLSER
ALLOCSP
RECFM
BLKUNUSED
TITLE=DATA SET REPORT FROM DCOLLECT DATA - 17/03/09
TOTALS
BLKSIZE
EXTNUM
DSORG
STORCLAS
/*
//********************************************************************
//*                                                                  *
//*  COPY THE DATA SET REPORT                                        *
//*                                                                  *
//*     SYSUT1 - INPUT (FROM PREVIOUS STEP)                          *
//*     SYSUT2 - OUTPUT                                              *
//*                                                                  *
//********************************************************************
//REPGEN EXEC PGM=IEBGENER
//SYSUT1   DD  DSN=IBMUSER.DATASET.REPORT,DISP=SHR
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAR2
//ACBJBAR2 JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAR2) COMP(5695DF123): BATCH - SMS CONFIG. REPORT        */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                     ‡A1C*/
//* COPYRIGHT 1996, 2009 IBM CORP.                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//*                                                                  */
//* $K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION       ‡K0A*/
//* 02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS       ‡WA18945*/
//* $L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES     ‡L0A*/
//* 10/15/96  CCY - HDZ11C0: Ship as SPE                     ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//* 11/18/98  TCS - HDZ11E0: Fix for ISPFILE problem         ‡WA36007*/
//* $A1=OA25855,HDZ1A10,08/10/06,IBSTG: SPACE increasd, CN added ‡A1A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE SMS CONFIGURATION REPORT FROM             *
//* DCOLLECT DATA                                                    *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* DELETE STEP - TODELETE THE REPORT DATA SET IF IT EXISTS ALREADY  *
//*                                                                  *
//********************************************************************
//DELRPT    EXEC  PGM=IEFBR14
//ISPFILE DD  DSN=&SYSUID..SMSCONF.REPORT,DISP=(MOD,DELETE,DELETE),
//    BLKSIZE=0,SPACE=(CYL,(20,10)),RECFM=FBA,LRECL=133,UNIT=SYSDA
/*
//********************************************************************
//*                                                                  *
//* STEP TO ALLOCATE ISPFILE, WHERE THE GENERATED REPORT IS SAVED    *
//* NOTE: THE DATA SET BEING ALLOCATED SHOULD NOT BE A TEMPORARY     *
//*       DATA SET.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=&SYSUID..SMSCONF.REPORT,DISP=(NEW,CATLG),
//    BLKSIZE=0,SPACE=(CYL,(20,10)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD SYSOUT=*
//SYSIN  DD *
/*
//********************************************************************
//*                                                                  *
//*   REPORT GENERATION STEP                                         *
//*                                                                  *
//*      DCOLIN  - DCOLLECT DATA (INPUT)                             *
//*      ISPFILE - SMS CONFIGURATION REPORT (OUTPUT, FROM ALCISPFL   *
//*                                          STEP)                   *
//*      SYSIN   - PARAMETERS THAT SPECIFY THE OUTPUTS NEEDED        *
//*                                                                  *
//*   PARAMETERS:                                                    *
//*                                                                  *
//*      RECORD=DC - DATA CLASSES                                    *
//*      RECORD=SC - STORAGE CLASSES                                 *
//*      RECORD=MC - MANAGEMENT CLASSES                              *
//*      RECORD=SG - STORAGE GROUPS                                  *
//*      RECORD=BC - BASE CONFIGURATION                              *
//*      RECORD=VL - STORAGE GROUP VOLUMES                           *
//*      RECORD=AG - AGGREGATE GROUPS                                *
//*      RECORD=LB - OAM LIBRARIES                                   *
//*      RECORD=DR - OAM DRIVES                                      *
//*      RECORD=AI - ACS ACCOUNTING                                  *
//*      RECORD=CN - CACHE NAMES                                 ‡A1A*
//*                                                                  *
//********************************************************************
//REPGEN  EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB,TABL2=userid.TEST.ISPTABL
//DCOLIN  DD  DSN=&SYSUID..DCOLLECT.DATA,DISP=SHR
//ISPFILE DD  DSN=&SYSUID..SMSCONF.REPORT,DISP=OLD
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAR8) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN DD  *
RECORD=DC
RECORD=MC
RECORD=SC
RECORD=SG
/*
//********************************************************************
//*                                                                  *
//*  COPY SMS CONFIGURATION REPORT                                   *
//*                                                                  *
//*     SYSUT1 - INPUT (FROM PREVIOUS STEP)                          *
//*     SYSUT2 - OUTPUT                                              *
//*                                                                  *
//********************************************************************
//REPGEN   EXEC PGM=IEBGENER
//SYSUT1   DD  DISP=SHR,DSN=&SYSUID..SMSCONF.REPORT
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAS1
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAS1) COMP(DF123): BATCH - SC DEFINE/ALTER/DISPLAY   ‡A1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2‡G1C*/
//* COPYRIGHT IBM CORP. 1998, 2017                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $T1=NQ5,HDZ11E0,061997,SNJTCS:   NaviQuest Batch Support     ‡T1A*/
//* $T2=K151321,HDZ11E0,091998,SNJTCS: Possible values          2‡T2A*/
//*                                    documentation                 */
//* $U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for  2‡U1A*/
//*     DFSMS/MVS ISMF V2R10, Backup and Versioning fields added     */
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  ‡WA41441*/
//* 05/23/01 TCS - HDZ11F0: Prolog Updation                  ‡WA49380*/
//* $W1=K1H0049,HDZ11H0,01/10/04,SNJTCS: Multi Tier SGs          ‡W1A*/
//* $X1=SMSPAV ,HDZ11J0,03/04/15,SNJTCS: Support for SMSPAV      ‡X1A*/
//* $92=OAMSLVL,HDZ1190,06/06/20,IBSTGS: Support of OAM Sublevel ‡92A*/
//* $A1=MULTLCK,HDZ1A10,07/04/27,IBSAS: Support of MULTILOCK     ‡A1A*/
//* $D1=BMF    ,HDZ1D10,10/01/29,IBSTG: BMF Disconnect Sphere at ‡D1A*/
//*                                     CLOSE                    ‡D1A*/
//* $D2=OAMGROW,HDZ1D10,10/04/19,SVLCY: zGrowth support, OAMsubl ‡D2A*/
//* $G1=OA54826,HDZ2230,18/02/28,IBSTK: zHyperLink Storage Class ‡G1A*/
//*                                     Granularity              ‡G1A*/
//* $G2=OAMCLDT,HDZ2230,18/01/22,IBSTK: OAM Cloud as a Tier      ‡G2A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER/DISPLAY STORAGE CLASSES IN BATCH      *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//*   PARAMETER FOLLOWING ACBQBAS1 - DEFINE OR ALTER OR DISPLAY      *
//*********************** ADD  BEG  **********************************
//*                                                                  *
//* Required Fields:                                       2‡WA49380 *
//*                                                                  *
//*   SCDS     : Name of the SCDS, 1-44 characters.                  *
//*                                                                  *
//*   STCNAME  : Storage class being defined/altered.                *
//*                                                                  *
//*              1-8  alphanumeric  characters , begining with       *
//*              alphabet.                                           *
//*                                                                  *
//* Optional Fields:                                       2‡WA49380 *
//*                                                                  *
//*   DESCR    : Remarks about the SC being created. 1-120           *
//*              alphanumeric characters.                            *
//*                                                                  *
//*   DMSRESP  : Use DIRECT MILLISECOND RESPONSE field to  specify   *
//*              how quickly the system will read or write data in   *
//*              4K  blocks  on  direct access devices. Enter  the   *
//*              response time in milliseconds. All input and output *
//*              requests are processed  in single 4k bytes.         *
//*                                                                  *
//*              Possible Values : 1 - 999, BLANK                    *
//*                                                                  *
//*   DRTBIAS  : Specify  this  field ( DIRECT BIAS)  to  indicate   *
//*              whether the majority of the I/O scheduled for DSs   *
//*              in this SC will be READ,WRITE or UNKNOWN.           *
//*                                                                  *
//*              Possible Values : R, W, BLANK                       *
//*                                                                  *
//*   SEQMSRES : Use  SEQUENTIAL  MILLISECOND  RESPONSE  field   to  *
//*              specify  how  quickly  the  system  will  read  or  *
//*              write data in  4K  blocks on sequentially accessed  *
//*              devices. Enter  the response time in milliseconds.  *
//*              All I/O requests are processed in single 4K blocks. *
//*                                                                  *
//*              Possible Values : 1 - 999, BLANK                    *
//*                                                                  *
//*   SEQBIAS  : Specify   this   field ( SEQ BIAS)  to   indicate   *
//*              whether the majority of the I/O scheduled for DSs   *
//*              in this SC will be READ,WRITE or UNKNOWN.           *
//*                                                                  *
//*              Possible Values : R, W, BLANK                       *
//*                                                                  *
//*   INIARESS : Use this field (INITIAL ACCESS RESPONSE SECONDS)    *
//*              to  specify the  desired  response time in SECs     *
//*              to  locate,  mount, and prepare  media for          *
//*              data transfer.                                      *
//*                                                                  *
//*              Possible Values : 0 - 9999, BLANK                   *
//*                                                                  *
//*   SUSDTRT  : Use this field (SUSTAINED  DATA RATE (MB/SEC)) to   *
//*              specify the sequential  data  transfer  rate  you   *
//*              want for striped  datasets in this SC. The system   *
//*              uses this value to determine the no.of stripes it   *
//*              will attempt to allocate for the datasets. If you   *
//*              enter ZERO or BLANK  the system  will  attempt to   *
//*              allocate  them  with  one stripe.  Only  extended   *
//*              sequential datasets can be striped.                 *
//*                                                                  *
//*              Possible Values : 0 - 999, BLANK                    *
//*                                                                  *
//*   OAMLVL   : Use the OAM SUBLEVEL field to specify the desired   *
//*              sublevel of an OAM disk or tape hierarchy level to  *
//*              use for object storage.  The OAM SUBLEVEL is only   *
//*              applicable when the INITIAL ACCESS RESPONSE SECONDS *
//*              value is equal to 0, or when the INITIAL ACCESS ‡D2C*
//*              RESPONSE SECONDS value is greater than 0 and the    *
//*              SUSTAINED DATA RATE value is greater than or equal  *
//*              to 3.                                           ‡D2C*
//*                                                                  *
//*              Possible values:                                    *
//*                For disk, when IARS = 0 then OSL value of    4‡D2A*
//*                  - 1 equates to OAM Disk Sublevel 1,             *
//*                  - 2 equates to OAM Disk Sublevel 2,             *
//*                  - 3 equates to OAM Cloud Level,             ‡G2A*
//*                  - blank defaults to OAM Disk Sublevel 1.        *
//*                                                                  *
//*                For tape, when IARS >= 1 and SDR >= 3 then        *
//*                OSL value of                                  ‡D2C*
//*                  - 1 equates to OAM Tape Sublevel 1,             *
//*                  - 2 equates to OAM Tape Sublevel 2,             *
//*                  - blank defaults to OAM Tape Sublevel 1.        *
//*                                                                  *
//*                When IARS > 0 and SDR < 3                     ‡G2C*
//*                then OSL must be blank.                           *
//*                                                                  *
//*   AVALBTY  : Specify whether dataset processing should continue  *
//*              after device failures.                              *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              C  -> Continue to process a DS if a device failure  *
//*                    severs communications with the  volumes that  *
//*                    contains the dataset.                         *
//*              S  -> Continuous processing  is  unavailable after  *
//*                    device failures.                              *
//*              P  -> Data  may  be placed on devices that support  *
//*                    continuous processing.                        *
//*              N  -> Data  is  placed  on any volume. There is no  *
//*                    preference among volumes.                     *
//*                                                                  *
//*   ACCSBTY  : ACCESSIBILITY field specifies whether the datasets  *
//*              in  this  SC be  allocated to volumes supported by  *
//*              concurrent  copy. When  used   with  the   MGMTCLS  *
//*              ABACKUP/BACKUP  COPY  TECHNIQUE  attributes,  this  *
//*              field determines if DS should retain  write access  *
//*              during backup.                                      *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              C  -> Datasets  must  be allocated  to the volumes  *
//*                    supported by concurrent copy.                 *
//*              S  -> Datasets  should be allocated to the volumes  *
//*                    supported by concurrent copy.                 *
//*              P  -> Datasets should be  allocated to the volumes  *
//*                    not supported by concurrent copy.             *
//*              N  -> Datasets should be  allocated to the volumes  *
//*                    whether  the volumes support concurrent copy  *
//*                    or not.                                       *
//*                                                            25‡U1A*
//*   BACKUP   : Use  the  BACKUP  option  under ACCESSIBILITY  to   *
//*              specify  that  the datasets  in  this storage class *
//*              when being backed up are unavailable to application *
//*              programs for a minimal period.                      *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              Y      -> Dataset is available for backup.          *
//*              N      -> Dataset is not available for backup.      *
//*              Blank  -> Defaults to N.                            *
//*                                                                  *
//*   VRSNING  : Use the VERSIONING option  under ACCESSIBILITY  to  *
//*              specify  that  the datasets  in  this storage class *
//*              can  have  a  point-in-time  version  available for *
//*              application  testing,  reporting,  or  backup while *
//*              applications  continue  to  access  and  update the *
//*              source dataset.                                     *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              Y      -> Dataset is available for Versioning.      *
//*              N      -> Dataset is not available for Versioning.  *
//*              Blank  -> Defaults to N.                            *
//*                                                                  *
//*   GURNTSPC : GUARANTEED  SPACE  field  specifies whether to use  *
//*              the JCL VOL=SER=  parameter  to  reserve  space on  *
//*              specific volumes for datasets in this SC.           *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              Y  -> Reserve  space  for datasets on the  volumes  *
//*                    specified in the JCL VOL=SER= parameter.      *
//*              N  -> Don't  use  volumes  requested  in  the  JCL  *
//*                     VOL=SER= parameter.                          *
//*                                                                  *
//*   GUASYNWR : GUARANTEED  SYNCHRONOUS  WRITE   field   indicates  *
//*              whether  the  system  should  return  from  a BSAM  *
//*              CHECK  (or WAIT)  issued  for  a  WRITE  against a  *
//*              partitioned  dataset  extended (PDSE)  member or a  *
//*              compressed format data set before (unsynchronized)  *
//*              or after (synchronized) the data has been written   *
//*              to a storage device.                                *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              Y  -> Indicates synchronized write.                 *
//*              N  -> Indicates no synchronization.                 *
//*                                                                  *
//*                                                             7‡W1A*
//*   MULTITSG : MULTI TIER SGs field indicates whether or not SMS   *
//*              attempt to allocate using a volume in the first     *
//*              listed storage group prior to allocating against    *
//*              subsequent storage groups.                          *
//*                                                                  *
//*              Possible Values : Y/N/BLANK                         *
//*                                                                  *
//*                                                             5‡X1A*
//*   PAVCAP   : Use the PARALLEL ACCESS VOLUME CAPABILITY field     *
//*              to modify the volume preferencing.                  *
//*                                                                  *
//*              Possible Values : R/P/S/N                           *
//*                                                                  *
//*   CFCACSTN : Coupling Facility Cache set name.                   *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              1-8 alphanumeric characters with beginning char     *
//*                                                                  *
//*   CFDTWGHT : Specifies relative importance of  data in a SC      *
//*              when it is accessed directly.                       *
//*                                                                  *
//*              Possible Values : 1 - 11, BLANK                     *
//*                                                                  *
//*   CFSEQWHT : Specifies relative importance of  data in a SC      *
//*              when it is accessed sequentially.                   *
//*                                                                  *
//*              Possible Values : 1 - 11, BLANK                     *
//*                                                                  *
//*   CFLOCSTN : Coupling Facility Lock set name.               6‡A1A*
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              1-8 alphanumeric characters with beginning char     *
//*                                                                  *
//*   DISCSPHERE: Disconnect Sphere at CLOSE field indicates   13‡D1A*
//*               whether the sphere should be disconnected          *
//*               immediately upon closing the data set or stay      *
//*               connected for a period of time.                    *
//*                                                                  *
//*               Possible Values :                                  *
//*                                                                  *
//*               Y      -> Yes, the sphere will be immediately      *
//*                         disconnected as soon as the data set is  *
//*                         closed.                                  *
//*               N      -> No, sphere stays connected for a period  *
//*                         of time following the "CLOSE".           *
//*                                                                  *
//*   ZHLREAD :  The zHyperLink Eligible for Read field        35‡G1A*
//*              indicates whether the data sets in this storage     *
//*              class can use the zHyperLink  feature to read       *
//*              blocks from DASD device. zHyperLink dramatically    *
//*              improves application response time. Good candidates *
//*              for using zHyperLink are synchronous (blocking)     *
//*              reads when the data is likely to be in the device   *
//*              cache. Bad candidates include read-ahead or         *
//*              pre-staging of data (non-blocking), or where data   *
//*              is not likely to be in cache.                       *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              Y  -> YES, zHyperLink eligibility is enabled for    *
//*                    Read requests;                                *
//*              N  -> NO, zHyperLink eligibility is disabled for    *
//*                    Read requests.                                *
//*                                                                  *
//*  ZHLWRITE :  The zHyperLink Eligible for Write field indicates   *
//*              whether the data sets in this storage class can     *
//*              use the zHyperLink feature to write blocks to       *
//*              a DASD device. zHyperLink dramatically improves     *
//*              application response time. Good candidates for      *
//*              using zHyperLink are synchronous (blocking) writes  *
//*              that  follow a log-write pattern. Bad candidates    *
//*              include random writes or lazy/delayed writes        *
//*              (non-blocking).                                     *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              Y  -> YES, zHyperLink eligibility is enabled for    *
//*                    Write requests;                               *
//*              N  -> NO, zHyperLink eligibility is disabled for    *
//*                    Write requests.                               *
//*                                                                  *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with   *
//*                a higher level of SMS, using a lower level of     *
//*                SMS will make this application fail unless you    *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                           ‡WA41441*
//*                                                                  *
//*                Possible values : Y/N/BLANK               ‡WA41441*
//*********************** ADD  END  **********************************
//********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAS1 DEFINE/ALTER +
SCDS(TEMP.SCDS) +
STCNAME() +
DESCR() +
DMSRESP() +
DRTBIAS() +
SEQMSRES() +
SEQBIAS() +
INIARESS() +
SUSDTRT() +
OAMLVL() +
AVALBTY() +
ACCSBTY() +
BACKUP() +
VRSNING() +
GURNTSPC() +
GUASYNWR() +
MULTITSG() +
PAVCAP() +
CFCACSTN() +
CFDTWGHT() +
CFSEQWHT() +
CFLOCSTN() +
DISCSPHERE() +
ZHLREAD() +
ZHLWRITE() +
UPDHLVLSCDS() +
)
/*
//STEP2   EXEC ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAS1 DISPLAY +
SCDS(TEMP.SCDS) +
STCNAME() +
)
//

./ ADD NAME=ACBJBAU2
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAU2) COMP(5695DF123): BATCH  - UPDATE TEST CASES        */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5695-DF1                                                         */
//* (C) COPYRIGHT 1996, 1998 IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//*                                                                  */
//* $K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION       ‡K0A*/
//* $K1=KNQ0003,HACS110,95/08/14,SNJADR: COMMENT CORRECTION      ‡K1C*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO UPDATE TEST CASES WITH TEST RESULTS IN BATCH       *
//*                                                                  *
//*    INSTRUCTIONS BEFORE SUBMITTING:                               *
//*                                                                  *
//*       CHANGE JOBCARD                                             *
//*       CHANGE PREFIX                                              *
//*       CHANGE PARAMETERS                                          *
//*                                                                  *
//*    PARAMETERS:                                                   *
//*                                                                  *
//*       NEWLIST  - NEW ACS TEST LISTING                            *
//*       TESTBED  - TEST CASE PDS                                   *
//*       XCPTDSN  - EXCEPTION TEST CASE PDS                         *
//*       RSLTDSN  - COMPARISON RESULTS DATA SET                     *
//*                                                                  *
//********************************************************************
//UPDTE   EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB,TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(%ACBQBAU1 +
NEWLIST(NEW.TESTLIST) +
XCPTPDS(TESTCASE.EXCP) +
TESTBED(TESTCASE.LIBRARY) +
RSLTDSN(COMPARE.LISTING)) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************

./ ADD NAME=ACBJBAU4
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//********************************************************************/
//*$MAC(ACBJBAU4) COMP(5695DF123): BATCH  - UPDATE CNTL              */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5695-DF1                                                         */
//* (C) COPYRIGHT 1996       IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//*                                                                  */
//* $K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION       ‡K0A*/
//* $K1=KNQ0003,HACS110,95/08/14,SNJADR: COMMENT CORRECTION      ‡K1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        ‡WA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*10/15/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* UPDATE THE CNTL LIBRARY                                          *
//*                                                                  *
//* CHANGE THE CONTROL CARDS AS FOLLOWS:                             *
//*                                                                  *
//*      CHANGE NEWJOBNAME TO JOBNAME TO BE USED ON JOBCARD          *
//*      CHANGE NEWACCTINFO TO NEW ACCOUNTING INFO ON JOBCARD        *
//*      CHANGE NEWUSERID TO USERID ON JOBCARD                       *
//*      CHANGE NEWMSGCLASS TO MSGCLASS DESIRED ON JOBCARD           *
//*      CHANGE NEWJOBCLASS TO JOB CLASS DESIRED ON JOBCARD          *
//*                                                                  *
//********************************************************************
//UPDTCNTL EXEC PGM=IPOUPDTE,REGION=(2048K),TIME=(300),PARM='CHECK'
//STEPLIB    DD DSN=SYS1.DGTLLIB,DISP=SHR
//‡CNTLLIB DD DSN=SYS1.SACBCNTL,DISP=SHR
//SYSIN  DD *
IBMUSERA<NEWJOBNAME<
(ACCT)<NEWACCTINFO<
IBMUSER<NEWUSERID<
MSGCLASS=H<NEWMSGCLASS<
CLASS=A<NEWJOBCLASS<
END
/*
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAXV
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAXV) COMP(5695DF123):BATCH - GENERATES REPORT DCOLLECT  */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5695-DF1                                                         */
//* (C) COPYRIGHT 1996, 1998 IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//*                                                                  */
//* $K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION       ‡K0A*/
//* $K1=KNQ0003,HACS110,95/08/14,SNJADR: COMMENT CORRECTION      ‡K1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        ‡WA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      ‡L0A*/
//*$L1=KN20035,HACS120,96/07/13,SNJTCS: CHANGED PARAMETERS       ‡L1A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//*11/18/98  TCS - HDZ11E0: Fix for ISPFILE problem          ‡WA36007*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE DASD VOLUME REPORT FROM DCOLLECT DATA     *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*                                                                  *
//*    CHOOSE FROM THE FOLLOWING PARAMETERS FOR DATA TO BE LISTED.   *
//*    THE ORDER CHOSEN DETERMINES THE ORDER IN THE REPORT.          *
//*    THE TOTAL REPORT WIDTH MAY NOT EXCEED 133.                    *
//*                                                                  *
//*      %FREE ! FREE%       -   % FREESPACE ON VOLUME.              *
//*      DEVCAP ! CAPACITY   -   DEVICE CAPACITY                     *
//*      DEVNUM ! ADDRESS    -   DEVICE NUMBER OF VOLUME.            *
//*      DEVTYPE             -   DEVICE TYPE OF VOLUME.              *
//*      FRAGINDX ! FRAG     -   FRAGMENTATION INDEX OF VOLUME.      *
//*      FREEDSCB ! DSCBFREE -   £ OF FREE DSCBS IN VTOC.            *
//*      FREEVIR ! VIRFREE   -   £ OF FREE VIRS IN INDEXED VTOC.     *
//*      FREEXT ! EXTFREE    -   NUMBER OF FREE EXTENTS ON VOLUME.   *
//*      INDEX ! INDXSTAT    -   STATUS OF INDEXED VTOC ON VOLUME.   *
//*      KBFREE ! FREEKB     -   FREESPACE IN KB BYTES.              *
//*      LRGEXT ! EXTLRG     -   SIZE OF LARGEST EXTENT ON VOLUME.   *
//*      PAGELENGTH          -   NUMBER OF LINES PER PAGE (DEF IS 60)*
//*                          -   OF CHARACTERS.                      *
//*      SHRDASD! SHARED     -   IS THE VOLUME A SHARED DASD VOLUME? *
//*      SPACALLOC!ALLOCSPC  -   ALLOCATED SPACE ON VOLUME.          *
//*      STORGRP             -   VOLUMES STORAGE GROUP.              *
//*      TITLE=XXX           -   TITLE FOR REPORT                    *
//*      USEATTR ! ATTRIB    -   VOLUME USE ATTRIBUTE (PUBLIC,ETC.)  *
//*      VOLSER ! VOL        -   VOLUME SERIAL                       *
//*      VOLSTAT ! SMSSTAT   -   VOLUMES SMS STATUS (CONVERT, ETC.)  *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* DELETE STEP TO DELETE THE REPORT DATA SET IF EXISTS ALREADY      *
//*                                                                  *
//********************************************************************
//DELREP  EXEC PGM=IDCAMS
//SYSPRINT  DD  SYSOUT=*
//SYSIN   DD  *
 DELETE IBMUSER.DASDVOL.REPORT
/*
//********************************************************************
//*                                                                  *
//* STEP TO ALLOCATE ISPFILE, WHERE THE GENERATED REPORT IS SAVED    *
//* NOTE: THE DATA SET BEING ALLOCATED SHOULD NOT BE A TEMPORARY     *
//*       DATA SET.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=IBMUSER.DASDVOL.REPORT,DISP=(NEW,CATLG),
//    BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD SYSOUT=*
//SYSIN  DD *
/*
//********************************************************************
//*                                                                  *
//* REPORT GENERATION STEP                                           *
//*                                                                  *
//*    DCOLIN  - DCOLLECT DATA (INPUT)                               *
//*    ISPFILE - DASD VOLUME REPORT (OUTPUT, FROM ALCISPFL STEP)     *
//*    SYSIN   - KEYWORDS SPECIFYING THE INFO IN THE REPORT          *
//*                                                                  *
//********************************************************************
//GENREP  EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB,TABL2=userid.TEST.ISPTABL
//DCOLIN  DD  DSN=IBMUSER.DCOLLECT.DATA,DISP=SHR
//ISPFILE DD  DSN=IBMUSER.DASDVOL.REPORT,DISP=OLD
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAR6) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN DD  *
VOLSER
FRAG
DEVTYPE
TITLE=DASD VOLUME REPORT FROM DCOLLECT FOR MVS2 SYSTEM 06/01/96
ADDRESS
INDEX
FREE%
FREEDSCB
STORGRP
/*
//********************************************************************
//*                                                                  *
//* COPY DASD VOLUME REPORT                                          *
//*                                                                  *
//*    SYSUT1 - INPUT (FROM PREVIOUS STEP)                           *
//*    SYSUT2 - OUTPUT                                               *
//*                                                                  *
//********************************************************************
//REPGEN EXEC PGM=IEBGENER
//SYSUT1   DD  DSN=IBMUSER.DASDVOL.REPORT,DISP=(SHR,DELETE)
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAX1
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAX1) COMP(5695DF123): BATCH - ENHANCED ACS TEST LISTING */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5647-A01                                                         */
//* (C) COPYRIGHT 1996, 2000 IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION       ‡K0A*/
//* $K1=KNQ0003,HACS110,95/08/14,SNJADR: COMMENT CORRECTION      ‡K1C*/
//* $L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES     ‡L0A*/
//* 10/14/96  CCY - HDZ11C0: Ship as SPE                     ‡WA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    ‡T2A*/
//* 11/24/99  TCS - HDZ11E0: B37 Abend on XREFDSN dataset    ‡WA42064*/
//********************************************************************/
//********************************************************************
//* SAMPLE JCL TO GENERATE ENHANCED ACS TEST LISTING IN BATCH        *
//********************************************************************
//********************************************************************
//*                                                                  *
//* STEP TO GENERATE ENHANCED ACS TEST LISTING                       *
//*                                                                  *
//* PARAMETERS:                                                      *
//*                                                                  *
//*      ACSDSN   - ACS TEST LISTING (INPUT)                         *
//*      XREFDSN  - ENHANCED ACS TEST LISTING (OUTPUT)               *
//*      XREFSPC  - The Space parameters can be specified  12‡WA42064*
//*                 for XREFDSN dataset using this parameter.        *
//*                                                                  *
//*                 Syntax ==> XREFSPC(PRI,SEC) Where                *
//*                            PRI -> Primary space in Tracks        *
//*                            SEC -> Secondary space in Tracks      *
//*                                   to be allocated.               *
//*                 Eg. XREFSPC(10,20)                               *
//*                                                                  *
//*                 If this parameter is not specified, by default   *
//*                 ACSDSN dataset space parameters are used to      *
//*                 allocate XREFDSN dataset.                        *
//*                                                                  *
//*      OUTPUT SELECTION CRITERIA: (DATA COMES FROM TEST CASE PDS)  *
//*         DSNINFO  - DSN   - DATA SET NAME                         *
//*         UNITINFO - UNIT  - UNIT ON WHICH THE DATA SET RESIDES    *
//*         SIZEINFO - SIZE  - SIZE OF DATA SET                      *
//*         EXPTINFO - EXPDT - EXPIRY DATE OF THE DATA SET           *
//*         JOBINFO  - JOB   - JOB WHICH ALLOCATED THE DATA SET      *
//*         PGMINFO  - PGM   - PROGRAM WHICH ALLOCATED THE DATA SET  *
//*                                                                  *
//********************************************************************
//GENREP  EXEC  ACBJBAOB,
//        PLIB1=SYS1.DGTPLIB,
//        TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
DEL RSLT1
%ACBQBAX1 +
ACSDSN(BASE.LISTING) +
XREFDSN(RSLT1) +
XREFSPC() +
DSNINFO(Y) +
UNITINFO(Y) +
SIZEINFO(Y) +
EXPTINFO(Y) +
JOBINFO(Y) +
PGMINFO(Y)
/*
//********************************************************************
//*                                                                  *
//* COPY ENHANCED ACS TEST LISTING                                   *
//*                                                                  *
//*    SYSUT1 - INPUT (FROM PREVIOUS STEP)                           *
//*    SYSUT2 - OUTPUT                                               *
//*                                                                  *
//********************************************************************
//REPGEN   EXEC PGM=IEBGENER
//SYSIN    DD DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD DISP=SHR,DSN=IBMUSER.ENHANCED.LISTING
//SYSUT2   DD SYSOUT=*
//*

./ ADD NAME=ACBTST
**********************************************************************
*   LIB: SYS1.SACBCNTL(ACBTST)                                       *
*        ORIGINAL COPY FROM MVS CUSTOMIZATION LIBRARY                *
*   DOC: THIS PROGRAM WILL READ RECORDS GENERATED BY THE ACS         *
*        ROUTINE USER EXIT (IGDACSSC) AND GENERATE ACS ROUTINE       *
*        TEST CASES.                                                 *
**********************************************************************
*  MODULE NAME  - ACSTST                                             *
*                                                                    *
*PROPRIETARY V3 STATEMENT                                            *
*LICENSED MATERIALS - PROPERTY OF IBM                                *
*5694-A01                                                        ‡02C*
*COPYRIGHT 2000,2010  IBM CORP.                                      *
*END PROPRIETARY V3 STATEMENT                                        *
*                                                                    *
*  FUNCTION     - GENERATES ACS ROUTINE TEST CASES FROM SMF TYPE 127 *
*                 RECORDS WRITTEN BY IGDACSSC EXIT.                  *
*                                                                    *
*  MODULE TYPE  - CODE                                               *
*  MODULE SIZE  - REFER TO ASSEMBLER LISTING                         *
*  ATTRIBUTES   - NONE                                               *
*  ENTRY POINT  - ACSTST                                             *
*  INPUT        - DATA SET CONTAINIG SMF DATA                        *
*  OUTPUT       - ACS TEST CASES                                     *
*                                                                    *
*                                                                    *
*  CHANGE ACTIVITY:                                                  *
*                                                                    *
*  $01=OW43758,HDZ11F0,05/24/2000,TCS: MODIFIED TO SUPPORT       ‡01A*
*                                      ADDITIONAL ACS VARIABLES  ‡01A*
*  $02=K1K0688,HDZ11K0,12/22/2004,TCS: GT64K SUPPORT             ‡02A*
*  $03=OA26254,HDZ1A10,10/09/2008,IBSTG: Change FILENUM, DSNTYPE ‡03A*
*  $04=K1B0913,HDZ1B10,10/20/2008,IBSTG: Remove MSVGP            ‡04A*
**********************************************************************
         TITLE 'NaviQuest-SUPPLIED PROGRAM TO CREATE ACS TEST CASES'
ACSTST   CSECT
         USING ACSTST,GR15        ESTABLISH ADDRESSABILITY
         STM   GR14,GR12,12(GR13) STANDARD ENTRY LINKAGE
         LR    GR12,GR15          LOAD BASE REGISTER
         DROP  GR15
         USING ACSTST,GR12        ESTABLISH ADDRESSABILITY
         L     GR2,WRKAREL        LOAD SIZE OF WORK AREA          ‡01C
GETMAIN  DS    0H
         GETMAIN R,LV=(GR2)       GET VIRT STOR FOR WORK AREA
         LR    GR11,GR1           ESTABLISH ADDRESSABILITY TO
         USING WORKAREA,GR11      WORK AREA
         LA    GR10,SAVEAREA      STANDARD SAVE AREA
         ST    GR13,4(GR10)       BACKWARD SAVE AREA POINTER
         ST    GR10,8(GR13)       FORWARD SAVE AREA POINTER
         LR    GR13,GR10
         OPEN  (INDCB,(INPUT))
         OPEN  (OUTDCB,(OUTPUT))
         MVI   MEMNAME,C'T'       1ST CHAR MEMBER NAME
         ZAP   MEMCOUNT,=P'0'     INITIALIZE MEMBER COUNT TO ZERO
         MVC   MVCINSTD,MVCINST   MOVE MVC INSTR TO WORK AREA
GET      DS    0H
         GET   INDCB,SMFUSER
         CLI   SMFRTYPE,127       TEST USER SMF RECORD TYPE
         BNE   GET                NO
         LA    GR10,SMFROVAR      ESTABLISH ADDRESSABILITY TO
         USING ACERO,GR10         READ ONLY VARIABLES
         LA    GR9,SMFRWVAR       ESTABLISH ADDRESSABILITY TO
         USING ACERW,GR9          READ WRITE VARIABLES
*
*        SETUP TEST CASE
*
         LA    GR8,VARWORK        VARIABLE WORKAREA WORK AREA
         CLC   ACEROJNM,NULLS     TEST JOB ACCOUNT INFO SPECIFIED
         BE    SET03              NO
         XR    GR7,GR7            CLEAR REG
         ICM   GR7,1,ACEROJNM     NUMBER OF JOB ACCT FIELDS
         LA    GR5,ACEROJFL       ADDR OF ACCT JOB1 FIELD LENGTH
         XR    GR9,GR9            CLEAR REG
         ICM   GR9,1,ACEROJFL     LENGTH OF 1ST JOB ACCT INFO SOURCE
         BZ    SET00A             NULL ACCT JOB1 FIELD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING ACCTJOBD,GR8       EST ADDR TO JOB ACCT DSECT
         MVC   ACCTJOBK,=C'ACCT_JOB1: ' NO, ACCT JOB1 KEYWORD
         BAL   GR3,PUT            PUT ACCT JOB1 KEYWORD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         LA    GR6,VARWORK        TARGET JOB ACCT FIELD
         LA    GR5,1(GR0,GR5)     ADDRESS OF ACCT JOB1 FIELD
         BCTR  GR9,GR0            REDUCE LENGTH BY 1
         EX    GR9,MVCINSTD       MOVE ACCT JOB1 TO TARGET
         BAL   GR3,PUT            PUT ACCT JOB1 VALUE
SET00A   DS    0H
         BCT   GR7,SET01          MORE JOB ACCT INFO
         B     SET03              FINISHED WITH JOB ACCT INFO
SET01    DS    0H
         LA    GR5,1(GR9,GR5)     ADDRESS OF ACCT JOB2 LEN FIELD
         ICM   GR9,1,0(GR5)       LENGTH OF ACCT JOB2 FIELD
         BZ    SET01A             NULL ACCT JOB2 FIELD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         MVC   ACCTJOBK,=C'ACCT_JOB2: ' ACCT JOB2 KEYWORD
         BAL   GR3,PUT            PUT ACCT JOB2 KEYWORD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         BCTR  GR9,GR0            REDUCE LENGTH BY 1
         LA    GR6,VARWORK        TARGET JOB ACCT FIELD
         LA    GR5,1(GR0,GR5)     ADDRESS OF ACCT JOB2 FIELD
         EX    GR9,MVCINSTD       MOVE ACCT JOB2 TARGET
         BAL   GR3,PUT            PUT ACCT JOB2 VALUE
SET01A   DS    0H
         BCT   GR7,SET02          MORE JOB ACCT INFO
         B     SET03              FINISHED WITH JOB ACCT INFO
SET02    DS    0H
         LA    GR5,1(GR9,GR5)     ADDRESS OF ACCT JOB3 LEN FIELD
         ICM   GR9,1,0(GR5)       LENGTH OF ACCT JOB3 FIELD
         BZ    SET02A             NULL ACCT JOB3 FIELD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         MVC   ACCTJOBK,=C'ACCT_JOB3: ' ACCT JOB3 KEYWORD
         BAL   GR3,PUT            PUT ACCT JOB3 KEYWORD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         BCTR  GR9,GR0            REDUCE LENGTH BY 1
         LA    GR6,VARWORK        TARGET JOB ACCT FIELD
         LA    GR5,1(GR0,GR5)     ADDRESS OF ACCT JOB3 FIELD
         EX    GR9,MVCINSTD       MOVE ACCT JOB3 TARGET
         BAL   GR3,PUT            PUT ACCT JOB3 VALUE
SET02A   DS    0H
         DROP  GR8
*                                 TEST CASE ALLOWS ONLY 3 JOB ACCT FLDS
SET03    DS    0H
         CLC   ACEROSNM,NULLS     TEST STEP ACCOUNT INFO SPECIFIED
         BE    SET06              NO
         XR    GR7,GR7            CLEAR REG
         ICM   GR7,1,ACEROSNM     NUMBER OF STEP ACCT FIELDS
         LA    GR5,ACEROSFL       ADDR OF ACCT STEP1 FIELD LENGTH
         XR    GR9,GR9            CLEAR REG
         ICM   GR9,1,ACEROSFL     LENGTH OF ACCT STEP1 FIELD
         BZ    SET03A             NULL ACCT STEP1 FIELD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING ACCTSTPD,GR8       EST TO STEP ACCT DSECT
         MVC   ACCTSTPK,=C'ACCT_STEP1: ' ACCT STEP1 KEYWORD
         BAL   GR3,PUT            PUT ACCT STEP1 KEYWORD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         LA    GR6,VARWORK        TARGET STEP ACCT FIELD
         LA    GR5,1(GR0,GR5)     ADDRESS OF ACCT STEP1 FIELD
         BCTR  GR9,GR0            REDUCE LENGTH BY 1
         EX    GR9,MVCINSTD       MOVE ACCT STEP1 TO TARGET
         BAL   GR3,PUT            PUT ACCT STEP1 VALUE
SET03A   DS    0H
         BCT   GR7,SET04          MORE STEP ACCT INFO
         B     SET06              FINISHED WITH STEP ACCT INFO
SET04    DS    0H
         LA    GR5,1(GR9,GR5)     ADDRESS OF ACCT STEP2 LEN FIELD
         ICM   GR9,1,0(GR5)       LENGTH OF ACCT STEP2 FIELD
         BZ    SET04A             NULL ACCT STEP2 FIELD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         MVC   ACCTSTPK,=C'ACCT_STEP2: ' ACCT STEP2 KEYWORD
         BAL   GR3,PUT            PUT ACCT STEP2 KEYWORD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         LA    GR6,VARWORK        TARGET STEP ACCT FIELD
         BCTR  GR9,GR0            REDUCE LENGTH BY 1
         LA    GR5,1(GR0,GR5)     ADDRESS OF ACCT STEP2 FIELD
         EX    GR9,MVCINSTD       MOVE ACCT STEP2 TARGET
         BAL   GR3,PUT            PUT ACCT STEP2 VALUE
SET04A   DS    0H
         BCT   GR7,SET05          MORE STEP ACCT INFO
         B     SET06              FINISHED WITH STEP ACCT INFO
SET05    DS    0H
         LA    GR5,1(GR9,GR5)     ADDRESS OF ACCT STEP3 LEN FIELD
         ICM   GR9,1,0(GR5)       LENGTH OF ACCT STEP3 FIELD
         BZ    SET05A             NULL ACCT STEP 3 FIELD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         MVC   ACCTSTPK,=C'ACCT_STEP3: ' ACCT STEP3 KEYWORD
         BAL   GR3,PUT            PUT ACCT STEP3 KEYWORD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         LA    GR6,VARWORK        TARGET STEP ACCT FIELD
         BCTR  GR9,GR0            REDUCE LENGTH BY 1
         LA    GR5,1(GR0,GR5)     ADDRESS OF ACCT STEP3 FIELD
         EX    GR9,MVCINSTD       MOVE ACCT STEP3 TARGET
         BAL   GR3,PUT            PUT ACCT STEP3 VALUE
SET05A   DS    0H
         DROP  GR8
*                                 TEST CASE ALLOWS ONLY 3 STP ACCT FLDS
SET06    DS    0H
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING ACSENVD,GR8        EST ADDR TO ACSENVIR DSECT
         MVC   ACSENVK,=C'ACSENVIR: ' ACSENVIR KEYWORD
         MVC   ACSENVV,ACEROENV   ACSENVIR VALUE
         BAL   GR3,PUT            PUT ACSENVIR ENTRY
         DROP  GR8
         CLC   ACEROAPP,NULLS     TEST APPL ID SPECIFIED
         BE    SET07              NO
         CLC   ACEROAPP,BLANKS    TEST APPL ID SPECIFIED          2‡01A
         BE    SET07              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING APPLICD,GR8        EST ADDR TO APPL ID DSECT
         MVC   APPLICK,=C'APPLIC: ' APPL ID KEYWORD
         MVC   APPLICV,ACEROAPP   APPL ID VALUE
         BAL   GR3,PUT            PUT APPL ID ENTRY
         DROP  GR8
SET07    DS    0H
         CLC   ACERODCV,NULLS     TEST DATACLAS SPECIFIED
         BE    SET08              NO
         CLC   ACERODCV,BLANKS    TEST DATACLAS PRIMED WITH BLANKS
         BE    SET08              YES
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING DATACLD,GR8        EST ADDR TO DATACLAS DSECT
         MVC   DATACLK,=C'DATACLAS: ' DATACLAS KEYWORD
         MVC   DATACLV,ACERODCV   DATACLAS VALUE
         BAL   GR3,PUT            PUT DATACLASS ENTRY
         DROP  GR8
SET08    DS    0H
         CLC   ACERODD,NULLS      TEST DDNAME SPECIFIED
         BE    SET09              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING DDD,GR8            EST ADDR TO DDNAME DSECT
         MVC   DDK,=C'DD: '       DDBNAME KEYWORD
         MVC   DDV,ACERODD        DDNAME VALUE
         BAL   GR3,PUT            PUT DDNAME ENTRY
         DROP  GR8
SET09    DS    0H
         CLC   ACERODDV,NULLS     TEST DEFAULT DATACLAS SPECIFIED
         BE    SET10              NO
         CLC   ACERODDV,BLANKS    TEST DEFAULT DATACLAS SPECIFIED 2‡01A
         BE    SET10              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING DEFDCD,GR8         EST ADDR TO DEFAULT DATACLAS DSECT
         MVC   DEFDCK,=C'DEF_DATACLAS: ' DEFAULT DATACLAS KEYWORD
         MVC   DEFDCV,ACERODDV    DEFAULT DATACLAS VALUE
         BAL   GR3,PUT            PUT DEFAULT DATACLASS ENTRY
         DROP  GR8
SET10    DS    0H
         CLC   ACERODMV,NULLS     TEST DEFAULT MGMTCLAS SPECIFIED
         BE    SET11              NO
         CLC   ACERODMV,BLANKS    TEST DEFAULT MGMTCLAS SPECIFIED 2‡01A
         BE    SET11              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING DEFMCD,GR8         EST ADDR TO DEFAULT MGMTCLAS DSECT
         MVC   DEFMCK,=C'DEF_MGMTCLAS: ' DEFAULT MGMTCLAS KEYWORD
         MVC   DEFMCV,ACERODMV    DEFAULT MGMTCLAS VALUE
         BAL   GR3,PUT            PUT DEFAULT MGMTCLASS ENTRY
         DROP  GR8
SET11    DS    0H
         CLC   ACERODSV,NULLS     TEST DEFAULT STORCLAS SPECIFIED
         BE    SET12              NO
         CLC   ACERODSV,BLANKS    TEST DEFAULT STORCLAS SPECIFIED 2‡01A
         BE    SET12              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING DEFSCD,GR8         EST ADDR TO DEFAULT STORCLAS DSECT
         MVC   DEFSCK,=C'DEF_STORCLAS: ' DEFAULT STORCLAS KEYWORD
         MVC   DEFSCV,ACERODSV    DEFAULT STORCLAS VALUE
         BAL   GR3,PUT            PUT DEFAULT STORCLASS ENTRY
         DROP  GR8
SET12    DS    0H
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING DSND,GR8           EST TO DSNAME DSECT
         MVC   DSNK,=C'DSN: '     DSNAME KEYWORD
         MVC   DSNV,ACERODSN      DSNAME VALUE
         BAL   GR3,PUT            PUT DSNAME ENTRY
         DROP  GR8
         CLC   ACERODSG,NULLS     TEST DSORG SPECIFIED
         BE    SET14              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING DSORGD,GR8         EST ADDR TO DSORG DSECT
         MVC   DSORGK,=C'DSORG: ' DSORG KEYWORD
         CLI   ACERODSG+3,ACEROPS TEST PS DSORG
         BNE   SET13A             NO
         MVC   DSORGV,=C'PS'      PS DSORG VALUE
         B     SET13PUT
SET13A   DS    0H
         CLI   ACERODSG+3,ACEROPO TEST PO DSORG
         BNE   SET13B             NO
         MVC   DSORGV,=C'PO'      PO DSORG VALUE
         B     SET13PUT
SET13B   DS    0H
         CLI   ACERODSG+3,ACEROVS TEST VS DSORG
         BNE   SET13C             NO
         MVC   DSORGV,=C'VS'      VS DSORG VALUE
         B     SET13PUT
SET13C   DS    0H
         CLI   ACERODSG+3,ACERODA TEST DA DSORG
         BNE   SET13D             NO
         MVC   DSORGV,=C'DA'      VS DSORG VALUE
         B     SET13PUT
SET13D   DS    0H
         DC    X'00'              FORCE 0C1
         DC    C'DSORG'           UNKNOWN DSORG
SET13PUT DS    0H
         BAL   GR3,PUT            PUT DSORG ENTRY
         DROP  GR8
SET14    DS    0H
         CLC   ACERODSO,NULLS     TEST DS OWNER SPECIFIED
         BE    SET15              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING DSOWNERD,GR8       EST ADDR TO DS OWNER DSECT
         MVC   DSOWNERK,=C'DSOWNER: ' DS OWNER KEYWORD
         MVC   DSOWNERV,ACERODSO  DS OWNER VALUE
         BAL   GR3,PUT            PUT DS OWNER ENTRY
         DROP  GR8
SET15    DS    0H
         CLC   ACERODST,NULLS     TEST DSTYPE SPECIFIED
         BE    SET17              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING DSTYPED,GR8        EST ADDR TO DSTYPE DSECT
         MVC   DSTYPEK,=C'DSTYPE: ' DSTYPE KEYWORD
         CLI   ACERODST+3,ACEROGDS TEST GDS DSTYPE
         BNE   SET16A             NO
         MVC   DSTYPEV,=C'GDS     ' GDS DSTYPE VALUE
         B     SET16PUT
SET16A   DS    0H
         CLI   ACERODST+3,ACEROPRM TEST PRM DSTYPE
         BNE   SET16B             NO
         MVC   DSTYPEV,=C'PERM    ' PERM DSTYPE VALUE
         B     SET16PUT
SET16B   DS    0H
         CLI   ACERODST+3,ACEROTMP TEST TEMP DSTYPE
         BNE   SET16C             NO
         MVC   DSTYPEV,=C'TEMP    ' TEMP DSTYPE VALUE
         B     SET16PUT
SET16C   DS    0H
         DC    X'00'              FORCE 0C1 ABEND
         DC    C'DSTYPE'          UNKNOWN DSTYPE
         DS    0H
SET16PUT DS    0H
         BAL   GR3,PUT            PUT DSTYPE ENTRY
         DROP  GR8
SET17    DS    0H
         CLC   ACEROEXP,NULLS     TEST EXPDT SPECIFIED
         BE    SET18              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING EXPDTD,GR8         EST ADDR TO EXPDT DSECT
         MVC   EXPDTK,=C'EXPDT: ' EXPDT KEYWORD
         UNPK  EXPDTV,ACEROEXP    EXPDT VALUE
         OI    EXPDTV+6,X'F0'     UNSIGN
         BAL   GR3,PUT            PUT EXPDT ENTRY
         DROP  GR8
SET18    DS    0H
         CLC   ACEROGRP,NULLS     TEST GROUPID SPECIFIED
         BE    SET19              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING GROUPD,GR8         EST ADDR TO GROUPID DSECT
         MVC   GROUPK,=C'GROUP: ' GROUPID KEYWORD
         MVC   GROUPV,ACEROGRP    GROUPD VALUE
         BAL   GR3,PUT            PUT GROUPID ENTRY
         DROP  GR8
SET19    DS    0H
         CLC   ACEROJOB,NULLS     TEST JOBNAME SPECIFIED
         BE    SET20              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING JOBD,GR8           EST ADDR TO JOBNAME DSECT
         MVC   JOBK,=C'JOB: '     JOBNAME KEYWORD
         MVC   JOBV,ACEROJOB      JOBNAME VALUE
         BAL   GR3,PUT            PUT JOBNAME ENTRY
         DROP  GR8
SET20    DS    0H
         CLC   ACEROMSZ,NULLS     TEST MAX DS SIZE SPECIFIED
         BE    SET21              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING MAXSIZED,GR8       EST ADDR TO MAX SIZE DSECT
         MVC   MAXSIZEK,=C'MAXSIZE: ' MAX SIZE KEYWORD
         L     GR7,ACEROMSZ       MAX DS SIZE IN KB
         CVD   GR7,DW             CONVERT TO DECIMAL
         UNPK  MAXSIZEV,DW        UNPACK
         OI    MAXSIZEV+5,X'F0'   UNSIGN
         BAL   GR3,PUT            PUT MAX SIZE ENTRY
         DROP  GR8
SET21    DS    0H
         CLC   ACEROMCV,NULLS     TEST MGMTCLAS SPECIFIED
         BE    SET23              NO                               ‡04C
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING MGMTCLD,GR8        EST ADDR TO MGMTCLAS DSECT
         MVC   MGMTCLK,=C'MGMTCLAS: ' MGMTCLAS KEYWORD
         MVC   MGMTCLV,ACEROMCV   MGMTCLAS VALUE
         BAL   GR3,PUT            PUT MGMTCLASS ENTRY
         DROP  GR8
* SET22    DS    0H                                                ‡04D
*          CLC   ACEROMVG,NULLS     TEST MSS VOL GRP  NAME SPECIF  ‡04D
*          BE    SET23              NO                             ‡04D
*          MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLAN ‡04D
*          USING MSVGPD,GR8         EST ADDR TO MSVGPD DSECT       ‡04D
*          MVC   MSVGPK,=C'MSVGPD: ' MSVGPD KEYWORD                ‡04D
*          MVC   MSVGPV,ACEROMVG    MSVGPD VALUE                   ‡04D
*          BAL   GR3,PUT            PUT MSVGPD ENTRY               ‡04D
*          DROP  GR8                                               ‡04D
SET23    DS    0H
         CLC   ACERONVL,NULLS     TEST NVOL INFO SPECIFIED
         BE    SET24              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING NVOLD,GR8           EST ADDR TO NVOL DSECT
         MVC   NVOLK,=C'NVOL: '   NVOL KEYWORD
         LH    GR7,ACERONVL       BINARY NVOL
         CVD   GR7,DW             CONVERT TO DECIMAL
         UNPK  NVOLV,DW           UNPACK
         OI    NVOLV+1,X'F0'      UNSIGN
         BAL   GR3,PUT            PUT NVOL ENTRY
         DROP  GR8
SET24    DS    0H
         CLC   ACEROPGM,NULLS     TEST PGM NAME SPECIFIED
         BE    SET25              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING PGMD,GR8           EST ADDR TO PGM NAME DSECT
         MVC   PGMK,=C'PGM: '     PGM NAME KEYWORD
         MVC   PGMV,ACEROPGM      PGM NAME VALUE
         BAL   GR3,PUT            PUT PGM NAME ENTRY
         DROP  GR8
SET25    DS    0H
         CLC   ACERORCG,NULLS     TEST RECORG SPECIFIED
         BE    SET27              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING RECORGD,GR8        EST ADDR TO RECORG DSECT
         MVC   RECORGK,=C'RECORG: ' RECORG KEYWORD
         CLI   ACERORCG+3,ACEROKS TEST KS RECORG
         BNE   SET26A             NO
         MVC   RECORGV,=C'KS'     KS RECORG VALUE
         B     SET26PUT
SET26A   DS    0H
         CLI   ACERORCG+3,ACEROES TEST ES RECORG
         BNE   SET26B             NO
         MVC   RECORGV,=C'ES'     ES RECORG VALUE
         B     SET26PUT
SET26B   DS    0H
         CLI   ACERORCG+3,ACERORR TEST RR RECORG
         BNE   SET26C             NO
         MVC   RECORGV,=C'RR'     ES RECORG VALUE
         B     SET26PUT
SET26C   DS    0H
         CLI   ACERORCG+3,ACEROLS TEST LS RECORG
         BNE   SET26D             NO
         MVC   RECORGV,=C'LS'     ES RECORG VALUE
         B     SET26PUT
SET26D   DS    0H
         DC    X'00'              FORCE 0C1 ABEND
         DC    C'RECORG'          UNKNOWN RECORG
         DS    0H
SET26PUT DS    0H
         BAL   GR3,PUT            PUT RECORG ENTRY
         DROP  GR8
SET27    DS    0H
         CLC   ACERORTP,NULLS     TEST RETPD SPECIFIED
         BE    SET28              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING RETPDD,GR8         EST ADDR TO RETPD DSECT
         MVC   RETPDK,=C'RETPD: ' RETPD KEYWORD
         L     GR7,ACERORTP       BINARY RETPD
         CVD   GR7,DW             CONVERT TO DECIMAL
         UNPK  RETPDV,DW          UNPACK
         OI    RETPDV+3,X'F0'     UNSIGN
         BAL   GR3,PUT            PUT RETPD ENTRY
         DROP  GR8
SET28    DS    0H
         CLC   ACEROSIZ,NULLS     TEST PRIMARY DS SIZE SPECIFIED
         BE    SET29              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING SIZED,GR8          EST ADDR TO SIZE DSECT
         MVC   SIZEK,=C'SIZE: '   SIZE KEYWORD
         L     GR7,ACEROSIZ       PRIMARY DS SIZE IN KB
         CVD   GR7,DW             CONVERT TO DECIMAL
         UNPK  SIZEV,DW           UNPACK
         OI    SIZEV+5,X'F0'      UNSIGN
         BAL   GR3,PUT            PUT SIZE ENTRY
         DROP  GR8
SET29    DS    0H
         CLC   ACEROSCV,NULLS     TEST STORCLAS SPECIFIED
         BE    SET30              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING STORCLD,GR8        EST ADDR TO STORCLAS DSECT
         MVC   STORCLK,=C'STORCLAS: ' STORCLAS KEYWORD
         MVC   STORCLV,ACEROSCV   STORCLAS VALUE
         BAL   GR3,PUT            PUT STORCLASS ENTRY
         DROP  GR8
SET30    DS    0H
         CLC   ACEROUNT,NULLS     TEST UNIT NAME SPECIFIED
         BE    SET31              NO
         CLC   ACEROUNT,BLANKS    TEST UNIT NAME PRIMED WITH BLANKS
         BE    SET31              YES
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING UNITD,GR8          EST ADDR TO UNIT DSECT
         MVC   UNITK,=C'UNIT: '   UNIT KEYWORD
         MVC   UNITV,ACEROUNT     UNIT VALUE
         BAL   GR3,PUT            PUT UNIT ENTRY
         DROP  GR8
SET31    DS    0H
         CLC   ACEROUSR,NULLS     TEST USERID SPECIFIED
         BE    SET32              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING USERD,GR8          EST ADDR TO USERID DSECT
         MVC   USERK,=C'USER: '   USERID KEYWORD
         MVC   USERV,ACEROUSR     USERID VALUE
         BAL   GR3,PUT            PUT USERID ENTRY
         DROP  GR8
SET32    DS    0H
         CLC   ACEROVOL,NULLS     TEST VOLSER INFO SPECIFIED
         BE    SET34              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING VOLD,GR8           EST ADDR TO VOL DSECT
         MVC   VOLK,=C'VOL: '     VOL KEYWORD
         LA    GR7,ACEROVOL       BEGINNING OF VOLSERS
         L     GR6,=F'1'          INITIALIZE VOLSER COUNT
SET33A   DS    0H
         LA    GR7,6(GR0,GR7)     ADDRESS OF NEXT VOLSER FIELD
         CLC   0(6,GR7),NULLS     TEST END OF VOLSERS
         BE    SET33B             YES
         LA    GR6,1(GR0,GR6)     INCREASE VOLSER COUNT
         B     SET33A             CONTINUE
SET33B   DS    0H
         CVD   GR6,DW             PACKED DECIMAL VOLSER COUNT
         UNPK  VOLN,DW            UNPACK
         OI    VOLN+1,X'F0'       UNSIGN
         BAL   GR3,PUT            PUT VOL HEADER ENTRY
         LA    GR7,ACEROVOL-6     BEGINNING ADDR OF VOLSERS MINUS 6
SET33C   DS    0H
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         LA    GR7,6(GR0,GR7)     ADDRESS OF NEXT VOLSER
         MVC   VARWORK(6),0(GR7) VOLSER VALUE
         BAL   GR3,PUT            PUT VOLSER ENTRY
         BCT   GR6,SET33C         CONTINUE UNTIL ALL VOLSERS PROCESSED
         DROP  GR8
SET34    DS    0H
         CLC   ACEROXMD,NULLS     TEST XMODE SPECIFIED
         BE    SET36              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING XMODED,GR8         EST ADDR TO DSTYPE DSECT
         MVC   XMODEK,=C'XMODE: ' XMODE KEYWORD
         CLI   ACEROXMD+3,ACEROBCH TEST BATCH XMODE
         BNE   SET35A             NO
         MVC   XMODEV,=C'BATCH   ' BATCH XMODE VALUE
         B     SET35PUT
SET35A   DS    0H
         CLI   ACEROXMD+3,ACEROTSO TEST TSO XMODE
         BNE   SET35B             NO
         MVC   XMODEV,=C'TSO     ' TSO XMODE VALUE
         B     SET35PUT
SET35B   DS    0H
         CLI   ACEROXMD+3,ACEROTSK TEST STARTED TASK XMODE
         BNE   SET35C             NO
         MVC   XMODEV,=C'TASK    ' STARTED TASK XMODE VALUE
         B     SET35PUT
SET35C   DS    0H
         DC    X'00'              FORCE 0C1 ABEND
         DC    C'MODE'            UNKNOWN XMODE
SET35PUT DS    0H
         BAL   GR3,PUT            PUT XMODE ENTRY
         DROP  GR8
SET36    DS    0H                                               143‡01A
         CLC   ACEROSYS,NULLS     TEST SYSTEM SPECIFIED
         BE    SET37              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING SYSNAMD,GR8        EST ADDR TO SYSTEM DSECT
         MVC   SYSNAMK,=C'SYSNAME: '   SYSTEM KEYWORD
         MVC   SYSNAMV,ACEROSYS   SYSTEM VALUE
         BAL   GR3,PUT            PUT SYSTEM ENTRY
         DROP  GR8
SET37    DS    0H
         CLC   ACEROSPX,NULLS     TEST SYSPLEX SPECIFIED
         BE    SET38              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING SYSPLXD,GR8        EST ADDR TO SYSPLEX DSECT
         MVC   SYSPLXK,=C'SYSPLEX: '   SYSPLEX KEYWORD
         MVC   SYSPLXV,ACEROSPX   SYSPLEX VALUE
         BAL   GR3,PUT            PUT SYSPLEX ENTRY
         DROP  GR8
SET38    DS    0H
         CLC   ACEROSGV,NULLS     TEST STORGRP SPECIFIED
         BE    SET39              NO
         CLC   ACEROSGV,BLANKS    TEST STORGRP PRIMED WITH BLANKS
         BE    SET39              YES
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING STORGPD,GR8        EST ADDR TO STORGRP DSECT
         MVC   STORGPK,=C'STORGRP: '   STORGRP KEYWORD
         MVC   STORGPV,ACEROSGV   STORGRP VALUE
         BAL   GR3,PUT            PUT STORGRP ENTRY
         DROP  GR8
SET39    DS    0H
         CLC   ACERODNT,NULLS        TEST DSNTYPE SPECIFIED
         BE    SET40                 NO
         MVC   VARWORK,BLANKS        INIT VARIABLE WORKAREA TO BLANKS
         USING DSNTYPD,GR8           EST ADDR TO DSNTYPE DSECT
         MVC   DSNTYPK,=C'DSNTYPE: ' DSNTYPE KEYWORD
         CLI   ACERODNT+3,ACEROLIB   IS DSNTYPE = LIBRARY?
         BNE   SET39A
         MVC   DSNTYPV,=C'LIBRARY '  DSNTYPE = LIBRARY
         B     SET39PUT
SET39A   DS    0H
         CLI   ACERODNT+3,ACEROPDS   IS DSNTYPE = PDS ?
         BNE   SET39B
         MVC   DSNTYPV,=C'PDS     '  DSNTYPE = PDS
         B     SET39PUT
SET39B   DS    0H
         CLI   ACERODNT+3,ACEROHFS   IS DSNTYPE = HFS ?
         BNE   SET39C
         MVC   DSNTYPV,=C'HFS     '  DSNTYPE = HFS
         B     SET39PUT
SET39C   DS    0H
         CLI   ACERODNT+3,ACEROPIP   IS DSNTYPE = PIPE ?
         BNE   SET39D
         MVC   DSNTYPV,=C'PIPE    '  DSNTYPE = PIPE
         B     SET39PUT
SET39D   DS    0H
         CLI   ACERODNT+3,ACEROEXR   IS DSNTYPE = EXR ?
         BNE   SET39E
         MVC   DSNTYPV,=C'EXR     '  DSNTYPE = EXTENDED REQUIRED   ‡03C
         B     SET39PUT
SET39E   DS    0H
         CLI   ACERODNT+3,ACEROEXC   IS DSNTYPE = EXC ?
         BNE   SET39F
         MVC   DSNTYPV,=C'EXC     '  DSNTYPE = EXTENDED PREFERRED  ‡03C
         B     SET39PUT
SET39F   DS    0H
         CLI   ACERODNT+3,ACEROLRG   IS DSNTYPE = LARGE ?          ‡03C
         BNE   SET39G                                              ‡02A
         MVC   DSNTYPV,=C'LARGE   '  DSNTYPE = LARGE               ‡02A
         B     SET39PUT                                            ‡02A
SET39G   DS    0H
         CLI   ACERODNT+3,ACEROBAS   IS DSNTYPE = BASIC ?          ‡03A
         BNE   SET39H                                              ‡03A
         MVC   DSNTYPV,=C'BASIC   '  DSNTYPE = BASIC               ‡03A
         B     SET39PUT                                            ‡03A
SET39H   DS    0H                                                  ‡03A
         DC    X'00'                FORCE 0C1 ABEND
         DC    C'DSNTYPE'           UNKNOWN DSNTYPE
SET39PUT DS    0H
         BAL   GR3,PUT              PUT DSNTYPE ENTRY
         DROP  GR8
SET40    DS    0H
         CLC   ACEROLBL,NULLS       TEST LABEL SPECIFIED
         BE    SET41                NO
         MVC   VARWORK,BLANKS       INIT VARIABLE WORKAREA TO BLANKS
         USING LABELD,GR8           EST ADDR TO LABEL DSECT
         MVC   LABELK,=C'LABEL: '   LABEL KEYWORD
         CLI   ACEROLBL+3,ACERONL   IS LABEL = NL ?
         BNE   SET40A
         MVC   LABELV,=C'NL '       LABEL=(,NL)
         B     SET40PUT
SET40A   DS    0H
         CLI   ACEROLBL+3,ACEROSL   IS LABEL = SL ?
         BNE   SET40B
         MVC   LABELV,=C'SL '       LABEL=(,SL)
         B     SET40PUT
SET40B   DS    0H
         CLI   ACEROLBL+3,ACEROAL   IS LABEL = AL  ?
         BNE   SET40C
         MVC   LABELV,=C'AL '       LABEL=(,AL)
         B     SET40PUT
SET40C   DS    0H
         CLI   ACEROLBL+3,ACERONSL  IS LABEL = NSL ?
         BNE   SET40D
         MVC   LABELV,=C'NSL'       LABEL=(,NSL)
         B     SET40PUT
SET40D   DS    0H
         CLI   ACEROLBL+3,ACEROSUL  IS LABEL = SUL ?
         BNE   SET40E
         MVC   LABELV,=C'SUL'       LABEL=(,SUL)
         B     SET40PUT
SET40E   DS    0H
         CLI   ACEROLBL+3,ACEROAUL  IS LABEL = AUL ?
         BNE   SET40F
         MVC   LABELV,=C'AUL'       LABEL=(,AUL)
         B     SET40PUT
SET40F   DS    0H
         CLI   ACEROLBL+3,ACEROBLP  IS LABEL = BLP ?
         BNE   SET40G
         MVC   LABELV,=C'BLP'       LABEL=(,BLP)
         B     SET40PUT
SET40G   DS    0H
         CLI   ACEROLBL+3,ACEROLTM  IS LABEL = LTM ?
         BNE   SET40H
         MVC   LABELV,=C'LTM'       LABEL=(,BLP)
         B     SET40PUT
SET40H   DS    0H
         DC    X'00'                FORCE 0C1 ABEND
         DC    C'LABEL'             UNKNOWN LABEL TYPE
SET40PUT DS    0H
         BAL   GR3,PUT              PUT LABEL ENTRY
         DROP  GR8
SET41    DS    0H
         CLC   ACEROFNO,NULLS     TEST TAPE FILE SEQUENCE NO. SPECIFIED
         BE    SET42              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING FILENMD,GR8        EST ADDR TO FILENUM DSECT
         MVC   FILENMK,=C'FILENUM: '  FILENUM KEYWORD              ‡03C
         L     GR7,ACEROFNO       FILE SEQUENCE NUMBER
         CVD   GR7,DW             CONVERT TO DECIMAL
         UNPK  FILENMV,DW         UNPACK
         OI    FILENMV+5,X'F0'    UNSIGN
         BAL   GR3,PUT            PUT FILENUM ENTRY                ‡03C
         DROP  GR8
SET42    DS    0H
         CLC   ACEROTLB,NULLS     TEST LIBRARY NAME SPECIFIED
         BE    SET43              NO
         CLC   ACEROTLB,BLANKS    TEST LIBRARY NAME SPECIFIED
         BE    SET43              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING LIBNAMD,GR8        EST ADDR TO LIBNAME DSECT
         MVC   LIBNAMK,=C'LIBNAME: '   LIBNAME KEYWORD
         MVC   LIBNAMV,ACEROTLB   LIBNAME VALUE
         BAL   GR3,PUT            PUT LIBNAME ENTRY
         DROP  GR8
SET43    DS    0H
         CLC   ACEROBLK,NULLS     TEST BLOCK SIZE SPECIFIED
         BE    SET44              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING BLKSIZED,GR8       EST ADDR TO BLOCK SIZE DSECT
         MVC   BLKSIZEK,=C'BLKSIZE: ' BLOCK SIZE KEYWORD
         L     GR7,ACEROBLK       BLOCK SIZE
         CVD   GR7,DW             CONVERT TO DECIMAL
         UNPK  BLKSIZEV,DW        UNPACK
         OI    BLKSIZEV+9,X'F0'   UNSIGN
         BAL   GR3,PUT            PUT BLOCK SIZE ENTRY
         DROP  GR8
SET44    DS    0H
         AP    MEMCOUNT,=P'1'     INCREASE MEMBER COUNT
         UNPK  MEMNAMCT,MEMCOUNT  UNPACK INTO MEMBER NAME
         OI    MEMNAMCT+6,X'F0'   UNSIGN
         XC    TTR,TTR            CLEAR TTR FOR NEW MEMBER ASSIGNMENT
         MVI   C,X'00'            INDICATE NEW MEMBER
         STOW  OUTDCB,DE          UPDATE PDS DIRECTORY
         B     GET
CLOSE    DS    0H
         CLOSE (INDCB)            CLOSE DATA SETS
         CLOSE (OUTDCB)
         L     GR13,4(GR13)       ADDRESS OF CALLING PGM SAVE AREA
         L     GR0,WRKAREL        LOAD SIZE OF WORK AREA           ‡01C
         FREEMAIN R,LV=(GR0),A=(GR11) FREE WORK AREA
         LM    GR14,GR12,12(GR13)
         LA    GR15,0             SET RETURN CODE
         BR    GR14
PUT      DS    0H
         LA    GR2,VARWORK        ADDRESS OF LOGICAL RECORD
         WRITE DECB,SF,OUTDCB,(GR2) PUT TEST CASE LOGICAL RECORD
         CHECK DECB
         BR    GR3                RETURN TO CALLER
         EJECT
BLANKS   DC    CL80' '            BLANKS
NULLS    DC    30X'00'            NULLS
WRKAREL  DC    A(WRKARSZ)                                          ‡01A
MVCINST  MVC   0(00,GR6),0(GR5)    MVC INSTRUCTION FOR EXECUTING
INDCB    DCB   DSORG=PS,MACRF=GM,DDNAME=INDD,EODAD=CLOSE
OUTDCB   DCB   DSORG=PO,MACRF=W,DDNAME=OUTDD
         EJECT
         IGDACERO                 MAP READ ONLY VARIABLES
ROLEN    EQU   *-ACEROD           LENGTH OF READ ONLY VARIABLES
         IGDACERW                 MAP READ-WRITE VARIABLES
RWLEN    EQU   *-ACERWD           LENGTH OF READ-WRITE VARIABLES
         EJECT
WORKAREA DSECT                    WORK AREA
SAVEAREA DS    XL72               STANDARD SAVE AREA
VARWORK  DS    CL80               TEST CASE WORK AREA
MEMCOUNT DS    PL7                MEMBER COUNT
DE       DS    0CL1               PDS DIRECTORY ENTRY
MEMNAME  DS    CL8                MEMBER NAME
         ORG   MEMNAME+1
MEMNAMCT DS    CL7                MEMBER COUNT
TTR      DS    XL3                MEMBER TTR
C        DS    XL1                TYPE OF ENTRY
DW       DS    0D                 DOUBLE WORD WORK AREA
         DS    XL8
         DS    0H
MVCINSTD DS    XL6                MVC INSTRUCTION FOR EXECUTING
SMFUSER  DS    0D                 SMF USER RECORD
SMFRDW   DS    XL4                RECORD DESCRIPTION WORD
SMFSID   DS    XL1                SYSTEM INDICATOR
SMFRTYPE DS    XL1                RECORD TYPE
SMFTIME  DS    XL4                TIME
SMFDATE  DS    PL4                DATE
SMFSYSID DS    CL4                SYSTEM ID
SMFROVAR DS    XL(ROLEN)          READ ONLY VARIABLES
SMFRWVAR DS    XL(RWLEN)          READ WRITE VARIABLES
         DS    1678F              SUPPORT SMF RECORDS OF LENGTH   2‡01A
*                                 UP TO 10,000
SMFRECLN EQU   *-SMFUSER          LENGTH OF SMF RECORD
WRKARSZ  EQU   *-WORKAREA         SIZE OF WORK AREA
ACCTJOBD DSECT
ACCTJOBK DS    C'ACCT_JOB1: '
         DS    CL69
ACCTSTPD DSECT
ACCTSTPK DS    C'ACCT_STEP1: '
         DS    CL68
ACSENVD  DSECT
ACSENVK  DS    C'ACSENVIR: '
ACSENVV  DS    CL8
         DS    CL62
APPLICD  DSECT
APPLICK  DS    C'APPLIC: '
APPLICV  DS    CL8
         DS    CL64
DATACLD  DSECT
DATACLK  DS    C'DATACLAS: '
DATACLV  DS    CL8
         DS    CL62
DDD      DSECT
DDK      DS    C'DD: '
DDV      DS    CL8
         DS    CL68
DEFDCD   DSECT
DEFDCK   DS    C'DEF_DATACLAS: '
DEFDCV   DS    CL8
         DS    CL58
DEFMCD   DSECT
DEFMCK   DS    C'DEF_MGMTCLAS: '
DEFMCV   DS    CL8
         DS    CL58
DEFSCD   DSECT
DEFSCK   DS    C'DEF_STORCLAS: '
DEFSCV   DS    CL8
         DS    CL58
DSND     DSECT
DSNK     DS    C'DSN: '
DSNV     DS    CL44
         DS    CL31
DSORGD   DSECT
DSORGK   DS    C'DSORG: '
DSORGV   DS    CL2
         DS    CL71
DSOWNERD DSECT
DSOWNERK DS    C'DSOWNER: '
DSOWNERV DS    CL8
         DS    CL63
DSTYPED  DSECT
DSTYPEK  DS    C'DSTYPE: '
DSTYPEV  DS    CL8
         DS    CL64
EXPDTD   DSECT
EXPDTK   DS    C'EXPDT: '
EXPDTV   DS    CL7
         DS    CL66
GROUPD   DSECT
GROUPK   DS    C'GROUP: '
GROUPV   DS    CL8
         DS    CL65
JOBD     DSECT
JOBK     DS    C'JOB: '
JOBV     DS    CL8
         DS    CL67
MAXSIZED DSECT
MAXSIZEK DS    C'MAXSIZE: '
MAXSIZEV DS    CL6
         DS    CL65
BLKSIZED DSECT                                                  4‡01A
BLKSIZEK DS    C'BLKSIZE: '
BLKSIZEV DS    CL10
         DS    CL61
MGMTCLD  DSECT
MGMTCLK  DS    C'MGMTCLAS: '
MGMTCLV  DS    CL8
         DS    CL63
* MSVGPD   DSECT                                                   ‡04D
* MSVGPK   DS    C'MSVGP: '                                        ‡04D
* MSVGPV   DS    CL8                                               ‡04D
*          DS    CL65                                              ‡04D
NVOLD    DSECT
NVOLK    DS    C'NVOL: '
NVOLV    DS    CL2
         DS    CL72
PGMD     DSECT
PGMK     DS    C'PGM: '
PGMV     DS    CL8
         DS    CL67
RECORGD  DSECT
RECORGK  DS    C'RECORG: '
RECORGV  DS    CL2
         DS    CL70
RETPDD   DSECT
RETPDK   DS    C'RETPD: '
RETPDV   DS    CL4
         DS    CL69
SIZED    DSECT
SIZEK    DS    C'SIZE: '
SIZEV    DS    CL6
         DS    CL68
STORCLD  DSECT
STORCLK  DS    C'STORCLAS: '
STORCLV  DS    CL8
         DS    CL62
UNITD    DSECT
UNITK    DS    C'UNIT: '
UNITV    DS    CL8
         DS    CL66
USERD    DSECT
USERK    DS    C'USER: '
USERV    DS    CL8
         DS    CL66
VOLD     DSECT
VOLK     DS    C'VOL: '
VOLN     DS    CL2
         DS    CL73
XMODED   DSECT
XMODEK   DS    C'XMODE: '
XMODEV   DS    CL8
         DS    CL65
SYSNAMD  DSECT                                                   28‡01A
SYSNAMK  DS    C'SYSNAME: '
SYSNAMV  DS    CL8
         DS    CL63
SYSPLXD  DSECT
SYSPLXK  DS    C'SYSPELX: '
SYSPLXV  DS    CL8
         DS    CL63
STORGPD  DSECT
STORGPK  DS    C'STORGRP: '
STORGPV  DS    CL8
         DS    CL63
DSNTYPD  DSECT
DSNTYPK  DS    C'DSNTYPE: '
DSNTYPV  DS    CL8
         DS    CL63
LABELD   DSECT
LABELK   DS    C'LABEL: '
LABELV   DS    CL3
         DS    CL70
FILENMD  DSECT
FILENMK  DS    C'FILENUM: '
FILENMV  DS    CL6
         DS    CL65
LIBNAMD  DSECT
LIBNAMK  DS    C'LIBNAME: '
LIBNAMV  DS    CL8
         DS    CL63
*
*        GENERAL PURPOSE REGISTERS
*
GR0      EQU   0
GR1      EQU   1
GR2      EQU   2
GR3      EQU   3
GR4      EQU   4
GR5      EQU   5
GR6      EQU   6
GR7      EQU   7
GR8      EQU   8
GR9      EQU   9
GR10     EQU   10
GR11     EQU   11
GR12     EQU   12
GR13     EQU   13
GR14     EQU   14
GR15     EQU   15
         END   ACSTST

./ ADD NAME=AIZBLK
//AIZBLK   JOB  MSGCLASS=A                                              00010400
//** START OF SPECIFICATIONS ****************************************** 00010900
//*                                                                     00011400
//*01* PART NAME: AIZBLK                                                00011900
//*                                                                     00012400
//*01* DESCRIPTIVE NAME = ZAWARE BULK LOAD CLIENT SAMPLE JCL            00012900
//*                                                                     00013400
//*01* PROPRIETARY STATEMENT=                                           00013900
//*                                                                     00014400
//*    LICENSED MATERIALS - PROPERTY OF IBM                             00014900
//*    5650-ZOS COPYRIGHT IBM CORP. 2013                                00015300
//*                                                                     00015800
//* STATUS = HBB7790                                                    00016300
//*                                                                     00016800
//*01* FUNCTION: THIS SAMPLE JCL INVOKES THE ZAWARE BULK LOAD CLIENT    00017300
//*              TO IMPORT HCL/HCR SYSLOG RECORDS TO A ZAWARE SERVER.   00017800
//*                                                                     00018300
//*02* OPERATION:                                                       00018800
//*                                                                     00019300
//*     DEFINE STEP:                                                    00019800
//*       DEFINE A MODEL LOGSTREAM                                      00020200
//*                                                                     00020700
//*     BULKLOAD STEP:                                                  00021200
//*       RUN TSO/E TO DO THE FOLLOWING:                                00021700
//*          A. ALLOCATE THE CONTROL DATASET                            00022200
//*          B. ADD ONE OR MORE SYSLOG DATASETS TO THE CONTROL DATASET  00022700
//*          C. DISPLAY THE CONTROL DATASET CONTENTS                    00023200
//*          D. IMPORT THE SYSLOG RECORDS TO THE TARGET LOGSTREAM       00023700
//*                                                                     00024200
//*     DELETE STEP:                                                    00024700
//*       DELETE THE MODEL LOGSTREAM                                    00025100
//*       DELETE THE TARGET LOGSTREAM                                   00025600
//*                                                                     00026100
//*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-* 00026600
//*                                                                     00027100
//*02* CUSTOMIZATIONS:                                                  00027600
//*                                                                     00028100
//*     JOB STATEMENT:                                                  00028600
//*       - CUSTOMIZE THE JOB STATEMENT TO MEET LOCAL REQUIREMENTS.     00029100
//*                                                                     00029600
//*     DEFINE STEP:                                                    00030000
//*       - CHOOSE A MODEL LOGSTREAM NAME.                              00030500
//*         + CHANGE ALL OCCURRENCES OF TSOUSER.ZAI.LSMODEL TO THE      00031000
//*           CHOSEN NAME.                                              00031500
//*                                                                     00032000
//*       - CUSTOMIZE THE MODEL LOGSTREAM DEFINITION:                   00032500
//*         + A DASD-ONLY LOG STREAM IS RECOMMENDED, TO MINIMIZE USE    00033000
//*           OF SHARED SYSTEM RESOURCES AND FOR EASE OF USE UNDER A    00033500
//*           MONOPLEX CONFIGURATION.                                   00034000
//*                                                                     00034500
//*         + SELECT A STG_DATACLAS THAT DEFINES A CISIZE OF 4K,        00034900
//*           WHICH IS REQUIRED FOR A DATA-ONLY LOG STREAM.             00035400
//*           IBM RECOMMENDS 24K CI SIZE FOR LS_DATACLAS.               00035900
//*           SEE Z/OS DFSMS: USING DATA SETS, SC26-7410 FOR MORE       00036400
//*           INFORMATION ABOUT SMS.                                    00036900
//*                                                                     00037400
//*         + DASD-ONLY LOG STREAMS ARE UNCONDITIONALLY DUPLEXED TO     00037900
//*           STAGING DATA SETS. THE SIZE OF A STAGING DATASET IS       00038400
//*           CHOSEN TO MINIMIZE THE TIME SPENT CREATING STAGING        00038900
//*           DATASETS.                                                 00039400
//*                                                                     00039800
//*         + HCL/HCR RECORDS MAY BE FROM 55 BYTES UP TO 133 BYTES.     00040300
//*                                                                     00040800
//*         + THE IBM-SUGGESTED MINIMUM STAGING DATASET SIZE OF         00041300
//*           10MB, STG_SIZE(2560), ALLOWS FOR 78,320 133 BYTE          00041800
//*           RECORDS.  AS NOT ALL SYSLOG RECORDS ARE 133 BYTES,        00042300
//*           THIS IS A MIMIMUM SIZE, MORE RECORDS WILL PROBABLY        00042800
//*           FIT.                                                      00043300
//*                                                                     00043800
//*         + REFER TO 'PLANNING FOR SYSTEM LOGGER APPLICATIONS' IN     00044300
//*           'MVS SETTING UP A SYSPLEX' FOR MORE INFORMATION.          00044700
//*                                                                     00045200
//*     BULKLOAD STEP:                                                  00045700
//*       - CUSTOMIZE THE ZAWARE BULK LOAD CLIENT REXX EXEC. REFER      00046200
//*         TO 'SYS1.SAMPLIB(AIZBLKE)'.                                 00046700
//*                                                                     00047200
//*       - CHOOSE THE PDS NAME THAT CONTAINS THE CUSTOMIZED ZAWARE     00047700
//*         BULK LOAD CLIENT REXX EXEC.                                 00048200
//*         + CHANGE ALL OCCURRENCES OF TSOUSER.ZAI.REXX TO THE         00048700
//*           CHOSEN NAME.                                              00049200
//*                                                                     00049600
//*       - CHOOSE A CONTROL DATASET NAME.                              00050100
//*         + CHANGE ALL OCCURRENCES OF TSOUSER.ZAI.CONTROL TO THE      00050600
//*           CHOSEN NAME.                                              00051100
//*                                                                     00051600
//*       - CHOOSE A CONTROL DATASET NAME.                              00052100
//*         + CHANGE TSOUSER.ARCHIVE.SYSLOG TO THE FIRST SYSLOG         00052600
//*           DATASET NAME.                                             00053100
//*                                                                     00053600
//*       - INSERT ADDITIONAL ADDSYSLOGDSN CALLS, IF REQUIRED, TO ADD   00054100
//*         ADDITIONAL SYSLOG DATASET NAMES TO THE CONTROL DATASET.     00054500
//*                                                                     00055000
//*       - CHOOSE A TARGET LOGSTREAM NAME.                             00055500
//*         + CHANGE ALL OCCURRENCES OF TSOUSER.ZAI.LSTREAM TO THE      00056000
//*           CHOSEN NAME.                                              00056500
//*                                                                     00057000
//*       - UPDATE WITH THE MODEL LOGSTREAM NAME CHOSEN IN THE DEFINE   00057500
//*         STEP                                                        00058000
//*         + CHANGE ALL OCCURRENCES OF TSOUSER.ZAI.LSMODEL TO THE      00058500
//*           CHOSEN NAME.                                              00059000
//*                                                                     00059400
//*     DELETE STEP:                                                    00059900
//*       - UPDATE WITH THE MODEL LOGSTREAM NAME CHOSEN IN THE DEFINE   00060400
//*         STEP                                                        00060900
//*         + CHANGE ALL OCCURRENCES OF TSOUSER.ZAI.LSMODEL TO THE      00061400
//*           CHOSEN NAME.                                              00061900
//*       - UPDATE WITH THE TARGET LOGSTREAM NAME CHOSEN IN THE         00062400
//*         THE BULKLOAD STEP                                           00062900
//*         + CHANGE ALL OCCURRENCES OF TSOUSER.ZAI.LSMODEL TO THE      00063400
//*           CHOSEN NAME.                                              00063900
//*                                                                     00064300
//*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-* 00064800
//*                                                                     00065300
//*01* CHANGE ACTIVITY:                                                 00065800
//*                                                                     00066300
//* $L0=ME23640 HBB7790  120228  PDEV: ZAWARE BULK LOAD CLIENT          00066800
//* $P0=ME23990 HBB7790  120419  PDEV: ADD ZAI PARMS TO MODEL LS        00067300
//* $P1=ME24600 HBB7790  120814  PDEV: ADD PARMS TO MODEL LS            00067800
//*                                                                     00068300
//** END OF SPECIFICATIONS ******************************************** 00068800
//*-------------------------------------------------------------------- 00069200
//*                                                                     00069700
//*01* STEPNAME: DEFINE                                                 00070200
//*                                                                     00070700
//*02* OPERATION: DEFINE THE MODEL LOGSTREAM                            00071200
//*                                                                     00071700
//*01* EXIT-NORMAL: MODEL LOGSTREAM DEFINED                             00072200
//*02* RETURN-CODES: 0                                                  00072700
//*                                                                     00073200
//*01* EXIT-ERROR:  MODEL LOGSTREAM NOT DEFINED. THE JOBLOG CONTAINS    00073700
//*                 INFORMATIONAL MESSAGES ABOUT THE ERROR.             00074100
//*02* RETURN-CODES: NON-ZERO VALUE                                     00074600
//*                                                                     00075100
//*-------------------------------------------------------------------- 00075600
//DEFINE   EXEC PGM=IXCMIAPU                                            00076100
//SYSPRINT DD SYSOUT=*                                                  00076600
//SYSABEND DD SYSOUT=*                                                  00077100
//SYSIN    DD *                                                         00077600
 DATA TYPE (LOGR) REPORT(NO)                                            00078100
    DEFINE LOGSTREAM NAME(TSOUSER.ZAI.LSMODEL)                          00078600
           MODEL(YES)                                                   00079000
           ZAI(YES)                                                     00079500
           ZAIDATA('SYSLOG')                                            00080000
           DASDONLY(YES)                                                00080500
           MAXBUFSIZE(65532)                                            00081000
           AUTODELETE(YES)                                              00081500
           LS_SIZE(2560)                                                00082000
           STG_SIZE(2560)                                               00082500
           HIGHOFFLOAD(60)                                              00083000
           LOWOFFLOAD(30)                                               00083500
           STG_DATACLAS(LOGR4K)                                         00083900
           LS_DATACLAS(LOGR24K)                                         00084400
    LIST   LOGSTREAM NAME(TSOUSER.ZAI.LSMODEL)                          00084900
/*                                                                      00085400
//*-------------------------------------------------------------------- 00085900
//*                                                                     00086400
//*01* STEPNAME: BULKLOAD                                               00086900
//*                                                                     00087400
//*01* ENTRY: STEP BYPASSED IF DEFINE RETURN CODE IS NON-ZERO           00087900
//*                                                                     00088400
//*02* OPERATION: INVOKE THE ZAWARE BULK LOAD CLIENT UNDER TSO/E:       00088800
//*                                                                     00089300
//*      AIZBLKE CNTLDSN REQUEST NAME LSNAME LSMODEL                    00089800
//*                                                                     00090300
//*01* EXIT-NORMAL: ALL SYSLOG RECORDS WRITTEN TO ZAI LOGSTREAM         00090800
//*02* RETURN-CODES: 0                                                  00091300
//*                                                                     00091800
//*01* EXIT-ERROR:  ONE OF THE AIZBLKE REXX CALLS FAILED. SYSLOG        00092300
//*                 RECORDS MAY OR MAY NOT HAVE BEEN WRITTEN. THE       00092800
//*                 JOBLOG CONTAINS INFORMATIONAL MESSAGES ABOUT        00093300
//*                 ABOUT THE ERROR.                                    00093700
//*02* RETURN-CODES: NON-ZERO VALUE                                     00094200
//*                                                                     00094700
//*-------------------------------------------------------------------- 00095200
//BULKLOAD EXEC PGM=IKJEFT01,COND=(0,NE,DEFINE),REGION=0M               00095700
//SYSEXEC  DD DISP=SHR,DSN=TSOUSER.ZAI.REXX                             00096200
//SYSTSPRT DD SYSOUT=*                                                  00096700
//SYSABEND DD SYSOUT=*                                                  00097200
//SYSTSIN  DD *                                                         00097700
 AIZBLKE TSOUSER.ZAI.CONTROL CREATECNTLS                                00098200
 WHEN SYSRC(EQ 0) +                                                     00098600
     AIZBLKE TSOUSER.ZAI.CONTROL ADDSYSLOGDSN +                         00099100
             TSOUSER.ARCHIVE.SYSLOG                                     00099600
 WHEN SYSRC(EQ 0) +                                                     00100100
     AIZBLKE TSOUSER.ZAI.CONTROL DISPLAYCNTLS                           00100600
 WHEN SYSRC(EQ 0) +                                                     00101100
     AIZBLKE TSOUSER.ZAI.CONTROL IMPORT DUMMY +                         00101600
             TSOUSER.ZAI.LSTREAM TSOUSER.ZAI.LSMODEL                    00102100
/*                                                                      00102600
//*-------------------------------------------------------------------- 00103100
//*                                                                     00103500
//*01* STEPNAME: DELETE                                                 00104000
//*                                                                     00104500
//*01* ENTRY: STEP BYPASSED IF DEFINE RETURN CODE IS NON-ZERO           00105000
//*                                                                     00105500
//*02* OPERATION: DELETE THE MODEL LOGSTREAM                            00106000
//*               DELETE THE TARGET LOGSTREAM                           00106500
//*                                                                     00107000
//*01* EXIT-NORMAL: MODEL LOGSTREAM DELETED                             00107500
//*02* RETURN-CODES: 0                                                  00108000
//*                                                                     00108400
//*01* EXIT-ERROR:  MODEL LOGSTREAM NOT DELETED. THE JOBLOG CONTAINS    00108900
//*                 INFORMATIONAL MESSAGES ABOUT THE ERROR.             00109400
//*02* RETURN-CODES: NON-ZERO VALUE                                     00109900
//*                                                                     00110400
//*-------------------------------------------------------------------- 00110900
//DELETE   EXEC PGM=IXCMIAPU,COND=(0,NE,DEFINE)                         00111400
//SYSPRINT DD SYSOUT=*                                                  00111900
//SYSABEND DD SYSOUT=*                                                  00112400
//SYSIN    DD *                                                         00112900
 DATA TYPE (LOGR) REPORT(NO)                                            00113300
    DELETE LOGSTREAM NAME(TSOUSER.ZAI.LSMODEL)                          00113800
    DELETE LOGSTREAM NAME(TSOUSER.ZAI.LSTREAM)                          00114300
/*                                                                      00114800

./ ADD NAME=AMBLIST
//AMBLIST  JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//ALCISPFL EXEC PGM=AMBLIST
//SYSPRINT DD SYSOUT=*
//*JOBLIB
//*SYSABEND
//*SYSCKEOV
//*SYSMDUMP
//*SYSUDUMP
//*SYSCHK
//*STEPLIB
//*SYSIN
//*ISPFILE  DD DSN=&SYSUID..RAYMOND.REPORT,
//*SYSLIB   DD DSN=SYS0.VIEW115.CAILIB
//SYSLIB   DD DSN=SYS0.VIEW.CVDELOAD,
//*ISPFILE  DD DSN=SYS0.VIEW115.CAILIB,
//*SYSLIB   DD DSN=S28P.VIEW140.CVDELOAD,
// DISP=SHR
//*DISP=(MOD,DELETE,DELETE),
//*DISP=(NEW,CATLG,DELETE),
//*VOL=SER=DBPMEM,
//*BLKSIZE=0,
//*SPACE=(TRK,(3,1)),
//*RECFM=FBA,
//*LRECL=133,
//SYSIN   DD *
  LISTIDR
  OUTPUT=ALL,
  DDN=ISPFILE,
  MEMBER=SARUSDUX
//
  LISTIDR
  OUTPUT=ALL,
  DDN=ISPFILE,
  MEMBER=SARSARM3
//
  LISTIDR
  OUTPUT=ALL,
  DDN=ISPFILE,
  MEMBER=SARSARM3
//
  LISTIDR
  OUTPUT=ALL,
  DDN=ISPFILE,
  MEMBER=SARSTC
//
  LISTOBJ             ,
  DDN=ISPFILE,
  MEMBER=SARSTC
//
  LISTLOAD OUTPUT=XREF,
  MEMBER=SARSTC,
  DDN=ISPFILE
//

./ ADD NAME=ANNSAMP
Sample Announcement

Effective month dd, yyyy a new ISPF application that provides a simple
interface to the CA-View (formerly known as SAR) Report Archive Database.

This new application provides the following capabilities:

   - Easy CA-View database selection via point-and-shoot
   - Report selection options
     - Browse report using ISPF Browse
     - Copy report to a standard dataset
     - E-Mail report (using XMITIP)
     - Load report from tape for use by the other options
     - Print report
     - Transfer a report to a workstation
     - View report using ISPF View *
       With this option selected pages may be selected using the EDITPAGE
       ISPF Edit Command. All other ISPF Edit commands are available as
       well. Note that the changes are not saved as this is a temporary
       copy of the report.

Access to this application is:

   - from any ISPF Panel:  TSO %CAVXTRT
   - via PLP Menu option CAVUSER

Important: This application does not replace the existing CA-View ISPF
           dialog and this application is not from Computer Associates and
           is not a part of the CA-View product.

./ ADD NAME=CHANGES
Change History for the CAVXTRT application:

  Version   Date     Details
  1.26      03/24/10 - Update from Lane Thorne to handle CA-View 11.x
  1.25      12/04/07 - Corrections to the support for release 11 to
                       support a more generalized parse of the report
  1.24      05/14/07 - Update to support both old and new release 11
                       of CA-View (thanks to Andy White of MetLife)
                     - Updated distribution library with more doc and
                       members CAVR11 and CAVR20 to help with planning
                       local support if the report format changes for
                       CA-View
  1.23      07/27/05 - Correction to parsing for dloc and prtlines
                       for files with a lot of lines
                     - Change space allocation for very large files for
                       the work file to use 1/2 of the estimated space
                       for the primary and also for the secondary.
  1.22      05/05/04 - Change to allow use in multiple ISPF Sessions
  1.21      09/09/03 - Change allocation for DD CAVXTRT (used for extracted
                       file to:
                       - reduce the primary to 1/2 estimate
                       - increase secondary
                       - add unit count (UCOUNT) of 4 to help ensure
                         the space will be found for large files
                         only if the primary space is > 1000 tracks
  1.20      07/08/03 - Correct Jobname in submit message for REORG jobs
  1.19      06/16/03 - Add Administration authorization via
                       test of RACF default-group in CAVXTRTD
                     - If Admin and only a single data base still display
                       the data base selection table to allow the
                       R, V, VF options
                     - Support Sort order
                       e.g. sort column,order
                       where order is A (ascend) or D (descend)
                     - Improve table display for redisplay on
                       data base display
                     - Add REORG data base selection option to submit
                       a batch reorg asynch
                       - requires ADMIN
                     - Add report Delete option
                     - enhanced appropriate panels for new options
                     - change V to stats and add VF for stats full
                       on the data base selection panel
                     - moved 1st jobcard setup to CAVXTRTD
                     * Elements changed:
                       EXECs:  CAVXTRT, CAVXTRTD, TESTCAVX
                       Panels: CAVXTRT, CAVXTRTD, CAVXTRTL, CAVXTRT1, CAVXTRT2
                               CAVXTRT3
  1.18      06/02/03 - Change to add data base selection option of V to
                       display data base usage statistics
                     * exec changes:  CAVXTRT
                     * panel changes: CAVXTRT3
  1.17      01/08/03 - Change to fix REFRESH which was failing on 2nd usage
                     * exec changes CAVXTRT
  1.16      01/06/03 - Update to allow Sort on ARCHDATE to sort correctly
                       using the date and the time
                     * exec changes CAVXTRT
  1.15      11/21/02 - Allow TODATE of TODAY (which was the default)
                     * exec changes CAVXTRT
                     * panel changes CAVXTRT
  1.14      10/29/02 - Add TIME to JOB card statement
                     * exec CAVXTRT changed
  1.13      09/30/02 - Add option to Sort column on Report Table display
                     * exec CAVXTRT changed
                     * panel changes CAVXTRTH, CAVXTRTL, CAVXTRT1, CAVXTRT2
  1.12      06/18/02 - Make sure the work data sets are deleted for all
                       situations
                     - Changed popup panel CAVXTRTW to show print lines
  1.11c     04/18/02 - Change Panel CAVXTRTD to give more room for description
  1.11b     04/15/02 - Change Panel CAVXTRTH to show proper release
  1.11a     03/13/02 - allow selection of S (same as B)
                     * panel changes
                       - CAVXTRTL: test for S and change to B
                       - CAVXTRT2: add option of S
  1.11      03/11/02 - set suffix for temp d/s to .CAV
                     - fix if user prefix is null
                     - translate the database dsns to upper case when
                       adding them to the table
  1.10      02/28/02 - Fix job class error on second plus Loads
                     - Fix to delete temp datasets before allocation
  1.9       02/28/02 - Add diagnostic report for sarbch rc>0
  1.8       02/26/02 - Change /PRINT to /LOAD which eliminates the banner
                       pages in the report.
  1.7       02/26/02 - Fix missing end statement and add display
                       save/restore for do_mail routine.
  1.6       02/25/02 - Split local customization from CAVXTRT into
                       separate CAVXTRTD Rexx Exec.
                     - Created TESTCAVX Exec to test local customizations.
                     - Fixed several minor bugs with /LAST and Refresh
                     - Updated all the tutorial panels
  1.5       02/25/02 - Correct work dataset allocations if the userid
                       does not match the active profile prefix.

./ ADD NAME=COMMNDBU
COM='DD ADD,DSN=00-02'                                                  00010004
/*M='DD ADD,VOL=SYS013'  REMPLACT PAR SYS1.DUMP.. PREALLOUES */         00020004
COM='SE 'TS DISQUES ONLINE SAUF 5D0-5DF (TEST)',CN=01'                  00030012
COM='VARY 5D0-5DF,OFFLINE'                                              00200111
/*M='DD DSNE=SYS1.&SYSNAME..DMP&SEQ'  */                                00210005
COM='DD ALLOC=INACTIVE'                                                 00220005
/* ACTIVATION MPF00 ??               */                                 00221013
COM='SET MPF=NO'                                                        00222013
COM='K A,NONE,L=01'                                                     00230005
COM='K S,DEL=RD,SEG=15,CON=N,RNUM=15,RTME=001,MFORM=(T,J),L=01'         00240000
COM='K A,NONE,L=02'                                                     00250000
COM='K S,DEL=RD,SEG=15,CON=N,RNUM=15,RTME=001,MFORM=J,L=02'             00260000
COM='K A,NONE,L=03'                                                     00270000
COM='K S,DEL=RD,SEG=15,CON=N,RNUM=15,RTME=001,MFORM=J,L=03'             00280000
COM='K A,NONE,L=04'                                                     00290000
COM='K S,DEL=RD,SEG=15,CON=N,RNUM=15,RTME=001,MFORM=J,L=04'             00300000
COM='MN JOBNAMES,T'                                                     00310000
COM='SL SET,EN,A=NODUMP,C=222,ID=C222,END'                              00330000
COM='SL SET,EN,A=NODUMP,C=322,ID=C322,END'                              00340000
COM='SL SET,EN,A=NODUMP,C=422,ID=C422,END'                              00350000
COM='SL SET,EN,A=NODUMP,C=522,ID=C522,END'                              00360000
COM='SL SET,EN,A=NODUMP,C=622,ID=C622,END'                              00370000
COM='SL SET,EN,A=NODUMP,C=722,ID=C722,END'                              00380000
COM='SL SET,EN,A=NODUMP,C=822,ID=C822,END'                              00390000
COM='SL SET,EN,A=NODUMP,C=922,ID=C922,END'                              00400000
COM='CD SET,SDUMP=(ALLPSA,NUC,SQA,LSQA,RGN,LPA,TRT,SWA,CSA,SUM),Q=YES'  00410000
COM='S VLF,SUB=MSTR,NN=00'                                              00420000
COM='S IAMSTAP0'                                                        00430010

./ ADD NAME=COMMNDEX
COM='S IPLJOB1'

./ ADD NAME=COMMND00
COM='CF CPU(004),ONLINE'                                                00002900
COM='DD ADD,DSN=(00-03)'                                                00029200
COM='DD ALLOC=ACTIVE'                                                   00029303
COM='DD ADD,VOL=DUMP00'                                                 00029403
COM='DD NAME=DUMP.D&YYMMDD..T&HHMMSS..&SYSNAME..S&SEQ'                  00029503
COM='SET MPF=00'                                                        00029700
COM='SETCON MN,JOBNAMES=ON'                                             00030600
COM='SL SET,EN,A=NODUMP,C=222,ID=C222,END'                              00030700
COM='SL SET,EN,A=NODUMP,C=322,ID=C322,END'                              00031000
COM='SL SET,EN,A=NODUMP,C=422,ID=C422,END'                              00040000
COM='SL SET,EN,A=NODUMP,C=522,ID=C522,END'                              00050000
COM='SL SET,EN,A=NODUMP,C=622,ID=C622,END'                              00060000
COM='SL SET,EN,A=NODUMP,C=722,ID=C722,END'                              00070000
COM='SL SET,EN,A=NODUMP,C=822,ID=C822,END'                              00080000
COM='SL SET,EN,A=NODUMP,C=922,ID=C922,END'                              00090000
COM='CD SET,SDUMP=(ALLPSA,NUC,SQA,LSQA,RGN,LPA,TRT,SWA,CSA,SUM),Q=YES'  00100000
COM='CD SET,SDUMP,MAXSPACE=02000M'                                      00110016
COM='S OPSMAIN,SUB=MSTR,MAINPRM='IPLOSEO1,PROD''                        00121000
COM='S IAMSTAP0'                                                        00122002
COM='S ZIPLINFO'                                                        00123011
COM='TRACE ST,999K'                                                     00160000
COM='VARY &VTSDRIV1,ONLINE       VTS ONLINE : ESHELTER'                 00195113
COM='VARY &VTSDRIV2,ONLINE       VTS ONLINE : TELEHOUSE'                00196014
COM='VARY &PRAUNIT1,ONLINE       UNIT PHYS ONLINE'                      00197008
COM='VARY &PRAUNIT2,ONLINE       UNIT PHYS ONLINE'                      00198009

./ ADD NAME=COMMND01
COM='S VLF,SUB=MSTR'
COM='S DLF,SUB=MSTR'
COM='DD ADD,VOL=AT23TG'
COM='DD NAME=SYS1.&SYSNAME..DMP&SEQ'
COM='DD ALLOC=ACTIVE'
COM='S EZAZSSI,P=NODENAME'
COM='S TCPIP'
COM='S FTPD'
COM='S SYSLOGD'
COM='S OSNMPD'
COM='S CSF'
COM='S IRRDPTAB'
COM='SETLOGRC LOGSTREAM'
COM='S SDSF'
COM='S CFZCIM'
COM='S EPWFFST.FFST,SUB=MSTR'

./ ADD NAME=COMMND99
COM='S VLF,SUB=MSTR'
COM='S DLF,SUB=MSTR'
COM='DD ADD,VOL=AT23TG'
COM='DD NAME=SYS1.&SYSNAME..DMP&SEQ'
COM='DD ALLOC=ACTIVE'
COM='S EZAZSSI,P=NODENAME'
COM='S TCPIP'
COM='S FTPD'
COM='S SYSLOGD'
COM='S OSNMPD'
COM='S CSF'
COM='S IRRDPTAB'
COM='SETLOGRC LOGSTREAM'
COM='S SDSF'
COM='S CFZCIM'

./ ADD NAME=COMNND$$
COM='CF CPU(004),ONLINE'                                                00010058
COM='DD ADD,DSN=(00-03)'                                                00020058
COM='SET MPF=00'                                                        00030058
COM='SETCON MN,JOBNAMES=ON'                                             00030158
COM='SL SET,EN,A=NODUMP,C=222,ID=C222,END'                              00030258
COM='SL SET,EN,A=NODUMP,C=322,ID=C322,END'                              00030358
COM='SL SET,EN,A=NODUMP,C=422,ID=C422,END'                              00030458
COM='SL SET,EN,A=NODUMP,C=522,ID=C522,END'                              00030558
COM='SL SET,EN,A=NODUMP,C=622,ID=C622,END'                              00030658
COM='SL SET,EN,A=NODUMP,C=722,ID=C722,END'                              00030758
COM='SL SET,EN,A=NODUMP,C=822,ID=C822,END'                              00030858
COM='SL SET,EN,A=NODUMP,C=922,ID=C922,END'                              00030958
COM='CD SET,SDUMP=(ALLPSA,NUC,SQA,LSQA,RGN,LPA,TRT,SWA,CSA,SUM),Q=YES'  00031058
COM='S OPSMAIN,SUB=MSTR,MAINPRM='IPL''                                  00032058
COM='S M4ASPRP0,SUB=MSTR'                                               00033058
COM='S IAMSTAP0'                                                        00034058
COM='S SDSF'                                                            00035058
COM='TRACE ST,999K'                                                     00036058
COM='PA PAGE.PROD.LOCAL.VSYSME2'                                        00037058
COM='PA PAGE.PROD.LOCAL.VSYSME3'                                        00038058
COM='PA PAGE.PROD.LOCAL.VSYSME4'                                        00039058
COM='PA PAGE.PROD.LOCAL.VSYSME5'                                        00040058
COM='PA PAGE.PROD.LOCAL.VSYSME6'                                        00050058
COM='V E652,OFFLINE                   ANCIENS DISK19'                   00060058
COM='V E87A,OFFLINE                   ANCIENS DISK19'                   00070058
COM='V E87B,OFFLINE                   ANCIENS DISK19'                   00080058
COM='VARY &VSMUNIT,ONLINE       VSM ONLINE : ESSEN 1 OU 2  '            00090059

./ ADD NAME=CSI
SYS4.IOA918P0.CSI                            *VSAM* VS             ?     ?
SYS4.IOA918R1.CSI                            *VSAM* VS             ?     ?
SYS4.IOA918U1.CSI                            *VSAM* VS             ?     ?
SYS4.SMPCSI.CSI                              *VSAM* VS             ?     ?
SYS4.VTP147.CSI                              *VSAM* VS             ?     ?
S28P.CAVIEW20.CSI                            *VSAM* VS             ?     ?
S28P.U1.IOA802.CSI                           *VSAM* VS             ?     ?

./ ADD NAME=CSIDEF
//*============================================*
//*  Define SMP/E CSI                          *
//*============================================*
//DEFCSI   EXEC PGM=IDCAMS,REGION=0M
//GIMZPOOL DD DISP=SHR,DSN=SYS1.MACLIB(GIMZPOOL)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
 DEFINE CLUSTER                                   -
    (NAME(CAI.SYSVIEW.R142.CSI) -
    VOL(ATCA22)                                 -
    KEYS(24 0)                                    -
    RECORDSIZE(24 143)                            -
    FREESPACE(10 5)                               -
    SHAREOPTIONS(2)                               -
    UNIQUE)                                       -
 DATA                                             -
    (NAME(CAI.SYSVIEW.R142.CSI.D) -
    CONTROLINTERVALSIZE(4096)                     -
    CYLINDERS(4 2))                               -
 INDEX                                            -
    (NAME(CAI.SYSVIEW.R142.CSI.I) -
    CONTROLINTERVALSIZE(4096)                     -
    CYLINDERS(1 1))
 REPRO IFILE(GIMZPOOL)                            -
       ODS(CAI.SYSVIEW.R142.CSI) -
       REUSE
/*
//*============================================*
//*  Define TARGET and DLIB zones in the CSI   *
//*============================================*
//CSIINIT  EXEC PGM=GIMSMP,REGION=0M
//SMPCSI   DD DISP=SHR,DSN=CAI.SYSVIEW.R142.CSI
//SMPLTS   DD DISP=SHR,DSN=CAI.SYSVIEW.R142.SMPLTS
//SMPPTS   DD DISP=SHR,DSN=CAI.SYSVIEW.R142.SMPPTS
//SMPLOG   DD DUMMY
//SYSPRINT DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SMPOUT   DD SYSOUT=*
//SMPCNTL  DD *
  SET BOUNDARY(GLOBAL) .
  UCLIN .
  ADD PRODUCT(NM4,14.20.00)
      DESCRIPTION(CA SYSVIEW Performance Management)
      SREL(Z038)
      VENDOR(CA Inc.) .
  ADD GLOBALZONE      SREL(Z038)
                      OPTIONS(NM4OPT) .
  ADD OPTIONS(NM4OPT)
                      RECZGRP(ALLZONES)
                      NOREJECT
                      RETRYDDN(ALL)
                      ASM(HLASM)
                      LKED(IEWL)
                      DSSPACE(0900,0200,5000)
                      DSPREFIX(CAI.SYSVIEW.R142).
  ADD UTILITY(HLASM)  NAME(ASMA90) .
  ADD UTILITY(IEWL)   NAME(IEWL)   .
  ADD DDDEF(SMPDEBUG) SYSOUT(*) .
  ADD DDDEF(SMPLIST)  SYSOUT(*) .
  ADD DDDEF(SMPOUT)   SYSOUT(*) .
  ADD DDDEF(SMPPUNCH) SYSOUT(*) .
  ADD DDDEF(SMPRPT)   SYSOUT(*) .
  ADD DDDEF(SMPSNAP)  SYSOUT(*) .
  ADD DDDEF(SYSPRINT) SYSOUT(*) .
  ADD DDDEF(SYSUT1)   UNIT(SYSDA) SPACE(2,1) CYLINDERS .
  ADD DDDEF(SYSUT2)   UNIT(SYSDA) SPACE(2,1) CYLINDERS .
  ADD DDDEF(SYSUT3)   UNIT(SYSDA) SPACE(2,1) CYLINDERS .
  ADD DDDEF(SYSUT4)   UNIT(SYSDA) SPACE(2,1) CYLINDERS .
  ADD DDDEF(SMPHOLD)
      SHR DA(CAI.SYSVIEW.R142.SMPHOLD) .
  ADD DDDEF(SMPLOG)
      MOD DA(CAI.SYSVIEW.R142.SMPLOG)  .
  ADD DDDEF(SMPLOGA)
      MOD DA(CAI.SYSVIEW.R142.SMPLOGA) .
  ADD DDDEF(SMPPTS)
      SHR DA(CAI.SYSVIEW.R142.SMPPTS)  .
  ADD DDDEF(SMPTLIB) DSPREFIX(CAI.SYSVIEW.R142)
      TRACKS SPACE(1807,452) DIR(800)
      UNIT(SYSALLDA) WAIT
      VOLUME(ATCA22) .
  ADD DDDEF(SMPWRK1)  UNIT(3390)
      SPACE(05,05) DIR(180) CYL  .
  ADD DDDEF(SMPWRK2)  UNIT(3390)
      SPACE(05,05) DIR(180) CYL  .
  ADD DDDEF(SMPWRK3)  UNIT(3390)
      SPACE(05,05) DIR(180) CYL  .
  ADD DDDEF(SMPWRK4)  UNIT(3390)
      SPACE(05,05) DIR(180) CYL  .
  ADD DDDEF(SMPWRK6)  UNIT(3390)
      SPACE(05,05) DIR(180) CYL  .
  ADD GLOBALZONE
      ZONEINDEX((CAIT,CAI.SYSVIEW.R142.CSI,TARGET),
                (CAID,CAI.SYSVIEW.R142.CSI,DLIB)).
  ENDUCL.
  SET BOUNDARY(CAIT).
  UCLIN .
  ADD TARGETZONE(CAIT)
      OPTIONS(NM4OPT)
      RELATED(CAID)
      SREL(Z038).
  ADD DDDEF(SMPDEBUG) SYSOUT(*) .
  ADD DDDEF(SMPLIST)  SYSOUT(*) .
  ADD DDDEF(SMPOUT)   SYSOUT(*) .
  ADD DDDEF(SMPPUNCH) SYSOUT(*) .
  ADD DDDEF(SMPRPT)   SYSOUT(*) .
  ADD DDDEF(SMPSNAP)  SYSOUT(*) .
  ADD DDDEF(SYSPRINT) SYSOUT(*) .
  ADD DDDEF(SYSUT1)   UNIT(SYSDA) SPACE(2,1) CYLINDERS .
  ADD DDDEF(SYSUT2)   UNIT(SYSDA) SPACE(2,1) CYLINDERS .
  ADD DDDEF(SYSUT3)   UNIT(SYSDA) SPACE(2,1) CYLINDERS .
  ADD DDDEF(SYSUT4)   UNIT(SYSDA) SPACE(2,1) CYLINDERS .
  ADD DDDEF(SMPLOG)
      MOD DA(CAI.SYSVIEW.R142.SMPLOG)  .
  ADD DDDEF(SMPLOGA)
      MOD DA(CAI.SYSVIEW.R142.SMPLOGA) .
  ADD DDDEF(SMPLTS)
      SHR DA(CAI.SYSVIEW.R142.SMPLTS)  .
  ADD DDDEF(SMPMTS)
      SHR DA(CAI.SYSVIEW.R142.SMPMTS)  .
  ADD DDDEF(SMPPTS)
      SHR DA(CAI.SYSVIEW.R142.SMPPTS)  .
  ADD DDDEF(SMPSCDS)
      SHR DA(CAI.SYSVIEW.R142.SMPSCDS) .
  ADD DDDEF(SMPSTS)
      SHR DA(CAI.SYSVIEW.R142.SMPSTS)  .
  ADD DDDEF(SMPWRK1)  UNIT(3390)
      SPACE(05,05) DIR(180) CYL  .
  ADD DDDEF(SMPWRK2)  UNIT(3390)
      SPACE(05,05) DIR(180) CYL  .
  ADD DDDEF(SMPWRK3)  UNIT(3390)
      SPACE(05,05) DIR(180) CYL  .
  ADD DDDEF(SMPWRK4)  UNIT(3390)
      SPACE(05,05) DIR(180) CYL  .
  ADD DDDEF(SMPWRK6)  UNIT(3390)
      SPACE(05,05) DIR(180) CYL  .
  ADD DDDEF(CNM4BCAP)
      SHR DA(CAI.SYSVIEW.R142.CNM4BCAP) .
  ADD DDDEF(CNM4BCLS)
      SHR DA(CAI.SYSVIEW.R142.CNM4BCLS) .
  ADD DDDEF(CNM4BDAT)
      SHR DA(CAI.SYSVIEW.R142.CNM4BDAT) .
  ADD DDDEF(CNM4BHLP)
      SHR DA(CAI.SYSVIEW.R142.CNM4BHLP) .
  ADD DDDEF(CNM4BISP)
      SHR DA(CAI.SYSVIEW.R142.CNM4BISP) .
  ADD DDDEF(CNM4BISR)
      SHR DA(CAI.SYSVIEW.R142.CNM4BISR) .
  ADD DDDEF(CNM4BJAR)
      PATH(
'/Service/cai/Sysview/r142/sysview/cnm4e20/CNM4BJAR/CA/'
      ) .
  ADD DDDEF(CNM4BLOD)
      SHR DA(CAI.SYSVIEW.R142.CNM4BLOD) .
  ADD DDDEF(CNM4BMAC)
      SHR DA(CAI.SYSVIEW.R142.CNM4BMAC) .
  ADD DDDEF(CNM4BMAP)
      SHR DA(CAI.SYSVIEW.R142.CNM4BMAP) .
  ADD DDDEF(CNM4BMIB)
      SHR DA(CAI.SYSVIEW.R142.CNM4BMIB) .
  ADD DDDEF(CNM4BPNL)
      SHR DA(CAI.SYSVIEW.R142.CNM4BPNL) .
  ADD DDDEF(CNM4BPRM)
      SHR DA(CAI.SYSVIEW.R142.CNM4BPRM) .
  ADD DDDEF(CNM4BPLT)
      SHR DA(CAI.SYSVIEW.R142.CNM4BPLT) .
  ADD DDDEF(CNM4BPRF)
      SHR DA(CAI.SYSVIEW.R142.CNM4BPRF) .
  ADD DDDEF(CNM4BREX)
      SHR DA(CAI.SYSVIEW.R142.CNM4BREX) .
  ADD DDDEF(CNM4BSAM)
      SHR DA(CAI.SYSVIEW.R142.CNM4BSAM) .
  ADD DDDEF(CNM4BSEC)
      SHR DA(CAI.SYSVIEW.R142.CNM4BSEC) .
  ADD DDDEF(CNM4BTMP)
      SHR DA(CAI.SYSVIEW.R142.CNM4BTMP) .
  ADD DDDEF(CNM4XML)
      SHR DA(CAI.SYSVIEW.R142.CNM4XML) .
  ADD DDDEF(CNM4ZMAC)
      SHR DA(CAI.SYSVIEW.R142.CNM4ZMAC) .
  ADD DDDEF(CNM4ZSAM)
      SHR DA(CAI.SYSVIEW.R142.CNM4ZSAM) .
  ADD DDDEF(CNM4GHLP)
      SHR DA(CAI.SYSVIEW.R142.CNM4GHLP) .
  ADD DDDEF(CNM4GMSG)
      SHR DA(CAI.SYSVIEW.R142.CNM4GMSG) .
  ADD DDDEF(CNM4GPRM)
      SHR DA(CAI.SYSVIEW.R142.CNM4GPRM) .
  ADD DDDEF(CNM4RLOD)
      SHR DA(CAI.SYSVIEW.R142.CNM4RLOD) .
  ADD DDDEF(CNM4RSAM)
      SHR DA(CAI.SYSVIEW.R142.CNM4RSAM) .
  ADD DDDEF(ANM4BCAP)
      SHR DA(CAI.SYSVIEW.R142.ANM4BCAP) .
  ADD DDDEF(ANM4BCLS)
      SHR DA(CAI.SYSVIEW.R142.ANM4BCLS) .
  ADD DDDEF(ANM4BDAT)
      SHR DA(CAI.SYSVIEW.R142.ANM4BDAT) .
  ADD DDDEF(ANM4BHLP)
      SHR DA(CAI.SYSVIEW.R142.ANM4BHLP) .
  ADD DDDEF(ANM4BISP)
      SHR DA(CAI.SYSVIEW.R142.ANM4BISP) .
  ADD DDDEF(ANM4BISR)
      SHR DA(CAI.SYSVIEW.R142.ANM4BISR) .
  ADD DDDEF(ANM4BJAR)
      SHR DA(CAI.SYSVIEW.R142.ANM4BJAR) .
  ADD DDDEF(ANM4BLOD)
      SHR DA(CAI.SYSVIEW.R142.ANM4BLOD) .
  ADD DDDEF(ANM4BMAC)
      SHR DA(CAI.SYSVIEW.R142.ANM4BMAC) .
  ADD DDDEF(ANM4BMAP)
      SHR DA(CAI.SYSVIEW.R142.ANM4BMAP) .
  ADD DDDEF(ANM4BMIB)
      SHR DA(CAI.SYSVIEW.R142.ANM4BMIB) .
  ADD DDDEF(ANM4BPNL)
      SHR DA(CAI.SYSVIEW.R142.ANM4BPNL) .
  ADD DDDEF(ANM4BPRM)
      SHR DA(CAI.SYSVIEW.R142.ANM4BPRM) .
  ADD DDDEF(ANM4BPLT)
      SHR DA(CAI.SYSVIEW.R142.ANM4BPLT) .
  ADD DDDEF(ANM4BPRF)
      SHR DA(CAI.SYSVIEW.R142.ANM4BPRF) .
  ADD DDDEF(ANM4BREX)
      SHR DA(CAI.SYSVIEW.R142.ANM4BREX) .
  ADD DDDEF(ANM4BSAM)
      SHR DA(CAI.SYSVIEW.R142.ANM4BSAM) .
  ADD DDDEF(ANM4BSEC)
      SHR DA(CAI.SYSVIEW.R142.ANM4BSEC) .
  ADD DDDEF(ANM4BTMP)
      SHR DA(CAI.SYSVIEW.R142.ANM4BTMP) .
  ADD DDDEF(ANM4XML)
      SHR DA(CAI.SYSVIEW.R142.ANM4XML) .
  ADD DDDEF(ANM4ZMAC)
      SHR DA(CAI.SYSVIEW.R142.ANM4ZMAC) .
  ADD DDDEF(ANM4ZSAM)
      SHR DA(CAI.SYSVIEW.R142.ANM4ZSAM) .
  ADD DDDEF(ANM4GHLP)
      SHR DA(CAI.SYSVIEW.R142.ANM4GHLP) .
  ADD DDDEF(ANM4GMSG)
      SHR DA(CAI.SYSVIEW.R142.ANM4GMSG) .
  ADD DDDEF(ANM4GPRM)
      SHR DA(CAI.SYSVIEW.R142.ANM4GPRM) .
  ADD DDDEF(ANM4RLOD)
      SHR DA(CAI.SYSVIEW.R142.ANM4RLOD) .
  ADD DDDEF(ANM4RSAM)
      SHR DA(CAI.SYSVIEW.R142.ANM4RSAM) .
  ADD DDDEF(MACLIB)  DA(SYS1.MACLIB) SHR.
  ADD DDDEF(SYSLIB)  CONCAT(SMPMTS,CNM4BMAC,MACLIB) .
  ADD DDDEF(SCEELKED) DA(CEE.SCEELKED) SHR.
  ADD DDDEF(SCEESPC)  DA(CEE.SCEESPC)  SHR.
  ADD DDDEF(SCEEBND2) DA(CEE.SCEEBND2) SHR.
  ADD DDDEF(SCEELIB)  DA(CEE.SCEELIB)  SHR.
  ADD DDDEF(SYSDEFSD) DA(NULLFILE)          SHR.
  ENDUCL.
  SET BOUNDARY(CAID).
  UCLIN .
  ADD DLIBZONE(CAID)
      OPTIONS(NM4OPT)
      RELATED(CAIT)
      SREL(Z038) .
  ADD DDDEF(SMPDEBUG) SYSOUT(*) .
  ADD DDDEF(SMPLIST)  SYSOUT(*) .
  ADD DDDEF(SMPOUT)   SYSOUT(*) .
  ADD DDDEF(SMPPUNCH) SYSOUT(*) .
  ADD DDDEF(SMPRPT)   SYSOUT(*) .
  ADD DDDEF(SMPSNAP)  SYSOUT(*) .
  ADD DDDEF(SYSPRINT) SYSOUT(*) .
  ADD DDDEF(SYSUT1)   UNIT(SYSDA) SPACE(2,1) CYLINDERS .
  ADD DDDEF(SYSUT2)   UNIT(SYSDA) SPACE(2,1) CYLINDERS .
  ADD DDDEF(SYSUT3)   UNIT(SYSDA) SPACE(2,1) CYLINDERS .
  ADD DDDEF(SYSUT4)   UNIT(SYSDA) SPACE(2,1) CYLINDERS .
  ADD DDDEF(SMPLOG)
      MOD DA(CAI.SYSVIEW.R142.SMPLOG)   .
  ADD DDDEF(SMPLOGA)
      MOD DA(CAI.SYSVIEW.R142.SMPLOGA)  .
  ADD DDDEF(SMPLTS)
      SHR DA(CAI.SYSVIEW.R142.SMPLTS)  .
  ADD DDDEF(SMPMTS)
      SHR DA(CAI.SYSVIEW.R142.SMPMTS)   .
  ADD DDDEF(SMPPTS)
      SHR DA(CAI.SYSVIEW.R142.SMPPTS)   .
  ADD DDDEF(SMPSCDS)
      SHR DA(CAI.SYSVIEW.R142.SMPSCDS)  .
  ADD DDDEF(SMPSTS)
      SHR DA(CAI.SYSVIEW.R142.SMPSTS)   .
  ADD DDDEF(SMPWRK1)  UNIT(3390)
      SPACE(05,05) DIR(180) CYL  .
  ADD DDDEF(SMPWRK2)  UNIT(3390)
      SPACE(05,05) DIR(180) CYL  .
  ADD DDDEF(SMPWRK3)  UNIT(3390)
      SPACE(05,05) DIR(180) CYL  .
  ADD DDDEF(SMPWRK4)  UNIT(3390)
      SPACE(05,05) DIR(180) CYL  .
  ADD DDDEF(SMPWRK6)  UNIT(3390)
      SPACE(05,05) DIR(180) CYL  .
  ADD DDDEF(ANM4BCAP)
      SHR DA(CAI.SYSVIEW.R142.ANM4BCAP) .
  ADD DDDEF(ANM4BCLS)
      SHR DA(CAI.SYSVIEW.R142.ANM4BCLS) .
  ADD DDDEF(ANM4BDAT)
      SHR DA(CAI.SYSVIEW.R142.ANM4BDAT) .
  ADD DDDEF(ANM4BHLP)
      SHR DA(CAI.SYSVIEW.R142.ANM4BHLP) .
  ADD DDDEF(ANM4BISP)
      SHR DA(CAI.SYSVIEW.R142.ANM4BISP) .
  ADD DDDEF(ANM4BISR)
      SHR DA(CAI.SYSVIEW.R142.ANM4BISR) .
  ADD DDDEF(ANM4BJAR)
      SHR DA(CAI.SYSVIEW.R142.ANM4BJAR) .
  ADD DDDEF(ANM4BLOD)
      SHR DA(CAI.SYSVIEW.R142.ANM4BLOD) .
  ADD DDDEF(ANM4BMAC)
      SHR DA(CAI.SYSVIEW.R142.ANM4BMAC) .
  ADD DDDEF(ANM4BMAP)
      SHR DA(CAI.SYSVIEW.R142.ANM4BMAP) .
  ADD DDDEF(ANM4BMIB)
      SHR DA(CAI.SYSVIEW.R142.ANM4BMIB) .
  ADD DDDEF(ANM4BPNL)
      SHR DA(CAI.SYSVIEW.R142.ANM4BPNL) .
  ADD DDDEF(ANM4BPRM)
      SHR DA(CAI.SYSVIEW.R142.ANM4BPRM) .
  ADD DDDEF(ANM4BPLT)
      SHR DA(CAI.SYSVIEW.R142.ANM4BPLT) .
  ADD DDDEF(ANM4BPRF)
      SHR DA(CAI.SYSVIEW.R142.ANM4BPRF) .
  ADD DDDEF(ANM4BREX)
      SHR DA(CAI.SYSVIEW.R142.ANM4BREX) .
  ADD DDDEF(ANM4BSAM)
      SHR DA(CAI.SYSVIEW.R142.ANM4BSAM) .
  ADD DDDEF(ANM4BSEC)
      SHR DA(CAI.SYSVIEW.R142.ANM4BSEC) .
  ADD DDDEF(ANM4BTMP)
      SHR DA(CAI.SYSVIEW.R142.ANM4BTMP) .
  ADD DDDEF(ANM4XML)
      SHR DA(CAI.SYSVIEW.R142.ANM4XML) .
  ADD DDDEF(ANM4ZMAC)
      SHR DA(CAI.SYSVIEW.R142.ANM4ZMAC) .
  ADD DDDEF(ANM4ZSAM)
      SHR DA(CAI.SYSVIEW.R142.ANM4ZSAM) .
  ADD DDDEF(ANM4GHLP)
      SHR DA(CAI.SYSVIEW.R142.ANM4GHLP) .
  ADD DDDEF(ANM4GMSG)
      SHR DA(CAI.SYSVIEW.R142.ANM4GMSG) .
  ADD DDDEF(ANM4GPRM)
      SHR DA(CAI.SYSVIEW.R142.ANM4GPRM) .
  ADD DDDEF(ANM4RLOD)
      SHR DA(CAI.SYSVIEW.R142.ANM4RLOD) .
  ADD DDDEF(ANM4RSAM)
      SHR DA(CAI.SYSVIEW.R142.ANM4RSAM) .
  ADD DDDEF(MACLIB)  DA(SYS1.MACLIB) SHR.
  ADD DDDEF(SYSLIB)  CONCAT(ANM4BMAC,MACLIB) .
  ADD DDDEF(SCEELKED) DA(CEE.SCEELKED) SHR.
  ADD DDDEF(SCEESPC)  DA(CEE.SCEESPC) SHR.
  ENDUCL.
/*

./ ADD NAME=DFPS1IVP
//DFPS1IVP JOB (DFPS1IVP),IVP,MSGLEVEL=(1,1),MSGCLASS=A,CLASS=A         00010000
//********************************************************************* 00020000
//*                                                                     00030000
//*PROPRIETARY STATEMENT                                                00040000
//*LICENSED MATERIALS - PROPERTY OF IBM                                 00050000
//*5650-ZOS                                                             00060000
//*COPYRIGHT IBM CORP. 1997                                             00070000
//*END PROPRIETARY STATEMENT                                            00080000
//********************************************************************* 00090000
//*             DFSMSDFP IVP FOR CATALOG & AMS FUNCTIONS                00100000
//*                  SMS MANAGED VERSION   03/13/97                     00110000
//********************************************************************* 00120000
//*  NOTE: THIS JOB SHOULD BE RUN ONLY ON A SYSTEM THAT HAS STORAGE     00130000
//*  MANAGEMENT SUBSYSTEM (SMS) ACTIVE.                                 00140000
//*                                                                     00150000
//*  YOU MAY NEED TO MAKE CHANGES TO THIS JCL TO EXECUTE ON YOUR SYSTEM 00160000
//*                                                                     00170000
//*  THE FOLLOWING STRINGS REPRESENT CHANGES                            00180000
//*  YOU MAY WANT TO MAKE:                                              00190000
//*                                                                     00200000
//*    SMS001    -    SMS MANAGED VOLUME 1                              00210000
//*    SMS002    -    SMS MANAGED VOLUME 2                              00220000
//*    GSCLASS   -    A GUARANTEED SPACE STORAGE CLASS THAT             00230000
//*                      INCLUDES THE VOLUMES SMS001 & SMS002           00240000
//*    AMASTCAT  - THE NAME OF THE MASTER CATALOG                       00250000
//*                                                                     00260000
//*                                                                     00270000
//*******************************************************************   00280000
//* JOBSTEPS                                                            00290000
//*                                                                     00300000
//*   STEP01  DELETE THE VSAM CLUSTERS AND ICF CATALOGS FOR CLEANUP.    00310000
//*   STEP02  DEFINE THE FIRST ICF USERCATALOG AND AN ALIAS.    *3 CYL* 00320000
//*   STEP03  DEFINE A KSDS CLUSTER IN THE FIRST USERCATALOG.           00330000
//*   STEP04  PLACE DATA IN THE CLUSTER USING REPRO.                    00340000
//*   STEP05  DEFINE THE SECOND ICF USERCATALOG.                *3 CYL* 00350000
//*   STEP06  DEFINE AN ESDS CLUSTER IN THE SECOND USERCATALOG.         00360000
//*   STEP07  MERGE THE 2ND ICF CATALOG INTO THE 1ST ICF CATALOG        00370000
//*             USING REPRO MERGECAT.                                   00380000
//*   STEP08  LIST THE FIRST ICF CATALOG AND VERIFY THE MERGED          00390000
//*             VSAM CLUSTER ENTRIES.                                   00400000
//*   STEP09  EXPORT THE ICF CATALOG INTO A TEMPORARY DATA SET.         00410000
//*   STEP10  IMPORT THE EXPORTED ICF CATALOG.                          00420000
//*   STEP11  DIAGNOSE TO ASSURE A SUCCESSFUL IMPORT.                   00430000
//*   STEP12  DELETE THE VSAM CLUSTERS AND ICF CATALOGS FOR CLEANUP.    00440000
//*******************************************************************   00450000
//*  SETUP:                                                             00460000
//*        THE USER MUST FIRST MOUNT TWO 30-CYL (OR HIGHER) SMS-        00470000
//*        MANAGED SCRATCH VOLUMES FOR ICF CATALOGS AND VSAM DATA       00480000
//*        SETS. A SCRATCH VOLUME IS DEFINED AS A VOLUME THAT DOES      00490000
//*        NOT HAVE ANY DATA SETS THAT WILL REQUIRE FURTHER USE.        00500000
//*                                                                     00510000
//*        IN THE FOLLOWING JOBSTREAM, ADJUST VALUES FOR THE            00520000
//*        DEVICES AND THE MASTER CATALOG AS INDICATED BY THE           00530000
//*        COMMENT FLAGS.                                               00540000
//*******************************************************************   00550000
//* CHANGE ACTIVITY =                                                   00560000
//*                                                                     00570000
//*******************************************************************   00580000
//*                                                                     00590000
//STEP01    EXEC PGM=IDCAMS                                             00600000
//*                                                                     00610000
//*     CLEAN-UP BEFORE STARTING.                                       00620000
//*                                                                     00630000
//SYSPRINT DD  SYSOUT=A                                                 00640000
//VOL1     DD  UNIT=SYSDA,VOL=SER=SMS001,DISP=OLD                       00650000
//VOL2     DD  UNIT=SYSDA,VOL=SER=SMS002,DISP=OLD                       00660000
//SYSIN    DD  *                                                        00670000
   /***************************************************/                00680000
   /* STEP01  DELETE THE VSAM DATA SETS, ALIAS, VVRS  */                00690000
   /*         AND USERCATALOGS WHICH MAY HAVE BEEN    */                00700000
   /*         PREVIOUSLY DEFINED.                     */                00710000
   /*         EXPECT A NON-ZERO RETURN CODE IF THEY   */                00720000
   /*         DON'T EXIST.                            */                00730000
   /***************************************************/                00740000
                                                                        00750000
   /*****************************************/                          00760000
   /*   DELETE CLUSTERS.                    */                          00770000
   /*****************************************/                          00780000
       DELETE  (DFPS1IV1.KSDS) -                                        00790000
         CLUSTER -                                                      00800000
         PURGE         -                                                00810000
         SCRATCH                                                        00820000
                                                                        00830000
       DELETE          -                                                00840000
         DFPS1IV1.KSDS.DATA -                                           00850000
         FILE (VOL2)          -                                         00860000
         VVR -                                                          00870000
         CATALOG (DFS1CAT1)                                             00880000
                                                                        00890000
       DELETE          -                                                00900000
         DFPS1IV1.KSDS.INDEX -                                          00910000
         FILE (VOL2)          -                                         00920000
         VVR -                                                          00930000
         CATALOG (DFS1CAT1)                                             00940000
                                                                        00950000
       DELETE  (DFPS1IV2.ESDS) -                                        00960000
         CLUSTER -                                                      00970000
         PURGE         -                                                00980000
         SCRATCH                                                        00990000
                                                                        01000000
       DELETE          -                                                01010000
         DFPS1IV2.ESDS.DATA -                                           01020000
         FILE (VOL2)          -                                         01030000
         VVR -                                                          01040000
         CATALOG (DFS1CAT1)                                             01050000
   /*****************************************/                          01060000
   /*   DELETE ALIAS.                       */                          01070000
   /*****************************************/                          01080000
       DELETE  DFPS1IV1 ALIAS                                           01090000
       DELETE  DFPS1IV2 ALIAS                                           01100000
   /*****************************************/                          01110000
   /*   DELETE ICF CATALOGS.                */                          01120000
   /*****************************************/                          01130000
       DELETE  (DFS1CAT1) -                                             01140000
               USERCATALOG -                                            01150000
               FORCE                                                    01160000
       DELETE  (DFS1CAT2) -                                             01170000
               USERCATALOG -                                            01180000
               FORCE                                                    01190000
   /*****************************************/                          01200000
   /*   EXPORT DISCONNECT DFS1CAT1.         */                          01210000
   /*****************************************/                          01220000
       EXPORT DFS1CAT1 DISCONNECT             /*‡YA26400*/              01230000
                                                                        01240000
   /*****************************************/                          01250000
   /*   DELETE CATALOG VVRS IF STILL EXIST. */                          01260000
   /*****************************************/                          01270000
       DELETE          -                                                01280000
         DFS1CAT1 -                                                     01290000
         FILE (VOL1)          -                                         01300000
         VVR -                                                          01310000
         CATALOG (DFS1CAT1)                                             01320000
                                                                        01330000
       DELETE          -                                                01340000
         DFS1CAT1.CATINDEX  -                                           01350000
         FILE (VOL1)          -                                         01360000
         VVR -                                                          01370000
         CATALOG (DFS1CAT1)                                             01380000
                                                                        01390000
   /*****************************************/                          01400000
   /*   EXPORT DISCONNECT DFS1CAT2.         */                          01410000
   /*****************************************/                          01420000
       EXPORT DFS1CAT2 DISCONNECT             /*‡YA26400*/              01430000
                                                                        01440000
   /*****************************************/                          01450000
   /*   DELETE CATALOG VVRS IF STILL EXIST. */                          01460000
   /*****************************************/                          01470000
       DELETE          -                                                01480000
         DFS1CAT2 -                                                     01490000
         FILE (VOL1)          -                                         01500000
         VVR -                                                          01510000
         CATALOG (DFS1CAT1)                                             01520000
                                                                        01530000
       DELETE          -                                                01540000
         DFS1CAT2.CATINDEX  -                                           01550000
         FILE (VOL1)          -                                         01560000
         VVR -                                                          01570000
         CATALOG (DFS1CAT1)                                             01580000
                                                                        01590000
   /*****************************************/                          01600000
   /*   RESET CONDITION CODES               */                          01610000
   /*****************************************/                          01620000
       SET MAXCC = 0                                                    01630000
       SET LASTCC = 0                                                   01640000
/*                                                                      01650000
//STEP02  EXEC PGM=IDCAMS,COND=(8,LE)                                   01660000
//*                                                                     01670000
//*   DEFINE THE FIRST ICF USERCATALOG.                                 01680000
//*                                                                     01690000
//SYSPRINT DD  SYSOUT=A                                                 01700000
//VOL      DD  UNIT=SYSDA,VOL=SER=SMS001,DISP=OLD      /*SMS VOL1*/     01710000
//SYSIN    DD  *                                                        01720000
   /*******************************************************/            01730000
   /* STEP02  DEFINE AN ICF USERCATALOG IN AN SMS-MANAGED */            01740000
   /*         VOLUME USING A GUARANTEED STORAGE CLASS.    */            01750000
   /*         EXPECT SUCCESSFUL COMPLETION OF THIS STEP.  */            01760000
   /*******************************************************/            01770000
       DEFINE  USERCATALOG -                                            01780000
          (NAME(DFS1CAT1) -                                             01790000
          CYLINDERS(3 2) -                                              01800000
          VOLUME(SMS001)            /* SMS VOL1*/ -                     01810000
          STORCLAS(GSCLASS)         /* GUARANTEED SPACE STORCLAS*/ -    01820000
          FREESPACE(10 10) -                                            01830000
          RECORDSIZE(4086 4086) -                                       01840000
          ICFCATALOG -                                                  01850000
          FILE(VOL)) -                                                  01860000
       CATALOG(AMASTCAT)             /*MASTERCAT*/                      01870000
                                                                        01880000
   /******************************************************/             01890000
   /* STEP02  DEFINE AN ALIAS OF THE USERCATALOG.        */             01900000
   /*         EXPECT SUCCESSFUL COMPLETION OF THIS STEP. */             01910000
   /******************************************************/             01920000
       DEFINE ALIAS (NAME -                                             01930000
         (DFPS1IV1) -                                                   01940000
         RELATE(DFS1CAT1))                                              01950000
/*                                                                      01960000
//STEP03  EXEC PGM=IDCAMS,COND=(8,LE)                                   01970000
//*                                                                     01980000
//*   DEFINE A KSDS CLUSTER AND LIST ITS ENTRY                          01990000
//*                                                                     02000000
//SYSPRINT DD  SYSOUT=A                                                 02010000
//SYSIN    DD  *                                                        02020000
   /*******************************************************/            02030000
   /*  STEP03  DEFINE A KSDS CLUSTER IN AN SMS-MANAGED    */            02040000
   /*          VOLUME USING A GUARANTEED STORAGE CLASS.   */            02050000
   /*          THE CLUSTER'S HLQ DETERMINES WHERE THIS    */            02060000
   /*          DATA SET WILL BE CATALOGED.                */            02070000
   /*          EXPECT SUCCESSFUL COMPLETION OF THIS STEP. */            02080000
   /*******************************************************/            02090000
       DEFINE  CLUSTER -                                                02100000
               (NAME(DFPS1IV1.KSDS) -                                   02110000
               TRACKS(1 1) -                                            02120000
               VOLUMES(SMS002)       /* SMS VOL2 */ -                   02130000
               STORCLAS(GSCLASS)     /* GUARANTEED SPACE STORCLAS*/ -   02140000
               RECORDSIZE(80 80) -                                      02150000
               KEYS(5 0) -                                              02160000
               FREESPACE(10 10))                                        02170000
                                                                        02180000
   /*******************************************************/            02190000
   /*  STEP03  LIST THE ENTRY IF DEFINE WAS SUCCESSFUL.   */            02200000
   /*******************************************************/            02210000
  IF MAXCC = 0 -                                                        02220000
     THEN -                                                             02230000
       LISTCAT ENTRIES(DFPS1IV1.KSDS) -                                 02240000
               ALL -                                                    02250000
               CATALOG(DFS1CAT1)                                        02260000
/*                                                                      02270000
//STEP04  EXEC PGM=IDCAMS                                               02280000
//*                                                                     02290000
//*   PLACE DATA IN THE DEFINED CLUSTER                                 02300000
//*                                                                     02310000
//SYSPRINT DD  SYSOUT=A                                                 02320000
//DSDATA   DD  *                                                        02330000
ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRST02340000
BCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTU02350000
CDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUV02360000
DEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVW02370000
EFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWX02380000
FGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXY02390000
GHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ02400000
HIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZA02410000
IJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZAB02420000
JKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABC02430000
/*                                                                      02440000
//DSNM     DD  DSN=DFPS1IV1.KSDS,DISP=OLD                               02450000
//SYSIN    DD  *                                                        02460000
   /*******************************************************/            02470000
   /*  STEP04  PLACE DATA IN THE DEFINED KSDS CLUSTER.    */            02480000
   /*          EXPECT SUCCESSFUL COMPLETION OF THIS STEP. */            02490000
   /*******************************************************/            02500000
         REPRO INFILE(DSDATA) -                                         02510000
               OUTFILE(DSNM)                                            02520000
                                                                        02530000
  IF LASTCC = 0 -                                                       02540000
     THEN -                                                             02550000
         PRINT INFILE(DSNM)                                             02560000
/*                                                                      02570000
//STEP05  EXEC PGM=IDCAMS,COND=(8,LE)                                   02580000
//*                                                                     02590000
//*  DEFINE ANOTHER ICF USERCATALOG.                                    02600000
//*                                                                     02610000
//SYSPRINT DD  SYSOUT=A                                                 02620000
//VOL      DD  UNIT=SYSDA,VOL=SER=SMS001,DISP=OLD      /*SMS VOL1*/     02630000
//SYSIN    DD  *                                                        02640000
   /*******************************************************/            02650000
   /*  STEP05  DEFINE A SECOND ICF USERCATALOG IN AN      */            02660000
   /*          SMS-MANAGED VOLUME USING A GUARANTEED      */            02670000
   /*          SPACE STORAGE CLASS. EXPECT SUCCESSFUL     */            02680000
   /*          EXPECT SUCCESSFUL COMPLETION OF THIS STEP. */            02690000
   /*******************************************************/            02700000
       DEFINE  USERCATALOG -                                            02710000
         (NAME(DFS1CAT2) -                                              02720000
         CYLINDERS(3 2) -                                               02730000
         VOLUME(SMS001)              /*SMS VOL1*/ -                     02740000
         STORCLAS(GSCLASS)           /*GUARANTEED SPACE STORCLAS*/ -    02750000
         FREESPACE(10 10) -                                             02760000
         RECORDSIZE(4086 4086) -                                        02770000
         ICFCATALOG -                                                   02780000
         FILE(VOL)) -                                                   02790000
         CATALOG(AMASTCAT)            /*MASTERCAT*/                     02800000
/*                                                                      02810000
//STEP06  EXEC PGM=IDCAMS,COND=(8,LE)                                   02820000
//*                                                                     02830000
//*   DEFINE AN ESDS CLUSTER AND LIST ITS ENTRY                         02840000
//*                                                                     02850000
//SYSPRINT DD  SYSOUT=A                                                 02860000
//*VOL      DD  UNIT=SYSDA,VOL=SER=SMS002,DISP=OLD    /*SMS VOL2*/      02870000
//SYSIN    DD  *                                                        02880000
   /*******************************************************/            02890000
   /*  STEP06  DEFINE AN ESDS CLUSTER IN AN SMS-MANAGED   */            02900000
   /*          VOLUME USING A GUARANTEED STORAGE CLASS.   */            02910000
   /*          EXPECT SUCCESSFUL COMPLETION OF THIS STEP. */            02920000
   /*******************************************************/            02930000
       DEFINE  CLUSTER -                                                02940000
               (NAME(DFPS1IV2.ESDS) -                                   02950000
               TRACKS(1 1) -                                            02960000
               VOLUMES(SMS002)        /*SMS VOL2 */     -               02970000
               STORCLAS(GSCLASS)     /*GUARANTEED SPACE STORCLAS*/ -    02980000
               RECORDSIZE(80 80) -                                      02990000
               NONINDEXED -                                             03000000
               FREESPACE(10 10)) -                                      03010000
               CATALOG(DFS1CAT2)                                        03020000
                                                                        03030000
   /*******************************************************/            03040000
   /*  STEP06   LIST THE ENTRY IF DEFINE WAS SUCCESSFUL.  */            03050000
   /*******************************************************/            03060000
  IF MAXCC = 0 -                                                        03070000
     THEN -                                                             03080000
       LISTCAT ENTRIES(DFPS1IV2.ESDS) -                                 03090000
               ALL -                                                    03100000
               CATALOG(DFS1CAT2)                                        03110000
/*                                                                      03120000
//STEP07  EXEC PGM=IDCAMS                                               03130000
//*                                                                     03140000
//*   MERGE THE TWO ICF USERCATALOGS.                                   03150000
//*                                                                     03160000
//UCAT1    DD  DSN=DFS1CAT1,DISP=OLD                                    03170000
//UCAT2    DD  DSN=DFS1CAT2,DISP=OLD                                    03180000
//SYSPRINT DD  SYSOUT=A                                                 03190000
//SYSIN    DD  *                                                        03200000
   /*********************************************************/          03210000
   /* STEP07  MERGE THE 2ND ICF USERCATALOG INTO THE        */          03220000
   /*         1ST USERCATALOG VIA REPRO MERGECAT.           */          03230000
   /*         EXPECT SUCCESSFUL COMPLETION OF THIS STEP.    */          03240000
   /*********************************************************/          03250000
       REPRO -                                                          03260000
             INFILE (UCAT2) -                                           03270000
             OUTFILE (UCAT1) -                                          03280000
             LEVEL(DFPS1IV2) -                                          03290000
             MERGECAT                                                   03300000
/*                                                                      03310000
//STEP08  EXEC PGM=IDCAMS,COND=(8,LE)                                   03320000
//*                                                                     03330000
//*   LIST THE CATALOG TO SHOW TWO CLUSTER ENTRIES                      03340000
//*                                                                     03350000
//SYSPRINT DD  SYSOUT=A                                                 03360000
//VOL      DD  UNIT=SYSDA,VOL=SER=SMS001,DISP=OLD      /*SMS VOL1*/     03370000
//SYSIN    DD  *                                                        03380000
   /**********************************************************/         03390000
   /*  STEP08  LIST THE 1ST CATALOG TO SHOW THE PRESENCE     */         03400000
   /*          OF THE MERGED ESDS ENTRY.                     */         03410000
   /*          EXPECT SUCCESSFUL COMPLETION OF THIS LISTCAT. */         03420000
   /**********************************************************/         03430000
       LISTCAT -                                                        03440000
               ALL -                                                    03450000
               FILE(VOL) -                                              03460000
               CATALOG(DFS1CAT1)                                        03470000
                                                                        03480000
   /**********************************************************/         03490000
   /*  STEP08  LIST THE 2ND CATALOG TO SHOW THE ESDS         */         03500000
   /*          ENTRY IS NO LONGER THERE.                     */         03510000
   /*          EXPECT SUCCESSFUL COMPLETION OF THIS LISTCAT. */         03520000
   /**********************************************************/         03530000
       LISTCAT -                                                        03540000
               ALL -                                                    03550000
               FILE(VOL) -                                              03560000
               CATALOG(DFS1CAT2)                                        03570000
/*                                                                      03580000
//STEP09  EXEC PGM=IDCAMS,COND=(8,LE)                                   03590000
//*                                                                     03600000
//*   EXPORT THE CATALOG TO DISK FOR BACKUP                             03610000
//*   MARK THE CATALOG TEMPORARY (A BACKUP COPY EXISTS)                 03620000
//*                                                                     03630000
//SYSPRINT DD  SYSOUT=A                                                 03640000
//DISK     DD  DSNAME=EXPORT.DFS1CAT1,UNIT=SYSDA,DISP=(NEW,PASS),       03650000
//             VOL=SER=SMS002,SPACE=(CYL,(1,1)),STORCLAS=GSCLASS        03660000
//SYSIN    DD  *                                                        03670000
   /**************************************************************/     03680000
   /*  STEP09  EXPORT THE CATALOG TO DISK FOR BACKUP.            */     03690000
   /*          MARK THE CATALOG TEMPORARY (A BACKUP COPY EXISTS) */     03700000
   /*          EXPECT NO MORE THAN RETURN CODE 4 FOR THIS STEP.  */     03710000
   /**************************************************************/     03720000
       EXPORT  DFS1CAT1 -                                               03730000
               OUTFILE(DISK) -                                          03740000
               TEMPORARY                                                03750000
                                                                        03760000
       IF LASTCC = 4 THEN SET MAXCC=0                                   03770000
/*                                                                      03780000
//STEP10  EXEC PGM=IDCAMS,COND=(8,LE)                                   03790000
//*                                                                     03800000
//*   REPLACE THE CATALOG WITH THE BACKUP COPY                          03810000
//*                                                                     03820000
//SYSPRINT DD  SYSOUT=A                                                 03830000
//UCAT1    DD  UNIT=SYSDA,VOL=SER=SMS001,DISP=OLD,    /*SMS VOL1*/      03840000
//             DSNAME=DFS1CAT1,AMP='AMORG'                              03850000
//DISK1    DD  DSNAME=EXPORT.DFS1CAT1,DISP=(OLD,PASS)                   03860000
//SYSIN    DD  *                                                        03870000
   /*******************************************************/            03880000
   /*  STEP10  REPLACE THE CATALOG WITH THE BACKUP COPY.  */            03890000
   /*          EXPECT SUCCESSFUL COMPLETION OF THIS STEP. */            03900000
   /*******************************************************/            03910000
    IMPORT     INFILE(DISK1) -                                          03920000
      OUTFILE(UCAT1) -                                                  03930000
      CATALOG(AMASTCAT)                /*MASTERCAT/                     03940000
/*                                                                      03950000
//STEP11  EXEC PGM=IDCAMS,COND=(8,LE)                                   03960000
//*                                                                     03970000
//*   VERIFY THAT IMPORT WAS SUCCESSFUL                                 03980000
//*                                                                     03990000
//SYSPRINT DD  SYSOUT=A                                                 04000000
//UCAT1    DD  UNIT=SYSDA,VOL=SER=SMS001,DISP=OLD,    /*SMS VOL1*/      04010000
//             DSN=DFS1CAT1,AMP='AMORG'                                 04020000
//VVDS1    DD  UNIT=SYSDA,VOL=SER=SMS001,DISP=OLD,    /*SMS VOL1*/      04030000
//             DSN=SYS1.VVDS.VSMS001,AMP='AMORG'                        04040000
//SYSIN    DD  *                                                        04050000
   /************************************************************/       04060000
   /* STEP11  VERIFY (VIA DIAGNOSE COMMAND) THAT IMPORT        */       04070000
   /*         WAS SUCCESSFUL (CATALOG IN SYNCH).               */       04080000
   /*         EXPECT NO MORE THAN RETURN CODE 4 FOR THIS STEP. */       04090000
   /************************************************************/       04100000
       DIAGNOSE -                                                       04110000
               ICFCATALOG -                                             04120000
               INFILE(UCAT1) -                                          04130000
               COMPAREDD(VVDS1) -                                       04140000
               LIST NODUMP                                              04150000
                                                                        04160000
       IF LASTCC = 4 THEN SET MAXCC = 0                                 04170000
/*                                                                      04180000
//STEP12  EXEC PGM=IDCAMS                                               04190000
//*                                                                     04200000
//*   CLEANUP                                                           04210000
//*                                                                     04220000
//SYSPRINT DD  SYSOUT=A                                                 04230000
//VOL1     DD  UNIT=SYSDA,VOL=SER=SMS001,DISP=OLD    /*SMS VOL1*/       04240000
//VOL2     DD  UNIT=SYSDA,VOL=SER=SMS002,DISP=OLD    /*SMS VOL2*/       04250000
//SYSIN    DD  *                                                        04260000
   /******************************************************/             04270000
   /* STEP12  DEFINE THE HLQ OF THE CLUSTERS AS ALIASES  */             04280000
   /*         OF THE ICF CATALOG TO ENABLE LOCATING THEM */             04290000
   /*         DURING THE DELETE CLUSTER THAT FOLLOWS FOR */             04300000
   /*         SYSTEM CLEANUP. EXPECT SUCCESSFUL RESULTS. */             04310000
   /******************************************************/             04320000
    DEFINE ALIAS (NAME(DFPS1IV1) RELATE(DFS1CAT1))                      04330000
    DEFINE ALIAS (NAME(DFPS1IV2) RELATE(DFS1CAT1))                      04340000
                                                                        04350000
   /******************************************************/             04360000
   /* STEP12  DELETE THE VSAM KSDS. IF IN CASE THE       */             04370000
   /*         CATALOG IS GONE, DELETE THE CLUSTER'S      */             04380000
   /*         VVR ENTRIES FOR VOLUME CLEANUP.            */             04390000
   /*         EXPECT EITHER "DELETE CLUSTER" OR "DELETE  */             04400000
   /*         VVR" TO BE SUCCESSFUL.                     */             04410000
   /******************************************************/             04420000
    DELETE     (DFPS1IV1.KSDS) CLUSTER PURGE                            04430000
      IF LASTCC > 0 THEN -                                              04440000
        DO                                                              04450000
          DELETE       -                                                04460000
            DFPS1IV1.KSDS.DATA -                                        04470000
            FILE (VOL2)       -                                         04480000
            VVR -                                                       04490000
            CATALOG (DFS1CAT1)                                          04500000
                                                                        04510000
          DELETE       -                                                04520000
            DFPS1IV1.KSDS.INDEX -                                       04530000
            FILE (VOL2)       -                                         04540000
            VVR -                                                       04550000
            CATALOG (DFS1CAT1)                                          04560000
                                                                        04570000
          SET MAXCC = 0                                                 04580000
        END                                                             04590000
   /******************************************************/             04600000
   /* STEP12  DELETE THE VSAM ESDS. IF THE ICF CATALOG   */             04610000
   /*         DOES NOT EXIST, DELETE THE CLUSTER'S       */             04620000
   /*         VVR ENTRY FOR VOLUME CLEANUP.              */             04630000
   /*         EXPECT EITHER THE "DELETE CLUSTER" OR      */             04640000
   /*         "DELETE VVR" TO BE SUCCESSFUL.             */             04650000
   /******************************************************/             04660000
     DELETE    (DFPS1IV2.ESDS) CLUSTER PURGE                            04670000
       IF LASTCC > 0 THEN -                                             04680000
         DO                                                             04690000
           DELETE      -                                                04700000
             DFPS1IV2.ESDS.DATA -                                       04710000
             FILE (VOL2)      -                                         04720000
             VVR -                                                      04730000
             CATALOG (DFS1CAT1)                                         04740000
                                                                        04750000
           SET MAXCC = 0                                                04760000
         END                                                            04770000
                                                                        04780000
   /******************************************************/             04790000
   /* STEP12  DELETE THE ALIASES.                        */             04800000
   /******************************************************/             04810000
    DELETE    DFPS1IV1 ALIAS                                            04820000
    DELETE    DFPS1IV2 ALIAS                                            04830000
                                                                        04840000
   /**********************************************************/         04850000
   /* STEP12  DELETE THE FIRST ICF CATALOG. IF DISCONNECTED  */         04860000
   /*         FROM THE MASTERCATALOG, DELETE ITS VVR ENTRIES */         04870000
   /*         FOR VOLUME CLEANUP. EXPECT EITHER THE "DELETE  */         04880000
   /*         UCAT" OR "DELETE VVR" TO BE SUCCESSFUL.        */         04890000
   /**********************************************************/         04900000
    DELETE    (DFS1CAT1) UCAT FORCE                                     04910000
      IF LASTCC > 0 THEN -                                              04920000
       DO                                                               04930000
         DELETE      -                                                  04940000
           DFS1CAT1 -                                                   04950000
           FILE (VOL1)      -                                           04960000
           VVR -                                                        04970000
         CATALOG (AMASTCAT)             /*MASTERCAT*/                   04980000
         DELETE      -                                                  04990000
           DFS1CAT1.CATINDEX -                                          05000000
           FILE (VOL1)      -                                           05010000
           VVR -                                                        05020000
         CATALOG (AMASTCAT)             /*MASTERCAT*/                   05030000
         SET MAXCC = 0                                                  05040000
      END                                                               05050000
                                                                        05060000
   /**********************************************************/         05070000
   /* STEP12  DELETE THE SECOND ICF CATALOG. IF DISCONNECTED */         05080000
   /*         FROM THE MASTERCATALOG, DELETE ITS VVR ENTRIES */         05090000
   /*         FOR VOLUME CLEANUP. EXPECT EITHER THE "DELETE  */         05100000
   /*         UCAT" OR "DELETE VVR" TO BE SUCCESSFUL.        */         05110000
   /**********************************************************/         05120000
   DELETE    (DFS1CAT2) UCAT FORCE                                      05130000
     IF LASTCC > 0 THEN -                                               05140000
       DO                                                               05150000
         DELETE      -                                                  05160000
           DFS1CAT2 -                                                   05170000
           FILE (VOL1)      -                                           05180000
           VVR -                                                        05190000
         CATALOG (AMASTCAT)             /*MASTERCAT*/                   05200000
         DELETE      -                                                  05210000
           DFS1CAT2.CATINDEX -                                          05220000
           FILE (VOL1)      -                                           05230000
           VVR -                                                        05240000
         CATALOG (AMASTCAT)             /*MASTERCAT*/                   05250000
         SET MAXCC = 0                                                  05260000
       END                                                              05270000
/*                                                                      05280000

./ ADD NAME=DFPX1IVP
//DFPX1IVP JOB (DFPX1IVP),IVP,MSGLEVEL=(1,1),MSGCLASS=A                 00010000
//*****************************************************************     00020000
//*                                                                     00030000
//*PROPRIETARY STATEMENT                                                00040000
//*LICENSED MATERIALS - PROPERTY OF IBM                                 00050000
//*5650-ZOS                                                             00060000
//*COPYRIGHT IBM CORP. 1982, 1997                                       00070000
//*END PROPRIETARY STATEMENT                                            00080000
//*                                                                     00090000
//*****************************************************************     00100000
//*       DFSMSDFP IVP FOR ICF CATALOG AND AMS FUNCTIONS                00110000
//*         NON-SMS MANAGED VERSION  UPDATED: 03/13/97                  00120000
//*****************************************************************     00130000
//*  NOTE: THIS JOB CAN BE RUN ON A SYSTEM THAT HAS EITHER ACTIVE       00140000
//*  OR INACTIVE STORAGE MANAGEMENT SUBSYSTEM (SMS). ALL VOLUMES,       00150000
//*  CATALOGS, AND OTHER VSAM DATA SETS CREATED AND USED IN THIS JOB    00160000
//*  ARE NON-SMS MANAGED.                                               00170000
//*                                                                     00180000
//*  YOU MAY NEED TO MAKE CHANGES TO THIS JCL TO EXECUTE ON YOUR SYSTEM 00190000
//*                                                                     00200000
//*  THE FOLLOWING STRINGS REPRESENT CHANGES                            00210000
//*  YOU MAY WANT TO MAKE:                                              00220000
//*                                                                     00230000
//*    NSMS01    -    A NON-SMS MANAGED VOLUME (PREFERABLY EMPTY)       00240000
//*    NSMS02    -    A DIFFERENT NON-SMS MANAGED VOLUME                00250000
//*    AMASTCAT  -    THE NAME OF THE MASTER CATALOG                    00260000
//*******************************************************************   00270000
//* JOBSTEPS                                                            00280000
//* --------                                                            00290000
//*   STEP01  DELETE THE VSAM CLUSTERS AND ICF CATALOGS FOR CLEANUP.    00300000
//*   STEP02  DEFINE THE FIRST ICF USERCATALOG.                 *3 CYL* 00310000
//*   STEP03  DEFINE A KSDS CLUSTER IN THE FIRST USERCATALOG.           00320000
//*   STEP04  PLACE DATA IN THE CLUSTER USING REPRO.                    00330000
//*   STEP05  DEFINE THE SECOND ICF USERCATALOG.                *3 CYL* 00340000
//*   STEP06  DEFINE AN ESDS CLUSTER IN THE SECOND USERCATALOG.         00350000
//*   STEP07  MERGE THE 2ND ICF CATALOG INTO THE 1ST ICF CATALOG        00360000
//*             USING REPRO MERGECAT.                                   00370000
//*   STEP08  LIST THE FIRST ICF CATALOG AND VERIFY THE MERGED          00380000
//*             VSAM CLUSTER ENTRIES.                                   00390000
//*   STEP09  EXPORT THE ICF CATALOG INTO A TEMPORARY DATA SET.         00400000
//*   STEP10  IMPORT THE EXPORTED ICF CATALOG.                          00410000
//*   STEP11  DIAGNOSE TO ASSURE A SUCCESSFUL IMPORT.                   00420000
//*   STEP12  DELETE THE VSAM CLUSTERS AND ICF CATALOGS FOR CLEANUP.    00430000
//*******************************************************************   00440000
//*  SETUP:                                                             00450000
//*        THE USER MUST FIRST MOUNT TWO NON-SMS SCRATCH VOLUMES.       00460000
//*        A SCRATCH VOLUME IS DEFINED AS A VOLUME THAT DOES NOT        00470000
//*        HAVE ANY DATA SETS THAT WILL REQUIRE FURTHER USE.            00480000
//*                                                                     00490000
//*        IN THE FOLLOWING JOBSTREAM, ADJUST VALUES FOR                00500000
//*        THESE DEVICES AS INDICATED BY COMMENT FLAGS.                 00510000
//*******************************************************************   00520000
//* CHANGE ACTIVITY =                                                   00530000
//*                                                                     00540000
//* $01=OW30493,HDZ11D0,971118,SJPLGFL,OW30493: Remove STEPCAT  ‡01A*   00550000
//* $02=OW30566,HDZ11D0,971225,SJPLAAB,OW30666: Add Define Alias    *   00560000
//*     and Delete Alias to resolve REPRO failure.              ‡02A*   00570000
//*******************************************************************   00580000
//*                                                                     00590000
//STEP01    EXEC PGM=IDCAMS                                             00600000
//*                                                                     00610000
//*   CLEAN-UP BEFORE STARTING.                                         00620000
//*                                                                     00630000
//SYSPRINT DD  SYSOUT=A                                                 00640000
//VOL1     DD  UNIT=SYSDA,VOL=SER=NSMS01,DISP=OLD   /*NONSMS VOL1*/     00650000
//VOL2     DD  UNIT=SYSDA,VOL=SER=NSMS02,DISP=OLD   /*NONSMS VOL2*/     00660000
//SYSIN    DD  *                                                        00670000
   /***************************************************/                00680000
   /* STEP01  DELETE THE VSAM DATA SETS, ALIAS, VVRS  */                00690000
   /*         AND USERCATALOGS WHICH MAY HAVE BEEN    */                00700000
   /*         PREVIOUSLY DEFINED.                     */                00710000
   /*         EXPECT A NON-ZERO RETURN CODE IF THEY   */                00720000
   /*         DON'T EXIST.                            */                00730000
   /***************************************************/                00740000
   /*****************************************/                          00750000
   /*   DELETE CLUSTERS & VVRS.             */                          00760000
   /*****************************************/                          00770000
       DELETE  (DFPX1IVP.KSDS) CLUSTER PURGE                            00780000
                                                                        00790000
       DELETE          -                                                00800000
         DFPX1IVP.KSDS.DATA -                                           00810000
         FILE (VOL2)         -                                          00820000
         VVR -                                                          00830000
         CATALOG (DFX1CAT1)                                             00840000
                                                                        00850000
       DELETE          -                                                00860000
         DFPX1IVP.KSDS.INDEX -                                          00870000
         FILE (VOL2)         -                                          00880000
         VVR -                                                          00890000
         CATALOG (DFX1CAT1)                                             00900000
                                                                        00910000
       DELETE  (DFPX1IVP.ESDS) CLUSTER PURGE                            00920000
                                                                        00930000
       DELETE          -                                                00940000
         DFPX1IVP.ESDS.DATA -                                           00950000
         FILE (VOL2)          -                                         00960000
         VVR -                                                          00970000
         CATALOG (DFX1CAT1)                                             00980000
                                                                        00990000
   /*****************************************/                          01000000
   /*   DELETE ALIAS.                       */                          01010000
   /*****************************************/                          01020000
       DELETE DFPX1IVP ALIAS                                            01030000
                                                                        01040000
   /*****************************************/                          01050000
   /*   DELETE ICF USERCATALOGS.            */                          01060000
   /*****************************************/                          01070000
       DELETE  (DFX1CAT1) -                                             01080000
               USERCATALOG -                                            01090000
               FILE(VOL1) -                                             01100000
               FORCE                                                    01110000
                                                                        01120000
       DELETE  (DFX1CAT2) -                                             01130000
               USERCATALOG -                                            01140000
               FILE(VOL1) -                                             01150000
               FORCE                                                    01160000
   /*****************************************/                          01170000
   /*   EXPORT DISCONNECT THE CATALOGS      */                          01180000
   /*****************************************/                          01190000
       EXPORT DFX1CAT1 DISCONNECT                                       01200000
       EXPORT DFX1CAT2 DISCONNECT                                       01210000
   /*****************************************/                          01220000
   /*   RESET CONDITION CODES               */                          01230000
   /*****************************************/                          01240000
       SET MAXCC = 0                                                    01250000
       SET LASTCC = 0                                                   01260000
/*                                                                      01270000
//STEP02  EXEC PGM=IDCAMS,COND=(8,LE)                                   01280000
//*                                                                     01290000
//*   DEFINE THE FIRST ICF CATALOG.                                     01300000
//*                                                                     01310000
//SYSPRINT DD  SYSOUT=A                                                 01320000
//VOL      DD  UNIT=SYSDA,VOL=SER=NSMS01,DISP=OLD   /*NONSMS VOL1*/     01330000
//SYSIN    DD  *                                                        01340000
   /*********************************************************/          01350000
   /* STEP02  DEFINE AN ICF USERCATALOG IN A NONSMS-MANAGED */          01360000
   /*         VOLUME. EXPECT THIS STEP TO BE SUCCESSFUL.    */          01370000
   /*********************************************************/          01380000
    DEFINE USERCATALOG -                                                01390000
      (NAME(DFX1CAT1) -                                                 01400000
      CYLINDERS(3 2) -                                                  01410000
      VOLUME(NSMS01)                    /*NONSMS VOL1*/ -               01420000
      FREESPACE(10 10) -                                                01430000
      RECORDSIZE(4086 4086) -                                           01440000
      ICFCATALOG -                                                      01450000
      FILE(VOL)) -                                                      01460000
      CATALOG(AMASTCAT)                /*MASTERCAT*/                    01470000
                                                                        01480000
   DEFINE ALIAS (NAME(DFPX1IVP) RELATE(DFX1CAT1))                       01490000
/*                                                                      01500000
//STEP03  EXEC PGM=IDCAMS,COND=(8,LE)                                   01510000
//*                                                                     01520000
//*   DEFINE A KSDS CLUSTER AND LIST ITS ENTRY                          01530000
//*                                                                     01540000
//SYSPRINT DD  SYSOUT=A                                                 01550000
//VOL      DD  UNIT=SYSDA,VOL=SER=NSMS02,DISP=OLD   /*NONSMS VOL2*/     01560000
//SYSIN    DD  *                                                        01570000
   /********************************************************/           01580000
   /*  STEP03  DEFINE AND CATALOG A KSDS CLUSTER IN A      */           01590000
   /*          NONSMS MANAGED VOLUME.                      */           01600000
   /*          EXPECT SUCCESSFUL COMPLETION OF THIS DEFINE.*/           01610000
   /********************************************************/           01620000
       DEFINE  CLUSTER -                                                01630000
               (NAME(DFPX1IVP.KSDS) -                                   01640000
               TRACKS(1 1) -                                            01650000
               VOLUMES(NSMS02)               /*NONSMS VOL2*/ -          01660000
               FILE(VOL) -                                              01670000
               RECORDSIZE(80 80) -                                      01680000
               KEYS(5 0) -                                              01690000
               FREESPACE(10 10)) -                                      01700000
               CATALOG(DFX1CAT1)                                        01710000
                                                                        01720000
   /******************************************************/             01730000
   /*   LIST THE ENTRY IF THE DEFINE WAS SUCCESSFUL.     */             01740000
   /******************************************************/             01750000
  IF MAXCC = 0 -                                                        01760000
     THEN -                                                             01770000
       LISTCAT ENTRIES(DFPX1IVP.KSDS) -                                 01780000
               ALL -                                                    01790000
               CATALOG(DFX1CAT1)                                        01800000
/*                                                                      01810000
//STEP04  EXEC PGM=IDCAMS                                               01820000
//*                                                                     01830000
//*   PLACE DATA IN THE DEFINED CLUSTER                                 01840000
//*                                                                     01850000
//SYSPRINT DD  SYSOUT=A                                                 01860000
//DSDATA   DD  *                                                        01870000
ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRST01880000
BCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTU01890000
CDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUV01900000
DEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVW01910000
EFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWX01920000
FGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXY01930000
GHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ01940000
HIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZA01950000
IJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZAB01960000
JKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABC01970000
/*                                                                      01980000
//DSNM     DD  DSN=DFPX1IVP.KSDS,DISP=OLD                               01990000
//SYSIN    DD  *                                                        02000000
   /***************************************************/                02010000
   /*  STEP04  PLACE DATA IN THE DEFINED CLUSTER.     */                02020000
   /*          THIS STEP SHOULD BE SUCCESSFUL (RC=0). */                02030000
   /***************************************************/                02040000
         REPRO INFILE(DSDATA) -                                         02050000
               OUTFILE(DSNM)                                            02060000
                                                                        02070000
  IF LASTCC = 0 -                                                       02080000
     THEN -                                                             02090000
         PRINT INFILE(DSNM)                                             02100000
                                                                        02110000
  DELETE DFPX1IVP ALIAS                                                 02120000
/*                                                                      02130000
//STEP05  EXEC PGM=IDCAMS,COND=(8,LE)                                   02140000
//*                                                                     02150000
//*   DEFINE ANOTHER INTEGRATED CATALOG FACILITY CATALOG                02160000
//*                                                                     02170000
//SYSPRINT DD  SYSOUT=A                                                 02180000
//VOL      DD  UNIT=SYSDA,VOL=SER=NSMS01,DISP=OLD   /*NONSMS VOL1*/     02190000
//SYSIN    DD  *                                                        02200000
   /******************************************************/             02210000
   /*  STEP05  DEFINE A 2ND ICF USERCATALOG IN A NONSMS  */             02220000
   /*          MANAGED VOLUME. EXPECT THIS STEP TO BE    */             02230000
   /*          SUCCESSFUL (RC=0).                        */             02240000
   /******************************************************/             02250000
    DEFINE     USERCATALOG -                                            02260000
      (NAME(DFX1CAT2) -                                                 02270000
      CYLINDERS(3 2) -                                                  02280000
      VOLUME(NSMS01)                    /*NONSMS VOL1*/ -               02290000
      FREESPACE(10 10) -                                                02300000
      RECORDSIZE(4086 4086) -                                           02310000
      ICFCATALOG -                                                      02320000
      FILE(VOL)) -                                                      02330000
      CATALOG(AMASTCAT)                /*MASTERCAT*/                    02340000
/*                                                                      02350000
//STEP06  EXEC PGM=IDCAMS,COND=(8,LE)                                   02360000
//*                                                                     02370000
//*   DEFINE AN ESDS CLUSTER AND LIST ITS ENTRY                         02380000
//*                                                                     02390000
//SYSPRINT DD  SYSOUT=A                                                 02400000
//VOL      DD  UNIT=SYSDA,VOL=SER=NSMS02,DISP=OLD    /*NONSMS VOL2*/    02410000
//SYSIN    DD  *                                                        02420000
   /*****************************************************/              02430000
   /*   STEP06  DEFINE AND CATALOG AN ESDS CLUSTER IN A */              02440000
   /*           NONSMS MANAGED VOLUME. EXPECT THIS      */              02450000
   /*           DEFINE TO BE SUCCESSFUL (RC=0).         */              02460000
   /*****************************************************/              02470000
       DEFINE  CLUSTER -                                                02480000
               (NAME(DFPX1IVP.ESDS) -                                   02490000
               TRACKS(1 1) -                                            02500000
               VOLUMES(NSMS02)       /*NONSMS VOL2*/ -                  02510000
               FILE(VOL) -                                              02520000
               RECORDSIZE(80 80) -                                      02530000
               NONINDEXED -                                             02540000
               FREESPACE(10 10)) -                                      02550000
               CATALOG(DFX1CAT2)                                        02560000
                                                                        02570000
   /*****************************************************/              02580000
   /*   LIST THE ENTRY IF THE DEFINE WAS SUCCESSFUL.    */              02590000
   /*****************************************************/              02600000
  IF MAXCC = 0 -                                                        02610000
     THEN -                                                             02620000
       LISTCAT ENTRIES(DFPX1IVP.ESDS) -                                 02630000
               ALL -                                                    02640000
               CATALOG(DFX1CAT2)                                        02650000
/*                                                                      02660000
//STEP07  EXEC PGM=IDCAMS                                               02670000
//*                                                                     02680000
//*   MERGE THE TWO INTEGRATED CATALOG FACILITY CATALOGS                02690000
//*                                                                     02700000
//UCAT1    DD  DSN=DFX1CAT1,DISP=OLD                                    02710000
//UCAT2    DD  DSN=DFX1CAT2,DISP=OLD                                    02720000
//SYSPRINT DD  SYSOUT=A                                                 02730000
//SYSIN    DD  *                                                        02740000
   /*********************************************************/          02750000
   /*   STEP07  MERGE THE 2ND ICF CATALOG TO THE 1ST        */          02760000
   /*           USERCATALOG VIA REPRO MERGECAT.             */          02770000
   /*           EXPECT THIS STEP TO BE SUCCESSFUL (RC=0).   */          02780000
   /*********************************************************/          02790000
       REPRO -                                                          02800000
             INFILE (UCAT2) -                                           02810000
             OUTFILE (UCAT1) -                                          02820000
             LEVEL(DFPX1IVP) -                                          02830000
             MERGECAT                                                   02840000
/*                                                                      02850000
//STEP08  EXEC PGM=IDCAMS,COND=(8,LE)                                   02860000
//*                                                                     02870000
//*   LIST THE CATALOG TO SHOW TWO CLUSTER ENTRIES                      02880000
//*                                                                     02890000
//SYSPRINT DD  SYSOUT=A                                                 02900000
//VOL      DD  UNIT=SYSDA,VOL=SER=NSMS01,DISP=OLD    /*NONSMS VOL1*/    02910000
//SYSIN    DD  *                                                        02920000
   /****************************************************/               02930000
   /*   STEP08  LIST THE CATALOG TO VERIFY THE MERGED  */               02940000
   /*           ESDS ENTRY FROM THE 2ND CATALOG.       */               02950000
   /*           EXPECT THIS STEP TO BE SUCCESSFUL.     */               02960000
   /****************************************************/               02970000
       LISTCAT -                                                        02980000
               ALL -                                                    02990000
               FILE(VOL) -                                              03000000
               CATALOG(DFX1CAT1)                                        03010000
/*                                                                      03020000
//STEP09  EXEC PGM=IDCAMS,COND=(8,LE)                                   03030000
//*                                                                     03040000
//*   EXPORT THE CATALOG TO DISK FOR BACKUP                             03050000
//*   MARK THE CATALOG TEMPORARY (A BACKUP COPY EXISTS)                 03060000
//*                                                                     03070000
//SYSPRINT DD  SYSOUT=A                                                 03080000
//DISK     DD  DSNAME=EXPORT.DFX1CAT1,UNIT=SYSDA,DISP=(NEW,PASS),       03090000
//             VOL=SER=NSMS02,SPACE=(CYL,(1,1))         /*IVPVOL*/      03100000
//SYSIN    DD  *                                                        03110000
   /**********************************************************/         03120000
   /*   STEP09  EXPORT THE CATALOG TO DISK FOR BACKUP.       */         03130000
   /*           MARK THE CATALOG TEMPORARY (A BACKUP COPY    */         03140000
   /*           IS CREATED). THIS STEP SHOULD BE SUCCESSFUL. */         03150000
   /**********************************************************/         03160000
       EXPORT  DFX1CAT1 -                                               03170000
               OUTFILE(DISK) -                                          03180000
               TEMPORARY                                                03190000
/*                                                                      03200000
//STEP10  EXEC PGM=IDCAMS,COND=(8,LE)                                   03210000
//*                                                                     03220000
//*   REPLACE THE CATALOG WITH THE BACKUP COPY                          03230000
//*                                                                     03240000
//SYSPRINT DD  SYSOUT=A                                                 03250000
//UCAT1    DD  UNIT=SYSDA,VOL=SER=NSMS01,DISP=OLD,  /*NONSMS VOL1*/     03260000
//             DSNAME=DFX1CAT1,AMP='AMORG'                              03270000
//DISK1    DD  DSNAME=EXPORT.DFX1CAT1,DISP=(OLD,PASS)                   03280000
//SYSIN    DD  *                                                        03290000
   /*************************************************/                  03300000
   /*   STEP10  REPLACE THE CATALOG WITH THE BACKUP */                  03310000
   /*           COPY VIA IMPORT. EXPECT THIS STEP   */                  03320000
   /*           TO BE SUCCESSFUL.                   */                  03330000
   /*************************************************/                  03340000
    IMPORT     INFILE(DISK1) -                                          03350000
      OUTFILE(UCAT1) -                                                  03360000
      CATALOG(AMASTCAT)                /*MASTERCAT*/                    03370000
/*                                                                      03380000
//STEP11  EXEC PGM=IDCAMS,COND=(8,LE)                                   03390000
//*                                                                     03400000
//*   VERIFY THAT IMPORT WAS SUCCESSFUL                                 03410000
//*                                                                     03420000
//SYSPRINT DD  SYSOUT=A                                                 03430000
//UCAT1    DD  UNIT=SYSDA,VOL=SER=NSMS01,DISP=OLD,   /*NONSMS VOL1*/    03440000
//             DSN=DFX1CAT1,AMP='AMORG'                                 03450000
//VVDS1    DD  UNIT=SYSDA,VOL=SER=NSMS01,DISP=OLD,   /*NONSMS VOL1*/    03460000
//             DSN=SYS1.VVDS.VNSMS01,AMP='AMORG'                        03470000
//SYSIN    DD  *                                                        03480000
   /**************************************************************/     03490000
   /*   STEP11  VERIFY THAT IMPORT WAS SUCCESSFUL (CATALOG IN    */     03500000
   /*           SYNCH) VIA A DIAGNOSE COMMAND. EXPECT NO MORE    */     03510000
   /*           THAN RETURN CODE 4 FOR THIS STEP.                */     03520000
   /**************************************************************/     03530000
       DIAGNOSE -                                                       03540000
               ICFCATALOG -                                             03550000
               INFILE(UCAT1) -                                          03560000
               COMPAREDD(VVDS1) -                                       03570000
               LIST NODUMP                                              03580000
/*                                                                      03590000
//STEP12  EXEC PGM=IDCAMS                                               03600000
//*                                                                     03610000
//*   CLEANUP                                                           03620000
//*                                                                     03630000
//SYSPRINT DD  SYSOUT=A                                                 03640000
//VOL1     DD  UNIT=SYSDA,VOL=SER=NSMS01,DISP=OLD    /*NONSMS VOL1*/    03650000
//VOL2     DD  UNIT=SYSDA,VOL=SER=NSMS02,DISP=OLD    /*NONSMS VOL2*/    03660000
//SYSIN    DD  *                                                        03670000
   /****************************************************/               03680000
   /*  STEP12  DEFINE THE CLUSTERS' HLQ AS AN ALIAS    */               03690000
   /*          OF THE USERCATALOG TO ENABLE LOCATING   */               03700000
   /*          THE ENTRIES DURING THE DELETE CLUSTER   */               03710000
   /*          REQUESTS THAT FOLLOW. EXPECT THIS STEP  */               03720000
   /*          TO BE SUCCESSFUL (RC=0).                */               03730000
   /****************************************************/               03740000
       DEFINE ALIAS (NAME(DFPX1IVP) RELATE(DFX1CAT1))                   03750000
                                                                        03760000
   /*******************************************************/            03770000
   /* STEP12  DELETE THE KSDS CLUSTER. IF THE ICF CATALOG */            03780000
   /*         DOES NOT EXIST, DELETE THE CLUSTER'S VVR    */            03790000
   /*         ENTRIES (DATA & INDEX) FOR VOLUME CLEANUP.  */            03800000
   /*         EXPECT EITHER THE "DELETE CLUSTER" OR       */            03810000
   /*         "DELETE VVR" TO BE SUCCESSFUL.              */            03820000
   /*******************************************************/            03830000
       DELETE  (DFPX1IVP.KSDS) CLUSTER FILE(VOL) PURGE                  03840000
         IF LASTCC > 0 THEN -                                           03850000
           DO                                                           03860000
             DELETE    -                                                03870000
               DFPX1IVP.KSDS.DATA -                                     03880000
               FILE (VOL2)    -                                         03890000
               VVR -                                                    03900000
               CATALOG (DFX1CAT1)                                       03910000
             DELETE    -                                                03920000
               DFPX1IVP.KSDS.INDEX -                                    03930000
               FILE (VOL2)    -                                         03940000
               VVR -                                                    03950000
               CATALOG (DFX1CAT1)                                       03960000
             SET MAXCC = 0                                              03970000
           END                                                          03980000
   /*******************************************************/            03990000
   /* STEP12  DELETE THE ESDS CLUSTER. IF THE ICF CATALOG */            04000000
   /*         DOES NOT EXIST, DELETE THE CLUSTER'S VVR    */            04010000
   /*         ENTRY (DATA) FOR VOLUME CLEANUP.            */            04020000
   /*         EXPECT EITHER THE "DELETE CLUSTER" OR       */            04030000
   /*         "DELETE VVR" TO BE SUCCESSFUL.              */            04040000
   /*******************************************************/            04050000
       DELETE  (DFPX1IVP.ESDS) CLUSTER FILE(VOL) PURGE                  04060000
         IF LASTCC > 0 THEN -                                           04070000
           DO                                                           04080000
             DELETE    -                                                04090000
               DFPX1IVP.ESDS.DATA -                                     04100000
               FILE (VOL2)    -                                         04110000
               VVR -                                                    04120000
               CATALOG (DFX1CAT1)                                       04130000
             SET MAXCC = 0                                              04140000
           END                                                          04150000
                                                                        04160000
   /*******************************************************/            04170000
   /* STEP12  DELETE THE ALIAS.                           */            04180000
   /*******************************************************/            04190000
       DELETE  DFPX1IVP ALIAS                                           04200000
                                                                        04210000
   /*******************************************************/            04220000
   /* STEP12  DELETE THE FIRST ICF USERCATALOG. IF IT IS  */            04230000
   /*         DISCONNECTED FROM THE MASTERCATALOG, DELETE */            04240000
   /*         ITS VVR ENTRIES (DATA & INDEX) FOR VOLUME   */            04250000
   /*         CLEANUP.                                    */            04260000
   /*         EXPECT EITHER THE "DELETE UCAT" OR          */            04270000
   /*         "DELETE VVR" TO BE SUCCESSFUL.              */            04280000
   /*******************************************************/            04290000
     DELETE    (DFX1CAT1) UCAT FORCE                                    04300000
       IF LASTCC > 0 THEN -                                             04310000
         DO                                                             04320000
           DELETE      -                                                04330000
             DFX1CAT1 -                                                 04340000
             FILE (VOL1)      -                                         04350000
             VVR -                                                      04360000
           CATALOG (AMASTCAT)          /*MASTERCAT*/                    04370000
           DELETE      -                                                04380000
             DFX1CAT1.CATINDEX -                                        04390000
             FILE (VOL1)      -                                         04400000
             VVR -                                                      04410000
           CATALOG (AMASTCAT)          /*MASTERCAT*/                    04420000
           SET MAXCC = 0                                                04430000
         END                                                            04440000
   /*******************************************************/            04450000
   /* STEP12  DELETE THE SECOND ICF USERCATALOG. IF IT IS */            04460000
   /*         DISCONNECTED FROM THE MASTERCATALOG, DELETE */            04470000
   /*         ITS VVR ENTRIES (DATA & INDEX) FOR VOLUME   */            04480000
   /*         CLEANUP.                                    */            04490000
   /*         EXPECT EITHER THE "DELETE UCAT" OR          */            04500000
   /*         "DELETE VVR" TO BE SUCCESSFUL.              */            04510000
   /*******************************************************/            04520000
     DELETE    (DFX1CAT2) UCAT FORCE                                    04530000
       IF LASTCC > 0 THEN -                                             04540000
         DO                                                             04550000
           DELETE      -                                                04560000
             DFX1CAT1 -                                                 04570000
             FILE (VOL1)      -                                         04580000
             VVR -                                                      04590000
           CATALOG (AMASTCAT)                   /*MASTERCAT*/           04600000
           DELETE      -                                                04610000
             DFX1CAT1.CATINDEX -                                        04620000
             FILE (VOL1)      -                                         04630000
             VVR -                                                      04640000
           CATALOG (AMASTCAT)                   /*MASTERCAT*/           04650000
           SET MAXCC = 0                                                04660000
         END                                                            04670000
/*                                                                      04680000

./ ADD NAME=DISPLAYU
//STE6260D JOB (PL,Z3DJXXXX),DRI,NOTIFY=&SYSUID,MSGCLASS=S,CLASS=S,     00170001
//  COND=(0,NE)                                                         00180001
//*------------------------------------------------------------------*  00190001
//*  DISPLAY USERS                      DISPATCH ACTIF(SYSCTL)          00200001
//*------------------------------------------------------------------*  00210001
//LISUSER  EXEC PGM=RHDCSGEN,REGION=1024K                               00220002
//STEPLIB  DD  DSN=SYS0.DISPATCH.CADSLOAD,DISP=SHR                      00230001
//SYSCTL   DD  DSN=S28P.DISPATCH.SYSCTL,DISP=SHR                        00240001
//SYSLST   DD  SYSOUT=*                                                 00250001
//SYSUDUMP DD  SYSOUT=*                                                 00260001
//CAIDDB   DD  DSN=S28P.DISPATCH.DICTDB,DISP=SHR                        00270001
//CAILOAD  DD  DSN=S28P.DISPATCH.DLODDB,DISP=SHR                        00280001
//CAIMDB   DD  DSN=S28P.DISPATCH.DMSGDB,DISP=SHR                        00290002
//SYSJRNL  DD  DUMMY                                                    00310001
//SYSIPT   DD  *                                                        00320001
        ICTL=(1,72)                                                     00321001
      DIS SYSTEM 01 AS SYN.                                             00322001
      DIS ALL USER AS SYN.                                              00323001
//*                                                                     00330001
//*------------------------------------------------------------------*  00340001

./ ADD NAME=DSNCOPY
//DSNCOPY  JOB (ACCT),CNTLM,MSGCLASS=S,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=(STE58.OSEO.CNTLM,
// SYS1.SACBCNTL)
//STEP1  EXEC  PGM=ADRDSSU,REGION=8M
//*DSN COPY RENAME
//SYSPRINT  DD  SYSOUT=*
//SYSIN    DD    *
 COPY DATASET( -
        INCLUDE( -
                U1PS.CTM918.CKP-
                )) -
      CANCELERROR -
      TOL(ENQF) -
      ODY(W90J20) -
      CATALOG -
      REPLACE -
      RENAMEUNCONDITIONAL( -
           (U1PS.CTM918.CKP, -
            U1PS.CTM920.CKP)) -
      TGTALLOC(SOURCE) -
      FASTREP(PREF) -
      WAIT(2,2)
/*

./ ADD NAME=DSNNOT$
 DUMP DATASET( -
        INCLUDE( -
                **.**          -
                )  -
      BY(CATLG,EQ,NO))-
      PHYSINDD(INVOL) -
      OUTDDNAME(VOLSER) -
      TOL(ENQF)
//
/*
 DUMP DATASET( -
        INCLUDE( -
                **.** )        -
      BY((DSORG(CATLG,EQ,NO))) -
               ))) -
      INDYNAM(VOLSER) -
      TOL(ENQF)
/*
      BY((DSCHA,EQ,1)))

./ ADD NAME=DSNNOTC
//DSNNOTC  JOB (ACCT),CNTLM,MSGCLASS=S,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=(STE58.OSEO.CNTLM,
// SYS1.SACBCNTL)
//*ALLOC	Allocation type (cylinder, track, block, absolute track, or movable)
//*CATLG	Whether the data set is currently cataloged or not (using the standard
//*CREDT	Creation date (absolute or relative)
//*DSCHA	Whether the data-set-changed flag is on or off
//*DSORG	Data set organization (SAM, PAM, PDS, PDSE, BDAM, HFS, EXCP, VSAM or zF
//*EXPDT	Expiration date (absolute or relative). Data sets without expiration da
//*EXTNT	Number of allocated or used extents for the entire data set on all the
//*FSIZE	Number of allocated or used tracks for the entire data set on all the v
//*MULTI	Whether the data set is singlevolume or multivolume (Single volume data
//*REFDT	Last-referenced date (absolute or relative)
//*DATACLAS	Data class for SMS
//*MGMTCLAS	Management class for SMS
//*STORCLAS	Storage class for SMS
//DSNNOT   PROC
//STEP1  EXEC  PGM=ADRDSSU,REGION=8M
//*DSN COPY RENAME
//SYSPRINT  DD  SYSOUT=*
//INVOL    DD VOL=SER=&VOLSER,UNIT=3390,SPACE=(CYL,(50,10))
//VOLSER   DD DUMMY
//SYSIN    DD DSN=STE58.OSEO.MVS(DSNNOTS),DISP=SHR
// PEND
//STEP1  EXEC DSNNOT,VOLSER=BDPME0
//STEP1  EXEC DSNNOT,VOLSER=S0B230
//STEP1  EXEC DSNNOT,VOLSER=BDPMEA
//STEP1  EXEC DSNNOT,VOLSER=BDPMEB
//STEP1  EXEC DSNNOT,VOLSER=BDPMEC
//STEP1  EXEC DSNNOT,VOLSER=BDPME1
//STEP1  EXEC DSNNOT,VOLSER=BDPME2
//STEP1  EXEC DSNNOT,VOLSER=RU1V21
//STEP1  EXEC DSNNOT,VOLSER=RU1V22
//STEP1  EXEC DSNNOT,VOLSER=BDPMEI
//STEP1  EXEC DSNNOT,VOLSER=BDPMES
//STEP1  EXEC DSNNOT,VOLSER=SCILG1
//STEP1  EXEC DSNNOT,VOLSER=RU1V24
//STEP1  EXEC DSNNOT,VOLSER=RU1V25
//STEP1  EXEC DSNNOT,VOLSER=L0020E
//STEP1  EXEC DSNNOT,VOLSER=L0020F
//STEP1  EXEC DSNNOT,VOLSER=L00210
//STEP1  EXEC DSNNOT,VOLSER=RU1V08
//STEP1  EXEC DSNNOT,VOLSER=BDPMED
//STEP1  EXEC DSNNOT,VOLSER=BDPMEE
//STEP1  EXEC DSNNOT,VOLSER=BDPMEF
//STEP1  EXEC DSNNOT,VOLSER=RU1V09
//STEP1  EXEC DSNNOT,VOLSER=RU1V10
//STEP1  EXEC DSNNOT,VOLSER=L00217
//STEP1  EXEC DSNNOT,VOLSER=L00218
//STEP1  EXEC DSNNOT,VOLSER=RU1V05
//STEP1  EXEC DSNNOT,VOLSER=L0021A
//STEP1  EXEC DSNNOT,VOLSER=SCILG2
//STEP1  EXEC DSNNOT,VOLSER=ER3V16
//STEP1  EXEC DSNNOT,VOLSER=RU1V06
//STEP1  EXEC DSNNOT,VOLSER=RU1V07
//STEP1  EXEC DSNNOT,VOLSER=WRKTS3
//STEP1  EXEC DSNNOT,VOLSER=L00220
//STEP1  EXEC DSNNOT,VOLSER=ER3V17
//STEP1  EXEC DSNNOT,VOLSER=ERI110
//STEP1  EXEC DSNNOT,VOLSER=W90J40
//STEP1  EXEC DSNNOT,VOLSER=W90J50
//STEP1  EXEC DSNNOT,VOLSER=BDPMEH
//STEP1  EXEC DSNNOT,VOLSER=SYSRE0
//STEP1  EXEC DSNNOT,VOLSER=L00227
//STEP1  EXEC DSNNOT,VOLSER=SYSTSO
//STEP1  EXEC DSNNOT,VOLSER=L00229
//STEP1  EXEC DSNNOT,VOLSER=L0022A
//STEP1  EXEC DSNNOT,VOLSER=RU1V15
//STEP1  EXEC DSNNOT,VOLSER=PAG113
//STEP1  EXEC DSNNOT,VOLSER=PAGE92
//STEP1  EXEC DSNNOT,VOLSER=PAG102
//STEP1  EXEC DSNNOT,VOLSER=IDCVJ0
//STEP1  EXEC DSNNOT,VOLSER=ERI00D
//STEP1  EXEC DSNNOT,VOLSER=RECG11
//STEP1  EXEC DSNNOT,VOLSER=RECG12
//STEP1  EXEC DSNNOT,VOLSER=RECG13
//STEP1  EXEC DSNNOT,VOLSER=ERI00E
//STEP1  EXEC DSNNOT,VOLSER=L00235
//STEP1  EXEC DSNNOT,VOLSER=L00236
//STEP1  EXEC DSNNOT,VOLSER=ERI00F
//STEP1  EXEC DSNNOT,VOLSER=STP033
//STEP1  EXEC DSNNOT,VOLSER=338013
//STEP1  EXEC DSNNOT,VOLSER=ERI00C
//STEP1  EXEC DSNNOT,VOLSER=CATLGB
//STEP1  EXEC DSNNOT,VOLSER=RECV02
//STEP1  EXEC DSNNOT,VOLSER=RU1S25
//STEP1  EXEC DSNNOT,VOLSER=STP012
//STEP1  EXEC DSNNOT,VOLSER=STP021
//STEP1  EXEC DSNNOT,VOLSER=ERI00G
//STEP1  EXEC DSNNOT,VOLSER=RU1V18
//STEP1  EXEC DSNNOT,VOLSER=RU1V19
//STEP1  EXEC DSNNOT,VOLSER=RU1V20
//STEP1  EXEC DSNNOT,VOLSER=L00244
//STEP1  EXEC DSNNOT,VOLSER=RU1V16
//STEP1  EXEC DSNNOT,VOLSER=RECV03
//STEP1  EXEC DSNNOT,VOLSER=L00247
//STEP1  EXEC DSNNOT,VOLSER=RECV04
//STEP1  EXEC DSNNOT,VOLSER=WRKTS1
//STEP1  EXEC DSNNOT,VOLSER=SPRD01
//STEP1  EXEC DSNNOT,VOLSER=ERI00N
//STEP1  EXEC DSNNOT,VOLSER=ERI00O
//STEP1  EXEC DSNNOT,VOLSER=ERI103
//STEP1  EXEC DSNNOT,VOLSER=ERI104
//STEP1  EXEC DSNNOT,VOLSER=ERI00H
//STEP1  EXEC DSNNOT,VOLSER=ERI00I
//STEP1  EXEC DSNNOT,VOLSER=ERI00J
//STEP1  EXEC DSNNOT,VOLSER=ERI00K
//STEP1  EXEC DSNNOT,VOLSER=ERI00L
//STEP1  EXEC DSNNOT,VOLSER=ERI00M
//STEP1  EXEC DSNNOT,VOLSER=L00255
//STEP1  EXEC DSNNOT,VOLSER=L00256
//STEP1  EXEC DSNNOT,VOLSER=SYSME1
//STEP1  EXEC DSNNOT,VOLSER=SYSME2
//STEP1  EXEC DSNNOT,VOLSER=SPRD02
//STEP1  EXEC DSNNOT,VOLSER=SPRD03
//STEP1  EXEC DSNNOT,VOLSER=SPRD04
//STEP1  EXEC DSNNOT,VOLSER=RU1S27
//STEP1  EXEC DSNNOT,VOLSER=RU1S26
//STEP1  EXEC DSNNOT,VOLSER=ERI105
//STEP1  EXEC DSNNOT,VOLSER=ERI106
//STEP1  EXEC DSNNOT,VOLSER=ERI107
//STEP1  EXEC DSNNOT,VOLSER=ERI108
//STEP1  EXEC DSNNOT,VOLSER=RECV05
//STEP1  EXEC DSNNOT,VOLSER=ERI109
//STEP1  EXEC DSNNOT,VOLSER=RU1S29
//STEP1  EXEC DSNNOT,VOLSER=RU1V17
//STEP1  EXEC DSNNOT,VOLSER=SPRD05
//STEP1  EXEC DSNNOT,VOLSER=L00267
//STEP1  EXEC DSNNOT,VOLSER=RU1S30
//STEP1  EXEC DSNNOT,VOLSER=RU1S31
//STEP1  EXEC DSNNOT,VOLSER=RU1S28
//STEP1  EXEC DSNNOT,VOLSER=RU1S32
//STEP1  EXEC DSNNOT,VOLSER=RECS01
//STEP1  EXEC DSNNOT,VOLSER=RU1S33
//STEP1  EXEC DSNNOT,VOLSER=BDPMEK
//STEP1  EXEC DSNNOT,VOLSER=IDCVJ1
//STEP1  EXEC DSNNOT,VOLSER=RECS02
//STEP1  EXEC DSNNOT,VOLSER=RECS03
//STEP1  EXEC DSNNOT,VOLSER=RU1S34
//STEP1  EXEC DSNNOT,VOLSER=RECS04
//STEP1  EXEC DSNNOT,VOLSER=RECS05
//STEP1  EXEC DSNNOT,VOLSER=L00275
//STEP1  EXEC DSNNOT,VOLSER=L00276
//STEP1  EXEC DSNNOT,VOLSER=L00277
//STEP1  EXEC DSNNOT,VOLSER=PAGE82
//STEP1  EXEC DSNNOT,VOLSER=SPRD06
//STEP1  EXEC DSNNOT,VOLSER=SPRD07
//STEP1  EXEC DSNNOT,VOLSER=RECS06
//STEP1  EXEC DSNNOT,VOLSER=RECS07
//STEP1  EXEC DSNNOT,VOLSER=RECS08
//STEP1  EXEC DSNNOT,VOLSER=RECS09
//STEP1  EXEC DSNNOT,VOLSER=RECS10
//STEP1  EXEC DSNNOT,VOLSER=PAGE61
//STEP1  EXEC DSNNOT,VOLSER=PAGE72
//STEP1  EXEC DSNNOT,VOLSER=RU1V11
//STEP1  EXEC DSNNOT,VOLSER=PAGE42
//STEP1  EXEC DSNNOT,VOLSER=PAGE52
//STEP1  EXEC DSNNOT,VOLSER=RU1V12
//STEP1  EXEC DSNNOT,VOLSER=RU1V13
//STEP1  EXEC DSNNOT,VOLSER=RU1V14
//STEP1  EXEC DSNNOT,VOLSER=PAGE11
//STEP1  EXEC DSNNOT,VOLSER=PAGE21
//STEP1  EXEC DSNNOT,VOLSER=PAGE32
//STEP1  EXEC DSNNOT,VOLSER=PAG122
//STEP1  EXEC DSNNOT,VOLSER=PAG132
//STEP1  EXEC DSNNOT,VOLSER=PAG142
//STEP1  EXEC DSNNOT,VOLSER=PAG152
//STEP1  EXEC DSNNOT,VOLSER=RECS12
//STEP1  EXEC DSNNOT,VOLSER=RECS11
//STEP1  EXEC DSNNOT,VOLSER=RU1V01
//STEP1  EXEC DSNNOT,VOLSER=RU1V02
//STEP1  EXEC DSNNOT,VOLSER=RU1V03
//STEP1  EXEC DSNNOT,VOLSER=RU1V04
//STEP1  EXEC DSNNOT,VOLSER=L00700
//STEP1  EXEC DSNNOT,VOLSER=L00701
//STEP1  EXEC DSNNOT,VOLSER=L00702
//STEP1  EXEC DSNNOT,VOLSER=L00703
//STEP1  EXEC DSNNOT,VOLSER=L00704
//STEP1  EXEC DSNNOT,VOLSER=L00705
//STEP1  EXEC DSNNOT,VOLSER=SPRD20
//STEP1  EXEC DSNNOT,VOLSER=SPRD21
//STEP1  EXEC DSNNOT,VOLSER=SPRD22
//STEP1  EXEC DSNNOT,VOLSER=SPRD23
//STEP1  EXEC DSNNOT,VOLSER=SPRD24
//STEP1  EXEC DSNNOT,VOLSER=L0070B
//STEP1  EXEC DSNNOT,VOLSER=L0070C
//STEP1  EXEC DSNNOT,VOLSER=RECV12
//STEP1  EXEC DSNNOT,VOLSER=RECV13
//STEP1  EXEC DSNNOT,VOLSER=BDPMEG
//STEP1  EXEC DSNNOT,VOLSER=L00710
//STEP1  EXEC DSNNOT,VOLSER=GESE13
//STEP1  EXEC DSNNOT,VOLSER=SYSME3
//STEP1  EXEC DSNNOT,VOLSER=SYSME4
//STEP1  EXEC DSNNOT,VOLSER=IDCV12
//STEP1  EXEC DSNNOT,VOLSER=PHR005
//STEP1  EXEC DSNNOT,VOLSER=TSTVTS
//STEP1  EXEC DSNNOT,VOLSER=TSTVT1
//STEP1  EXEC DSNNOT,VOLSER=L00718
//STEP1  EXEC DSNNOT,VOLSER=L00719
//STEP1  EXEC DSNNOT,VOLSER=L0071A
//STEP1  EXEC DSNNOT,VOLSER=L0071B
//STEP1  EXEC DSNNOT,VOLSER=RU1S35
//STEP1  EXEC DSNNOT,VOLSER=L0071D
//STEP1  EXEC DSNNOT,VOLSER=L0071E
//STEP1  EXEC DSNNOT,VOLSER=L0071F
//STEP1  EXEC DSNNOT,VOLSER=L00720
//STEP1  EXEC DSNNOT,VOLSER=L00721
//STEP1  EXEC DSNNOT,VOLSER=L00722
//STEP1  EXEC DSNNOT,VOLSER=RECPS1
//STEP1  EXEC DSNNOT,VOLSER=S0B1B1
//STEP1  EXEC DSNNOT,VOLSER=IDCV13
//STEP1  EXEC DSNNOT,VOLSER=BDPMEJ
//STEP1  EXEC DSNNOT,VOLSER=L00727
//STEP1  EXEC DSNNOT,VOLSER=SCILG3
//STEP1  EXEC DSNNOT,VOLSER=L00729
//STEP1  EXEC DSNNOT,VOLSER=L0072A
//STEP1  EXEC DSNNOT,VOLSER=L0072B
//STEP1  EXEC DSNNOT,VOLSER=RECV06
//STEP1  EXEC DSNNOT,VOLSER=RECV07
//STEP1  EXEC DSNNOT,VOLSER=RECV08
//STEP1  EXEC DSNNOT,VOLSER=IDCV10
//STEP1  EXEC DSNNOT,VOLSER=WRKTS2
//STEP1  EXEC DSNNOT,VOLSER=L00731
//STEP1  EXEC DSNNOT,VOLSER=L00732
//STEP1  EXEC DSNNOT,VOLSER=L00733
//STEP1  EXEC DSNNOT,VOLSER=L00734
//STEP1  EXEC DSNNOT,VOLSER=RECV09
//STEP1  EXEC DSNNOT,VOLSER=RECV10
//STEP1  EXEC DSNNOT,VOLSER=L00737
//STEP1  EXEC DSNNOT,VOLSER=L00738
//STEP1  EXEC DSNNOT,VOLSER=RECPS2
//STEP1  EXEC DSNNOT,VOLSER=L0073A
//STEP1  EXEC DSNNOT,VOLSER=RECV11
//STEP1  EXEC DSNNOT,VOLSER=L0073C
//STEP1  EXEC DSNNOT,VOLSER=L0073D
//STEP1  EXEC DSNNOT,VOLSER=L0073E
//STEP1  EXEC DSNNOT,VOLSER=L0073F
//STEP1  EXEC DSNNOT,VOLSER=W90J30
//STEP1  EXEC DSNNOT,VOLSER=SYSW90
//STEP1  EXEC DSNNOT,VOLSER=SYS2JC
//STEP1  EXEC DSNNOT,VOLSER=L00743
//STEP1  EXEC DSNNOT,VOLSER=L00744
//STEP1  EXEC DSNNOT,VOLSER=L00745
//STEP1  EXEC DSNNOT,VOLSER=L00746
//STEP1  EXEC DSNNOT,VOLSER=L00747
//STEP1  EXEC DSNNOT,VOLSER=L00748
//STEP1  EXEC DSNNOT,VOLSER=L00749
//STEP1  EXEC DSNNOT,VOLSER=STPCV2
//STEP1  EXEC DSNNOT,VOLSER=STPCV3
//STEP1  EXEC DSNNOT,VOLSER=SYS2JB
//STEP1  EXEC DSNNOT,VOLSER=L0074D
//STEP1  EXEC DSNNOT,VOLSER=L0074E
//STEP1  EXEC DSNNOT,VOLSER=L0074F
//STEP1  EXEC DSNNOT,VOLSER=L00750
//STEP1  EXEC DSNNOT,VOLSER=L00751
//STEP1  EXEC DSNNOT,VOLSER=L00752
//STEP1  EXEC DSNNOT,VOLSER=L00753
//STEP1  EXEC DSNNOT,VOLSER=L00754
//STEP1  EXEC DSNNOT,VOLSER=GESE14
//STEP1  EXEC DSNNOT,VOLSER=SYS2JD
//STEP1  EXEC DSNNOT,VOLSER=SYS2JE
//STEP1  EXEC DSNNOT,VOLSER=BDPME3
//STEP1  EXEC DSNNOT,VOLSER=GESP00
//STEP1  EXEC DSNNOT,VOLSER=L0075A
//STEP1  EXEC DSNNOT,VOLSER=SYS2JF
//STEP1  EXEC DSNNOT,VOLSER=L0075C
//STEP1  EXEC DSNNOT,VOLSER=GESE15
//STEP1  EXEC DSNNOT,VOLSER=IDCV11
//STEP1  EXEC DSNNOT,VOLSER=BDPME9
//STEP1  EXEC DSNNOT,VOLSER=SYSW91
//STEP1  EXEC DSNNOT,VOLSER=RECV18
//STEP1  EXEC DSNNOT,VOLSER=W90J10
//STEP1  EXEC DSNNOT,VOLSER=W90J20
//STEP1  EXEC DSNNOT,VOLSER=SYSME7
//STEP1  EXEC DSNNOT,VOLSER=RECV19
//STEP1  EXEC DSNNOT,VOLSER=RECV20
//STEP1  EXEC DSNNOT,VOLSER=RECV21
//STEP1  EXEC DSNNOT,VOLSER=RECV14
//STEP1  EXEC DSNNOT,VOLSER=RECV15
//STEP1  EXEC DSNNOT,VOLSER=RU1G11
//STEP1  EXEC DSNNOT,VOLSER=RECV22
//STEP1  EXEC DSNNOT,VOLSER=RECV23
//STEP1  EXEC DSNNOT,VOLSER=BDPME4
//STEP1  EXEC DSNNOT,VOLSER=ER3V11
//STEP1  EXEC DSNNOT,VOLSER=RECV16
//STEP1  EXEC DSNNOT,VOLSER=PHR001
//STEP1  EXEC DSNNOT,VOLSER=PHR002
//STEP1  EXEC DSNNOT,VOLSER=PHR003
//STEP1  EXEC DSNNOT,VOLSER=PHR004
//STEP1  EXEC DSNNOT,VOLSER=L00815
//STEP1  EXEC DSNNOT,VOLSER=ERI00A
//STEP1  EXEC DSNNOT,VOLSER=RU1G12
//STEP1  EXEC DSNNOT,VOLSER=ERI00B
//STEP1  EXEC DSNNOT,VOLSER=RECV17
//STEP1  EXEC DSNNOT,VOLSER=RECV01
//STEP1  EXEC DSNNOT,VOLSER=ER3V14
//STEP1  EXEC DSNNOT,VOLSER=ER3V13
//STEP1  EXEC DSNNOT,VOLSER=ER3V15
//STEP1  EXEC DSNNOT,VOLSER=RU1G13
//STEP1  EXEC DSNNOT,VOLSER=SYSME6
//STEP1  EXEC DSNNOT,VOLSER=SYSME5
//STEP1  EXEC DSNNOT,VOLSER=DRHA31
//STEP1  EXEC DSNNOT,VOLSER=BDPPRA
//STEP1  EXEC DSNNOT,VOLSER=ER3V12
//STEP1  EXEC DSNNOT,VOLSER=BDPME5
//STEP1  EXEC DSNNOT,VOLSER=STPCV1
//STEP1  EXEC DSNNOT,VOLSER=GESP12
//STEP1  EXEC DSNNOT,VOLSER=BDPME6
//STEP1  EXEC DSNNOT,VOLSER=BDPME7
//STEP1  EXEC DSNNOT,VOLSER=BDPME8
//STEP1  EXEC DSNNOT,VOLSER=L0082A
//STEP1  EXEC DSNNOT,VOLSER=L0082B
//STEP1  EXEC DSNNOT,VOLSER=L0082C
//STEP1  EXEC DSNNOT,VOLSER=RU1S22
//STEP1  EXEC DSNNOT,VOLSER=RU1S23
//STEP1  EXEC DSNNOT,VOLSER=RU1S24
//STEP1  EXEC DSNNOT,VOLSER=L00830
//STEP1  EXEC DSNNOT,VOLSER=L00831
//STEP1  EXEC DSNNOT,VOLSER=L00832
//STEP1  EXEC DSNNOT,VOLSER=L00833
//STEP1  EXEC DSNNOT,VOLSER=L00834
//STEP1  EXEC DSNNOT,VOLSER=GESP11
//STEP1  EXEC DSNNOT,VOLSER=L00836
//STEP1  EXEC DSNNOT,VOLSER=L00837
//STEP1  EXEC DSNNOT,VOLSER=L0094B
//STEP1  EXEC DSNNOT,VOLSER=L0094C
//STEP1  EXEC DSNNOT,VOLSER=L0094D
//STEP1  EXEC DSNNOT,VOLSER=L0094E
//STEP1  EXEC DSNNOT,VOLSER=WRKTS4
//STEP1  EXEC DSNNOT,VOLSER=WRKTS5
//STEP1  EXEC DSNNOT,VOLSER=WRKTS6
//STEP1  EXEC DSNNOT,VOLSER=IDB068
//STEP1  EXEC DSNNOT,VOLSER=RU1V29
//STEP1  EXEC DSNNOT,VOLSER=L00954
//STEP1  EXEC DSNNOT,VOLSER=L00955
//STEP1  EXEC DSNNOT,VOLSER=RECD68
//STEP1  EXEC DSNNOT,VOLSER=RU1V27
//STEP1  EXEC DSNNOT,VOLSER=EXM017
//STEP1  EXEC DSNNOT,VOLSER=IDMX87
//STEP1  EXEC DSNNOT,VOLSER=BDPMEQ
//STEP1  EXEC DSNNOT,VOLSER=L0095B
//STEP1  EXEC DSNNOT,VOLSER=L0095C
//STEP1  EXEC DSNNOT,VOLSER=RU1D4F
//STEP1  EXEC DSNNOT,VOLSER=RU1D50
//STEP1  EXEC DSNNOT,VOLSER=RU1D51
//STEP1  EXEC DSNNOT,VOLSER=RU1D52
//STEP1  EXEC DSNNOT,VOLSER=RU1D53
//STEP1  EXEC DSNNOT,VOLSER=RU1D54
//STEP1  EXEC DSNNOT,VOLSER=RU1D55
//STEP1  EXEC DSNNOT,VOLSER=RU1D56
//STEP1  EXEC DSNNOT,VOLSER=IDMZ16
//STEP1  EXEC DSNNOT,VOLSER=IDMZ17
//STEP1  EXEC DSNNOT,VOLSER=IDMZ18
//STEP1  EXEC DSNNOT,VOLSER=IDMZ19
//STEP1  EXEC DSNNOT,VOLSER=IDMZ20
//STEP1  EXEC DSNNOT,VOLSER=SEQ000
//STEP1  EXEC DSNNOT,VOLSER=RU1D4C
//STEP1  EXEC DSNNOT,VOLSER=RU1D4D
//STEP1  EXEC DSNNOT,VOLSER=RU1D4E
//STEP1  EXEC DSNNOT,VOLSER=ER3D50
//STEP1  EXEC DSNNOT,VOLSER=ER3D51
//STEP1  EXEC DSNNOT,VOLSER=ER3D52
//STEP1  EXEC DSNNOT,VOLSER=ER3D53
//STEP1  EXEC DSNNOT,VOLSER=ER3D54
//STEP1  EXEC DSNNOT,VOLSER=ER3D55
//STEP1  EXEC DSNNOT,VOLSER=ER3D56
//STEP1  EXEC DSNNOT,VOLSER=ER3D57
//STEP1  EXEC DSNNOT,VOLSER=ER3D58
//STEP1  EXEC DSNNOT,VOLSER=ER3D59
//STEP1  EXEC DSNNOT,VOLSER=ER3D5A
//STEP1  EXEC DSNNOT,VOLSER=ER3D5B
//STEP1  EXEC DSNNOT,VOLSER=S2B1D1
//STEP1  EXEC DSNNOT,VOLSER=S1B1D1
//STEP1  EXEC DSNNOT,VOLSER=BDPMEM
//STEP1  EXEC DSNNOT,VOLSER=SPRD14
//STEP1  EXEC DSNNOT,VOLSER=IFC007
//STEP1  EXEC DSNNOT,VOLSER=IFC008
//STEP1  EXEC DSNNOT,VOLSER=IFX001
//STEP1  EXEC DSNNOT,VOLSER=IFX002
//STEP1  EXEC DSNNOT,VOLSER=IFX003
//STEP1  EXEC DSNNOT,VOLSER=IFX004
//STEP1  EXEC DSNNOT,VOLSER=IFX005
//STEP1  EXEC DSNNOT,VOLSER=IFX006
//STEP1  EXEC DSNNOT,VOLSER=IFX007
//STEP1  EXEC DSNNOT,VOLSER=BDPMEL
//STEP1  EXEC DSNNOT,VOLSER=WRKTE5
//STEP1  EXEC DSNNOT,VOLSER=SPRD15
//STEP1  EXEC DSNNOT,VOLSER=RECI12
//STEP1  EXEC DSNNOT,VOLSER=IDB067
//STEP1  EXEC DSNNOT,VOLSER=WRKTE1
//STEP1  EXEC DSNNOT,VOLSER=WRKTE2
//STEP1  EXEC DSNNOT,VOLSER=ER3D5C
//STEP1  EXEC DSNNOT,VOLSER=ER3D5D
//STEP1  EXEC DSNNOT,VOLSER=SPRD10
//STEP1  EXEC DSNNOT,VOLSER=SPRD11
//STEP1  EXEC DSNNOT,VOLSER=SPRD12
//STEP1  EXEC DSNNOT,VOLSER=ER3D5E
//STEP1  EXEC DSNNOT,VOLSER=BDPMEP
//STEP1  EXEC DSNNOT,VOLSER=S2B1D2
//STEP1  EXEC DSNNOT,VOLSER=SYS2J1
//STEP1  EXEC DSNNOT,VOLSER=SYS2J2
//STEP1  EXEC DSNNOT,VOLSER=W90W5G
//STEP1  EXEC DSNNOT,VOLSER=SEQ001
//STEP1  EXEC DSNNOT,VOLSER=ERID0F
//STEP1  EXEC DSNNOT,VOLSER=ERID10
//STEP1  EXEC DSNNOT,VOLSER=ERID11
//STEP1  EXEC DSNNOT,VOLSER=SEQ002
//STEP1  EXEC DSNNOT,VOLSER=WRKTE3
//STEP1  EXEC DSNNOT,VOLSER=WRKTE4
//STEP1  EXEC DSNNOT,VOLSER=SPRD13
//STEP1  EXEC DSNNOT,VOLSER=BU0020
//STEP1  EXEC DSNNOT,VOLSER=S1B1D2
//STEP1  EXEC DSNNOT,VOLSER=RECD50
//STEP1  EXEC DSNNOT,VOLSER=RECD51
//STEP1  EXEC DSNNOT,VOLSER=RECD52
//STEP1  EXEC DSNNOT,VOLSER=RECD53
//STEP1  EXEC DSNNOT,VOLSER=RECD54
//STEP1  EXEC DSNNOT,VOLSER=RECD55
//STEP1  EXEC DSNNOT,VOLSER=RECD56
//STEP1  EXEC DSNNOT,VOLSER=RECD57
//STEP1  EXEC DSNNOT,VOLSER=RECD58
//STEP1  EXEC DSNNOT,VOLSER=RECD59
//STEP1  EXEC DSNNOT,VOLSER=RECD60
//STEP1  EXEC DSNNOT,VOLSER=RECD61
//STEP1  EXEC DSNNOT,VOLSER=RECD62
//STEP1  EXEC DSNNOT,VOLSER=RECD63
//STEP1  EXEC DSNNOT,VOLSER=RECD64
//STEP1  EXEC DSNNOT,VOLSER=RU1D44
//STEP1  EXEC DSNNOT,VOLSER=RU1D45
//STEP1  EXEC DSNNOT,VOLSER=RU1D46
//STEP1  EXEC DSNNOT,VOLSER=RU1D47
//STEP1  EXEC DSNNOT,VOLSER=RU1D48
//STEP1  EXEC DSNNOT,VOLSER=RU1D49
//STEP1  EXEC DSNNOT,VOLSER=RU1D4A
//STEP1  EXEC DSNNOT,VOLSER=RU1D4B
//STEP1  EXEC DSNNOT,VOLSER=RU1D40
//STEP1  EXEC DSNNOT,VOLSER=RU1D41
//STEP1  EXEC DSNNOT,VOLSER=RU1D42
//STEP1  EXEC DSNNOT,VOLSER=RU1D43
//STEP1  EXEC DSNNOT,VOLSER=SEQ003
//STEP1  EXEC DSNNOT,VOLSER=SEQ004
//STEP1  EXEC DSNNOT,VOLSER=ERID00
//STEP1  EXEC DSNNOT,VOLSER=ERID01
//STEP1  EXEC DSNNOT,VOLSER=ERID02
//STEP1  EXEC DSNNOT,VOLSER=ERID03
//STEP1  EXEC DSNNOT,VOLSER=ERID04
//STEP1  EXEC DSNNOT,VOLSER=ERID05
//STEP1  EXEC DSNNOT,VOLSER=ERID06
//STEP1  EXEC DSNNOT,VOLSER=ERID07
//STEP1  EXEC DSNNOT,VOLSER=ERID08
//STEP1  EXEC DSNNOT,VOLSER=ERID09
//STEP1  EXEC DSNNOT,VOLSER=ERID0A
//STEP1  EXEC DSNNOT,VOLSER=ERID0B
//STEP1  EXEC DSNNOT,VOLSER=ERID0C
//STEP1  EXEC DSNNOT,VOLSER=ERID0D
//STEP1  EXEC DSNNOT,VOLSER=ERID0E
//STEP1  EXEC DSNNOT,VOLSER=RU1I11
//STEP1  EXEC DSNNOT,VOLSER=RECI10
//STEP1  EXEC DSNNOT,VOLSER=RECI11
//STEP1  EXEC DSNNOT,VOLSER=SEQ005
//STEP1  EXEC DSNNOT,VOLSER=SEQ006
//STEP1  EXEC DSNNOT,VOLSER=SEQ007
//STEP1  EXEC DSNNOT,VOLSER=SEQ008
//STEP1  EXEC DSNNOT,VOLSER=EXM011
//STEP1  EXEC DSNNOT,VOLSER=EXM012
//STEP1  EXEC DSNNOT,VOLSER=EXM013
//STEP1  EXEC DSNNOT,VOLSER=EXM014
//STEP1  EXEC DSNNOT,VOLSER=W90W59
//STEP1  EXEC DSNNOT,VOLSER=W90W5A
//STEP1  EXEC DSNNOT,VOLSER=W90W5B
//STEP1  EXEC DSNNOT,VOLSER=W90W5C
//STEP1  EXEC DSNNOT,VOLSER=W90W5D
//STEP1  EXEC DSNNOT,VOLSER=W90W5E
//STEP1  EXEC DSNNOT,VOLSER=SIODFB
//STEP1  EXEC DSNNOT,VOLSER=MWSH00
//STEP1  EXEC DSNNOT,VOLSER=MWSH01
//STEP1  EXEC DSNNOT,VOLSER=MWSH02
//STEP1  EXEC DSNNOT,VOLSER=MWSH03
//STEP1  EXEC DSNNOT,VOLSER=MWSH04
//STEP1  EXEC DSNNOT,VOLSER=MWSH05
//STEP1  EXEC DSNNOT,VOLSER=MWSH06
//STEP1  EXEC DSNNOT,VOLSER=MWSH07
//STEP1  EXEC DSNNOT,VOLSER=MWSH08
//STEP1  EXEC DSNNOT,VOLSER=MWSH09
//STEP1  EXEC DSNNOT,VOLSER=MWSH10
//STEP1  EXEC DSNNOT,VOLSER=MWSH11
//STEP1  EXEC DSNNOT,VOLSER=MWSH12
//STEP1  EXEC DSNNOT,VOLSER=MWSH13
//STEP1  EXEC DSNNOT,VOLSER=MWSH14
//STEP1  EXEC DSNNOT,VOLSER=MWSH15
//STEP1  EXEC DSNNOT,VOLSER=MWSH16
//STEP1  EXEC DSNNOT,VOLSER=MWSH17
//STEP1  EXEC DSNNOT,VOLSER=MWSH18
//STEP1  EXEC DSNNOT,VOLSER=MWSH19
//STEP1  EXEC DSNNOT,VOLSER=MWSH20
//STEP1  EXEC DSNNOT,VOLSER=MWSH21
//STEP1  EXEC DSNNOT,VOLSER=MWSH22
//STEP1  EXEC DSNNOT,VOLSER=MWSH23
//STEP1  EXEC DSNNOT,VOLSER=MWSH24
//STEP1  EXEC DSNNOT,VOLSER=MWSH25
//STEP1  EXEC DSNNOT,VOLSER=MWSH26
//STEP1  EXEC DSNNOT,VOLSER=MWSH27
//STEP1  EXEC DSNNOT,VOLSER=MWSH28
//STEP1  EXEC DSNNOT,VOLSER=MWSH29
//STEP1  EXEC DSNNOT,VOLSER=MWSH30
//STEP1  EXEC DSNNOT,VOLSER=SIODF1
//STEP1  EXEC DSNNOT,VOLSER=ATSHR0
//STEP1  EXEC DSNNOT,VOLSER=ATSHR1
//STEP1  EXEC DSNNOT,VOLSER=ATSHR2
//STEP1  EXEC DSNNOT,VOLSER=ATDPL0
//STEP1  EXEC DSNNOT,VOLSER=ATDPL1
//STEP1  EXEC DSNNOT,VOLSER=ATDPL2
//STEP1  EXEC DSNNOT,VOLSER=ATDPL3
//STEP1  EXEC DSNNOT,VOLSER=ATDPL4
//STEP1  EXEC DSNNOT,VOLSER=ATDPL5
//STEP1  EXEC DSNNOT,VOLSER=ATDPL6
//STEP1  EXEC DSNNOT,VOLSER=ATDPL7
//STEP1  EXEC DSNNOT,VOLSER=ATDPL8
//STEP1  EXEC DSNNOT,VOLSER=ATDPL9
//STEP1  EXEC DSNNOT,VOLSER=ATDPLA
//STEP1  EXEC DSNNOT,VOLSER=ATDPLB
//STEP1  EXEC DSNNOT,VOLSER=ATDPLC
//STEP1  EXEC DSNNOT,VOLSER=ATSHR3
//STEP1  EXEC DSNNOT,VOLSER=ATSHR4
//STEP1  EXEC DSNNOT,VOLSER=ATSHR5
//STEP1  EXEC DSNNOT,VOLSER=IDMX70
//STEP1  EXEC DSNNOT,VOLSER=IDMX71
//STEP1  EXEC DSNNOT,VOLSER=IDMX72
//STEP1  EXEC DSNNOT,VOLSER=IDMX73
//STEP1  EXEC DSNNOT,VOLSER=IDMX74
//STEP1  EXEC DSNNOT,VOLSER=IDMX75
//STEP1  EXEC DSNNOT,VOLSER=IDMX76
//STEP1  EXEC DSNNOT,VOLSER=IDMX77
//STEP1  EXEC DSNNOT,VOLSER=IDMX78
//STEP1  EXEC DSNNOT,VOLSER=IDMX79
//STEP1  EXEC DSNNOT,VOLSER=IDMX7A
//STEP1  EXEC DSNNOT,VOLSER=IDMX7B
//STEP1  EXEC DSNNOT,VOLSER=IDMX7C
//STEP1  EXEC DSNNOT,VOLSER=IDMX7D
//STEP1  EXEC DSNNOT,VOLSER=IDMX7E
//STEP1  EXEC DSNNOT,VOLSER=IDMX7F
//STEP1  EXEC DSNNOT,VOLSER=IDMX80
//STEP1  EXEC DSNNOT,VOLSER=IDMX81
//STEP1  EXEC DSNNOT,VOLSER=IDMX82
//STEP1  EXEC DSNNOT,VOLSER=IDMX83
//STEP1  EXEC DSNNOT,VOLSER=IDMX84
//STEP1  EXEC DSNNOT,VOLSER=IDMX85
//STEP1  EXEC DSNNOT,VOLSER=BU0011
//STEP1  EXEC DSNNOT,VOLSER=BU0012
//STEP1  EXEC DSNNOT,VOLSER=BU0013
//STEP1  EXEC DSNNOT,VOLSER=BU0014
//STEP1  EXEC DSNNOT,VOLSER=BU0015
//STEP1  EXEC DSNNOT,VOLSER=BU0016
//STEP1  EXEC DSNNOT,VOLSER=BU0017
//STEP1  EXEC DSNNOT,VOLSER=ERIA00
//STEP1  EXEC DSNNOT,VOLSER=ERIA01
//STEP1  EXEC DSNNOT,VOLSER=SEQ010
//STEP1  EXEC DSNNOT,VOLSER=WRKTE6
//STEP1  EXEC DSNNOT,VOLSER=WRKTE7
//STEP1  EXEC DSNNOT,VOLSER=WRKTE8
//STEP1  EXEC DSNNOT,VOLSER=WRKTE9
//STEP1  EXEC DSNNOT,VOLSER=VSM027
//STEP1  EXEC DSNNOT,VOLSER=RU1I10
//STEP1  EXEC DSNNOT,VOLSER=IDB049
//STEP1  EXEC DSNNOT,VOLSER=IDB050
//STEP1  EXEC DSNNOT,VOLSER=IDB051
//STEP1  EXEC DSNNOT,VOLSER=IDB052
//STEP1  EXEC DSNNOT,VOLSER=IDB053
//STEP1  EXEC DSNNOT,VOLSER=IDB054
//STEP1  EXEC DSNNOT,VOLSER=IDB055
//STEP1  EXEC DSNNOT,VOLSER=IDB056
//STEP1  EXEC DSNNOT,VOLSER=IDB057
//STEP1  EXEC DSNNOT,VOLSER=IDB058
//STEP1  EXEC DSNNOT,VOLSER=IDB059
//STEP1  EXEC DSNNOT,VOLSER=IDB060
//STEP1  EXEC DSNNOT,VOLSER=IDB061
//STEP1  EXEC DSNNOT,VOLSER=IDB062
//STEP1  EXEC DSNNOT,VOLSER=IDB063
//STEP1  EXEC DSNNOT,VOLSER=IDB064
//STEP1  EXEC DSNNOT,VOLSER=VIA010
//STEP1  EXEC DSNNOT,VOLSER=VIA011
//STEP1  EXEC DSNNOT,VOLSER=VIA012
//STEP1  EXEC DSNNOT,VOLSER=VSM020
//STEP1  EXEC DSNNOT,VOLSER=VSM021
//STEP1  EXEC DSNNOT,VOLSER=VSM022
//STEP1  EXEC DSNNOT,VOLSER=VSM023
//STEP1  EXEC DSNNOT,VOLSER=VSM024
//STEP1  EXEC DSNNOT,VOLSER=VSM025
//STEP1  EXEC DSNNOT,VOLSER=VSM026
//STEP1  EXEC DSNNOT,VOLSER=W90W50
//STEP1  EXEC DSNNOT,VOLSER=W90W51
//STEP1  EXEC DSNNOT,VOLSER=W90W52
//STEP1  EXEC DSNNOT,VOLSER=W90W53
//STEP1  EXEC DSNNOT,VOLSER=W90W54
//STEP1  EXEC DSNNOT,VOLSER=W90W55
//STEP1  EXEC DSNNOT,VOLSER=W90W56
//STEP1  EXEC DSNNOT,VOLSER=W90W57
//STEP1  EXEC DSNNOT,VOLSER=W90W58
//STEP1  EXEC DSNNOT,VOLSER=IFX008
//STEP1  EXEC DSNNOT,VOLSER=DUMP00
//STEP1  EXEC DSNNOT,VOLSER=RECD65
//STEP1  EXEC DSNNOT,VOLSER=IDB065
//STEP1  EXEC DSNNOT,VOLSER=IDMX86
//STEP1  EXEC DSNNOT,VOLSER=RECD66
//STEP1  EXEC DSNNOT,VOLSER=RECD67
//STEP1  EXEC DSNNOT,VOLSER=EXM015
//STEP1  EXEC DSNNOT,VOLSER=SEQ009
//STEP1  EXEC DSNNOT,VOLSER=IDMZ13
//STEP1  EXEC DSNNOT,VOLSER=IDMZ14
//STEP1  EXEC DSNNOT,VOLSER=IDMZ15
//STEP1  EXEC DSNNOT,VOLSER=WRKDE1
//STEP1  EXEC DSNNOT,VOLSER=WRKDE2
//STEP1  EXEC DSNNOT,VOLSER=WRKDE3
//STEP1  EXEC DSNNOT,VOLSER=WRKDE4
//STEP1  EXEC DSNNOT,VOLSER=EXPMUE
//STEP1  EXEC DSNNOT,VOLSER=W90W5F
//STEP1  EXEC DSNNOT,VOLSER=EXM016
//STEP1  EXEC DSNNOT,VOLSER=IDB066
//STEP1  EXEC DSNNOT,VOLSER=ERIVS0
//STEP1  EXEC DSNNOT,VOLSER=ERIVS1
//STEP1  EXEC DSNNOT,VOLSER=ERIVS2
//STEP1  EXEC DSNNOT,VOLSER=ERIVS3
//STEP1  EXEC DSNNOT,VOLSER=ERIVS4
//STEP1  EXEC DSNNOT,VOLSER=VSM028
//STEP1  EXEC DSNNOT,VOLSER=BU0018
//STEP1  EXEC DSNNOT,VOLSER=BU0019
//STEP1  EXEC DSNNOT,VOLSER=BU0001
//STEP1  EXEC DSNNOT,VOLSER=BU0002
//STEP1  EXEC DSNNOT,VOLSER=BU0003
//STEP1  EXEC DSNNOT,VOLSER=BU0004
//STEP1  EXEC DSNNOT,VOLSER=BU0005
//STEP1  EXEC DSNNOT,VOLSER=BU0006
//STEP1  EXEC DSNNOT,VOLSER=BU0007
//STEP1  EXEC DSNNOT,VOLSER=BU0008
//STEP1  EXEC DSNNOT,VOLSER=BU0009
//STEP1  EXEC DSNNOT,VOLSER=BU0010
//STEP1  EXEC DSNNOT,VOLSER=ERIA02
//STEP1  EXEC DSNNOT,VOLSER=PAGE01
//STEP1  EXEC DSNNOT,VOLSER=PAGE02
//STEP1  EXEC DSNNOT,VOLSER=PAGE03
//STEP1  EXEC DSNNOT,VOLSER=L0C173
//STEP1  EXEC DSNNOT,VOLSER=RU1I12
//STEP1  EXEC DSNNOT,VOLSER=L0C175
//STEP1  EXEC DSNNOT,VOLSER=L0C176
//STEP1  EXEC DSNNOT,VOLSER=SPRD16
//STEP1  EXEC DSNNOT,VOLSER=SHB2D3
//STEP1  EXEC DSNNOT,VOLSER=L0C179
//STEP1  EXEC DSNNOT,VOLSER=BDPMER
//
 DUMP DATASET( -
        INCLUDE( -
                **.**          -
                )) -
      BYDSORG(CATL EQ NO) -
      INDYNAM(VOLSER) -
      TOL(ENQF)
/*

./ ADD NAME=DSNNOTS
 DUMP DATASET( -
        INCLUDE( -
                **.**          -
                )  -
        EXCLUDE( -
                SYS1.VTOCIX.** -
                )  -
      BY((CATLG,EQ,NO)  -
         (CREDT,LT,2021365)) -
      )-
      PHYSINDD(INVOL) -
      OUTDDNAME(VOLSER) -
      TOL(ENQF)

./ ADD NAME=DSNREN
//DSNREN   JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=(STE58.OSEO.CNTLM,
// SYS1.SACBCNTL)
//STEP1  EXEC  PGM=ADRDSSU,REGION=8M
//*DSN COPY RENAME
//SYSPRINT  DD  SYSOUT=*
//SYSIN    DD    *
 COPY DATASET( -
        INCLUDE( -
           U1PS.CTM918.STATFILE-
                )) -
      CANCELERROR -
      TOL(ENQF) -
      ODY(W90J20) -
      CATALOG -
      REPLACE -
      RENAMEUNCONDITIONAL( -
           (U1PS.CTM918.STATFILE, -
           U1PS.CTM920.STATFILE)) -
      TGTALLOC(SOURCE) -
      FASTREP(PREF) -
      WAIT(2,2)
/*

./ ADD NAME=DSNREST
//DSNREST  JOB (ACCT),CNTLM,MSGCLASS=S,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=(STE58.OSEO.CNTLM,
// SYS1.SACBCNTL)
//STEP1  EXEC  PGM=ADRDSSU,REGION=8M,PARM='TYPRUN=NORUN'
//*DSN RESTORE  RENAME
//INDD1    DD DSN=DEPLOYMT.CAI.CASPOOL.SAMPJCL,DISP=SHR
//SYSPRINT  DD  SYSOUT=*
//SYSIN    DD    *
 RESTORE DATASET( -
        INCLUDE( -
                **.** -
                )) -
      CANCELERROR -
      INDDNAME(INDD1) -
      TOL(ENQF) -
      ODY(W90J20) -
      CATALOG -
      REPLACE -
      RENAMEUNCONDITIONAL( -
           (**.**, -
            STE58.**)) -
      TGTALLOC(SOURCE) -
      WAIT(2,2)
/*
      FASTREP(PREF) -

./ ADD NAME=EDGPVFY
//EDGPVFY  PROC
//***************************************************************
//* OS/390 DFSMSrmm V2R10                                       *
//*                                                             *
//* PROPRIETARY V3 STATEMENT                                    *
//* LICENSED MATERIALS - PROPERTY OF IBM                        *
//* "RESTRICTED MATERIALS OF IBM"                               *
//* 5647-A01                                                    *
//* (C) COPYRIGHT 1993,2000  IBM CORP.                          *
//* STATUS = HDZ11F0                                            *
//* END PROPRIETARY V3 STATEMENT                                *
//***************************************************************
//*                                                             *
//*  This JCL runs EDGUTIL to verify the RMM control data set.  *
//*                                                             *
//***************************************************************
//*                                                             *
//* CHANGE ACTIVITY:                                            *
//* $LG=RMM210 ,210,990817,RS : created for OPC support         *
//*                                                             *
//***************************************************************
//*
//*        UTILPRM      Value is set via SET in JOB JCL
//*
//VERIFY   EXEC PGM=EDGUTIL,PARM='&UTILPRM.'
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   DUMMY
//*
//EDGPVFY  PEND

./ ADD NAME=EDGXPROC
//EDGXPROC PROC OPT=EXPROC                                              00011000
//*                                                                     00020000
//*                                                                     00020000
//*    PROCEDURE FOR SHORT ON SCRATCH CONDITION                         00030000
//*                                                                     00040000
//*   1. This procedure is started whenever a short-on-scratch          00050000
//*      condition is detected.                                         00050100
//*                                                                     00050200
//*   2. The procedure name is as specified with the SCRATCHPROC        00050300
//*      operand on the OPTION statement.                               00050400
//*                                                                     00053000
//********************************************************************* 00054000
//* z/OS DFSMSrmm V1R12                                               * 00055000
//*                                                                   * 00056000
//*PROPRIETARY V3 STATEMENT                                           * 00056000
//*LICENSED MATERIALS - PROPERTY OF IBM                               * 00056000
//*"RESTRICTED MATERIALS OF IBM"                                      * 00056000
//*5694-A01                                                           * 00056000
//* COPYRIGHT 1993,2009  IBM CORP.                                    * 00056000
//*STATUS = HDZ1C10                                                   * 00056000
//*END PROPRIETARY V3 STATEMENT                                       *
//*********************************************************************
//*   Change History:                                                 *
//* $SN=OA28637,1R9,090818,ZB : Add REGION=32M to HSKP step      ‡SNA *
//*                                                                   *
//*********************************************************************
//*                                                                     00059400
//EDGHSKP  EXEC PGM=EDGHSKP,REGION=32M,                                 00059600
//         PARM='&OPT.'                                                 00059700
//SYSPRINT DD SYSOUT=*                                                  00059800
//MESSAGE  DD DSN=MESSAGE.FILE.NAME,DISP=SHR                            00059900

./ ADD NAME=EXEC
!ÁINMR01 ‚  &  N1  	SLBD1  X  YÑ  20190123120459    …
ÁINMR02   à  IEBCOPYå  ú oh    ÿ    ‚  ú   & ê  ú  _ Ò  [   
   Ü   	SLBD1 CAVXTRT úEXECÂÁINMR02   à  INMCOPYå  ú oh      ‚  
ú  "4 ê  ú  ê Ò  \äÁINMR03å  ú oh      ‚   & Ò   öÈ ≠_ _ &[ Ä
ÿêêêÄ  "8Å Vs  ÇÍ    œ áÿ_&   	„≠  üÿ   ü   ±& úµ&HÏ≥1  m ém  	Ï≥1
  ± ±                                                                     
                                                                                
                                                                               
   üÿ         ó üüüüüüüü CAVXTRT   ‚
Üú	”	¨  CAVX      CAVXTRTD  é
á î	?úú† Û <  CAVX      TESTCAVX  ó Ï	?	?à Ò   CAVX      üüüüüüü
ü                                                                               
                  
                                    üÿ    m éó Ë        /*
--------------------  rexx procedure  -------------------- *                  *
Name:      testcavx                                        *                  *
                                                           *          ü 
* Function:  Test CAVXTRT Defaults                           *
*                                                            *
* Syntax:    %testcavx                                       *
*    ü                                                         *
  * Author:    Lionel B. Dyck                                  *
  *            Kaiser Permanente Information Technology        *
  *            Walnuü t Creek, CA 94598                          *
    *            (925) 926-5332                                  *
    *            Internet: lionel.b.dyck‡kp.org                  *
    *                              ü                               *
      * History:                                                   *
      *            02/25/02 - Creation                             *
      *                                           ü                  *
        * ---------------------------------------------------------- */

        ispf = sysvar('sysispf')                                 ü 

          call cavxtrtd
          c = queued()
ü 
            do i = 1 to c
               parse pull in
               ü in.i = in
                 end
              in.0 = c
                              ü 
                do i = 1 to in.0
                   test = word(in.i,1)
                   Select                    ü 
                     When test = "DB" then do
                          parse var in.i  x db desc
                          if sysdsn("'"db".SARDBASE.D0000001ü '") <> "OK" then d
o                              c = in.0 + 1
                               in.c = "Database" db "is not a valid database."
                               in.0 = 1                                    + 
                                 end                                     ü 
                                end
                           When test = "PANELS" then do
                                parse var in.i  x dsn
        ü                         if sysdsn(dsn) <> "OK" then do
                                     c = in.0 + 1
                                     in.c = "Panel Library" panels sysdsn(dsn)
                       ü               in.0 = 1
                                       end
                                    end
                               When teü st = "TABLES" then do
                                      parse var in.i  x dsn
                                      if sysdsn(dsn) <> "OK" then do
                                         c = in.0 + 1ü 
                                           in.c = "Table Library" tables sysdsn(
dsn)                                       in.0 = 1
                                           end                      ü 
                                          end
                                      Otherwise nop
                                     end
   ü                                   end

                                    if sysvar('sysispf') = "ACTIVE" then do
                  ü                      cavx_dd = "C"random()
                                         "allocate file("cavx_dd") reuse unit(sy
sda) space(1 1)" ,                                "tr dsorg(ps) recfm(v b) lrecl
(255)"                           ü         "execio * diskw" cavx_dd "(finis stem
 in.)"                                     Address ISPEXEC "LMINIT DATAID(DATAID
) DDNAME("cavx_dd")"                       Address ISPEXEC "BROWSE DATAID("datai
d")"                                       Addreü ss ISPEXEC "LMFREE DATAID("dat
aid")"                                       "FREE FILE("cavx_dd")"
                                             end
                                          else do i = 1 to in.0M
                                                 say in.i
                                                 end
                                   È    m éç   üÿ    m éé  -        /* ------
--------------  rexx procedure  -------------------- *                  * Name:
     CAVXTRTD                                        *                  *
                                                     *          ü         * Func
tion:  Defaults/Local Customizations for CAVXTRT       *                  *
                                                       *                  * Synt
ax:    called by CAVXTRT                               *                  *    ü
                                                         *                  * Au
thor:    Lionel B. Dyck                                  *                  *
         Kaiser Permanente Information Technology        *                  *
         Walnuü t Creek, CA 94598                          *                  *
           (925) 926-5332                                  *                  *
           Internet: lionel.b.dyck‡kp.org                  *                  *
                             ü                               *
* Dependencies: some knowledge of REXX coding.               *
*                                                            *
* History:                                  ü                  *
  *            02/11/04 - Updated the panel/table ca lib       *
  *                       data set names with plex name        *
  *            07/10/03 - Remove SAR.RM from PROD          ü     *
    *            06/16/03 - Change jobclass for nkaiser2         *
    *            06/13/03 - Add Sar.Sartest to d/b list          *
    *            06/06/03 - Add JOBCard                          *        ü 
      *            06/04/03 - Add Routine to Determine Admin Priv  *
      *            08/28/02 - Changed SARCICS to historical        *
      *            02/25/02 - Creation                             *
      *  ü                                                           *
        * ---------------------------------------------------------- */

        parse value "" wü ith null jobclass jobcard panels tables

         /* -------------------------------------------------- *
          * Setup the date format desirü ed and which is used by *
            * the ca-view generated report                       *
            *                                                    *
            *    U = mm/dd/yy  (USA)                  ü            *
              *    E = dd/mm/yy  (European)                        *
              * -------------------------------------------------- */
              datefmt = "U"                                          + 
                                                                   ü 
                 /* ---------------------------------------------------- *
                  * Construct JOB Card Accounting                        *
                  *                                                      *
  ü                 * The account code is extracted from the ISPF Variable *
                    * zacctnum and then parsed to insert into the JOB Card *
                    * accounting field.                                    *
                 ü    *                                                      *
                      * If / found then parse and rebuild with ,             *
                      * ---------------------------------------------------- */
                      Address ISü PExec ,
                           "Vget (zacctnum jobclass)"
                        if pos("/",zacctnum) > 0 then do
                           parse value zacctnumü  with a "/" b "/" c
                             acct = strip(a)","strip(b)",D"
                             end
                          else acct = zacctnum                ü 

                           /* ---------------------------------------- *
                            * Define Job Suffix for generated Job Card *     ü 
                              * ---------------------------------------- */
                              jobsuf = "L"

            ü                  /* ----------------------------------------------
------ *                        * Define the first JOB Card statement. This is f
or the *                        * basic information. The Class is on another sta
tement *                   ü      * created in CAVXTRT.
         *                        * --------------------------------------------
-------- */                       jobname = sysvar(sysuid)""jobsuf
                                  jobcard ü = "//"left(jobname,8) "JOB '"acct"',
'CA-View Extract',"
                                   /* ------------------------------------------
----------------- *                 * To customize this rü emove all the Select/
When/Otherwise/End  *                 * sections and insert your own.  If you ha
ve only a single    *                 * node (no NJE) then you can just setup th
e CA-View database  *                 * and description variables.      ü 
                      *                 *
                      *                 * If you are not using the NJE Node for
testing then the      *                 * node = sysvar('sysnode') is not needed
.      +                *                 *
     ü                    *                 * The format of the variable is:
                          *                 *
                          *                 * T.1 = "hlq.database sample test da
tabase"             ü       *                 * T.2 = "hlq.databas2 sample test
database 2"                 *                 * t.0 = 2
                            *                 *
                            *      ü            * T.£ (where £ is from 1 to n in
cremented by 1)               *                 * "database-dsn database descrip
tion"                         *                 *
                              *                 * ü The database-dsn is the hlq
for the database, not the full  *                 * dataset name for the databas
e.  It is what you use in the   *                 * /DBASE control card for SARB
CH.                             *                 *              ü 
                                  *                 * The database description i
s a short description and blanks  *                 * are allowed.
                                  *                 *
ü                                   *                 * The database-dsn and dat
abase description MUST be enclosed  *                 * within the same set of q
uotes (single ' or double ")        *                 *
               ü                      *                 * T.0 = number of databa
ses                                   *                 *
                                      *                 * This example demonstra
tes how to setup this code to ü work    *                 * on multiple nodes.
                                        *                 *
                                        *                 * First get the active
 JES Node name (sysnode)                *    ü              *
                                          *                 * Then use the Selec
t/When/Otherwise to test for each node    *                 * and setup the data
bases appropriate to each node. Also      *                 ü * set the jobclass
 for each node.                             *                 * ----------------
------------------------------------------- */
                                                              node = sysvarü ('s
ysnode')
                                                               /* --------------
---------------------------------- *                            * Start of Kaise
r Specificü  Database Specifications *                            * ------------
------------------------------------ */                           Select
                                                                    When node =
"HAWJES2" then do        +                                                 t.1 =
  "HI.SAR.DB01 CA-View ü (SAR)"                                              t.2
 =  "HI.SAR.TEST.DB01 CA-View (SAR) Test Database"                           t.0
 = 2                                                                         end
                                      ü                                   When n
ode = "NKAISERA" then do                                                       j
obclass = "A"                                                                  t
.1 =  "SAR.SARPROD1 General Production"              ü 
 t.2 =  "SAR.SARPROD2 Oversize Reports"
 t.3 =  "SAR.SARPROD3 Production JCL & Messages"
 t.4 =  "SAR.SARCICS CICS Compiles (historical)"                    ü 
   t.5 =  "SAR.SARUSER SAR User"
   t.6 =  "SAR.SARSYSTM SAR System"
   t.0 = 6
   ü end
When node = "NKAISER2" then do
     jobclass = "V"
     t.1 =  "SAR.Sü ARTEST CA-View Testing"
       t.0 = 1
       end
  When node = "SKAISERB" then do ü 
         t.1 = "SAR.CENTEAST Central East Region + Ohio & MidAtlantic"
         t.2 = "SAR.RM.TST Rocky Mountain"
         t.3 = "SAR.SYSH Brooklyn Heights"      ü 
           t.4 = "SYSL.SAR.TST Southern California"
           t.5 = "SYSL.SAR.IRCS Q/Care, CMIS, IVIS, MM Common Systems"
           t.6 = "SYSL.SAR.CNG Change Control"                 ü 
             t.7 = "SYSL.SAR.NW Northwest Region"
             t.8 = "SAR.SARUSER NCAL Development Reports"
             t.9 = "SAR.SARCICS NCAL CICS Development Reports"                ü 
               t.10 = "SYSL.SAR.MVS MSS Group Test D/B"
               t.0 = 10
               end
          Wheü n node = "SKAISERC" then do
                 jobclass = "V"
                 t.1 = "SAR.BH Ohio Historical Job Output Messages"
                 t.2 = "SAR.ü CENTEAST Central East Region + Ohio & MidAtlantic"
                   t.3 = "SAR.CIC CICS Dumps"
                   t.4 = "SAR.IRCP Southwest Region and Common Service Center"
                   t.5 = "SAR.IRCS KPIT Fin+ ance Division"
                     t.6 = "SAR.JCL Job Oü utput Messages for All Regions"
                       t.7 = "SAR.NW Northwest Region"
                       t.8 = "SAR.RM.JCL Rocky Mountain JCL"
                       t.9  = "SAR.RM.RPTS Rocky Mountaiü n Reports"
                         t.10 = "SAR.RPT Southern California Region"
                         t.0 = 10
                         end                                           ü 
                        Otherwise t.0 = 0
                        end
                   /* -------------------------------- *
      ü               * End of Kaiser Specific Databases *
                      * -------------------------------- */

                     ü /* ------------------------------------------------------
----- *                 * Define the Computer Associates CA-View ISPF Panel and
Table *                 * dataset names.  This is only required if these librari
es    *                 * are not inü  your standard TSO/ISPF allocations, if th
ey are  *                 * then set these variables to null.
        *                 * ----------------------------------------------------
------- */                env    = mvsvar("SYMDEF",ü "KSYSENV")
                            panels = "'sysl.view."env".caiispp'"
                            tables = "'sysl.view."env".caiispt'"
                                                                  ü 
                             /* -----------------------------------------------
*                             * Determine if the current user is authorized for
*                             * Administrative Priviledges.
*ü                              *
  *                             * For RACF extract the Default-Group and compare
. *                             *    - Return ADMIN OK if authorized
  *             ü                 *      otherwise nothing
    *                             * --------------------------------------------
--- */                            call outtrap "admin."
                               ü    "LU" sysvar('sysuid')
                                    call outtrap "off"
                                    parse value admin.2 with "DEFAULT-GROUP="gro
up .                                admin_grouü ps = "SDSMVS SYSSCP01"
                                      if wordpos(group,admin_groups) > 0 then
                                         Queue "ADMIN OK"
                                                             + 
                                       /* -----------------ü -------------------
---- *                                    * Now queue the information out to CAV
XTRT *                                    * ------------------------------------
---- */                                   Queue "JOBCARD" jobcard         ü 
                                            Queue "JOBCLASS" jobclass
                                            Queue "DATEFMT" datefmt
                                            Queue "PANELS" panels
         ü                                    Queue "TABLES" tables
                                              if t.0 = 0 then QUEUE "DB none"
                                              else do i = 1 to t.0
                        Æ                            Queue "DB" t.i
                                                     end
                                       È    m é   üÿ    m  _        /* --
------------------  rexx procedure  -------------------- */                ver =
 "1.27"                                                                    /* Na
me:      CAVXTRT                                         *          ü         *
                                                           *                  *
Function:  Display reports from CA-View and allow user to: *                  *
           - Extract to a dataset                          *                  *
   ü         - Extract for mailing (via xmitip)              *
*            - Extract for viewing or browsing               *
*            - Delete a report from disk (not the d/b)       *
*            - Priü nt a report                                *
  *            - Transfer a report to workstation              *
  *            - Load the report for processing                *
  *                              ü                               *
    *            - display statistics for the selected db        *
    *                                                            *
    * Syntax:    %cavxtrt option(s)             ü                  *
      *                                                            *
      *            Valid Options:                                  *
      *            database - invoke using this specified      ü     *
        *                       CA-View database                     *
        *            /CA     - Invoke the Computer Associates        *
        *                      CA-View ISPF Interface for all        *        ü 
          *                      selections.                           *
          *            /LAST   - Use the last CA-View Database         *
          *                      and bypass the database prompt        *
          *  ü                                                           *
            * Customization: see CAVXTRTD for local customizations       *
            *                                                            *
            * Dependencies: ü                                              *
              *    1. SARBCH must be in the Linklist                       *
              *    2. SYS1.PARMLIB(IKJTSOxx) must have SARBCH in the       *
              *       AUTHPGM section      ü                                 *
                *    3. The list of CA-View databases and descriptions at    *
                *       the end of this code must be updated using the       *
                *       NJE Nodename to identify which datü abasea are         *
                  *       available.                                           *
                  *    4. The LIBDEF's in the DO_CADialog must be updated      *
                  *       for the CA-View Panel and Table Libraries.     + 
 *                  *    5. External routine CAVXTRTD accessed for manyü  local
   *                  *       customization settings.
   *                  *
   *                  * Notes:
   *  ü                 *   1. if the user enters a command other than L (load)
and  *                  *      the report is not on disk then a LOAD will be
     *                  *      implied and the user informed to wait for the bat
ch   *               ü    *      load to complete.
       *                  *   2. If there is only one database then the database
       *                  *      selection display will be bypassed.
       *                  *         ü 
         *                  * History:
         *                  *      01/23/19 - Version 1.27
         *                  *               - Updatü e from Anthony Cieri to han
dle        *                  *                 CA-View 14.x
           *                  *      03/24/10 - Version 1.26
           *                  *               - Update from Lane Tü horne to han
dle          *                  *                 CA-View 11.x
             *                  *      12/04/07 - Version 1.25
             *                  *               - Make code more dynamic for /LI
Sü T           *                  *      05/14/07 - Version 1.24
               *                  *               - Update to work with R11 of C
A-View         *                  *                 (thx to Andy White)
               *ü                   *               - For R11 changed Reports to
 133 lrecl       *                  *               - Changed Blksize to system
determined (0)   *                  *               - Change parsing of records
and offsets      *             ü      *      07/27/05 - Version 1.23
                   *                  *               - Fine tune location of dl
oc and prtlines    *                  *               - Change space allocation
for work file to   *                  *       ü           use secondary size
                     *                  *      05/05/04 - Version 1.22
                     *                  *               - Enable use in multiple
 ISPF sessions       *                  *      09/09/03 - Verü sion 1.21
                       *                  *               - Change space allocat
ion for DD CAVXTRT     *                  *                 to reduce the primar
y and increase the     *                  *                 secondary.  Alsoü  a
dd Unit Count (UCOUNT)   *                  *                 to the allocation
to help ensure that      *                  *                 space will be foun
d for large files,       *                  *                 only if the primar
y is > 1000+  tracks       *                  *      07/08/03 - Version 1.20
         ü                   *                  *               - Correct JOBCar
d for Reorg message          *                  *      06/17/03 - Version 1.19
                             *                  *               - If Admin and o
nly 1 data base still diü splay*                  *                 the data bas
e selection list to allow the  *                  *                 R, V, and VF
 selections.                   *                  *               - Support sort
 sequence (e.g. sort field,x   *       ü            *                 where x is
 A (ascend) or D (descend)       *                  *               - New Admini
stration setup (see CAVXTRTD)    *                  *               - on d/b tab
le list improve redisplay        *                  * ü               - Build Jo
bcard in CAVXTRTD                  *                  *               - Add Data
 base selection R to submit a      *                  *                 batch JO
B to REORG the data base - ASYNCH  *                  *              ü  - Make d
/b selection V Status and add VF for *                  *                 STATUS
 FULL                                *                  *               - Add re
port selection option of DD to delete*                  *                 the on
lineü  copy of the report              *                  *               - Use
Admin to validate use of               *                  *                 - Da
ta base selection R                    *                  *      06/02/03 - Vers
ion 1.18           ü                     *                  *               - Ad
d V (verify) option on the data base     *                  *                 li
st to display data base stats            *                  *      01/08/03 - Ve
rsion 1.17                        ü        *                  *               -
Fix REFRESH (was failing on 2nd use)       *                  *      01/06/03 -
Version 1.16                               *                  *               -
Fix sort for ARCHDATE to correct sort order*     ü              *      11/21/02
- Version 1.15                               *                  *
- Allow Todate of TODAY                      *                  *      10/29/02
- Version 1.14                               *                  ü *
  - Add TIME to job card                       *                  *      09/30/0
2 - Version 1.13                               *                  *
  - Allow sorting of columns                   *                  *      06/18/ü
 02 - Version 1.12                               *                  *
    - delete work datasets when complete for     *                  *
      all returns                                *                  *      03/11
/02 - Version ü 1.11                               *                  *
      - set suffix for temp d/s to .CAV            *                  *
      - fix if user prefix is null                 *                  *
      - translate database ds+ ns to upper case      *                  *      0
2/28/02 - Version 1.10     ü                           *                  *
          - fix jobclass on 2nd + submits              *                  *
          - Fix to delete temp datasets before alloc   *                  *
 02/28/02 - Version 1.9                   ü              *                  *
            - change to browse SARBCH results if rc>0    *                  *
   02/26/02 - Version 1.8                                *                  *
            - change from /PRINT to /LOAD which avoids   ü *                  *
                the banner pages in the report.            *                  *
     02/26/02 - Version 1.7                                *                  *
              - fix missing end statement in extract       *            ü 
*               - add display save/restore in mail           *
*      02/25/02 - Version 1.6                                *
*               - Move a lot of the customizations to the    *
*      ü            CAVXTRTD external rexx routine.            *
  *               - Test validity of user specified database   *
  *               - If last action is L then don't redo it     *
  *               - Saü ve jobclass for last database to use if  *
    *                 /LAST is requested                         *
    *      02/25/02 - Version 1.5                                *
    *               - Correct extractü  dsn when prefix <> userid  *
      *      02/24/02 - Version 1.4                                *
      *               - Sort database list table by description    *
      *               - Add /LAST Option            ü                *
        *               - Change CA option to /CA                    *
        *               - Allow a CA-View database to be specified   *
        *                 as the first option                      ü   *
          *               - Make patience window a popup               *
          *      02/23/02 - Version 1.3                                *
          *               - fix file transfer                          *
  ü         *      02/22/02 - Version 1.2                                *
            *               - add support for generic REPORT-ID selection*
            *               - add new File Transfer selection option     *
            *    ü   02/21/02 - Version 1.1                                *
              *               - add date format option for international   *
              *                 formats                                    *
              *      02/19/02 - ü Version 1.0                                *
                *       ....    - numerous enhancements/changes              *
                *      02/11/02 - Creation                                   *
                *                              +                               *
                  * -------------------------ü ---------------------------------
 *                  * Author:    Lionel B. Dyck
 *                  *            Kaiser Permanente Information Technology
 *                  *            Walnut Creek, CA 94598     ü 
   *                  *            (925) 926-5332
   *                  *            Internet: lionel.b.dyck‡kp.org
   *                  *            AIM nickname: lbdyck                    ü 
     *                  * ------------------------------------------------------
---- */                 arg options

          ü              /* -------------------------------------------------- *
                          * Test for our ISPF Applid and if not then:          *
                          * - create an ISPF Commands Table so we can change   *
                         ü  *   RFIND to PASSTHRU so we can process it
 *                          * - re-invoke ourselves with our APPLID
 *                          * - upon return end the ISPF Commands Table and exit
 *                          * ----------ü --------------------------------------
-- */                         Address ISPExec
                              "Vget (Zapplid)"
                              "Control Errors Return"  ü 
                                if zapplid <> "CAVX" then do
                                    "TBCreate cavxcmds names(zctverb zcttrunc zc
tact zctdesc)",                       "replace share nowrite"         ü 
                                      zctverb = "RFIND"
                                      zcttrunc = 0
                                      zctact = "&CAVXFIND"
     ü                                  zctdesc = "RFIND for CAView Dialog"
                                        "TBAdd cavxcmds"
                                        "Select CMD(%"sysvar('sysicmd') options
") Newappl(CAVX)" , ü                         "Passlib SCRName(CAVXTRT)"
                                          "TBEnd cavxcmds"
                                         Address TSO
                                   ü       exit 0
                                           end

                                       /* --------ü ----------------------------
------------------ *                      * Setup the Global variables that will
 be used elsewhere *                      * in this code.
                   *                      * - turn messages off  + 
                     *                      * - set the table nü ame for the lis
t of reports           *                      * - set several variables to "" (n
ull)                   *                      * - set the name of the /LIST work
 dataset               *                      * ------------------------------ü 
------------------------ */                     call msg "Off"
                                                table_name = cavlist
                                                parse value "" with null refresh
 first_pass rü ptmask ,                                               lastdb sla
sh_last userdb final                              tu = random(9999)
                                                  if sysvar('syspref') <> sysvar
('sysuid') then do          ü                          tmp_dsn = sysvar('sysuid'
)".CAVXTRT.TEMP"tu".LIST"                              prt_dsn = sysvar('sysuid'
)".CAVXTRT.TEMP"tu".LISTS"                             end
                                           ü          else do
                                                         tmp_dsn = "CAVXTRT.TEMP
"tu".LIST"                                               prt_dsn = "CAVXTRT.TEMP
"tu".LISTS"                                              eü nd
                                                        Address TSO
                                                        "Delete" tmp_dsn
                                                        "Delete" prt_dsn ü 
                                                          Address ISPExec
                                                          zerralrm = "NO"
                                                          zerrhm   = "CAVXTRTH"
        ü 
                                                           /* ------------------
----------------------------------- *                       * Call the CAVXTRTD
external rexx routine fü or the local *                       * customization se
ttings.                               *                       * ----------------
------------------------------------- */                      call cavxtrtd
                                      ü                         c = queued()
                                                                do i = 1 to c
                                                                   parse pull in
                                                     ü               in.i = in
                                                                     end
                                                                  in.0 = c
                                                                  dbü    = 0
                                                                    drop tab.
                                                                    parse value
"" with datefmt jobclass jobcard ,
   +      panels tables admin                                         do i = 1 t
oü  in.0                                                                   test
= word(in.i,1)                                                             Selec
t                                                                            Whe
n test = "ADMIN"ü  then
    admin = word(in.i,2)                                                       W
hen test = "DATEFMT" then
    datefmt = word(in.i,2)     ü 
 When test = "DB" then do
      parse var in.i x dbase desc
      db = db + 1                             ü 
        tab.db = dbase desc
        end
   When test = "JOBCLASS" then                               ü 
          jobclass = word(in.i,2)
     When test = "JOBCARD" then
          jobcard = subword(in.i,2)                                         ü 
       When test = "PANELS" then
            panels = word(in.i,2)
       When test = "TABLES" then
           ü  tables = word(in.i,2)
         Otherwise nop
         end
       end                ü 
         tab.0 = db

     /* ---------------------------------ü ------------- *
        * Test for options and set variables.            *
        *    /CA - Invoke the Computer Associates Dialog *
        *    /LAST - Use the last used database         ü  *
          * ---------------------------------------------- */
          if options <> null then do
             if left(word(options,1),1) <> "/" then do                 ü 
                  slash_last = 1
                  userdb     = 1
                  cavdb  = word(options,1)
      ü             testdb = "'"cavdb".SARDBASE.D0000001'"
                    if sysdsn(testdb) <> "OK" then do
                       zerrsm = "Errorß"
                     +   zerrlm = "Requested database" cavdb ,
                   ü                "was not found. Try again."
                           "Setmsg msg(isrz002)"
                           exit 12
                           end    ü 
                          lastdb = cavdb
                          "Vput (lastdb) Profile"
                          end                    ü 
                         If wordpos("/CA",options) > 0 then UseCA = 1
                                                       else UseCA = 0
                         If wordpos("/LAST",options) > 0 then doü 
                              "Vget (lastdb) Profile"
                              slash_last = 1
                              cavdb = lastdb                                   ü
                                end
                             end

              ü            /* ---------------------------------- *
                            * Test for UseCA (/CA) Specification *
                            * ---------------------------------- */
                            iü f UseCA = 1 then
                                 if slash_last <> null then do
                                    call do_cadialog
                                    return  ü 
                                      end

                               /* -------------------------ü --- *
                                  * Test for /LAST Specification *
                                  * ---------------------------- */
                                  if lastdb <> null then signal start     ü 

                                   /* ------------------------------------------
--------- *                         * First:
         ü  *                         * Build the selection table list of availa
ble CA-View *                         * databases.
            *                         * ----------------------------------------
----------- */          ü               First:
                                           call Get_DB

                                       +  Start:
                                     ü     /* ----------------------------------
----------------------- *                   * Display the prompting panel for th
e:                      *                   *   rptid    Report ID
                        *                   *   rptgü en   Report Generation
                          *                   *   fromdate Starting date for rep
ort selection             *                   *   todate   Ending date for repor
t selection               *                   *                    ü 
                            *                   * fromdate may be null or TODAY,
 WEEK, or MONTH or mm/dd/yy *                   * todate may be null or TODAY or
 mm/dd/yy                   *                   *
  ü                           *                   * On Exit return to label FIRS
T for DB selection            *                   * ----------------------------
----------------------------- */                  Do Forever
                 ü                                     if rptmask <> null then d
o                                                         rptid   = rptmask
                                                          rptmask = null
                                ü                           end
                                                         if refresh = 1 then cal
l restart                                                else do
                                               ü              "Display Panel(cav
xtrt)"                                                        if rc > 4 then do
                                                                  if slash_last
= null then signal first                                      ü         else ret
urn                                                                 end
                                                                "Vput (rptid rpt
gen fromdate todate) Profile"                                   call start_itü 
                                                                  end
                                                               end

            ü                                                /* ----------------
-------- *                                                    * Now Start the pr
ocessing *                                                    * ----------------
-------- */                ü                                    Start_It:
                                                                cav_server = cav
db                                                              parse value "" w
ith stat                                  ü
                                                                 /* ------------
---------------- *                                                * Test for FRO
MDATE and TODATE *                                       üÿ    m  _
*  - Today is today's date     *
*  - Week is the last 7 days   *
*  - Month is the last 31 days *                                        ü 
  * ---------------------------- */
  parse value "" with from to
 /* ----------------- *
  * Tesü t the FROMDATE *
    * ----------------- */
    Select
    when translate(FROü MDATE) = "TODAY" then do
         from = date('b')
         end
      when translate(FROMDATE) = "WEEü K" then do
           date = date('b')
           from = date('b',date-7,'b')
           end                                      ü 
          when translate(FROMDATE) = "MONTH" then do
             date = date('b')
             from = date('b',date-31,'b')                          ü 
               end
            otherwise do
               if fromdate <> null then do
  ü                call valid_date fromdate
                   if drc > 0 then return
                   from = date('b',fromdate,datefmt)
                 ü   end
                 end
                end
                                ü 
                 /* --------------- *
                  * Test the TODATE *
                  * --------------- */         ü 
                    Select
                    when translate(TODATE) = "TODAY" then do
                       to = date('b')                         ü 
                         end
                      otherwise do
                         if todate <> null then do                           + 
                             call valid_date todate                        ü 
                               if drc > 0 then return
                               to   = date('b',todate,datefmt)
                               end
          ü                  end
                            end

                         ü   /* ---------------------------------------------- *
                              * If Fromdate and Todate then Gen is * (for all) *
                              * ---------------------------------------------- *
/                             if length(ü from) + length(to) > 0 then rptgen = "
*"
                               /* ----------------------------- *
                                * If Gen is ALL then reü set to * *
                                  * ----------------------------- */
                                  if translate(rptgen) = "ALL" then rptgen = "*"
                                                                      ü 
                                   /* ------------------------------------------
-------------- *                    * Test for a Generic ReportID. If so then bu
ild a testrpt  *                    * variable with all non wild-card (*) charac
ters.ü           *                    *
                 *                    * Set the nogen variable to 1 to cause the
 generic routine *                    * to be invoked.
                 *  ü                   * --------------------------------------
------------------ */                   if pos("*",rptid) = 0 then nogen = 0
                                           else do
                                   ü              nogen   = 1
                                                  rptmask = rptid
                                                  p       = pos("*",rptid)
                                                  ü rptid   = left(rptid,p)
                                                    testrpt = null
                                                    do i = 1 to length(rptmask)
                                                       if substr(ü rptmask,i,1)
= "*" then iterate                                       testrpt = strip(testrpt
""substr(rptmask,i,1))                                   end

ü                                                       end

                                               /* ------------------------------
------ *       +                                  * Set Selection Info for displ
ay later *   ü                                      * --------------------------
---------- */                                       selinfo = "Report id:" rptid
 "Gen:" rptgen                                      if from <> null then
                            ü                            selinfo = selinfo "From
:" date(datefmt,from,'b')                             if to <> null then
                                                         selinfo = selinfo "To:"
 date(datefmt,to,'b')                      ü 
                                                       /* ----------------------
---------------- *                                      * Now Setup allocations
for initial list *                                      * ü --------------------
------------------ */                                     ReStart:
                                                          if pos("*",rptid) > 0
then rptmask = rptid                                      Address TSO    ü 
                                                           "Delete" prt_dsn
                                                           "Delete" tmp_dsn
                                                           "Alloc f(sysprint) ds
("prt_dsü n") new spa(15,15)" ,                                 "tr recfm(f b a)
 lrecl(133) blksize(0) reuse"                                "Alloc f(report) ds
("tmp_dsn") new" ,                                               "spa(30,30) tr
reuse"                 ü                                       "Alloc f(sysin)
new spa(1,1) tr reuse" ,                                          "recfm(f b) lr
ecl(80) blksize(800)"
                                      ü                          /* ------------
----------- *                                                     * Setup List c
ontrol card *                                                     * ------------
----------- */                                       ü              if refresh <
> 1 then                                                               cc.1 = "/
LIST ID="rptid" GEN="rptgen                                         else cc.1 =
save_cc                                                             ü save_cc =
cc.1
                                                                     "Execio * d
iskw sysin (finis stem cc."
   ü                                                                   /* ------
--------------------- *                                                 * Now Ca
ll SAR Batch (SARBCH) *                                                 * ------
------------------ü --- */                                                call s
arbch_pgm                                                                 if sar
_rc <> 0 then do                                                            "Del
ete" tmp_dsn                     +                                            "D
elete" prt_dsn                 ü 
 return
 end
                                              ü                                /
* ----------------------------------------- *
* Read in the list and free the allocations *
* ----------------------------------------- */               ü 
  drop in.
 "Execio * Diskr report (finis stem in."
 "Free f(sysprint report sysin)"                                            ü 
 /* Check for new release of Ca-View */
   If pos('(11.)',in.1) > 0 then release_lvl = 11
                             else release_lvl = 2
   If pos('ü (14.',in.1) > 0 then release_lvl = 14
     "Delete" tmp_dsn
     "Delete" prt_dsn
                          ü 
       /* ------------------------- *
        * Now create the ISPF Table *
        * ------------------------- */   ü 
         Address ISPExec
         "TBCreate" table_name " names(stat rpt jname jid gen seq" ,
                  "archdate archtime prtlines xcode pageü s dloc" ,
                    "prtdate)" ,
                    "Nowrite"
                                                                       ü 
             /* ----------------------------------- *
              * Process the list to build the table *
              * ----------------------------------- */
      ü        added = 0
               hit   = 0
               do i = 1 to in.0
                  if ü left(in.i,1) = "1" then hit = 0
                    if hit <> 1 then do
                       if left(in.i,4) = " ---" then hit = 1
                       if left(in.i,ü 3) = "0ID" then do
                            if release_lvl > 2 then do
                                 locpos   = pos("Loc ",in.i)
                                 xcodepos = pos("Xc+ ode ",in.i)
                                   tseqpos  = posü (" Tseq",in.i)
                                   end
                                else do
                                     locpos   = pos("LOC ",in.i)ü 
                                       xcodepos = pos("XCODE ",in.i)
                                       tseqpos  = pos(" TSEQ",in.i)
                                       end                                     ü
                                    tseqpos  = tseqpos + 1
                                    end
                                 iterate
              ü                    end

                             /* ------------------------------------------------
----- *                      ü  * This only needs to change if the CA-View repor
t format*                       * for the SARBCH /LIST report changes.
        *                       * ----------------------------------------------
------- */                        parse var ü in.i 2 rpt jname jid gen seq ,
                                          archdate archtime ,
                                          =(locpos) dloc prtlines pages blocks ,
                                          =(xcodepos) xcodeü  =(tseqpos) tseq .
                                      jid = left(jid,1)right(jid,5)
                                      /* Create two digit year */
                                    parse var archdate mm '/' dd '/' YY   ü 
                                      if yy > 100 then
                                         YY = substr(yy,3,2)
                                      archdate = mm!!'/'!!dd!!'/'!!YY
         ü                                tdate = date('b',archdate,datefmt)
                                          if from <> null then do
                                             if tdate < from then iterate
                        ü                      end
                                            if to <> null then do
                                               if tdate > to then iterate
                                       ü         end
                                              xrc = 0
                                              prtdate = tdate
                                              if nogenü  = 1 then call test_gene
ric                                             if xrc = 1 then iterate
                                                "TBAdd" table_name
                                                added = added + 1    + 
                                                  end              ü 
                                                  if added < 1 then do
                                                     zerrsm = "Error"
                                                     zerrlm = "The selection cri
teü ra resulted in no",                                         "reports found.
 Try again."                                           "Setmsg msg(isrz002)"
                                                       return
                 ü                                       end
                                                      "TBTop" table_name
                                                      if refresh = 1 then do
                                ü                          zerrsm = "Refreshed"
                                                           zerrlm = "Refresh com
pleted."                                                   "Setmsg msg(isrz002)"
                                               ü             refresh = null
                                                             end

                                                         /* --ü ----------------
---------------------- *                                    * Now display the li
st of avilable reports *                                    * ------------------
---------------------- */                                   mult_sels = 0    ü 
                                                              crp = 1
                                                              rowcrp = 0
                                                              src    = 0
            ü                                                   drop load.
                                                                load.0 = 0
                                                                disp:
                           ü                                      do forever
                                                                     if refresh
= 1 then return                                                      cavxfind =
"PASSTHRU"                                ü                            sel = nul
l                                                                      if mult_s
els = 0 then do                                                          tm.0 =
0                                                        ü                 "TBTo
p" table_name                                                              "TBSk
ip" table_name "Number("crp") "                                               "T
BDispl" table_name "Panel(cavxtrtl)" ,                                  ü 
        "Csrrow("rowcrp") AutoSel(No)"                                       end
                                                                           else
                                                                             "TB
Displ" + table_name                                                          t_r
c = rü c                                                                       c
rp = ztdtop                                                                    m
ult_sels = ztdsels                                                             i
f rc > 7 then do    ü 
    "TBEnd" table_name
     return
     end                           ü 
    cavxfind = null
    call do_it
  end                                             ü 

 /* -------------------------- *
  * Now Process the Selections *                                 ü 
    * -------------------------- */
    Do_It:
       act = null
ü        if abbrev("REFRESH",zcmd,3) = 1 then do
            "TBEnd" table_name
            refresh = 1
            retü urn
              end
           osel = null
           Select             ü 
               When abbrev("FIND",word(zcmd,1),1)  = 1 then call do_find
               When abbrev("RFIND",word(zcmd,1),1) = 1 then call do_find
               When abbrev("SORT",word(zcmd,1ü ),2) = 1 then call do_sort
                 When left(zcmd,4) = "SORT" then call do_sort
                 When left(sel,1) = "B" then call do_browse
                 When left(sel,1) = "C" then call do_copy   ü 
                   When left(sel,2) = "DD" then call do_delete
                   When left(sel,1) = "M" then call do_mail
                   When left(sel,1) = "P" then call do_print               ü 
                     When left(sel,1) = "T" then call do_transfer
                     When left(sel,1) = "V" then call do_view
                     When sel = "L" then call do_load
          ü            otherwise do
                                 if load.0 > 0 then call quick_refresh
                                 end
                       en+ d
                       ü if act <> null then do
                            stat = sel
                            "TBPut" table_name
                            end       ü 
                           return

                       /* ---------------------------ü -------------------------
---- *                    * Mail the Report.
     *                    *
     *                    * Extract the report from CA-View and thenü  invoke th
e      *                    * XMITIP ISPF dialog using the XMITIP Front-End inte
rface. *                    *
       *                    * The report will be e-mailed using the SMTP protoco
l. ü     *                    * ------------------------------------------------
-------- */                   Do_Mail:
                                 call Extract_It
                  ü                if osel <> null then return
                                   if sar_rc <> 0 then return
                                   "Control Display Save"
                                 ü   Address TSO
                                     "%xmitipfe File("ext_dsn")" ,
                                       "Subject(Report from CA-View)"
                                     "Delete" exü t_dsn
                                       Address ISPExec
                                       "Control Display Restore"
                                       act = sel               ü 
                                         return

                                     /* --------------------------------------ü 
-------------- *                        * Copy the Report to a standard dataset.
               *                        *
               *                        * Prompt the user for a target dataset a
nd then do thü e *                        * report extraction from CA-View.
                 *                        * ------------------------------------
---------------- */                       Do_Copy:
                            ü                  call Extract_It 'file'
                                               if osel <> null then return
                                               if sar_rc <> 0 then return
                                           +     zerrsm = "Complete"
                                         ü         zerrlm = "Selected Report has
 been saved",                                               "in dataset:" ext_ds
n                                                  "Setmsg msg(isrz002)"
                                                   act =ü  sel
                                                     return

                                                 /* -------------------ü ----- *
                                                    * Sort the Report          *
                                                    *                          *
                                                    * Sort by column headings. *
      ü                                               * ------------------------
 */                                                   Do_Sort:
                                                         parse value zcmd with o
1 opt                ü                                     if pos(",",opt) > 0 t
hen                                                           parse value opt wi
th opt","sortseq                                           sortseq = translate(s
ortseq)                             ü                        if pos(sortseq,"AD"
) = 0                                                           then sortseq = "
A"                                                           opt = translate(opt
)                                                  ü           sort = null
                                                               Select
                                                                 When abbrev("AR
CHDATE",opt,5)  = 1 then sort = "prtdate"                        Wü hen abbrev("
ARCHTIME",opt,5)  = 1 then sort = "archtime"                       When abbrev("
GEN",opt,1)       = 1 then sort = "gen"                            When abbrev("
JOBID",opt,4)     = 1 then sort = "jid"                            When abbrev("
Jü OBNAME",opt,4)   = 1 then sort = "jname"                          When abbrev
("LINES",opt,2)     = 1 then sort = "prtlines"                       When abbrev
("LOC",opt,2)       = 1 then sort = "dloc"                           When abbrev
("REPORT-ID",optü ,1) = 1 then sort = "rpt"                            When abbr
ev("XCODE",opt,1)     = 1 then sort = "xcode"                          Otherwise
 do
 zerrsm = "Error"              ü 
   zerrlm = "Selected sort value invalid" opt ,
            "try again with any of the column" ,
            "headings."                       ü
     "Setmsg msg(isrz002)"
     return
     end                                                     üÿ    m  _
         end
       if wordpos(sort,"gen prtlines") > 0 then stype = "N"
                                           else stype = "C"                 ü 
         if sort = "prtdate" then
            "TBSort" table_name ,
            "fields(prtdate,C,"sortseq",archtime,C,"sortseq")"
         elü se
              "TBSort" table_name ,
              "fields("sort","stype","sortseq")"
           return         ü 

         /* ---------------------------------------------------- *
          * Browse the Report.           ü                         *
            *                                                      *
            * Extract the report then invoke ISPF Browse.          *
            *                                           ü            *
              * Upon completion delete the temporary report dataset. *
              * ---------------------------------------------------- */
              Do_Browse:                                               ü 
                   call Extract_It
                   if osel <> null then return
                   if sar_rc <> 0 then return
      ü              "Control Display Save"
                     "Browse dataset("ext_dsn")"
                     "Control Display Restore"
                     ü Address TSO,
                          "Delete" ext_dsn
                       act = sel
                       return       ü 

                     /* ---------------------------------------------------- *
                      * View the Report.           ü                           *
                        *                                                      *
                        * Extract the report then invoke ISPF View.            *
                        *                                         ü 
 *                        * Upon completion delete the temporary report dataset.
 *                        * ----------------------------------------------------
 */                       Do_View:
 +                             call Extract_It                                 ü
                                 if osel <> null then return
                                 if sar_rc <> 0 then return
                                 "Control Display Save"
              ü                    "View dataset("ext_dsn")"
                                   "Control Display Restore"
                                   Address TSO,
                             ü          "Delete" ext_dsn
                                     act = sel
                                     return
                                            ü 
                                   /* ------------------------------------------
------------ *                      * Setup the JCL for submission for batch pro
cessing.     *                      *                      ü 
               *                      * If multiple rows were selected then buil
d one job with *                      * all LOAD selections for submission.
               *                      * ----------------------------------ü ----
---------------- */                     Do_Load:
                                       /* --------------------------------------
--------- *                             * If the Report is currently online then
 skip it.ü  *                             * ------------------------------------
----------- */                            if stat = "L" then do
                                             zerrsm = "Warning"
                        ü                      zerrlm = "The last action on this
 report was a Load",                                    "thus a second Load is p
revented." ,                                            "Be patient."
                                       ü         "Setmsg msg(isrz002)"
                                                 return
                                                 end
                                              if wordpü os(dloc,"DISK PDSK PERM
TEMP PTMP") > 0 then do                            zerrsm = "Error"
                                                   zerrlm = "The requested repor
t is currently",                                            "in locatü ion" dloc
 "and does not",                                              "need to be restor
ed from tape."                                       "Setmsg msg(isrz002)"
                                                     return
    ü                                                  end
                                                    c      = load.0 + 1
                                                    load.c = "/LIST ID="rpt "GEN
="gen              +                                  load.0 = c
                 ü                                      if mult_sels <> 1 then d
o                                                          tm = tm.0 + 1
                                                           tm.tm = "/LOAD GEN="g
en "ID="rpt "SEQ="seq           ü                            tm.0 = tm
                                                             act = sel
                                                             return
                                               ü               end

                                                           /* ------------------
---------------------------------- *                        * ü Construct JOB Ca
rd and JCL                           *                        * ----------------
------------------------------------ */                       call build_job_car
d                                                             drop t.0       ü 
                                                                t.4 = "//STEP1
  EXEC PGM=SARBCH,PARM='"cav_server"'"                          t.5 = "//SYSPRIN
T DD SYSOUT=*"                                                  t.6 = "//SYSIN
  DD  *"    ü                                                     t.7 = "/LOAD G
EN="gen "ID="rpt "SEQ="seq                                        t.0 = 7
                                                                  if tm.0 > 0 th
en do                      ü                                           c = t.0
                                                                       do i = 1
to tm.0                                                                   c = c
+ 1                                       ü                                 t.c
= tm.i                                                                      end
                                                                         t.0 = c
                                                         ü                 end
                                                                        function
 = "to restore the requested report",
   "from tape to disk. When the job",                                   ü 
     "ends you may use the other options",
     "to process the report. Press ENTER",
     "to refresh the Load requested report",
     "sü tatus."                                                            call
 Submit_JCL                                                                 act
= sel                                                                       retu
rn                    ü 
                                                                             /*
-------------------------------------------------------- *                    *
Print the Report.                    +                     *
*                                  ü                         *
  * Extract the report to a standard dataset.                *
  *                                                          *
  * Prompt the user for the PRINTDS command optionü s and then *
    * build the PRINTDS command.                               *
    * -------------------------------------------------------- */
    Do_Print:                                                    ü 
      call Extract_It
      if osel <> null then return
      "Control Display Save"
ü       "Display Panel(cavxtrts)"
        prc = rc
        "Control Display Restore"
        if prc ü > 0 then return
          "Vput (spc spcp spfm spdest spfcb spucs sppm sppdef" ,
                "spfdef spodes schr) Profile"
                              ü 
           /* --------------------- *
            * Setup PRINTDS options *
            * --------------------- */       ü 
              Address TSO
              parse value time() with hh":"mm":"ss
              ddn  = "cx"hh""mm""ss                         ü 
                if spc <> null then
                   propt = "Class("spc")"
                if spcp <> null then                                       ü 
                     propt = propt "Copies("spcp")"
                  if schr <> null then
                     propt = propt "Chars("schr")"
          ü         if spfm <> null then
                       propt = propt "Forms("spfm")"
                    if spdest <> null then
                       prü opt = propt "Dest("spdest")"
                      if spfcb <> null then
                         propt = propt "Fcb("spfcb")"
                      if spucs <> null tü hen
                           propt = propt "UCS("spucs")"
                       /* ----------------------- *
                        * Test for OUTDES options *    + 
                          * ----------------------- *ü /
                            od = null
                            if sppm <> null then
                               od = "PRMode("sppm")"                ü 
                              if sppdef <> null then
                                 od = od "Pagedef("sppdef")"
                              if spfdef <> null then
   ü                               od = od "Formdef("spfdef")"
                                if spodes =  null then
                                   if od <> null then do
                  ü                     "Outdes" ddn "New" od
                                        end
                                        else ddn = null
                                 ü  if spodes <>  null then do
                                         ddn = spodes
                                         end
                                    if ddn <> nuü ll then
                                         odes = "Outdes("ddn")"
                                      else odes = null
                                                               ü 
                                       /* ---------------------------------- *
                                        * Issue the PRINTDS command to print *
                                        * ---------------------------------- *ü 
/                                         "Pr dsn("ext_dsn")" odes propt

                                          if spodes =  null then
             ü                                 if od <> null then
                                                  "Free outdes("ddn")"
                                            "Delete" ext_dsn
                            ü 
                                              zerrsm = "Printed"
                                              zerrlm = "Requested Report printed
 to:" spdest                               ü    Address ISPExec
                                                "Setmsg msg(isrz002)"
                                                act = sel
                                                return    ü 

                                                 /* ----------------------------
--------------------------- *                     * Do File Transfer     + 
                              *                     *   - support IND$Fü ILE (no
rmal terminal emulator tranfer) *                     *   - support FTP (from th
e users workstation)            *                     * ------------------------
------------------------------- */                    Do_Transfer:
      ü                                                    call Extract_It
                                                           if osel <> null then
return                                                     if sar_rc <> 0 then r
eturn                ü                                       call get_tcpip
                                                             Address TSO ,
                                                               "Rename" ext_dsn
xferdsn                             ü                          "Control Display
Save"                                                          do forever
                                                                  "Display panel
(cavxtrtx)"                                        ü                xrc = rc
                                                                    if zcmd <> n
ull then do                                                            Address T
SO zcmd                                                           ü      xrc = 1
                                                                         end
                                                                      if xrc > 0
 then leave                                                           end
 ü                                                                   "Control Di
splay Restore"                                                       Address TSO
,                                                                      "Delete"
xferdsn         ü                                                      if xrc =
1 then do                                                                 zerrsm
 = "Complete."                                                            zerrlm
 = "File transfer request for" ü ext_dsn ,
     "has been completed."                                                  end
                                                                         else do
                                              ü                               ze
rrsm = "Cancelled"                                                            ze
rrlm = "File transfer request for" ext_dsn ,
       "has been cancelled."                                 ü 
end                                                                          Add
ress ISPExec                                                                 "Se
tmsg msg(isrz002)"                                                          ü  a
ct = sel                                                                       r
eturn
                                                                           /* --
-----------+ ---------------------- *                                         *
Get curreü nt TCP/IP Host information *
* ----------------------------------- */
Get_Tcpip:
   res    = Socket('Initü ialize','ANYNAME')
     host   = Socket('GetHostId')
     name   = word(Socket('GetHostname'),2)
     domain = word(Socket('GetDomainNamü e'),2)
       res    = Socket('Terminate')
       ftphost = name"."domain
       return                                         ü 

     /* -------------------------------------------------------- *
      * Quick Refresh: This routine will refresh the Location of *   ü 
        * all reports which have had a LOAD request performed. If  *
        * the location changes then the entry will be updated in   *
        * the table and removed from the load.x stem               *
    ü     * -------------------------------------------------------- */
          Quick_Refresh:
          load_count = 0
          Address Tü SO
            "Delete" prt_dsn
            "Alloc f(sysprint) ds("prt_dsn") new spa(15,15)" ,
               "tr recfm(f b a) lrü ecl(133) blksize(0) reuse"
              "Delete" tmp_dsn
              "Alloc f(report) ds("tmp_dsn") mod" ,
                "spa(30,30) tr"                  ü 
                "Alloc f(sysin)  new spa(1,1) tr reuse" ,
                   "recfm(f b) lrecl(80) blksize(800)"
                "Execio * diskw sysin (finis stem load."        ü 
                  call sarbch_pgm
                  drop in.
                  "Execio * diskr report (finis stem in."                      ü
                    "Free f(sysprint report sysin)"
                    "Delete" tmp_dsn
                    "Delete" prt_dsn
              ü       Address ISPExec
                      do i = 1 to in.0
                         if left(in.i,1) = "1" then hit = 0
                         if h+ it <> 1 then do
                           ü    if left(in.i,4) = " ---" then hit = 1
                                iterate
                                end
                           /* ------------ü ------------------------------------
----- *                       * This only needs to change if the CA-View report
format*                       * for the SARBCH /LIST report changes.
      *                       * -------------------------ü ---------------------
------- */                      parse var in.i 2 $rpt x x $gen $seq . =(locpos)
$dloc .                         call update_row
                                end                                     ü 
                                c = 0
                                do i = 1 to load.0
                                   if load.i <> "xx" then do
       ü                                c = c + 1
                                        temp.c = load.i
                                        end
                      ü                end
                                    temp.0 = c
                                    drop load.
                                    dü o i = 1 to temp.0
                                         load.i = temp.i
                                         end
                                      load.0 = temp.ü 0
                                        drop temp.
                                        return
                                                                   ü 
                                         /* ------------------------- *
                                          * Update report information *
                                          * ------------------------- */
  ü                                         Update_Row:
                                            "TBTop" table_name
                                            row = 0
                 ü                            do forever
                                              "TBSkip" table_name
                                              if rc > 0 then return
                                ü               row = row + 1
                                                if rpt = $rpt then
                                                   if gen = $gen then
                                               +        if seq = $seq then
                                             ü            if dloc <> $dloc then
do                                                           dloc = $dloc
                                                             stat = "*"
                                                            ü  load_count = load
_count + 1                                                     "TBPut" table_nam
e                                                              if sel /= "DD" th
en do                                                             zerrsm = ü "Lo
aded"                                                               zerrlm = loa
d_count "of" load.0 "reports",                                               "ha
ve been loaded and the Act",                                                 "ha
s been chaü nged from L to *."                                        end
                                                                   else do
                                                                      zerrsm = "
Deleted"                 ü                                              zerrlm =
 "The selected report has been",
 "deleted from disk and the Act",
 "has been changed to *."               ü                                 end
                                                                       "Setmsg m
sg(isrz002)"                                                           do c = 1
to load.0                                              ü                    pars
e value load.c with x "ID="id "GEN="gen                                     if i
d = rpt then                                                                   i
f gen = $gen then                                                     ü 
    load.c = "xx"                                                             en
d                                                                       end
                                                                  end
     ü                                                              return

                                                                   /* ----------
--------------------ü ----------------------------- *                 * Generali
zed Report Extraction routine.                      *                 *
                                                    *                 * This rou
tine will extract the requested repü ort from CA-View *                 * as lon
g as it currently resides on DISK, PDSK, PERM, PTMP,  *                 * or TEM
P storage.                                            *                 *
                                                  ü     *                 * If t
he report is not then convert the action to a LOAD.     *                 *
                                                        *                 * ----
------------------------------------------------------- */       üÿ   ±  _
        Extract_It:
          if wordpos(dloc,"DISK PDSK PERM TEMP PTMP") = 0 then do
             osel = sel
ü              sel  = "L"
               call do_load
               if stat = "L" then return
               ü zerrsm = "Submitted"
                 zerrlm = "Selection changed from" osel "to" ,
                          sel "as the report resides on Tape." ,
                          "Jobü " jobname "has been submitted",
                            "to restore the requested report",
                            "from tape to disk. When the job",
                            "ends you may useü  the other options",
                              "to process the report. Press ENTER",
                              "to refresh the Load requests location.",
                              "The ACT field will change froü m L to *",
                                "when the report has been loaded."
                       "Setmsg msg(isrz002)"
                       return                                              ü 
                         end
                      arg opt
                      if opt = "FILE" then do
          ü                "Addpop"
                           "Display Panel(cavxtrtp)"
                           xrc = rc
                         ü   "Rempop"
                             if xrc > 0 then do
                                zerrsm = "Cancelled"
                                zerrlm =ü  "Extract cancelled."
                                  "Setmsg msg(isrz002)"
                                  return
                                  end                  ü 
                                 ext_dsn = cavxtdsn
                                 end
                              else do                                 ü 
                                     if sysvar('syspref') <> sysvar('sysuid') th
en do                                   if sysvar('syspref') <> null then
                                           hlq = sysvar('syspref')"."sysvar('sys
uid')+                                    else
   ü                                           hlq = sysvar('sysuid')
                                            ext_dsn = "'"hlq".CAVXTRT."jname".G"
gen".CAV'"                                  xferdsn = "'"hlq".CAV.REPORT'"
                  ü                           end
                                           else do
                                              ext_dsn = "CAVXTRT."jname".G"gen".
CAV"                             ü              xferdsn = "CAV.REPORT"
                                                end
                                             end
                                                ü 
                                         /* ------------------------------------
-------------------- *                    * Build the SARBCH /LOAD control card
that will extract    *                    * the CA-View report ü and place it in
to a standard dataset. *                    * ----------------------------------
---------------------- */                    Address TSO
                                             cc.1 = "/LOAD GEN="gen "ID="rpt ,ü 
                                                      "SEQ="seq "DDNAME=CAVXTRT"
                                               "Delete" ext_dsn
                                               if wordpos(dloc,"DISK PDSK PERM T
EMP PTMP") = ü 0 then                               say "Report is located on Ta
pe.",                                                   "Please be patient."
                                                 "Delete" prt_dsn
                            ü                      "Alloc f(sysprint) ds("prt_ds
n") new spa(15,15)" ,                                "tr recfm(f b a) lrecl(133)
 blksize(0) reuse"                                  space = ((prtlines * 255)%54
000)%4                                     ü          if space > 1000 then ucoun
t = "ucount(4)"                                                       else ucoun
t = null                                              sec   = (space%2) + 1
                                                     "Alloü c f(cavxtrt) ds("ext
_dsn") new" ,                                              "spa("space","sec") t
r" ucount ,                                                "recfm(f b) lrecl(133
) blksize(0)"                                          "Alloc f(sysin)  nü ew sp
a(1,1) tr reuse" ,                                          "recfm(f b) lrecl(80
) blksize(800)"                                          "Execio * diskw sysin (
finis stem cc."                                          Address ISPExec
        ü                                                  "Control Display Save
"                                                          "Addpop"
                                                           "Control Display Lock
"                      +                                     "Display Panel(cavx
trtw)"               ü                                         "Rempop"
                                                               "Control Display
Restore"                                                       Address TSO
                                    ü                            call sarbch_pgm
                                                                 "Free f(sysin s
ysprint cavxtrt)"                                                "Delete" prt_ds
n                                                  ü               Address ISPEx
ec                                                                return

                                                                  ü /* ---------
-------------------------- *                                         * Perform a
 Delete of the Online Copy *                                         * of the sp
ecified report.            *                                         * If the Lo
cü ation is DISK then bypass.*                                         * -------
---------------------------- */                                        Do_Delete
:                                                                      if dloc =
 "DISK" then do ü                                                           zerr
sm = "Error"                                                                zerr
lm = "The requested report is on DISK and has not",
     "yet had an archive copy mü ade in the CA-View",
       "data base. Delete action cancelled for now",
       "until an archive copy has been created."                              "S
etmsg Msg(isrz002)"                           ü 
return
end                                                                          if
wordpos(dloc,"PDSK TEMP PTMP PERM") = 0 then do              ü 
  zerrsm = "Error"
  zerrlm = "The requested report is not on disk and thus",
           "there is no need for this delete action.",                      ü 
             "This application does not support doing a full",
             "delete of the report."
    "Setmsg Msg(isrz002)"
    return ü 
      end
   drop c.0
   cc.1 = "/DELETE ID="rptü  "GEN="gen "SEQ="seq "DISK"
     act = sel
     Address TSO
     "Delete" ext_dsn                    + 
       "Delete" prt_dsn                ü 
         "Alloc f(sysprint) ds("prt_dsn") new spa(1,1)" ,
           "tr recfm(f b a) lrecl(133) blksize(0) reuse"
         "Alloc f(sysin)  new spa(1,1) tr reuse" ,    ü 
              "recfm(f b) lrecl(80) blksize(800)"
           "Execio * diskw sysin (finis stem cc."
           call sarbch_pgm                                           ü 
             "Free f(sysin sysprint)"
             "Delete" prt_dsn
             Address ISPExec
    ü          c      = load.0 + 1
               load.c = "/LIST ID="rpt "GEN="gen
               load.0 = c
               callü  quick_refresh
                 return

             /* ------------------ü ---------------------------- *
                * Call the CA-View batch utility program SARBCH. *
                * ---------------------------------------------- */
                Sarbch_PGM:                      ü 
                 "Call *(SARBCH) '"cav_server"'"
                  sar_rc = rc
                  if sar_rc > 0 then do                         ü 
                       Address ISPExec
                       "Control Display Save"
                       "Browse dataset("prt_dsn")"                             ü
                         "Browse dataset("tmp_dsn")"
                         "Control Display Restore"
                         Address TSO
              ü            end
                        return

                       /* ---ü --------------- *
                          * Validate the Dates *
                          * ------------------ */
                          Valid_Date: Procedü ure expose null drc zerralrm zerrh
m                           arg date
                            drc = 0
                            parse value date with mm"/"dd"/+ "yy
                              if datatype(mm) <> "NUM" thü en drc = 4
                                if datatype(dd) <> "NUM" then drc = 4
                                if datatype(yy) <> "NUM" then drc = 4
                                if mm < 1 ! mm > 12 then drc = 4        ü 
                                  if dd < 1 ! dd > 31 then drc = 4
                                  if drc = 0 then return
                                  zerrsm = "Date Error"
       ü                            zerrlm = "Error in date" date". Try again."
                                    "Setmsg msg(isrz002)"
                                    return
                      ü 
                                     /* ---------------------------------------
*                                     * Process the Generic ReportID selection:
*                                    ü  *   * = single wild character
  *                                     *  ** = any number of wild characters
  *                                     * --------------------------------------
- */                                    Test_Genericü : Procedure Expose xrc rpt
 rptmask null testrpt ,                                                  zerralr
m zerrhm                                  j   = 1
                                          xrc = 1                  ü 
                                            test = null
                                            do i = 1 to length(rptmask)
                                            Select
  ü                                              When j > length(rpt) then nop
                                                 When substr(rptmask,i,1) <> "*"
 then do                                              test = strip(test""substr(
rpt,j,1))        ü                                      j = j + 1
                                                        end
                                                   When substr(rptmask,i,2) = "*
*" then do                      ü                         if pos("*",substr(rptm
ask,i+2)) = 0 then do                                          tmp = substr(rptm
ask,i+2)                                                       if right(rpt,leng
th(tmp)) = tmp                                 ü                    then j = len
gth(rpt)                                                            test = strip
(test""tmp)                                                         end
                                                            elü se do
                                                                   tc = substr(r
ptmask,i+2,1)                                                      j  = pos(tc,r
pt,j)                                                              if j = 0 t+ h
en return                                                            i  = iü  +
1                                                                      end
                                                                  end
                                                             When substr(rptmask
,i,1) = "*ü " then j = j + 1                                   end
                                                            end
                                                            if testrpt = test th
en xrc = 0               ü                                    return

                                                             /* ----------------
------------------------------------- * ü                       * Find sub-routi
ne                                      *                       * --------------
--------------------------------------- */                     Do_Find:
                                                       ü               parse val
ue zcmd with o1 argument                                               upper arg
ument                                                                  argument
= strip(argument)                                                     ü  zsel =
''                                                                       hit  =
1                                                                        hcc  =
0                                                                        crp  =
ztdtoü p                                                                   find_
loop = ''                                                                  searc
h    = ''                                                                  rowid
     = crp          ü                                                        if
o1     = "RFIND" then do
argument = save_arg
last_find = last_find + 1          ü 
  "TBTOP " table_name
  "TBSKIP" table_name "Position(ROWID) Number("Last_find")"
  end                                             ü 
    else do
         if rowid > 1 then
         "TBSKIP" table_name "Position(rowid)"                   ü 
           end
   if rc = 8 then do
                  "TBTop" table_name
ü                   "TBSKIP" table_name "Position(ROWID)"
                    s_smsg = "Wrapped"
                    end
               + else s_smsg = "Found"
             ü 
         /* ---------------------- *
          * Now perform the Search *
          * ----------------ü ------ */

           save_arg = argument
           do forever                      ü 
                search = rpt jname
                if pos(argument,search) > 0 then do
                   crp = rowid + 0                        ü 
                     rowcrp = crp
                     last_find = crp
                         zerrsm = s_smsg   /* "Found" */                 ü 
                           zerrlm = argument "found during search in row:" crp
                          "Setmsg Msg(isrz002)"
                       leave
        ü                end
                      "TBSKIP" table_name "POSITION(Rowid)"
                      if rc = 8 then do
                       ü      "TBTOP" table_name
                               s_smsg = "Wrapped"
                           if find_loop = "on" then do
                               zerrsm ü = "Not Found"
                                 zerrlm = argument "Not found during search"
                                 rowid = crp
                                "Setmsg Msg(isrz002)"ü 
                                   leave
                                   end
                                   else find_loop = "on"            ü 
                                 end
                              zsel = ''
                              end
   ü                    return

                       /* --------------------------------------------- *
                  ü       * Invoke the Computer Associates CA-View Dialog *
                          * --------------------------------------------- */
                          Do_CADialog: procedure expose cavdb null panels tables
 ,                               +                        zerralrm zerrhm
                            if ü panels <> null then
                                 "Libdef ISPPLIB Dataset id("panels")" ,
                                        "Stack"
                              if tables <> nulü l then
                                   "Libdef ISPTLIB Dataset id("tables")" ,
                                          "Stack"
                                "Select PGM(SARSPF) PARM("cavü db") NewAppl(SAR)
 Passlib" ,                          "SCRName(CAView)"
                                  if panels <> null then
                                     "Libdef ISPPLIB"                       ü 
                                    if tables <> null then
                                       "Libdef ISPTLIB"
                                    return
           ü 
                                     /* ----------------------------------------
------------------- *                 * Get_DB: Build the ISPF Table of availabl
e CA-View (aka SAR) *     ü             * databases.
                      *                 *
                      *                 * The available databases are determined
 based upon the       *                 *ü  current NJE Node name.
                        *                 *
                        *                 * Format is database-dsn database-desc
ription                 *                 *             ü 
                          *                 * Variable JOBCLASS, if set, will ca
use the generated JCL     *                 * to have a CLASS=jobclass
                          *                 * -------------------------ü -------
--------------------------- */                Get_DB:
                                                  if tab.0 = 0 then do
                                                     zerrsm = "Error"
      ü                                                zerrlm = "The current env
ironmet" node ,                                                 "does not suppor
t any CA-View",                                                 "databases. Exit
ing Application."    ü                                   "Setmsg msg(isrz002)"
                                                         exit 4
                                                         end
                                    ü 
                                                   /* --------------------------
-------------- *                                    * If one entry then use it a
nd skip prompt *                                   +  * ------------------------
---------------- */                              ü      if admin /= "OK" then
                                                        if tab.0 = 1 then do
                                                           if first_pass = 1 the
n exit                                                     parseü  value tab.1 w
ith cavdb cavdbdes                                           first_pass = 1
                                                             return
                                                             end               ü
 
                                                           /* ------------------
-------------------- *                                      * Now Create the ISP
F Table of datü abases *                                      * ----------------
---------------------- */                                     "TBCreate cavdbtbl
 Names(sel cavdb cavdbdes) NoWrite"                           sel = null
                             ü                                  do i = 1 to tab.
0                                                                  parse value t
ab.i with cavdb cavdbdes                                           cavdb    = tr
anslate(strip(cavdb))                       ü                        cavdbdes =
strip(cavdbdes)                                                      "TBAdd cavd
btbl"                                                                end
                                                           ü 
                                                                   /* ----------
----------------------------------- *                               * Display th
e ISPF Table of Available Databases *                               *     ü 
                                      *                               * Row sele
ction options:                        *                               *    C = i
nvoke CA's View ISPF Interface        *                               *    V = d
isplay daü ta base statistics           *                               *    non
-blank open the data base               *                               * ------
--------------------------------------- */                              "TBSort
cavdbtbl Fields(cavdbdesü )"                                              "TBTop
 cavdbtbl"                                                                top =
1                                                                         do for
ever                                   ü                                       s
el = null                                                                      "
TBTop cavdbtbl"                                                                "
TBSkip cavdbtbl Number("top")"                        ü
 "TBDispl cavdbtbl Panel(cavxtrtd)"
 if rc > 7 then do
    "TBEnd cavdbtbl"                                                 üÿ   ± 
 Ä               exit
                  end
               top  = ztdtop
    ü            ssel = sel
                 if row <> null then
                    if row > 0 then do
                   ü    "TBTop cavdbtbl"
                        "TBSkip cavdbtbl NUMBER("row")"
                        end
                   sel = ssel     ü 
                     lastdb = cavdb
                     "Vput (lastdb jobclass) Profile"
                     /* -------------------------ü ------ *
                        * Data Base Selection - Non-Admin *
                        * ------------------------------- */
                       if admin <> "OK" then                    ü 
                         Select
                            When sel = "C" ! UseCA = 1 then do
                               call do_cadialog                                ü
                                 end
                              When sel <> null then do
                                 "TBEnd cavdbtbl"
              ü                    return
                                   end
                                Otherwise nop
                             ü    end
                               /* --------------------------- *
                                * Data Base Selection - Admin *
                                * ----------ü ----------------- */
                                 if admin = "OK" then
                                 Select
                                    When sel = "C" ! UseCA ü = 1 then do
                                         call do_cadialog
                                         end
                                      When sel = "R" then call do_reorg   ü 
                                        When sel = "V" then call do_stats
                                        When sel = "VF" then call do_stats
                                        When sel <> null then do
         +                                   "TBEnd cavdbtbl"
       ü                                       return
                                               end
                                            Otherwise nop
                      ü                       end
                                           end
                                        return
                                     ü 
                                         /* ------------------------------------
------------- *                           * Display the statistics for the selec
ted data base *                           * --------ü --------------------------
--------------- */                          Do_Stats: procedure expose cavdb adm
in zerralrm zerrhm sel                      report = "cav.report.d"random(99999)
                                            Address TSO            ü 
                                              "alloc f(sysprint) ds("report") ne
w spa(1,1) tr reuse"                          "alloc f(sysin) unit(sysallda) spa
(1) tr recfm(f b) lrecl(80)" ,                      "reuse"
  ü                                             if sel = "VF" then
                                                   stat.1 = "STATUS FULL"
                                                else
                 ü                                   stat.1 = "STATUS"
                                                  "Execio * diskw sysin (finis s
tem stat."                                        "call *(sardbase) '"cavdb"'"
                                ü                   "alloc f(sysprint) ds(*) reu
se"                                                 "alloc f(sysin)    ds(*) reu
se"                                                 call msg 'off'
                                               ü      Address ISPExec "Browse Da
taset("report")"                                      "delete" report
                                                      Address ISPExec
                                                      return  ü 

                                                       /* ----------------------
---- *                                                  * Build and Submit Reü o
rg Job *                                                  * --------------------
------ */                                                 Do_Reorg:
                                                          call build_job_card
            ü                                               drop t.0
                                                            t.4 = "//STEP1    EX
EC PGM=SARDBASE,PARM='"cavdb"'"                             t.5 = "//SYSPRINT DD
 SYSOUT=*"                 +                                  t.6 = "//SYSIN
DD  *"                   ü                                      t.7 = "REORG ASY
NCH"                                                            t.0 = 7
                                                                function = "to d
o an asynchronous reorganization of",   ü                                    "th
e index file is to be performed",                                            "Th
e database can be actively used by",                                         "ot
hers during the reorganization;",                      ü                       "
however, the less database activity there",                                    "
is, the faster the REORG will run.",                                           "
Verify the success of this JOB upon",                                 ü 
 "completion."                                                        call Submi
t_JCL                                                                 return

     ü                                                                 /* ------
-------- *                                                              * Build
Job Card *                                                              * ------
-------- */         ü                                                     Build_
Job_Card:                                                                 if job
class <> null then                                                           jcl
ass = ",CLASS="jobclass            ü                                        else
 jclass = null                                                              t.1
= jobcard                                                                   t.2
= "//         MSGLEVEL=(1,1),NOTIFY="sysvar('sysuiü d')""jclass",",
    !!"TIME=30"                                                               t.
3 = "//HOLD     OUTPUT JESDS=ALL,DEFAULT=Y,OUTDISP=(HOLD,HOLD)"               re
turn                                                             ü 
                                                                               /
* ------------------------------------------------------- *
* Allocate the Internal Reader DD and write the generated *
ü * JCL to the Internal Reader for execution.               *
  * ------------------------------------------------------- */
  Submit_JCL:
  Address TSO  ü 
    "Alloc f(cavxrdr) sysout(b) writer(intrdr)",
       "Recfm(f) lrecl(80) blksize(80) reuse"
    "Execio * diskw cavxrdr (fü inis stem t."
      "Free f(cavxrdr)"
      parse value t.1 with "//"jobname .
      drop t.                                + 
        Address ISPExec                    ü 
          zerrsm = "Submitted"
          zerrlm = "Job" jobname "has been submitted",
                   function                               æ
            "Setmsg msg(isrz002)"
            return
   È   ±    óÁINMR06

./ ADD NAME=HSMCMD
//HSMCMD   JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//ALCISPFL EXEC PGM=IKJEFT01
//SYSPROC  DD DSN=&SYSUID..OSEO.MVS,DISP=SHR
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
  PROF NOPREF
  PROF
  HBACK   STE58.OSEO.MVS
  HSENDCMD QUERY SETSYS TERM
//
  HLIST   DATASETNAME(STE58.OSEO.MVS) SYSOUT(S)
//
  HBACK   SYS4.IOA920.LOAD
//
  HBACK   SYS4.IOA920.BASE
//
  HBACKDS (dsname/password...)
          NEWNAME(newdatasetname)
            DATE(yyyy/mm/dd)
              TIME(hhmmss)
            SPHERE(YES ! NO)
            GENVSAMCOMPNAMES(YES ! NO)
          EXTENDRC
          VOLUME(volser) UNIT(unittype)
          CHANGEDONLY ! TOTAL
          TARGET (DASD ! TAPE)
          CC ( STANDARD !
                  PREFERRED ! ANYPREFERRED !
                  CACHEPREFERRED ! VIRTUALPREFERRED !
                  REQUIRED ! ANYREQUIRED !
                  CACHEREQUIRED ! VIRTUALREQUIRED
                  PHYSICALEND ! LOGICALEND )
          RETAINDAYS(days)
          WAIT or NOWAIT
          RECURSE(NOCROSSMOUNTS ! CROSSMOUNTS)
//
  HLIST MIGRATIONVOLUME or MIGRATIONLEVEL1 or MIGRATIONLEVEL2
        or MIGRATIONLEVEL2(DASD) or MIGRATIONLEVEL2(TAPE)
        or PRIMARYVOLUME or VOLUME or VOLUME(volser)
              BACKUPCONTROLDATASET or MIGRATIONCONTROLDATASET
              or BOTH
              OUTDATASET(dsname) or SYSOUT or SYSOUT(class)
              or TERMINAL
  HLIST BACKUPVOLUME or BACKUPVOLUME(volser)
              OUTDATASET(dsname) or SYSOUT or SYSOUT(class)
              or TERMINAL
  HLIST USER or USER(userid)
              OUTDATASET(dsname) or SYSOUT or SYSOUT(class)
              or TERMINAL
  HLIST DATASETNAME or DATASETNAME(dsname) or LEVEL
        or LEVEL(qualifier)
              BACKUPCONTROLDATASET or MIGRATIONCONTROLDATASET
              or BOTH
              INCLUDEPRIMARY
              OUTDATASET(dsname) or SYSOUT or SYSOUT(class)
              or TERMINAL
              SELECT(AGE(mindays) or AGE(mindays maxdays)
                     MIGRATIONLEVEL1 or MIGRATIONLEVEL2
                     or VOLUME(volser)
                     RETAINDAYS or ACTIVE
                     SMALLDATASETPACKING or NOSMALLDATASETPACKING
                     VSAM)
  HLIST FILENAME(filename) or FILELEVEL(pathname)

./ ADD NAME=HZSPRINT
//HZSPRINT JOB (T2,129200),MVS,
//  MSGCLASS=S,CLASS=0,NOTIFY=&SYSUID
//****************************************************************/
//*                                                              */
//*                                                              */
//*     Sample JCL for the IBM Health checker For z/OS print     */
//*     Utility                                                  */
//*                                                              */
//* PROPRIETARY STATEMENT:                                       */
//*                                                              */
//*     LICENSED MATERIALS - PROPERTY OF IBM                     */
//*     5650-ZOS                                                 */
//*     COPYRIGHT IBM CORP. 2008,2017                            */
//*     STATUS = HBB77B0                                         */
//*                                                              */
//* HZSPRINT utility                                             */
//*   The print utility is used to write the current message     */
//*   buffer for the target check(s) to the specified SYSOUT.    */
//*                                                              */
//* HZSPRINT Parameters                                          */
//*  Can be passed:                                              */
//*  - via the JCL PARM string which is limited to 100 characters*/
//*  - via a JCL PARMDD, which is limited to 256 "effective"     */
//*    character, for HZSPRNT, at this time. Trailing blanks     */
//*    per line do not count though. Do not include any other    */
//*    extra blanks, in particular at the beginning of any line. */
//*  Parameters should be separated from each other by a comma.  */
//*                                                              */
//* Valid parameters are:                                        */
//*   LOGSTREAM(log_stream_name)                                 */
//*     Where log_stream_name is the name of a log stream that   */
//*     is (or was) in use by IBM Health Checker for z/OS.       */
//*     If LOGSTREAM is specified, the message buffers are       */
//*     obtained from the specified log_stream_name.             */
//*     If LOGSTREAM is not specified, the message buffers are   */
//*     obtained from the checks that are currently registered   */
//*     with the IBM Health Checker for z/OS.                    */
//*   SYSNAME(system_name)                                       */
//*     Where system_name is the name of a system where the      */
//*     checks were executed.                                    */
//*     Wildcard characters '*' and '?' may be used if the       */
//*     output of multiple systems is desired.                   */
//*     The SYSNAME keyword is only valid when LOGSTREAM is also */
//*     specified.                                               */
//*     If the SYSNAME keyword is not specified with LOGSTREAM,  */
//*     processing is equivalent to a specification of           */
//*     SYSNAME(*).                                              */
//*   CHECK(check_owner,check_name)                              */
//*     Where check_owner and check_name identify the            */
//*     desired check(s) to print.                               */
//*     Wildcard characters '*' and '?' may be used if the       */
//*     output of multiple checks is desired.                    */
//*     Note that it might not be necessary to surround the      */
//*     CHECK parameter specification with quotes, but it often  */
//*     is and is always safe to do so.                          */
//*     If the CHECK keyword is omitted, processing is           */
//*     equivalent to a specification of CHECK(*,*).             */
//*   EXCEPTIONS                                                 */
//*     If the EXCEPTIONS keyword is specified, the message      */
//*     buffer output is included only if the check resulted     */
//*     in exception(s).                                         */
//*   TIMERANGE(yyy1m1d1h1m1,yyy2m2d2h2m2)                       */
//*     If the TIMERANGE keyword is specified, the message       */
//*     buffer output is included only if the check started      */
//*     running within the time range specified.                 */
//*     Within the specification:                                */
//*       yyy1: the 4-digit year of the start time               */
//*       m1:   the 2-digit month of the start time              */
//*       d1:   the 2-digit day of the start time                */
//*       h1:   the 2-digit hour (0-23) of the start time        */
//*       (second) m1: the 2-digit minute (0-53) of the start    */
//*             time                                             */
//*       yyy2: the 4-digit year of the stop time                */
//*       m2:   the 2-digit month of the stop time               */
//*       d2:   the 2-digit day of the stop time                 */
//*       h2:   the 2-digit hour (0-23) of the stop time         */
//*       (second) m2: the 2-digit minute (0-53) of the stop     */
//*             time                                             */
//*                                                              */
//* SYSOUT DD is the required output for the print command.      */
//* The required attributes for SYSOUT are:                      */
//*   SEQUENTIAL FIXED BLOCK LRECL(256).                         */
//*                                                              */
//* If LOGSTREAM is specified then                               */
//*   RACF authorization to the requested logstream is required. */
//* If LOGSTREAM is not specified then                           */
//*   RACF authorization to the requested check(s) is required.  */
//*                                                              */
//* Authorization details can be found in 'IBM Health Checker    */
//* for z/OS User's Guide'                                       */
//*                                                              */
//* RETURN-CODES                                                 */
//*   RC=0    -- Success                                         */
//*   RC=d'400' -- no matches                                    */
//*   RC=d'401' -- not all messages retrieved                    */
//*   RC=d'402' -- missing records                               */
//*   RC=d'403' -- not all buffers written                       */
//*   RC=d'404' -- empty log stream                              */
//*   RC=d'800' -- no parms                                      */
//*   RC=d'801' -- unknown keyword                               */
//*   RC=d'802' -- invalid check owner                           */
//*   RC=d'803' -- invalid check name                            */
//*   RC=d'804' -- missing comma                                 */
//*   RC=d'805' -- missing close paren                           */
//*   RC=d'806' -- invalid log stream name                       */
//*   RC=d'811' -- no log stream                                 */
//*   RC=d'812' -- bad log stream                                */
//*   RC=d'813' -- bad check                                     */
//*   RC=d'814' -- No SysName                                    */
//*   RC=d'815' -- Invalid SysName                               */
//*   RC=d'816' -- SysName not allowed                           */
//*   RC=d'817' -- Time range not valid                          */
//*   RC=d'818' -- Missing Timerange values                      */
//*   RC=d'899' -- parms too long                                */
//*   RC=d'1200' -- not authorized or XFACILIT not RACLISTed     */
//*   RC=d'1201' -- could not open sysout                        */
//*   RC=d'1202' -- bad lrecl                                    */
//*   RC=d'1203' -- HC not active                                */
//*   RC=d'1204' -- log error                                    */
//*   RC=d'1205' -- sysout is not allocated                      */
//*   RC=d'1206' -- sysout is partitioned                        */
//*   RC=d'1601' -- Bad RC from DSPSERV                          */
//*   RC=d'1602' -- Bad RC from ALESERV                          */
//*   RC=d'1603' -- Bad RC from HZSQUERY                         */
//*                                                              */
//* CHANGE-ACTIVITY:                                             */
//*  $L0=HZSCHECK HZS7720,050217, PDXB: HEALTH CHECKER           */
//*  $L1=HCR10    HBB7750 070601, PDXB: TIMERANGE                */
//*  $L2=HCV2R1   HBB7790 130215, RDUT: PARMDD (up to 256)       */
//*  $L3=HCV2R3   HBB77B0 150827, RDUT: XFACILIT auth prologue   */
//*                                                              */
//****************************************************************/
//HZSPRINT EXEC PGM=HZSPRNT,TIME=1440,REGION=0M,PARMDD=SYSIN
//SYSIN DD *
CHECK(ca_view,VIEW_OPT_CLFMDST‡J0CAVWP0)
CHECK(ca_view,VIEW_OPT_MASTER‡J0CAVWP0 )
CHECK(ca_view,VIEW_OPT_TBACKUP‡J0CAVWP0)
,EXCEPTIONS
//SYSOUT   DD SYSOUT=A,DCB=(LRECL=256)

./ ADD NAME=IDCAMS
//IDCAMS   JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID,CLASS=9,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//ALCISPFL EXEC PGM=IDCAMS
//*SYSLOG
//*N1       DD DSN=EXT.SYSLOG.ORDIA(0),DISP=SHR
//*ISPFILE  DD DSN=&SYSUID..RAYMOND.REPORT,DISP=(MOD,DELETE,DELETE),
//*    BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//INDD      DD DSN=SYPS.CTM920.STATFILE,DISP=SHR
//SYSPRINT DD SYSOUT=*
//*IN1      DD DSN=U1PS.CTM918.STATFILE,DISP=SHR
//*SYSPRINT DD DSN=&SYSUID..RAYMOND.LISTCAT,
//*DISP=(MOD,DELETE,DELETE),
//* DISP=(NEW,CATLG,DELETE),
//*VOL=SER=DBPMEM,
//* VOL=SER=W90J20,
//* BLKSIZE=13300,
//* SPACE=(TRK,(3,1)),
//* RECFM=FBA,
//* LRECL=133,
//* UNIT=3390
//*IEF462I IDCAMS ALCISPFL ISPFILE - NO AVAILABLE OFFLINE DEVICES ELIGIBLE FOR A
//*UNIT=SYSDA
//SYSIN    DD *
  DEFINE ALIAS (NAME(S28P.SY.IOA920.PROCLIB)                -
   RELATE(S28P.P0.IOA920.PROCLIB))
//
  DEFINE (NAME(S28P.SY.IOA920.PROCLIB)                -
   RELATE CATALOG(AMAST1)
//
  DEFINE    ALIAS                                          -
            (  NAME(S28P.SY.IOA920.PROCLIB)                -
               SYMBOLICRELATE(S28P.P0.IOA920.PROCLIB))
//
            CATALOG('CATNAME/PASSWORD')
//
  DEFINE    ALIAS
            (  NAME('ALIASNAME')
               RELATE('ENTRYNAME')  OR
               SYMBOLICRELATE('SYMBOLIC_NAME') )
            CATALOG('CATNAME/PASSWORD')
//
  EXPORT UCAT.EXVS  -
     OUTFILE(RECEIVE) -
  TEMPORARY
//
  LISTC
//
  LISTC  ALIAS
  LISTC  CLUSTER
  LISTC  DATA
  LISTC  INDEX
  LISTC  NONVSAM
  LISTC  NOTUSABLE
  LISTC  PAGESPACE
  LISTC  USERCATALOG
  LISTC  MASTERCATALOG
  PRINT  IFILE(IN1)
  VERIFY FILE(IN1)

./ ADD NAME=IDIVPASM
//IDIVPASM JOB (T2,129200),MVS,
//  MSGCLASS=S,CLASS=0,NOTIFY=&SYSUID
//*
//********************************************************************
//*   Licensed Materials - Property of IBM                           *
//*                                                                  *
//*   5655-Q41                                                       *
//*                                                                  *
//*   Copyright IBM Corp. 2003, 2009. All rights reserved.           *
//*                                                                  *
//*   US Government Users Restricted Rights - Use,                   *
//*   duplication or disclosure restricted by GSA ADP                *
//*   Schedule Contract with IBM Corp.                               *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* IDIVPASM JOB                                                     *
//*                                                                  *
//* This job will verify the installation of Fault Analyzer using    *
//* an assembler program.                                            *
//*                                                                  *
//* Caution: This is neither a JCL procedure, nor a complete job.    *
//* Before using this job, you will need to make the following       *
//* modifications:                                                   *
//*                                                                  *
//* 1. Change the job card to meet your system requirements.         *
//* 2. Use a region size of at least 4M.                             *
//* 3. Review the use of the assembler SYSADATA data set name        *
//*    IDI.IDIVPASM.ADATA and its allocation on the //C.SYSADATA DD  *
//*    statement.                                                    *
//* 4. Ensure that procedure ASMACLG can be found or add an          *
//*    appropriate JCLLIB statement e.g.                             *
//*    //        JCLLIB ORDER=(ASM.SASMSAM1)                         *
//********************************************************************
//DELDS    EXEC PGM=IDCAMS
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   DATA
  DELETE IDI.IDIVPASM.ADATA PURGE
  SET MAXCC=0
/*
//IDISASM1   EXEC ASMACLG,PARM.C='ADATA,NODECK,OBJECT'
//C.SYSIN    DD *
IDISASM1 START 0
         STM   R14,R12,12(R13)
         BALR  R12,R0
         USING *,R12
         ST    R13,Save_Area+4
         LA    R13,Save_Area
*********************************************************************
*      OPEN INPUT FILE AND OUTPUT PRINT FILE
*********************************************************************
         OPEN  (INFILE,INPUT,PRINT,OUTPUT)
Main_Loop DS   0H
         GET   INFILE,Input_Record
*********************************************************************
*        Convert Fields to Binary
*********************************************************************
         LA     R4,0
         LA     R5,0
         LA     R6,0
         LA     R7,0
         PACK   WorkD,Input_Record(6)
         CVB    R5,WorkD
         PACK   WorkD,Input_Record+8(4)
         CVB    R7,WorkD
*********************************************************************
*        Calculate Sum and Product
*********************************************************************
         LR    R6,R7
         AR    R6,R5
         MR    R4,R7
*********************************************************************
*        Move Orininal Input, Sum and Product in Output_Record
*********************************************************************
         MVC   Output_Record+2(6),Input_Record        Field 1
         MVC   Output_Record+10(4),Input_Record+8    Field 2
         CVD   6,WorkD
         UNPK  Output_Record+16(7),WorkD(8)
         OI    Output_Record+22,X'F0'
         CVD   R5,WorkD
         UNPK  Output_Record+25(10),WorkD(8)
         OI    Output_Record+34,X'F0'
*********************************************************************
*        Print a line
*********************************************************************
         PUT   PRINT,Output_Record
         B     Main_Loop
EOINPUT  DS    0H
         MVC   Output_Record+2,=CL30'END OF DATA'
         PUT   PRINT,Output_Record
         CLOSE (INFILE,,PRINT)
         L     R13,Save_Area+4
         LM    R14,R12,12(R13)
         LA    R15,0
         BR    R14
*********************************************************************
*        WORKING-STORAGE AREA
*********************************************************************
Save_Area       DS 18F
WorkD           DS D
Input_Record    DS CL80
Output_Record   DS CL120
INFILE   DCB   DSORG=PS,RECFM=FB,MACRF=GM,BLKSIZE=800,                 X
               LRECL=80,DDNAME=INFILE,EODAD=EOINPUT
PRINT    DCB   DSORG=PS,RECFM=FBA,MACRF=PM,BLKSIZE=1200,               X
               LRECL=80,DDNAME=OUTFILE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END IDISASM1
/*
//C.SYSADATA DD DSN=IDI.IDIVPASM.ADATA(IDISASM1),
//         DISP=(,CATLG,),UNIT=SYSALLDA,
//         SPACE=(TRK,(5,5,2),RLSE)
//G.SYSUDUMP DD SYSOUT=*
//G.INFILE   DD *
123456  0327
222222  3333
22222g  3333
/*
//G.OUTFILE  DD SYSOUT=*
//G.IDIADATA DD DISP=SHR,DSN=IDI.IDIVPASM.ADATA

./ ADD NAME=IDIVPAS6
//IDIVPAS6 JOB (T2,129200),MVS,
//  MSGCLASS=S,CLASS=0,NOTIFY=&SYSUID
//*
//********************************************************************
//*   Licensed Materials - Property of IBM                           *
//*                                                                  *
//*   5655-Q41                                                       *
//*   Copyright HCL Technologies Ltd. 2017. All rights reserved.     *
//*                                                                  *
//*   US Government Users Restricted Rights - Use,                   *
//*   duplication or disclosure restricted by GSA ADP                *
//*   Schedule Contract with IBM Corp.                               *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* IDIVPAS6 JOB                                                     *
//*                                                                  *
//* This job will verify the installation of Fault Analyzer using    *
//* an assembler program.                                            *
//* This program runs amode64 but switches to amode31 for I/O        *
//*                                                                  *
//* Caution: This is neither a JCL procedure, nor a complete job.    *
//* Before using this job, you will need to make the following       *
//* modifications:                                                   *
//*                                                                  *
//* 1. Change the job card to meet your system requirements.         *
//* 2. Use a region size of at least 4M.                             *
//* 3. Review the use of the assembler SYSADATA data set name        *
//*    IDI.IDIVPASM.ADATA and its allocation on the //C.SYSADATA DD  *
//*    statement.                                                    *
//* 4. Ensure that procedure ASMACLG can be found or add an          *
//*    appropriate JCLLIB statement e.g.                             *
//*    //        JCLLIB ORDER=(ASM.SASMSAM1)                         *
//********************************************************************
//DELDS    EXEC PGM=IDCAMS
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   DATA
  DELETE IDI.IDIVPASM.ADATA PURGE
  SET MAXCC=0
/*
//IDISASM1   EXEC ASMACLG,PARM.C='ADATA,NODECK,OBJECT'
//C.SYSIN    DD *
IDISASM1 START 0
IDISASM1 AMODE 64
IDISASM1 RMODE ANY
         BAKR  R14,R0         Save entry registers
         BASR  R12,R0         Establish base register
         USING *,R12
         STORAGE OBTAIN,LENGTH=WLEN,LOC=24
         LGR   R13,R1
         USING WAREA,R13
         MVC   4(4,13),=C'F1SA' Acronym into back pointer
*********************************************************************
*      Initialize our DCBs
*********************************************************************
         MVC   INFILE(INFILEL),INFILEM
         LA    R2,INFILE
         USING IHADCB,R2
         LA    R3,DCBEE
         ST    R3,DCBDCBE
         DROP  R2
         MVC   PRINT(PRINTML),PRINTM
*********************************************************************
*      OPEN INPUT FILE AND OUTPUT PRINT FILE
*********************************************************************
         SAM31
         OPEN  (INFILE,INPUT),MF=(E,OPENI),MODE=31
         OPEN  (PRINT,OUTPUT),MF=(E,OPENP),MODE=31
Main_Loop DS   0H
         GET   INFILE,Input_Record
         SAM64
*********************************************************************
*        Convert Fields to Binary
*********************************************************************
         LA     R4,0
         LA     R5,0
         LA     R6,0
         LA     R7,0
         PACK   WorkD,Input_Record(6)
         CVB    R5,WorkD
         PACK   WorkD,Input_Record+8(4)
         CVB    R7,WorkD
*********************************************************************
*        Calculate Sum and Product
*********************************************************************
         LR    R6,R7
         AR    R6,R5
         MR    R4,R7
*********************************************************************
*        Move Original Input, Sum and Product in Output_Record
*********************************************************************
         MVC   Output_Record+2(6),Input_Record        Field 1
         MVC   Output_Record+10(4),Input_Record+8    Field 2
         CVD   6,WorkD
         UNPK  Output_Record+16(7),WorkD(8)
         OI    Output_Record+22,X'F0'
         CVD   R5,WorkD
         UNPK  Output_Record+25(10),WorkD(8)
         OI    Output_Record+34,X'F0'
*********************************************************************
*        Print a line
*********************************************************************
         SAM31
         PUT   PRINT,Output_Record
         B     Main_Loop
EOINPUT  DS    0H
         MVC   Output_Record+2,=CL30'END OF DATA'
         PUT   PRINT,Output_Record
         CLOSE (INFILE),MF=(E,OPENI),MODE=31
         CLOSE (PRINT),MF=(E,OPENP),MODE=31
         SAM64
         LGR   R1,R13
         STORAGE RELEASE,ADDR=(1),LENGTH=WLEN
         SGR   R15,R15
         PR
*********************************************************************
*        WORKING-STORAGE AREA
*********************************************************************
INFILEM  DCB   DSORG=PS,RECFM=FB,MACRF=GM,BLKSIZE=800,                 X
               LRECL=80,DDNAME=INFILE,DCBE=DCBM
DCBM     DCBE  EODAD=EOINPUT,LOC=ANY,RMODE31=BUFF
OPENM    OPEN  (,),MF=L,MODE=31
INFILEL  EQU   *-INFILEM
PRINTM   DCB   DSORG=PS,RECFM=FBA,MACRF=PM,BLKSIZE=1200,               X
               LRECL=80,DDNAME=OUTFILE
OPENPM   OPEN  (,),MF=L,MODE=31
PRINTML  EQU   *-PRINTM
WAREA           DSECT
Save_Area       DS 18F
WorkD           DS D
Input_Record    DS CL80
Output_Record   DS CL120
INFILE   DCB   DSORG=PS,RECFM=FB,MACRF=GM,BLKSIZE=800,                 X
               LRECL=80,DDNAME=INFILE,DCBE=DCBM
DCBEE    DCBE  EODAD=EOINPUT,LOC=ANY,RMODE31=BUFF
OPENI    OPEN  (,),MF=L,MODE=31
PRINT    DCB   DSORG=PS,RECFM=FBA,MACRF=PM,BLKSIZE=1200,               X
               LRECL=80,DDNAME=OUTFILE
OPENP    OPEN  (,),MF=L,MODE=31
WLEN     EQU   *-WAREA
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         DCBD  DSORG=PS
         END IDISASM1
/*
//C.SYSADATA DD DSN=IDI.IDIVPASM.ADATA(IDISASM1),
//         DISP=(,CATLG,),UNIT=SYSALLDA,
//         SPACE=(TRK,(5,5,2),RLSE)
//G.SYSUDUMP DD SYSOUT=*
//G.INFILE   DD *
123456  0327
222222  3333
22222g  3333
/*
//G.OUTFILE  DD SYSOUT=*
//G.IDIADATA DD DISP=SHR,DSN=IDI.IDIVPASM.ADATA

./ ADD NAME=IDIVPBLE
//IDIVPBLE JOB (T2,129200),MVS,
//  MSGCLASS=S,CLASS=0,NOTIFY=&SYSUID
//*
//********************************************************************
//*   Licensed Materials - Property of IBM                           *
//*                                                                  *
//*   5655-Q41                                                       *
//*                                                                  *
//*   Copyright IBM Corp. 2008, 2015. All rights reserved.           *
//*   Copyright HCL Technologies Ltd. 2018. All rights reserved.     *
//*                                                                  *
//*   US Government Users Restricted Rights - Use,                   *
//*   duplication or disclosure restricted by GSA ADP                *
//*   Schedule Contract with IBM Corp.                               *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* IDIVPBLE JOB                                                     *
//*                                                                  *
//* This job will verify the installation of Fault Analyzer using    *
//* an LE-compliant assembler program.                               *
//*                                                                  *
//* Caution: This is neither a JCL procedure, nor a complete job.    *
//* Before using this job, you will need to make the following       *
//* modifications:                                                   *
//*                                                                  *
//* 1. Change the job card to meet your system requirements.         *
//* 2. Use a region size of at least 4M.                             *
//* 3. Review the use of the assembler SYSADATA data set name        *
//*    IDI.IDIVPBLE.ADATA and its allocation on the //C.SYSADATA DD  *
//*    statement.                                                    *
//* 4. Ensure that procedure ASMACLG can be found or add an          *
//*    appropriate JCLLIB statement e.g.                             *
//*    //        JCLLIB ORDER=(ASM.SASMSAM1)                         *
//********************************************************************
//DELDS    EXEC PGM=IDCAMS
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   DATA
  DELETE IDI.IDIVPASM.ADATA PURGE
  SET MAXCC=0
/*
//IDISASM2   EXEC ASMACLG,PARM.C='ADATA,NODECK,OBJECT',
// PARM.G='TER(TRACE)/'
//C.SYSIN    DD *
IDISASM2 CEEENTRY AUTO=DSASZ
         USING CEECAA,R12         Common Anchor Area addressability
         USING CEEDSA,R13         Dynamic Storage Area addressability
         L     R8,=A(DCB24)
         USING DCB24,R8
*********************************************************************
*        OPEN INPUT FILE AND OUTPUT PRINT FILE
*********************************************************************
         OPEN  (INFILE,INPUT,PRINT,OUTPUT)
Main_Loop DS   0H
         GET   INFILE,Input_Record
*********************************************************************
*        Convert Fields to Binary
*********************************************************************
         LA     R4,0
         LA     R5,0
         LA     R6,0
         LA     R7,0
         PACK   WorkD,Input_Record(6)
         CVB    R5,WorkD
         PACK   WorkD,Input_Record+8(4)
         CVB    R7,WorkD
*********************************************************************
*        Calculate Sum and Product
*********************************************************************
         LR    R6,R7
         AR    R6,R5
         MR    R4,R7
*********************************************************************
*        Move Orininal Input, Sum and Product in Output_Record
*********************************************************************
         MVC   Output_Record+2(6),Input_Record        Field 1
         MVC   Output_Record+10(4),Input_Record+8    Field 2
         CVD   6,WorkD
         UNPK  Output_Record+16(7),WorkD(8)
         OI    Output_Record+22,X'F0'
         CVD   R5,WorkD
         UNPK  Output_Record+25(10),WorkD(8)
         OI    Output_Record+34,X'F0'
*********************************************************************
*        Print a line
*********************************************************************
         PUT   PRINT,Output_Record
         B     Main_Loop
EOINPUT  DS    0H
         MVC   Output_Record+2,=CL30'END OF DATA'
         PUT   PRINT,Output_Record
         CLOSE (INFILE,,PRINT)
         WTO   'IDISASM2 exit'
         LA    R15,0
         CEETERM
PPA      CEEPPA
*********************************************************************
*        WORKING-STORAGE AREA
*********************************************************************
DSA      CEEDSA
WorkD           DS D
Input_Record    DS CL80
Output_Record   DS CL120
DSASZ    EQU   *-CEEDSA      Length of DSA
*
DCB24    CSECT
DCB24    AMODE 31
DCB24    RMODE 24
INFILE   DCB   DSORG=PS,RECFM=FB,MACRF=GM,BLKSIZE=800,                 X
               LRECL=80,DDNAME=INFILE,EODAD=EOINPUT
PRINT    DCB   DSORG=PS,RECFM=FBA,MACRF=PM,BLKSIZE=1200,               X
               LRECL=80,DDNAME=OUTFILE
         CEECAA
         YREGS  ,                    REGISTER EQUATES
         END   IDISASM2
/*
//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR
//         DD DSN=SYS1.MODGEN,DISP=SHR
//         DD DSN=CEE.SCEEMAC,DISP=SHR
//C.SYSADATA DD DSN=IDI.IDIVPASM.ADATA(IDISASM2),
//         DISP=(,CATLG,),UNIT=SYSALLDA,
//         SPACE=(TRK,(5,5,2),RLSE)
//L.SYSLIB   DD DISP=SHR,DSN=CEE.SCEELKED
//G.SYSUDUMP DD SYSOUT=*
//G.INFILE   DD *
123456  0327
222222  3333
22222g  3333
/*
//G.IDITRACE DD SYSOUT=*
//G.OUTFILE  DD SYSOUT=*
//G.IDIADATA DD DISP=SHR,DSN=*.C.SYSADATA

./ ADD NAME=IDIVPC
//IDIVPC   JOB (T2,129200),MVS,
//  MSGCLASS=S,CLASS=0,NOTIFY=&SYSUID
//*
//********************************************************************
//* Licensed Materials - Property of IBM                             *
//*                                                                  *
//* 5655-Q41                                                         *
//*                                                                  *
//* Copyright IBM Corp. 2012. All rights reserved.                   *
//*                                                                  *
//* US Government Users Restricted Rights - Use,                     *
//* duplication or disclosure restricted by GSA ADP                  *
//* Schedule Contract with IBM Corp.                                 *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* IDIVPC JOB                                                       *
//*                                                                  *
//* This JCL will verify the installation of Fault Analyzer using    *
//* a C program in IDI.SIDISAM1(IDISRC1).                            *
//*                                                                  *
//* Caution: This is neither a JCL procedure, nor a complete job.    *
//* Before using this job, you will have to make the following       *
//* modifications:                                                   *
//*                                                                  *
//* 1. Change the JOB card to meet your system requirements.         *
//* 2. Review/change data set names flagged with "<=== review".      *
//*                                                                  *
//********************************************************************
//         JCLLIB ORDER=(CBC.SCCNPRC)                /* <=== review */
//*
//DELDS    EXEC PGM=IEFBR14
//DD1      DD DSN=&SYSUID..IDISRP06.DWARF,           /* <=== review */
//            DISP=(MOD,DELETE)
//*
//CCOMP    EXEC EDCCBG,CPARM='NOSHOWINC XREF OPTF(DD:OPTF)',
//         GPARM='TER(TRACE)/'
//COMPILE.SYSIN DD DISP=SHR,
//            DSN=IDI.SIDISAM1(IDISRC1)              /* <=== review */
//COMPILE.SYSCPRT DD SYSOUT=*
//COMPILE.SYSCDBG DD DSN=&SYSUID..IDISRP06.DWARF,    /* <=== review */
//            DISP=(,PASS),UNIT=SYSALLDA,
//            SPACE=(TRK,(5,5)),
//            DCB=(LRECL=1024,RECFM=FB)
//COMPILE.OPTF DD *
  SOURCE LIST OPT(0) LONGNAME FLOAT(IEEE) RENT DEBUG(FORMAT(DWARF))
//GO.IDIREPRT DD SYSOUT=*
//GO.SYSPRINT DD SYSOUT=*
//GO.CEEDUMP  DD SYSOUT=*
//GO.SYSOUT   DD SYSOUT=*
//*

./ ADD NAME=IEBCOPY
//IEBCOPY  JOB (ACCT),CNTLM,MSGCLASS=S,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*COPY RENAME IEBCOPY TO IEBCOPZ REPLACE
//ALCISPFL EXEC PGM=IEBCOPY
//*IN1       DD DSN=S28P.U1.IOA918.PROCLIB,DISP=SHR
//*IN1       DD DSN=S28P.U1.IOA918.PROCLIB,DISP=SHR
//IN1       DD DSN=&SYSUID..OSEO.MVS,DISP=SHR
//OU1       DD DSN=&SYSUID..OSEO.DELETE,DISP=SHR
//*IN1       DD DSN=S28P.U1.IOA918.PROCLIB,DISP=SHR
//*OU1       DD DSN=&SYSUID..OSEO.CNTLM,DISP=SHR
//*ISPFILE  DD DSN=&SYSUID..RAYMOND.REPORT,DISP=(MOD,DELETE,DELETE),
//*    BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
//*COPY REPLACE
  COPY INDD=((IN1,R)),OUTDD=OU1
//
  COPY INDD=IN1,OUTDD=OU1
  SELECT MEMBER=((IEBCOPY,IEBCOPZ,R))
//
  SELECT MEMBER=CTMCAS
  SELECT MEMBER=CTMAS
  SELECT MEMBER=CONTROLM
  SELECT MEMBER=CTMCMEM
  SELECT MEMBER=IOAGATE
  SELECT MEMBER=IOAENVU1
  SELECT MEMBER=IOASETU1
//
                U1CTRMCC
                U1CTRMCE
                U1CTRMCM
                U1CTRMGA
                U1CTRMP0

./ ADD NAME=IEBCOPZ
//IEBCOPY  JOB (ACCT),CNTLM,MSGCLASS=S,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*COPY RENAME IEBCOPY TO IEBCOPZ REPLACE
//ALCISPFL EXEC PGM=IEBCOPY
//*IN1       DD DSN=S28P.U1.IOA918.PROCLIB,DISP=SHR
//*IN1       DD DSN=S28P.U1.IOA918.PROCLIB,DISP=SHR
//IN1       DD DSN=&SYSUID..OSEO.MVS,DISP=SHR
//OU1       DD DSN=&SYSUID..OSEO.DELETE,DISP=SHR
//*IN1       DD DSN=S28P.U1.IOA918.PROCLIB,DISP=SHR
//*OU1       DD DSN=&SYSUID..OSEO.CNTLM,DISP=SHR
//*ISPFILE  DD DSN=&SYSUID..RAYMOND.REPORT,DISP=(MOD,DELETE,DELETE),
//*    BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
//*COPY REPLACE
  COPY INDD=((IN1,R)),OUTDD=OU1
//
  COPY INDD=IN1,OUTDD=OU1
  SELECT MEMBER=((IEBCOPY,IEBCOPZ,R))
//
  SELECT MEMBER=CTMCAS
  SELECT MEMBER=CTMAS
  SELECT MEMBER=CONTROLM
  SELECT MEMBER=CTMCMEM
  SELECT MEMBER=IOAGATE
  SELECT MEMBER=IOAENVU1
  SELECT MEMBER=IOASETU1
//
                U1CTRMCC
                U1CTRMCE
                U1CTRMCM
                U1CTRMGA
                U1CTRMP0

./ ADD NAME=IEBGENER
//IEBGENER JOB (ACCT),CNTLM,MSGCLASS=S,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*COPY RENAME IEBCOPY TO IEBCOPZ REPLACE
//ALCISPFL EXEC PGM=IEBGENER
//SYSUT1    DD DSN=&SYSUID..OSEO.MVS(LISTDD),DISP=SHR
//SYSUT2    DD SYSOUT=(*,INTRDR)
//*IN1       DD DSN=S28P.U1.IOA918.PROCLIB,DISP=SHR
//*OU1       DD DSN=&SYSUID..OSEO.CNTLM,DISP=SHR
//*ISPFILE  DD DSN=&SYSUID..RAYMOND.REPORT,DISP=(MOD,DELETE,DELETE),
//*    BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD SYSOUT=*
//SYSIN    DD DUMMY
//
//SYSIN    DD *
//*COPY REPLACE
  COPY INDD=((IN1,R)),OUTDD=OU1

./ ADD NAME=IEFBR14
//IEFBR14  JOB (ACCT),MVS,MSGCLASS=5,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//ALCISPFL EXEC PGM=IEFBR14
//*JOBLIB
//*SYSABEND
//*SYSCKEOV
//*SYSMDUMP
//*SYSUDUMP
//*SYSCHK
//*STEPLIB
//*SYSIN
//ISPFILE  DD DSN=&SYSUID..RAYMOND.REPORT,
// DISP=(MOD,DELETE,DELETE),
// DISP=(NEW,CATLG,DELETE),
// VOL=SER=DBPMEM,
// BLKSIZE=0,
// SPACE=(TRK,(3,1)),
// RECFM=FBA,
// LRECL=133,
// UNIT=SYSDA
//*ACCODE parameter.............................................................
//*AMP parameter................................................................
//*AVGREC parameter.............................................................
// BLKSIZE=32432,                                                       ........
//*BLKSZLIM parameter...........................................................
//*BURST parameter..............................................................
//*CCSID parameter..............................................................
//*CHARS parameter..............................................................
//*REQUEST THAT A CHECKPOINT BE WRITTEN WHEN EACH END-OF-VOLUME
//*CHKPT=EOV                                                            ........
//*CNTL parameter...............................................................
//*COPIES parameter.............................................................
//*DATA parameter...............................................................
//*DATACLAS parameter...........................................................
//*DCB parameter................................................................
//*DCB subparameters............................................................
//*DEST parameter...............................................................
// DISP=(NEW,CATLG,DELETE),                                             ........
//*DLM parameter................................................................
//*DSID Parameter...............................................................
//*DSKEYLBL parameter...........................................................
//*DSNAME=parameter.............................................................
//*DSNTYPE=BASIC}                                                       ........
//*        LARGE}                                                       ........
//*        EXTREQ}                                                      ........
//*        EXTPREF}                                                     ........
//*        LIBRARY}                                                     ........
//*        (LIBRARY,1)}                                                 ........
//*        (LIBRARY,2)}                                                 ........
//*        HFS }                                                        ........
//*        PDS }                                                        ........
//*        PIPE                                                         ........
//*DUMMY parameter..............................................................
//*DYNAM parameter..............................................................
//*EATTR parameter..............................................................
//*EXPDT parameter..............................................................
//*FCB parameter................................................................
//*FILEDATA parameter...........................................................
//*FLASH parameter..............................................................
//*FREE parameter...............................................................
//*FREEVOL parameter............................................................
//*GDGORDER parameter...........................................................
//*HOLD parameter...............................................................
//*KEYLABL1 parameter...........................................................
//*KEYLABL2 parameter...........................................................
//*KEYENCD1 parameter...........................................................
//*KEYENCD2 parameter...........................................................
// KEYLEN=24,                                                           ........
// KEYOFF=0,                                                            ........
//*LABEL parameter..............................................................
//*LGSTREAM parameter...........................................................
//*LIKE=U1PS.CTM918.STATFILE,                                           ........
//*LRECL=16000                                                          ........
//*MGMTCLAS parameter...........................................................
//*MODIFY parameter.............................................................
//*NULLOVRD parameter...........................................................
//*OUTLIM parameter.............................................................
//*OUTPUT parameter.............................................................
//*PATHDISP parameter...........................................................
//*PATHMODE parameter...........................................................
//*PATHOPTS parameter...........................................................
//*PROTECT parameter............................................................
//*RECFM parameter..............................................................
//*RECORG parameter.............................................................
//*REFDD parameter..............................................................
//*RETPD parameter..............................................................
//*RLS parameter................................................................
//*ROACCESS parameter...........................................................
//*SECMODEL parameter...........................................................
//*SEGMENT parameter............................................................
// SPACE=(CYL,(5,1)),                                                   ........
//*SPIN parameter...............................................................
//*STORCLAS parameter...........................................................
//*SUBSYS parameter.............................................................
//*SYMBOLS parameter............................................................
//*SYMLIST parameter............................................................
//*SYSOUT parameter.............................................................
//*TERM parameter...............................................................
//*UCS parameter................................................................
//*UNIT parameter...............................................................
// VOL=SER=BDPMEP                                                       ........

./ ADD NAME=IGDACSSC
**********************************************************************
*   LIB: SYS1.SACBCNTL(IGDACSSC)                                     *
*        ORIGINAL COPY FROM MVS CUSTOMIZATION LIBRARY                *
*   DOC: THIS PROGRAM WILL WRITE AN SMF RECORD CONTAINING THE        *
*        ACS VARIABLES WHICH WILL BE USED TO GENERATE ACS            *
*        ROUTINE TEST CASES.                                         *
*                                                                    *
*        TO USE THE DEBUG FACILITY WHICH WILL ALSO WRITE THE         *
*        ACS VARIABLES TO THE JOBLOG, ADD   ACCT=(DEBUG)             *
*        TO THE EXEC STATEMENT OF THE STEP THAT IS ALLOCATING        *
*        THE DATA SET IN QUESTION.  THIS OPTION IS ONLY              *
*        AVAILABLE FOR JES2 USERS.                                   *
*                                                                    *
**********************************************************************
*                                                                    *
*  MODULE NAME  - IGDACSSC                                           *
*                                                                    *
*PROPRIETARY V3 STATEMENT                                            *
*LICENSED MATERIALS - PROPERTY OF IBM                                *
*5694-A01                                                            *
*    COPYRIGHT 1983,2010  IBM CORP.                                  *
*END PROPRIETARY V3 STATEMENT                                        *
*                                                                    *
*  DISTRIBUTION - SAMPLE DFSMS STORAGE CLASS ACS ROUTINE USER EXIT   *
*                 SUPPLIED BY CUSTOM-BUILT IPO DEVELOPMENT GROUP.    *
*  FUNCTION     - WRITES ACS VARIABLES TO SMF RECORD TYPE 127        *
*                 EACH TIME THE STORAGE CLASS ACS ROUTINE IS         *
*                 INVOKED.                                           *
*  MODULE TYPE  - CODE                                               *
*    LANGUAGE   - BASIC ASSEMBLER LANGUAGE                           *
*                 ASSEMBLER H VERSION MUST BE USED                   *
*  MODULE SIZE  - REFER TO ASSEMBLER LISTING                         *
*   ATTRIBUTES  - REENTRANT, REFRESHABLE, RUNS IN TASK MODE,         *
*                 (KEY 0), NO LOCKS HELD, 31-BIT ADDRESSING MODE.    *
*  ENTRY POINT  - IGDACSSC                                           *
*    LINKAGE    - R1 POINTER TO PARAMETER LIST                       *
*               - R13 SAVEAREA ADDRESS                               *
*               - R14 RETURN ADDRESS                                 *
*               - R15 ENTRY POINT ADDRESS                            *
*  INPUT        - DFSMS ACS ROUTINE VARIABLES                        *
*  OUTPUT       - ACS VARIABLES WRITTEN TO SMF RECORD TYPE 127       *
*                 AND TO JOBLOG IF 'DEBUG' MODE IS SET.              *
*  EXIT NORMAL  - SET A RETURN CODE OF ZERO IN REGISTER 15 AND RETURN*
*                 TO THE CALLER BY BRANCHING ON THE CONTENTS OF      *
*                 REGISTER 14.                                       *
*                                                                    *
*  CHANGE ACTIVITY:                                                  *
*  $01=OW43758,HDZ11F0,05/24/2000,TCS: MODIFIED TO SUPPORT       ‡01A*
*                                      ADDITIONAL ACS VARIABLES  ‡01A*
*  $02=KFI0232,HDZ11F0,06/27/2001,TCS: ADDN'L ACS VARIABLES      ‡02A*
*  $03=KFI0688,HDZ11K0,12/22/2004,TCS: GT64K SUPPORT             ‡03A*
*  $04=OA13015,HDZ11K0,08/09/2005,CCY: Change FILENM to FILENUM  ‡04A*
*  $05=OA15802,HDZ11K0,06/02/2006,CCY: Update DSNtype and DSORG  ‡05A*
*  $06=OA26254,HDZ1A10,10/09/2008,IBSTG: Change DSNtype          ‡06A*
*  $07=K1B0913,HDZ1B10,10/20/2008,IBSTG: Remove MSVGP            ‡07A*
**********************************************************************
         TITLE 'NaviQuest-SUPPLIED ACS STORAGE CLASS ROUTINE EXIT'
IGDACSSC CSECT
IGDACSSC AMODE 31
IGDACSSC RMODE ANY
         USING IGDACSSC,GR15      ESTABLISH ADDRESSABILITY
         STM   GR14,GR12,12(GR13) STANDARD ENTRY LINKAGE
         L     GR6,0(GR1)         ESTABLISH ADDRESSABILITY TO
         USING ACSPMD,GR6         EXIT PARAMETER LIST
         L     GR7,ACSPWORK       ESTABLISH ADDRESSABILITY TO
         USING WORKAR1,GR7        WORK AREA
         LA    GR11,SAVEAREA      STANDARD SAVE AREA
         ST    GR13,4(GR11)       BACKWARD SAVE AREA POINTER
         ST    GR11,8(GR13)       FORWARD SAVE AREA POINTER
         LR    GR13,GR11
         LR    GR12,GR15          LOAD BASE REGISTER
         DROP  GR15
         USING IGDACSSC,GR12,GR9  ESTABLISH ADDRESSABILITY  ‡02C
         L     GR3,ACSPERO
         USING ACERO,GR3          ANCHOR ACS READ ONLY VARIABLES
         L     GR4,ACSPERW
         USING ACERW,GR4          ANCHOR ACS READ WRITE VARIABLES
         DROP  GR6
         DROP  GR7
*
*        RETURN MESSAGE INDICATING EXIT ENTERED
*
         MVC   ACERWNMG,=H'1'     INITIALIZE MESSAGE COUNT
         MVC   ACERWMSG,MSG1      MOVE MESSAGE TO RETURN AREA
*
*        TEST SMF RECORDING TURNED ON FOR USER RECORD TYPE
*
         SMFRTEST RECTYPE=SMFRECNO
         LTR   GR15,GR15 TEST SUCCESSFUL
         BZ    SETUP              YES
*
*        RETURN MESSAGE SMF NOT RECORDING ACS RECORD TYPE
*
         LH    GR0,ACERWNMG       CURRENT MESSAGE COUNT
         LR    GR1,GR0            SAVE CURRENT MESSAGE COUNT
         AH    GR0,=H'1'          BUMP CURRENT MESSAGE COUNT BY ONE
         STH   GR0,ACERWNMG       STORE NEW MESSAGE COUNT
         LA    GR2,L'ACERWMSG     LEN OF MSG RETURN AREA ENTRY
         MR    GR0,GR2            CALC OFFSET INTO MSG RETURN AREA
         LA    GR0,ACERWMSG       BEGINNING ADDR OF MSG RETURN AREA
         AR    GR1,GR0            ADDR NEXT AVAIL MSG RETURN AREA ENTRY
         MVC   0(L'ACERWMSG,GR1),MSG2 MOVE MESSAGE TO RETURN AREA
         B     TESTWTP            GO TEST LOGGING ACS VARIABLES
*
*        SETUP SMF USER RECORD
*
SETUP    DS    0H
         LA    GR2,SMFRECLN       LENGTH OF SMF RECORD
         GETMAIN R,LV=(GR2),LOC=(BELOW,ANY) GET VIRT STOR BELOW 16M
         LR    GR5,GR1            ESTABLISH ADDRESSABILITY TO
         USING SMFUSER,GR5         SMF RECORD AREA
         STH   GR2,SMFRDW
         MVI   SMFSID,X'0E'       MVS/ESA SYSTEM INDICATOR
         MVI   SMFRTYPE,SMFRECNO  SMF USER RECORD NUMBER
         TIME  BIN
         STCM  GR0,15,SMFTIME     TIME
         STCM  GR1,15,SMFDATE     DATE
         XC    SMFSYSID,SMFSYSID  CLEAR SYSTEM ID FIELD
         L     GR1,PSATOLD-PSA    ADDRESS OF CURRENT TCB
         USING TCB,GR1            ESTABLISH ADDRESSABILITY TO TCB
         ICM   GR1,15,TCBTCT      ADDRESS OF TIMING CONTROL TABLE
         BZ    BLDSMF             BYPASS IF ZERO
         DROP  GR1
         USING SMFTCT,GR1         ESTABLISH ADDRESSABILITY TO TCT
         ICM   GR1,15,TCTJMR      ADDRESS OF JOB MANAGEMENT RECORD
         BZ    BLDSMF             BYPASS IF ZERO
         DROP  GR1
         USING JMR,GR1            ESTABLISH ADDRESSABILITY TO JMR
         MVC   SMFSYSID,JMRCPUID  SYSTEM ID
BLDSMF   DS    0H
         LA    GR8,SMFROVAR       TARGET FIELD ADDRESS
         LA    GR9,ROLEN          TARGET FIELD LENGTH
         LA    GR10,ACEROD        SOURCE FIELD ADDRESS
         LA    GR11,ROLEN         SOURCE FIELD LENGTH
         MVCL  GR8,GR10           MOVE READ ONLY VARIABLES TO SMF REC
         LA    GR8,SMFRWVAR       TARGET FIELD ADDRESS
         LA    GR9,RWLEN          TARGET FIELD LENGTH
         LA    GR10,ACERWD        SOURCE FIELD ADDRESS
         LA    GR11,RWLEN         SOURCE FIELD LENGTH
         MVCL  GR8,GR10           MOVE READ WRITE VARIABLES TO SMF REC
*
*        WRITE USER RECORD TO SMF
*
         SMFWTM SMFUSER
         LTR   GR15,GR15          WRITE SUCCESSFUL
         BZ    FREEAREA           YES
*
*        RETURN MESSAGE SMFWTM FAILED
*
         LH    GR0,ACERWNMG       CURRENT MESSAGE COUNT
         LR    GR1,GR0            SAVE CURRENT MESSAGE COUNT
         AH    GR0,=H'1'          BUMP CURRENT MESSAGE COUNT BY ONE
         STH   GR0,ACERWNMG       STORE NEW MESSAGE COUNT
         LA    GR2,L'ACERWMSG     LEN OF MSG RETURN AREA ENTRY
         MR    GR0,GR2            CALC OFFSET INTO MSG RETURN AREA
         LA    GR0,ACERWMSG       BEGINNING ADDR OF MSG RETURN AREA
         AR    GR1,GR0            ADDR NEXT AVAIL MSG RETURN AREA ENTRY
         MVC   0(L'ACERWMSG,GR1),MSG3 MOVE MESSAGE TO RETURN AREA
*
*        FREE RECORD TO SMF WORKAREA
*
FREEAREA DS    0H
         LA    GR0,SMFRECLN       LENGTH OF SMF RECORD
         FREEMAIN R,LV=(GR0),A=(GR5)
         DROP  GR5
*
*        TEST IF ACS VARIABLES SHOULD BE WRITTEN TO JOBLOG
*
TESTWTP  DS    0H
         CLC   ACEROSNM,NULLS     TEST STEP ACCOUNT INFO SPECIFIED
         BE    RETURN             NO
         LA    GR5,ACEROSFL       START OF STEP ACCT INFORMATION
         XR    GR7,GR7            CLEAR REG
         XR    GR9,GR9            CLEAR REG
         ICM   GR7,1,ACEROSNM     NUMBER OF STEP ACCT FIELDS
         BCT   GR7,TESTWTP2       REDUCE NUM STEP ACCT FIELDS BY ONE
         B     TESTWTP3           ONLY ONE STEP ACCT FIELD
TESTWTP2 DS    0H
         ICM   GR9,1,0(GR5)       LENGTH OF CURRENT STEP ACCT FIELD
         LA    GR5,1(GR5)         ADDR CURRENT STEP ACCT FIELD
         AR    GR5,GR9            ADDR NEXT STEP ACCT LEN FIELD
         BCT   GR7,TESTWTP2       LOOP UNTIL ADDR LAST STEP ACCT FIELD
TESTWTP3 DS    0H
         CLC   DEBUG,1(GR5)       TEST DEBUG SPECIFIED
         BNE   RETURN             NO
GETMAIN  DS    0H
         LA    GR2,WRKARSZ        LOAD SIZE OF WORK AREA
         GETMAIN R,LV=(GR2)       GET VIRT STOR FOR WORK AREA
         LR    GR11,GR1           ESTABLISH ADDRESSABILITY TO
         USING WORKAR2,GR11       WORK AREA
*
*        SETUP TEST CASE
*
         LA    GR9,4095(,GR12)                              ‡02A
         LA    GR9,1(,GR9)                                  ‡02A
         ST    GR9,BASEADD        Save base address         ‡02A
         MVC   MVCINSTD,MVCINST   MOVE MVC INSTR TO WORK AREA
         MVC   WTOD,WTOL          INTIALIZE WTO AREA
         LA    GR8,VARWORK        VARIABLE WORKAREA WORK AREA
         CLC   ACEROJNM,NULLS     TEST JOB ACCOUNT INFO SPECIFIED
         BE    SET03              NO
         XR    GR7,GR7            CLEAR REG
         ICM   GR7,1,ACEROJNM     NUMBER OF JOB ACCT FIELDS
         LA    GR5,ACEROJFL       ADDR OF ACCT JOB1 FIELD LENGTH
         XR    GR9,GR9            CLEAR REG
         ICM   GR9,1,ACEROJFL     LENGTH OF ACCT JOB1 FIELD
         BZ    SET00A             NULL ACCT JOB1 FIELD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING ACCTJOBD,GR8       EST ADDR TO JOB ACCT DSECT
         MVC   ACCTJOBK,=C'ACCT_JOB1: ' ACCT JOB1 KEYWORD
         BAL   GR10,WTP           WTP ACCT JOB1 KEYWORD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         LA    GR6,VARWORK        TARGET JOB ACCT FIELD
         LA    GR5,1(GR0,GR5)     ADDRESS OF ACCT JOB1 FIELD
         BCTR  GR9,GR0            REDUCE LENGTH BY 1
         EX    GR9,MVCINSTD       MOVE ACCT JOB1 TO TARGET
         BAL   GR10,WTP           WTP ACCT JOB1 VALUE
SET00A   DS    0H
         BCT   GR7,SET01          MORE JOB ACCT INFO
         B     SET03              FINISHED WITH JOB ACCT INFO
SET01    DS    0H
         LA    GR5,1(GR9,GR5)     ADDRESS OF ACCT JOB2 LEN FIELD
         ICM   GR9,1,0(GR5)       LENGTH OF ACCT JOB2 FIELD
         BZ    SET01A             NULL ACCT JOB2 FIELD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         MVC   ACCTJOBK,=C'ACCT_JOB2: ' ACCT JOB2 KEYWORD
         BAL   GR10,WTP           WTP ACCT JOB2 KEYWORD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         BCTR  GR9,GR0            REDUCE LENGTH BY 1
         LA    GR6,VARWORK        TARGET JOB ACCT FIELD
         LA    GR5,1(GR0,GR5)     ADDRESS OF ACCT JOB2 FIELD
         EX    GR9,MVCINSTD       MOVE ACCT JOB2 TARGET
         BAL   GR10,WTP           WTP ACCT JOB2 VALUE
SET01A   DS    0H
         BCT   GR7,SET02          MORE JOB ACCT INFO
         B     SET03              FINISHED WITH JOB ACCT INFO
SET02    DS    0H
         LA    GR5,1(GR9,GR5)     ADDRESS OF ACCT JOB3 LEN FIELD
         ICM   GR9,1,0(GR5)       LENGTH OF ACCT JOB3 FIELD
         BZ    SET02A             NULL ACCT JOB3 FIELD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         MVC   ACCTJOBK,=C'ACCT_JOB3: ' ACCT JOB3 KEYWORD
         BAL   GR10,WTP           WTP ACCT JOB3 KEYWORD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         BCTR  GR9,GR0            REDUCE LENGTH BY 1
         LA    GR6,VARWORK        TARGET JOB ACCT FIELD
         LA    GR5,1(GR0,GR5)     ADDRESS OF ACCT JOB3 FIELD
         EX    GR9,MVCINSTD       MOVE ACCT JOB3 TARGET
         BAL   GR10,WTP           WTP ACCT JOB3 VALUE
SET02A   DS    0H
         DROP  GR8
*                                 TEST CASE ALLOWS ONLY 3 JOB ACCT FLDS
SET03    DS    0H
         CLC   ACEROSNM,NULLS     TEST STEP ACCOUNT INFO SPECIFIED
         BE    SET06              NO
         XR    GR7,GR7            CLEAR REG
         ICM   GR7,1,ACEROSNM     NUMBER OF STEP ACCT FIELDS
         LA    GR5,ACEROSFL       ADDR OF ACCT STEP1 FIELD LENGTH
         XR    GR9,GR9            CLEAR REG
         ICM   GR9,1,ACEROSFL     LENGTH OF ACCT STEP1 FIELD
         BZ    SET03A             NULL ACCT STEP1 FIELD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING ACCTSTPD,GR8       EST TO STEP ACCT DSECT
         MVC   ACCTSTPK,=C'ACCT_STEP1: ' ACCT STEP1 KEYWORD
         BAL   GR10,WTP           WTP ACCT STEP1 KEYWORD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         LA    GR6,VARWORK        TARGET STEP ACCT FIELD
         LA    GR5,1(GR0,GR5)     ADDRESS OF ACCT STEP1 FIELD
         BCTR  GR9,GR0            REDUCE LENGTH BY 1
         EX    GR9,MVCINSTD       MOVE ACCT STEP1 TO TARGET
         BAL   GR10,WTP           WTP ACCT STEP1 VALUE
SET03A   DS    0H
         BCT   GR7,SET04          MORE STEP ACCT INFO
         B     SET06              FINISHED WITH STEP ACCT INFO
SET04    DS    0H
         LA    GR5,1(GR9,GR5)     ADDRESS OF ACCT STEP2 LEN FIELD
         ICM   GR9,1,0(GR5)       LENGTH OF ACCT STEP2 FIELD
         BZ    SET04A             NULL ACCT STEP2 FIELD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         MVC   ACCTSTPK,=C'ACCT_STEP2: ' ACCT STEP2 KEYWORD
         BAL   GR10,WTP           WTP ACCT STEP2 KEYWORD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         LA    GR6,VARWORK        TARGET STEP ACCT FIELD
         BCTR  GR9,GR0            REDUCE LENGTH BY 1
         LA    GR5,1(GR0,GR5)     ADDRESS OF ACCT STEP2 FIELD
         EX    GR9,MVCINSTD       MOVE ACCT STEP2 TARGET
         BAL   GR10,WTP           WTP ACCT STEP2 VALUE
SET04A   DS    0H
         BCT   GR7,SET05          MORE STEP ACCT INFO
         B     SET06              FINISHED WITH STEP ACCT INFO
SET05    DS    0H
         LA    GR5,1(GR9,GR5)     ADDRESS OF ACCT STEP3 LEN FIELD
         ICM   GR9,1,0(GR5)       LENGTH OF ACCT STEP3 FIELD
         BZ    SET05A             NULL ACCT STEP3 FIELD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         MVC   ACCTSTPK,=C'ACCT_STEP3: ' ACCT STEP3 KEYWORD
         BAL   GR10,WTP           WTP ACCT STEP3 KEYWORD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         LA    GR6,VARWORK        TARGET STEP ACCT FIELD
         BCTR  GR9,GR0            REDUCE LENGTH BY 1
         LA    GR5,1(GR0,GR5)     ADDRESS OF ACCT STEP3 FIELD
         EX    GR9,MVCINSTD       MOVE ACCT STEP3 TARGET
         BAL   GR10,WTP           WTP ACCT STEP3 VALUE
SET05A   DS    0H
         DROP  GR8
*                                 TEST CASE ALLOWS ONLY 3 STP ACCT FLDS
SET06    DS    0H
         L     GR9,BASEADD        Load base address         ‡02A
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING ACSENVD,GR8        EST ADDR TO ACSENVIR DSECT
         MVC   ACSENVK,=C'ACSENVIR: ' ACSENVIR KEYWORD
         MVC   ACSENVV,ACEROENV   ACSENVIR VALUE
         BAL   GR10,WTP           WTP ACSENVIR ENTRY
         DROP  GR8
         CLC   ACEROAPP,NULLS     TEST APPL ID SPECIFIED
         BE    SET07              NO
         CLC   ACEROAPP,BLANKS    TEST APPL PRIMED WITH BLANKS
         BE    SET07              YES
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING APPLICD,GR8        EST ADDR TO APPL ID DSECT
         MVC   APPLICK,=C'APPLIC: ' APPL ID KEYWORD
         MVC   APPLICV,ACEROAPP   APPL ID VALUE
         BAL   GR10,WTP           WTP APPL ID ENTRY
         DROP  GR8
SET07    DS    0H
         CLC   ACERODCV,NULLS     TEST DATACLAS SPECIFIED
         BE    SET08              NO
         CLC   ACERODCV,BLANKS    TEST DATACLAS PRIMED WITH BLANKS
         BE    SET08              YES
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING DATACLD,GR8        EST ADDR TO DATACLAS DSECT
         MVC   DATACLK,=C'DATACLAS: ' DATACLAS KEYWORD
         MVC   DATACLV,ACERODCV   DATACLAS VALUE
         BAL   GR10,WTP           WTP DATACLASS ENTRY
         DROP  GR8
SET08    DS    0H
         CLC   ACERODD,NULLS      TEST DDNAME SPECIFIED
         BE    SET09              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING DDD,GR8            EST ADDR TO DDNAME DSECT
         MVC   DDK,=C'DD: '       DDBNAME KEYWORD
         MVC   DDV,ACERODD        DDNAME VALUE
         BAL   GR10,WTP           WTP DDNAME ENTRY
         DROP  GR8
SET09    DS    0H
         CLC   ACERODDV,NULLS     TEST DEFAULT DATACLAS SPECIFIED
         BE    SET10              NO
         CLC   ACERODDV,BLANKS    TEST DEFAULT DATACLAS BLANKS
         BE    SET10              YES
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING DEFDCD,GR8         EST ADDR TO DEFAULT DATACLAS DSECT
         MVC   DEFDCK,=C'DEF_DATACLAS: ' DEFAULT DATACLAS KEYWORD
         MVC   DEFDCV,ACERODDV    DEFAULT DATACLAS VALUE
         BAL   GR10,WTP           WTP DEFAULT DATACLASS ENTRY
         DROP  GR8
SET10    DS    0H
         CLC   ACERODMV,NULLS     TEST DEFAULT MGMTCLAS SPECIFIED
         BE    SET11              NO
         CLC   ACERODMV,BLANKS    TEST DEFAULT MGMTCLAS BLANKS
         BE    SET11              YES
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING DEFMCD,GR8         EST ADDR TO DEFAULT MGMTCLAS DSECT
         MVC   DEFMCK,=C'DEF_MGMTCLAS: ' DEFAULT MGMTCLAS KEYWORD
         MVC   DEFMCV,ACERODMV    DEFAULT MGMTCLAS VALUE
         BAL   GR10,WTP           WTP DEFAULT MGMTCLASS ENTRY
         DROP  GR8
SET11    DS    0H
         CLC   ACERODSV,NULLS     TEST DEFAULT STORCLAS SPECIFIED
         BE    SET12              NO
         CLC   ACERODSV,BLANKS    TEST DEFAULT STORCLAS BLANKS
         BE    SET12              YES
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING DEFSCD,GR8         EST ADDR TO DEFAULT STORCLAS DSECT
         MVC   DEFSCK,=C'DEF_STORCLAS: ' DEFAULT STORCLAS KEYWORD
         MVC   DEFSCV,ACERODSV    DEFAULT STORCLAS VALUE
         BAL   GR10,WTP           WTP DEFAULT STORCLASS ENTRY
         DROP  GR8
SET12    DS    0H
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING DSND,GR8           EST TO DSNAME DSECT
         MVC   DSNK,=C'DSN: '     DSNAME KEYWORD
         MVC   DSNV,ACERODSN      DSNAME VALUE
         BAL   GR10,WTP           WTP DSNAME ENTRY
         DROP  GR8
         CLC   ACERODSG,NULLS     TEST DSORG SPECIFIED
         BE    SET14              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING DSORGD,GR8         EST ADDR TO DSORG DSECT
         MVC   DSORGK,=C'DSORG: ' DSORG KEYWORD
         CLI   ACERODSG+3,ACEROPS TEST PS DSORG
         BNE   SET13A             NO
         MVC   DSORGV,=C'PS'      PS DSORG VALUE
         B     SET13WTP
SET13A   DS    0H
         CLI   ACERODSG+3,ACEROPO TEST PO DSORG
         BNE   SET13B             NO
         MVC   DSORGV,=C'PO'      PO DSORG VALUE
         B     SET13WTP
SET13B   DS    0H
         CLI   ACERODSG+3,ACEROVS TEST VS DSORG
         BNE   SET13C             NO
         MVC   DSORGV,=C'VS'      VS DSORG VALUE
         B     SET13WTP
SET13C   DS    0H
         CLI   ACERODSG+3,ACERODA TEST DA DSORG
         BNE   SET13D             NO
         MVC   DSORGV,=C'DA'      VS DSORG VALUE
         B     SET13WTP
SET13D   CLI   ACERODSG+3,ACEROEXC TEST EXC DSORG             ‡05A
         BNE   SET13E             NO                          ‡05A
         MVC   DSORGV,=C'EP'      VS DSORG VALUE              ‡05A
         B     SET13WTP                                       ‡05A
SET13E   DS    0H                                             ‡05A
         CLI   ACERODSG+3,ACEROEXR TEST EXR DSORG             ‡05A
         BNE   SET13F             NO                          ‡05A
         MVC   DSORGV,=C'ER'      VS DSORG VALUE              ‡05A
         B     SET13WTP                                       ‡05A
SET13F   DS    0H                                             ‡05A
         DC    X'00'              FORCE 0C1
         DC    C'DSORG'           UNKNOWN DSORG
SET13WTP DS    0H
         BAL   GR10,WTP           WTP DSORG ENTRY
         DROP  GR8
SET14    DS    0H
         CLC   ACERODSO,NULLS     TEST DS OWNER SPECIFIED
         BE    SET15              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING DSOWNERD,GR8       EST ADDR TO DS OWNER DSECT
         MVC   DSOWNERK,=C'DSOWNER: ' DS OWNER KEYWORD
         MVC   DSOWNERV,ACERODSO  DS OWNER VALUE
         BAL   GR10,WTP           WTP DS OWNER ENTRY
         DROP  GR8
SET15    DS    0H
         CLC   ACERODST,NULLS     TEST DSTYPE SPECIFIED
         BE    SET17              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING DSTYPED,GR8        EST ADDR TO DSTYPE DSECT
         MVC   DSTYPEK,=C'DSTYPE: ' DSTYPE KEYWORD
         CLI   ACERODST+3,ACEROGDS TEST GDS DSTYPE
         BNE   SET16A             NO
         MVC   DSTYPEV,=C'GDS     ' GDS DSTYPE VALUE
         B     SET16WTP
SET16A   DS    0H
         CLI   ACERODST+3,ACEROPRM TEST PRM DSTYPE
         BNE   SET16B             NO
         MVC   DSTYPEV,=C'PERM    ' PERM DSTYPE VALUE
         B     SET16WTP
SET16B   DS    0H
         CLI   ACERODST+3,ACEROTMP TEST TEMP DSTYPE
         BNE   SET16C             NO
         MVC   DSTYPEV,=C'TEMP    ' TEMP DSTYPE VALUE
         B     SET16WTP
SET16C   DS    0H
         DC    X'00'              FORCE 0C1 ABEND
         DC    C'DSTYPE'          UNKNOWN DSTYPE
         DS    0H
SET16WTP DS    0H
         BAL   GR10,WTP           WTP DSTYPE ENTRY
         DROP  GR8
SET17    DS    0H
         CLC   ACEROEXP,NULLS     TEST EXPDT SPECIFIED
         BE    SET18              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING EXPDTD,GR8         EST ADDR TO EXPDT DSECT
         MVC   EXPDTK,=C'EXPDT: ' EXPDT KEYWORD
         UNPK  EXPDTV,ACEROEXP    EXPDT VALUE
         OI    EXPDTV+6,X'F0'     UNSIGN
         BAL   GR10,WTP           WTP EXPDT ENTRY
         DROP  GR8
SET18    DS    0H
         CLC   ACEROGRP,NULLS     TEST GROUPID SPECIFIED
         BE    SET19              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING GROUPD,GR8         EST ADDR TO GROUPID DSECT
         MVC   GROUPK,=C'GROUP: ' GROUPID KEYWORD
         MVC   GROUPV,ACEROGRP    GROUPD VALUE
         BAL   GR10,WTP           WTP GROUPID ENTRY
         DROP  GR8
SET19    DS    0H
         CLC   ACEROJOB,NULLS     TEST JOBNAME SPECIFIED
         BE    SET20              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING JOBD,GR8           EST ADDR TO JOBNAME DSECT
         MVC   JOBK,=C'JOB: '     JOBNAME KEYWORD
         MVC   JOBV,ACEROJOB      JOBNAME VALUE
         BAL   GR10,WTP           WTP JOBNAME ENTRY
         DROP  GR8
SET20    DS    0H
         CLC   ACEROMSZ,NULLS     TEST MAX DS SIZE SPECIFIED
         BE    SET21              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING MAXSIZED,GR8       EST ADDR TO MAX SIZE DSECT
         MVC   MAXSIZEK,=C'MAXSIZE: ' MAX SIZE KEYWORD
         L     GR7,ACEROMSZ       MAX DS SIZE IN KB
         CVD   GR7,DW             CONVERT TO DECIMAL
         UNPK  MAXSIZEV,DW        UNPACK
         OI    MAXSIZEV+5,X'F0'   UNSIGN
         BAL   GR10,WTP           WTP MAX SIZE ENTRY
         DROP  GR8
SET21    DS    0H
         CLC   ACEROMCV,NULLS     TEST MGMTCLAS SPECIFIED
         BE    SET23              NO                               ‡07C
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING MGMTCLD,GR8        EST ADDR TO MGMTCLAS DSECT
         MVC   MGMTCLK,=C'MGMTCLAS: ' MGMTCLAS KEYWORD
         MVC   MGMTCLV,ACEROMCV   MGMTCLAS VALUE
         BAL   GR10,WTP           WTP MGMTCLASS ENTRY
         DROP  GR8
* SET22    DS    0H                                                ‡07D
*          CLC   ACEROMVG,NULLS     TEST MSS VOL GRP  NAME SPECIF  ‡07D
*          BE    SET23              NO                             ‡07D
*          MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANK‡07D
*          USING MSVGPD,GR8         EST ADDR TO MSVGPD DSECT       ‡07D
*          MVC   MSVGPK,=C'MSVGPD: ' MSVGPD KEYWORD                ‡07D
*          MVC   MSVGPV,ACEROMVG    MSVGPD VALUE                   ‡07D
*          BAL   GR10,WTP           WTP MSVGPD ENTRY               ‡07D
*          DROP  GR8                                               ‡07D
SET23    DS    0H
         CLC   ACERONVL,NULLS     TEST NVOL INFO SPECIFIED
         BE    SET24              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING NVOLD,GR8           EST ADDR TO NVOL DSECT
         MVC   NVOLK,=C'NVOL: '   NVOL KEYWORD
         LH    GR7,ACERONVL       BINARY NVOL
         CVD   GR7,DW             CONVERT TO DECIMAL
         UNPK  NVOLV,DW           UNPACK
         OI    NVOLV+1,X'F0'      UNSIGN
         BAL   GR10,WTP           WTP NVOL ENTRY
         DROP  GR8
SET24    DS    0H
         CLC   ACEROPGM,NULLS     TEST PGM NAME SPECIFIED
         BE    SET25              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING PGMD,GR8           EST ADDR TO PGM NAME DSECT
         MVC   PGMK,=C'PGM: '     PGM NAME KEYWORD
         MVC   PGMV,ACEROPGM      PGM NAME VALUE
         BAL   GR10,WTP           WTP PGM NAME ENTRY
         DROP  GR8
SET25    DS    0H
         CLC   ACERORCG,NULLS     TEST RECORG SPECIFIED
         BE    SET27              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING RECORGD,GR8        EST ADDR TO RECORG DSECT
         MVC   RECORGK,=C'RECORG: ' RECORG KEYWORD
         CLI   ACERORCG+3,ACEROKS TEST KS RECORG
         BNE   SET26A             NO
         MVC   RECORGV,=C'KS'     KS RECORG VALUE
         B     SET26WTP
SET26A   DS    0H
         CLI   ACERORCG+3,ACEROES TEST ES RECORG
         BNE   SET26B             NO
         MVC   RECORGV,=C'ES'     ES RECORG VALUE
         B     SET26WTP
SET26B   DS    0H
         CLI   ACERORCG+3,ACERORR TEST RR RECORG
         BNE   SET26C             NO
         MVC   RECORGV,=C'RR'     ES RECORG VALUE
         B     SET26WTP
SET26C   DS    0H
         CLI   ACERORCG+3,ACEROLS TEST LS RECORG
         BNE   SET26D             NO
         MVC   RECORGV,=C'LS'     ES RECORG VALUE
         B     SET26WTP
SET26D   DS    0H
         DC    X'00'              FORCE 0C1 ABEND
         DC    C'RECORG'          UNKNOWN RECORG
         DS    0H
SET26WTP DS    0H
         BAL   GR10,WTP           WTP RECORG ENTRY
         DROP  GR8
SET27    DS    0H
         CLC   ACERORTP,NULLS     TEST RETPD SPECIFIED
         BE    SET28              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING RETPDD,GR8         EST ADDR TO RETPD DSECT
         MVC   RETPDK,=C'RETPD: ' RETPD KEYWORD
         L     GR7,ACERORTP       BINARY RETPD
         CVD   GR7,DW             CONVERT TO DECIMAL
         UNPK  RETPDV,DW          UNPACK
         OI    RETPDV+3,X'F0'     UNSIGN
         BAL   GR10,WTP           WTP RETPD ENTRY
         DROP  GR8
SET28    DS    0H
         CLC   ACEROSIZ,NULLS     TEST PRIMARY DS SIZE SPECIFIED
         BE    SET29              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING SIZED,GR8          EST ADDR TO SIZE DSECT
         MVC   SIZEK,=C'SIZE: '   SIZE KEYWORD
         L     GR7,ACEROSIZ       PRIMARY DS SIZE IN KB
         CVD   GR7,DW             CONVERT TO DECIMAL
         UNPK  SIZEV,DW           UNPACK
         OI    SIZEV+5,X'F0'      UNSIGN
         BAL   GR10,WTP           WTP SIZE ENTRY
         DROP  GR8
SET29    DS    0H
         CLC   ACEROSCV,NULLS     TEST STORCLAS SPECIFIED
         BE    SET30              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING STORCLD,GR8        EST ADDR TO STORCLAS DSECT
         MVC   STORCLK,=C'STORCLAS: ' STORCLAS KEYWORD
         MVC   STORCLV,ACEROSCV   STORCLAS VALUE
         BAL   GR10,WTP           WTP STORCLASS ENTRY
         DROP  GR8
SET30    DS    0H
         CLC   ACEROUNT,NULLS     TEST UNIT NAME SPECIFIED
         BE    SET31              NO
         CLC   ACEROUNT,BLANKS    TEST UNIT NAME PRIMED WITH BLANKS
         BE    SET31              YES
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING UNITD,GR8          EST ADDR TO UNIT DSECT
         MVC   UNITK,=C'UNIT: '   UNIT KEYWORD
         MVC   UNITV,ACEROUNT     UNIT VALUE
         BAL   GR10,WTP           WTP UNIT ENTRY
         DROP  GR8
SET31    DS    0H
         CLC   ACEROUSR,NULLS     TEST USERID SPECIFIED
         BE    SET32              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING USERD,GR8          EST ADDR TO USERID DSECT
         MVC   USERK,=C'USER: '   USERID KEYWORD
         MVC   USERV,ACEROUSR     USERID VALUE
         BAL   GR10,WTP           WTP USERID ENTRY
         DROP  GR8
SET32    DS    0H
         CLC   ACEROVOL,NULLS     TEST VOLSER INFO SPECIFIED
         BE    SET34              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING VOLD,GR8           EST ADDR TO VOL DSECT
         MVC   VOLK,=C'VOL: '     VOL KEYWORD
         LA    GR7,ACEROVOL       BEGINNING OF VOLSERS
         L     GR6,=F'1'          INITIALIZE VOLSER COUNT
SET33A   DS    0H
         LA    GR7,6(GR0,GR7)     ADDRESS OF NEXT VOLSER FIELD
         CLC   0(6,GR7),NULLS     TEST END OF VOLSERS
         BE    SET33B             YES
         LA    GR6,1(GR0,GR6)     INCREASE VOLSER COUNT
         B     SET33A             CONTINUE
SET33B   DS    0H
         CVD   GR6,DW             PACKED DECIMAL VOLSER COUNT
         UNPK  VOLN,DW            UNPACK
         OI    VOLN+1,X'F0'       UNSIGN
         BAL   GR10,WTP           WTP VOL HEADER ENTRY
         LA    GR7,ACEROVOL-6     BEGINNING ADDR OF VOLSERS MINUS 6
SET33C   DS    0H
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         LA    GR7,6(GR0,GR7)     ADDRESS OF NEXT VOLSER
         MVC   VARWORK(6),0(GR7) VOLSER VALUE
         BAL   GR10,WTP           WTP VOLSER ENTRY
         BCT   GR6,SET33C         CONTINUE UNTIL ALL VOLSERS PROCESSED
         DROP  GR8
SET34    DS    0H
         CLC   ACEROXMD,NULLS     TEST XMODE SPECIFIED
         BE    SET36              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING XMODED,GR8         EST ADDR TO DSTYPE DSECT
         MVC   XMODEK,=C'XMODE: ' XMODE KEYWORD
         CLI   ACEROXMD+3,ACEROBCH TEST BATCH XMODE
         BNE   SET35A             NO
         MVC   XMODEV,=C'BATCH   ' BATCH XMODE VALUE
         B     SET35WTP
SET35A   DS    0H
         CLI   ACEROXMD+3,ACEROTSO TEST TSO XMODE
         BNE   SET35B             NO
         MVC   XMODEV,=C'TSO     ' TSO XMODE VALUE
         B     SET35WTP
SET35B   DS    0H
         CLI   ACEROXMD+3,ACEROTSK TEST STARTED TASK XMODE
         BNE   SET35C             NO
         MVC   XMODEV,=C'TASK    ' STARTED TASK XMODE VALUE
         B     SET35WTP
SET35C   DS    0H
         DC    X'00'              FORCE 0C1 ABEND
         DC    C'MODE'            UNKNOWN XMODE
SET35WTP DS    0H
         BAL   GR10,WTP           WTP XMODE ENTRY
         DROP  GR8
SET36    DS    0H                                          155‡01A
         CLC   ACEROSYS,NULLS     TEST SYSTEM SPECIFIED
         BE    SET37              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING SYSNAMD,GR8        EST ADDR TO SYSTEM DSECT
         MVC   SYSNAMK,=C'SYSNAME: '   SYSTEM KEYWORD
         MVC   SYSNAMV,ACEROSYS   SYSTEM VALUE
         BAL   GR10,WTP            PUT SYSTEM ENTRY
         DROP  GR8
SET37    DS    0H
         CLC   ACEROSPX,NULLS     TEST SYSPLEX SPECIFIED
         BE    SET38              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING SYSPLXD,GR8        EST ADDR TO SYSPLEX DSECT
         MVC   SYSPLXK,=C'SYSPLEX: '   SYSPLEX KEYWORD
         MVC   SYSPLXV,ACEROSPX   SYSPLEX VALUE
         BAL   GR10,WTP            PUT SYSPLEX ENTRY
         DROP  GR8
SET38    DS    0H
         CLC   ACEROSGV,NULLS     TEST STORGRP SPECIFIED
         BE    SET39              NO
         CLC   ACEROSGV,BLANKS    TEST STORGRP PRIMED WITH BLANKS
         BE    SET39              YES
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING STORGPD,GR8        EST ADDR TO STORGRP DSECT
         MVC   STORGPK,=C'STORGRP: '   STORGRP KEYWORD
         MVC   STORGPV,ACEROSGV   STORGRP VALUE
         BAL   GR10,WTP            PUT STORGRP ENTRY
         DROP  GR8
SET39    DS    0H
         CLC   ACERODNT,NULLS        TEST DSNTYPE SPECIFIED
         BE    SET40                 NO
         MVC   VARWORK,BLANKS        INIT VARIABLE WORKAREA TO BLANKS
         USING DSNTYPD,GR8           EST ADDR TO DSNTYPE DSECT
         MVC   DSNTYPK,=C'DSNTYPE: ' DSNTYPE KEYWORD
         CLI   ACERODNT+3,ACEROLIB   IS DSNTYPE = LIBRARY ?
         BNE   SET39A
         MVC   DSNTYPV,=C'LIBRARY '  DSNTYPE = LIBRARY
         B     SET39WTP
SET39A   DS    0H
         CLI   ACERODNT+3,ACEROPDS   IS DSNTYPE = PDS ?
         BNE   SET39B
         MVC   DSNTYPV,=C'PDS     '  DSNTYPE = PDS
         B     SET39WTP
SET39B   DS    0H
         CLI   ACERODNT+3,ACEROHFS   IS DSNTYPE = HFS ?
         BNE   SET39C
         MVC   DSNTYPV,=C'HFS     '  DSNTYPE = HFS
         B     SET39WTP
SET39C   DS    0H
         CLI   ACERODNT+3,ACEROPIP   IS DSNTYPE = PIPE ?
         BNE   SET39D
         MVC   DSNTYPV,=C'PIPE    '  DSNTYPE = PIPE
         B     SET39WTP
SET39D   DS    0H
         CLI   ACERODNT+3,ACEROEXR   IS DSNTYPE = EXR ?
         BNE   SET39E
         MVC   DSNTYPV,=C'EXR     '  DSNTYPE = EXTENDED REQUIRED   ‡06C
         B     SET39WTP
SET39E   DS    0H
         CLI   ACERODNT+3,ACEROEXC   IS DSNTYPE = EXC ?
         BNE   SET39F
         MVC   DSNTYPV,=C'EXC     '  DSNTYPE = EXTENDED PREFERRED  ‡06C
         B     SET39WTP
SET39F   DS    0H
         CLI   ACERODNT+3,ACEROLRG   IS DSNTYPE = LARGE ?          ‡03A
         BNE   SET39G                                              ‡03A
         MVC   DSNTYPV,=C'LARGE   '  DSNTYPE = LARGE               ‡06C
         B     SET39WTP                                            ‡03A
SET39G   DS    0H
         CLI   ACERODNT+3,ACEROBAS   IS DSNTYPE = BASIC ?          ‡05A
         BNE   SET39H                                              ‡05A
         MVC   DSNTYPV,=C'BASIC   '  DSNTYPE = BASIC               ‡05A
         B     SET39WTP                                            ‡05A
SET39H   DS    0H                                                  ‡05A
         DC    X'00'                FORCE 0C1 ABEND
         DC    C'DSNTYPE'           UNKNOWN DSNTYPE
SET39WTP DS    0H
         BAL   GR10,WTP              PUT DSNTYPE ENTRY
         DROP  GR8
SET40    DS    0H
         CLC   ACEROLBL,NULLS       TEST LABEL SPECIFIED
         BE    SET41                NO
         MVC   VARWORK,BLANKS       INIT VARIABLE WORKAREA TO BLANKS
         USING LABELD,GR8           EST ADDR TO LABEL DSECT
         MVC   LABELK,=C'LABEL: '   LABEL KEYWORD
         CLI   ACEROLBL+3,ACERONL   IS LABEL = NL ?
         BNE   SET40A
         MVC   LABELV,=C'NL '       LABEL=(,NL)
         B     SET40WTP
SET40A   DS    0H
         CLI   ACEROLBL+3,ACEROSL   IS LABEL = SL ?
         BNE   SET40B
         MVC   LABELV,=C'SL '       LABEL=(,SL)
         B     SET40WTP
SET40B   DS    0H
         CLI   ACEROLBL+3,ACEROAL   IS LABEL = AL  ?
         BNE   SET40C
         MVC   LABELV,=C'AL '       LABEL=(,AL)
         B     SET40WTP
SET40C   DS    0H
         CLI   ACEROLBL+3,ACERONSL  IS LABEL = NSL ?
         BNE   SET40D
         MVC   LABELV,=C'NSL'       LABEL=(,NSL)
         B     SET40WTP
SET40D   DS    0H
         CLI   ACEROLBL+3,ACEROSUL  IS LABEL = SUL ?
         BNE   SET40E
         MVC   LABELV,=C'SUL'       LABEL=(,SUL)
         B     SET40WTP
SET40E   DS    0H
         CLI   ACEROLBL+3,ACEROAUL  IS LABEL = AUL ?
         BNE   SET40F
         MVC   LABELV,=C'AUL'       LABEL=(,AUL)
         B     SET40WTP
SET40F   DS    0H
         CLI   ACEROLBL+3,ACEROBLP  IS LABEL = BLP ?
         BNE   SET40G
         MVC   LABELV,=C'BLP'       LABEL=(,BLP)
         B     SET40WTP
SET40G   DS    0H
         CLI   ACEROLBL+3,ACEROLTM  IS LABEL = LTM ?
         BNE   SET40H
         MVC   LABELV,=C'LTM'       LABEL=(,BLP)
         B     SET40WTP
SET40H   DS    0H
         DC    X'00'                FORCE 0C1 ABEND
         DC    C'LABEL'             UNKNOWN LABEL TYPE
SET40WTP DS    0H
         BAL   GR10,WTP              PUT LABEL ENTRY
         DROP  GR8
SET41    DS    0H
         CLC   ACEROFNO,NULLS     TEST TAPE FILE SEQUENCE NO. SPECIFIED
         BE    SET42              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING FILENMD,GR8        EST ADDR TO FILENUM DSECT
         MVC   FILENMK,=C'FILENUM: '  FILENUM KEYWORD              ‡04C
         L     GR7,ACEROFNO       FILE SEQUENCE NUMBER
         CVD   GR7,DW             CONVERT TO DECIMAL
         UNPK  FILENMV,DW         UNPACK
         OI    FILENMV+5,X'F0'    UNSIGN
         BAL   GR10,WTP            PUT FILENUM ENTRY
         DROP  GR8
SET42    DS    0H
         CLC   ACEROTLB,NULLS     TEST LIBRARY NAME SPECIFIED
         BE    SET43              NO
         CLC   ACEROTLB,BLANKS    TEST LIBRARY NAME SPECIFIED
         BE    SET43              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING LIBNAMD,GR8        EST ADDR TO LIBNAME DSECT
         MVC   LIBNAMK,=C'LIBNAME: '   LIBNAME KEYWORD
         MVC   LIBNAMV,ACEROTLB   LIBNAME VALUE
         BAL   GR10,WTP            PUT LIBNAME ENTRY
         DROP  GR8
SET43    DS    0H
         CLC   ACEROBLK,NULLS     TEST BLOCK SIZE SPECIFIED
         BE    SET44              NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING BLKSIZED,GR8       EST ADDR TO BLOCK SIZE DSECT
         MVC   BLKSIZEK,=C'BLKSIZE: ' BLOCK SIZE KEYWORD
         L     GR7,ACEROBLK       BLOCK SIZE
         CVD   GR7,DW             CONVERT TO DECIMAL
         UNPK  BLKSIZEV,DW        UNPACK
         OI    BLKSIZEV+9,X'F0'   UNSIGN
         BAL   GR10,WTP           WTP BLOCK SIZE ENTRY
         DROP  GR8
SET44    DS    0H
         CLC   ACEROMEM,NULLS     NULL MEMN FIELD         122‡02A
         BE    SET45
         CLC   ACEROMEM,BLANKS    BLANK MEMN SPECIFIED
         BE    SET45
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING MEMND,GR8          EST ADDR TO MEMN DSECT
         MVC   MEMNK,=C'MEMN: '   MEMN KEYWORD
         MVC   MEMNV,ACEROMEM     MEMN VALUE
         BAL   GR10,WTP           WTP MEMN ENTRY
         DROP  GR8
         DROP  GR4
         XR    GR9,GR9            CLEAR REGISTER
         LA    GR9,44             LOAD WITH MAX LENGTH OF MEMN
         XR    GR4,GR4            CLEAR REGISTER
         LA    GR5,ACEROMEM       ADDRESS OF MEMN FIELD
         LA    GR1,1
SET44A   XR    GR7,GR7            CLEAR LENGTH OF QUALIFIER
         AH    GR4,=H'1'          INCREMENT NO. OF QUALIFIERS
SET44B   CLI   0(GR5),C'.'        COMPARE WITH PERIOD
         BZ    SET44C             YES, DISPLAY HIGH LEVEL QUALIFIER
         CLI   0(GR5),C' '        COMPARE WITH BLANK
         BZ    SET44E             YES, DISPLAY LOW LEVEL QUALIFIER
         AH    GR7,=H'1'          INCREMENT COUNT
         LA    GR5,1(GR5)         INCREMENT BY 1
         BCTR  GR9,GR0            DECREMENT THE LENGTH
         LTR   GR9,GR9            IF ZERO, BRANCH TO DISPLAY LLQ AND
         BZ    SET44E             NO OF QUALIFIERS
         B     SET44B
SET44C   CR    GR4,GR1            COMPARE NO OF QUALIFIERS WITH 1
         BNZ   SET44D             NO
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING MEMHLQD,GR8        ESTABLISH ADDRESS TO MEMHLQ DSECT
         MVC   MEMHLQK,=C'MEMHLQ: ' MEMHLQ KEYWORD
         BAL   GR10,WTP WTP MEMHLQ KEYWORD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         LA    GR6,VARWORK
         SR    GR5,GR7
         SH    GR7,=H'1'          DECREMENT BY 1
         EX    GR7,MVCINSTD       MEMHLQ VALUE
         BAL   GR10,WTP           WTP MEMHLQ VALUE
         DROP  GR8
         LA    GR5,1(GR5)
         AR    GR5,GR7            POINT TO THE START OF NEXT QUALIFIER
SET44D   LA    GR5,1(GR5)         BRANCH TO CONTINUE COMPARING WITH
         B     SET44A             PERIOD
SET44E   DS    0H
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING MEMLLQD,GR8        ESTABLISH ADDRESS TO MEMLLQ DSECT
         MVC   MEMLLQK,=C'MEMLLQ: ' MEMLLQ KEYWORD
         BAL   GR10,WTP           WTP MEMLLQ KEYWORD
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         LA    GR6,VARWORK
         SR    GR5,GR7
         SH    GR7,=H'1'          DECREMENT BY 1
         EX    GR7,MVCINSTD       WTP MEMLLQ
         BAL   GR10,WTP
         DROP  GR8
SET44F   DS    0H
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING MEMNQLD,GR8        ESTABLISH ADDRESS TO MEMNQUAL DSECT
         MVC   MEMNQLK,=C'MEMNQUAL: ' MEMNQUAL KEYWORD
         CVD   GR4,DW             CONVERT TO DECIMAL
         UNPK  MEMNQLV,DW         UNPACK
         OI    MEMNQLV+1,X'F0'    UNSIGN
         BAL   GR10,WTP           WTP MEMNQUAL
         DROP  GR8
SET45    DS    0H
         L     GR9,BASEADD
         CLC   ACEROPOV,NULLS     TEST VTS POOL  SPECIFIED
         BE    SET46
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING MSPOOLD,GR8        EST ADDR TO VTS POOL DSECT
         MVC   MSPOOLK,=C'MSPOOL: ' POOL KEYWORD
         MVC   MSPOOLV,ACEROPOV     POOL VALUE
         BAL   GR10,WTP           WTP POOL ENTRY
         DROP  GR8
SET46    DS    0H
         CLC   ACEROMSD,NULLS     TEST DESTINATION SPECIFIED
         BE    SET47
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING MSPDESTD,GR8       EST ADDR TO DESTINATION DSECT
         MVC   MSPDESTK,=C'MSPDEST: ' DESTINATION KEYWORD
         MVC   MSPDESTV,ACEROMSD   DESTINATION VALUE
         BAL   GR10,WTP           WTP DESTINATION ENTRY
         DROP  GR8
SET47    DS    0H
         CLC   ACEROPCY,NULLS     TEST POLICY SPECIFIED
         BE    SET48
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING MSPPLCYD,GR8       EST ADDR TO POLICY DSECT
         MVC   MSPPLCYK,=C'MSPOLICY: ' POLICY KEYWORD
         MVC   MSPPLCYV,ACEROPCY   POLICY VALUE
         BAL   GR10,WTP           WTP POLICY ENTRY
         DROP  GR8
SET48    DS    0H
         CLC   ACEROMFN,NULLS     NULL PARM FIELD
         BE    SET49
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANKS
         USING MSPPARMD,GR8       EST ADDR TO PARM DSECT
         MVC   MSPPARMK,=C'MSPARM: ' PARM KEYWORD
         BAL   GR10,WTP           WTP PARM KEYWORD
         DROP  GR8
         XR    GR7,GR7
         XR    GR9,GR9
         ICM   GR7,1,ACEROMFN     NUMBER OF PARM FIELDS
         BZ    SET49
         LA    GR5,ACEROMFL       ADDR OF PARM FIELD LENGTH
SET48A   ICM   GR9,1,0(GR5)       LENGTH OF PARM FIELD
         BZ    SET48B
         LA    GR5,1(GR5)         INCREMENT BY 1
         BCTR  GR9,GR0            DECREMENT BY 1
         MVC   VARWORK,BLANKS     INIT VARIABLE WORKAREA TO BLANK
         LA    GR6,VARWORK
         EX    GR9,MVCINSTD       MOVE PARM TO TARGET
         BAL   GR10,WTP           WTP PARM VALUE
SET48B   AR    GR5,GR9
         LA    GR5,1(GR5)         ADDRESS OF NEXT PARM LENGTH
         BCTR  GR7,GR0
         LTR   GR7,GR7            WTP PARM UNTIL NO OF PARM FIELDS IS 0
         BZ    SET49
         B     SET48A
SET49    DS    0H                                           2‡02A
         L     GR9,BASEADD
*
*        FREE JOBLOG WORKAREA
*
         LA    GR0,WRKARSZ        LOAD SIZE OF WORK AREA
         FREEMAIN R,LV=(GR0),A=(GR11) FREE WORK AREA
*
*        RETURN TO SMS
*
RETURN   DS    0H
         L     GR13,4(GR13)
         LM    GR14,GR12,12(GR13)
         LA    GR15,0             SET RETURN CODE
         BR    GR14
*
*        ISSUE WTP TO RECORD VARIABLE IN JOBLOG
*
WTP      DS    0H
         LA    GR2,WTOD           ADDRESS OF WTO LIST
         WTO   MF=(E,(GR2))       WRITE VARIABLE TO JOBLOG
         BR    GR10               RETURN TO CALLER
         EJECT
MSG1     DC    CL(L'ACERWMSG)'STORAGE CLASS ACS EXIT ENTERED'
MSG2     DC    CL(L'ACERWMSG)'SMF NOT RECORDING ACS RECORD TYPE'
MSG3     DC    CL(L'ACERWMSG)'SMFWTM FAILED, ACS RECORD NOT WRITTEN'
SMFRECNO EQU   127                SMF USER REC NUMBER FOR ACS VARIABLES
DEBUG    DC    CL5'DEBUG'         LAST STEP ACCOUNTING FIELD INDICATING
*                                 VARIABLES SHOULD BE WRITTEN TO JOBLOG
WTOL     WTO   'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC
               AAAAAAAAAAAAAAAAAAAAAAAAA',ROUTCDE=(11),MF=L
WTOSZ    EQU   *-WTOL             SIZE OF WTO AREA
BLANKS   DC    CL80' '            BLANKS
NULLS    DC    30X'00'            NULLS
MVCINST  MVC   0(00,GR6),0(GR5)    MVC INSTRUCTION FOR EXECUTING
         EJECT
         IGDACSPM                 MAP EXIT PARAMETER LIST (GR6)
         IGDACERO                 MAP READ ONLY VARIABLES (GR3)
ROLEN    EQU   *-ACEROD           LENGTH OF READ ONLY VARIABLES
         IGDACERW                 MAP READ WRITE VARIABLES (GR4)
RWLEN    EQU   *-ACERWD           LENGTH OF READ-WRITE VARIABLES
WORKAR1  DSECT
SAVEAREA DS    XL72               STANDARD SAVE AREA
SMFUSER  DSECT                    SMF USER RECORD
SMFRDW   DS    XL4                RECORD DESCRIPTION WORD
SMFSID   DS    XL1                SYSTEM INDICATOR
SMFRTYPE DS    XL1                RECORD TYPE
SMFTIME  DS    XL4                TIME
SMFDATE  DS    PL4                DATE
SMFSYSID DS    CL4                SYSTEM ID
SMFROVAR DS    XL(ROLEN)          READ ONLY VARIABLES
SMFRWVAR DS    XL(RWLEN)          READ WRITE VARIABLES
SMFRECLN EQU   *-SMFUSER          LENGTH OF SMF RECORD
         PUSH PRINT
         PRINT OFF
         IEESMCA
         POP PRINT
         PUSH PRINT
         PRINT OFF
         IEFJMR
         POP PRINT
         PUSH PRINT
         PRINT OFF
         IKJTCB
         POP PRINT
         PUSH PRINT
         PRINT OFF
         IEFTCT
         POP PRINT
         PUSH PRINT
         PRINT OFF
         IHAPSA LIST=YES
         POP PRINT
         EJECT
WORKAR2  DSECT                    WORK AREA
WTOD     DS    XL(WTOSZ)          WTP WORK AREA
         ORG   WTOD+4
VARWORK DS     CL80               TEST CASE WORK AREA
         ORG   WTOD+WTOSZ
DW       DS    0D                 DOUBLE WORD WORK AREA
         DS    XL8
         DS    0H
MVCINSTD DS    XL6                MVC INSTRUCTION FOR EXECUTING
BASEADD  DS    F'0'                                         ‡02A
WRKARSZ  EQU   *-WORKAR2          SIZE OF WORK AREA
ACCTJOBD DSECT
ACCTJOBK DS    C'ACCT_JOB1: '
         DS    CL69
ACCTSTPD DSECT
ACCTSTPK DS    C'ACCT_STEP1: '
         DS    CL68
ACSENVD  DSECT
ACSENVK  DS    C'ACSENVIR: '
ACSENVV  DS    CL8
         DS    CL62
APPLICD  DSECT
APPLICK  DS    C'APPLIC: '
APPLICV  DS    CL8
         DS    CL64
DATACLD  DSECT
DATACLK  DS    C'DATACLAS: '
DATACLV  DS    CL8
         DS    CL62
DDD      DSECT
DDK      DS    C'DD: '
DDV      DS    CL8
         DS    CL68
DEFDCD   DSECT
DEFDCK   DS    C'DEF_DATACLAS: '
DEFDCV   DS    CL8
         DS    CL58
DEFMCD   DSECT
DEFMCK   DS    C'DEF_MGMTCLAS: '
DEFMCV   DS    CL8
         DS    CL58
DEFSCD   DSECT
DEFSCK   DS    C'DEF_STORCLAS: '
DEFSCV   DS    CL8
         DS    CL58
DSND     DSECT
DSNK     DS    C'DSN: '
DSNV     DS    CL44
         DS    CL31
DSORGD   DSECT
DSORGK   DS    C'DSORG: '
DSORGV   DS    CL2
         DS    CL71
DSOWNERD DSECT
DSOWNERK DS    C'DSOWNER: '
DSOWNERV DS    CL8
         DS    CL63
DSTYPED  DSECT
DSTYPEK  DS    C'DSTYPE: '
DSTYPEV  DS    CL8
         DS    CL64
EXPDTD   DSECT
EXPDTK   DS    C'EXPDT: '
EXPDTV   DS    CL7
         DS    CL66
GROUPD   DSECT
GROUPK   DS    C'GROUP: '
GROUPV   DS    CL8
         DS    CL65
JOBD     DSECT
JOBK     DS    C'JOB: '
JOBV     DS    CL8
         DS    CL67
MAXSIZED DSECT
MAXSIZEK DS    C'MAXSIZE: '
MAXSIZEV DS    CL6
         DS    CL65
BLKSIZED DSECT                                                  4‡01A
BLKSIZEK DS    C'BLKSIZE: '
BLKSIZEV DS    CL10
         DS    CL61
MGMTCLD  DSECT
MGMTCLK  DS    C'MGMTCLAS: '
MGMTCLV  DS    CL8
         DS    CL63
* MSVGPD   DSECT                                                   ‡07D
* MSVGPK   DS    C'MSVGP: '                                        ‡07D
* MSVGPV   DS    CL8                                               ‡07D
*          DS    CL65                                              ‡07D
NVOLD    DSECT
NVOLK    DS    C'NVOL: '
NVOLV    DS    CL2
         DS    CL72
PGMD     DSECT
PGMK     DS    C'PGM: '
PGMV     DS    CL8
         DS    CL67
RECORGD  DSECT
RECORGK  DS    C'RECORG: '
RECORGV  DS    CL2
         DS    CL70
RETPDD   DSECT
RETPDK   DS    C'RETPD: '
RETPDV   DS    CL4
         DS    CL69
SIZED    DSECT
SIZEK    DS    C'SIZE: '
SIZEV    DS    CL6
         DS    CL68
STORCLD  DSECT
STORCLK  DS    C'STORCLAS: '
STORCLV  DS    CL8
         DS    CL62
UNITD    DSECT
UNITK    DS    C'UNIT: '
UNITV    DS    CL8
         DS    CL66
USERD    DSECT
USERK    DS    C'USER: '
USERV    DS    CL8
         DS    CL66
VOLD     DSECT
VOLK     DS    C'VOL: '
VOLN     DS    CL2
         DS    CL73
XMODED   DSECT
XMODEK   DS    C'XMODE: '
XMODEV   DS    CL8
         DS    CL65
SYSNAMD  DSECT                                              28‡01A
SYSNAMK  DS    C'SYSNAME: '
SYSNAMV  DS    CL8
         DS    CL63
SYSPLXD  DSECT
SYSPLXK  DS    C'SYSPELX: '
SYSPLXV  DS    CL8
         DS    CL63
STORGPD  DSECT
STORGPK  DS    C'STORGRP: '
STORGPV  DS    CL8
         DS    CL63
DSNTYPD  DSECT
DSNTYPK  DS    C'DSNTYPE: '
DSNTYPV  DS    CL8
         DS    CL63
LABELD   DSECT
LABELK   DS    C'LABEL: '
LABELV   DS    CL3
         DS    CL70
FILENMD  DSECT
FILENMK  DS    C'FILENUM: '
FILENMV  DS    CL6
         DS    CL65
LIBNAMD  DSECT
LIBNAMK  DS    C'LIBNAME: '
LIBNAMV  DS    CL8
         DS    CL63
MEMND    DSECT                                              26‡02A
MEMNK    DS    C'MEMN: '
MEMNV    DS    CL44
         DS    CL30
MEMHLQD  DSECT
MEMHLQK  DS    C'MEMHLQ: '
MEMLLQD  DSECT
MEMLLQK  DS    C'MEMLLQ: '
MEMNQLD  DSECT
MEMNQLK  DS    C'MEMNQUAL: '
MEMNQLV  DS    CL2
         DS    CL68
MSPOOLD  DSECT
MSPOOLK  DS    C'MSPOOL: '
MSPOOLV  DS    CL30
         DS    CL42
MSPDESTD DSECT
MSPDESTK DS    C'MSPDEST: '
MSPDESTV DS    CL44
         DS    CL27
MSPPLCYD DSECT
MSPPLCYK DS    C'MSPOLICY: '
MSPPLCYV DS    CL8
         DS    CL62
MSPPARMD DSECT
MSPPARMK DS    C'MSPARM: '
*
*        GENERAL PURPOSE REGISTERS
*
GR0      EQU   0
GR1      EQU   1
GR2      EQU   2
GR3      EQU   3
GR4      EQU   4
GR5      EQU   5
GR6      EQU   6
GR7      EQU   7
GR8      EQU   8
GR9      EQU   9
GR10     EQU   10
GR11     EQU   11
GR12     EQU   12
GR13     EQU   13
GR14     EQU   14
GR15     EQU   15
         END   IGDACSSC

./ ADD NAME=IKJEFT01
//IKJEFT01 JOB (ACCT),MVS,MSGCLASS=S,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//ALCISPFL EXEC PGM=IKJEFT01
//SYSPROC  DD DSN=&SYSUID..OSEO.MVS,DISP=SHR
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
  IPLINFO
//
  SETRRCVT

./ ADD NAME=IKJTSO0$
/* LIB: CPAC.PARMLIB(IKJTSO00)                                     */
/* DOC: THIS MEMBER IS USED AT IPL TIME TO DEFINE THE AUTHORIZED   */
/*      COMMAND LIST, THE AUTHORIZED PROGRAM LIST, THE NOT         */
/*      BACKGROUND COMMAND LIST, THE AUTHORIZED BY THE TSO SERVICE */
/*      FACILITY LIST, AND TO CREATE THE DEFAULTS THE SEND COMMAND */
/*      WILL USE.                                                  */
/*                                                                 */
AUTHCMD NAMES(          /* AUTHORIZED COMMANDS      */      +
   AD       ADDSD       /* RACF COMMANDS            */ +
   AG       ADDGROUP    /*                          */ +
   CAS9UDTN             /* CA COMMON SERVICES       */ +
   CAE$BQRY             /* CA COMMON SERVICES       */ +
   ALD      ALTDSD      /*                          */ +
   ALG      ALTGROUP    /*                          */ +
   ALU      ALTUSER     /*                          */ +
   ALTER                /* DFP COMMDS  DE OS 1.3.0  */ +
   AU       ADDUSER     /*                          */ +
   BINDDATA BDATA       /*  DMSMS COMMANDS          */ +
   BLKUPD               /*                          */ +
   CDELPAIR             /*  COMMAND TSO PPRC        */ +
   CDELPATH             /*  COMMAND TSO PPRC        */ +
   CESTPAIR             /*  COMMAND TSO PPRC        */ +
   CESTPATH             /*  COMMAND TSO PPRC        */ +
   CGROUP               /*  COMMAND TSO PPRC        */ +
   CQUERY               /*  COMMAND TSO PPRC        */ +
   CRECOVER             /*  COMMAND TSO PPRC        */ +
   CSUSPEND             /*  COMMAND TSO PPRC        */ +
   CO       CONNECT     /*                          */ +
   CONSOLE              /*                          */ +
   CONSPROF             /*                          */ +
   DD       DELDSD      /*                          */ +
   DEF      DEFINE      /* DFP COMMDS  DE OS 1.3.0  */ +
   DG       DELGROUP    /*                          */ +
   DU       DELUSER     /*                          */ +
   FTP                  /*                          */ +
   IEBCOPY              /*                          */ +
   IRRDPI00             /*                          */ +
   JCLCHECK             /* JCLCHECK                 */ +
   LD       LISTDSD     /*                          */ +
   LG       LISTGRP     /*                          */ +
   LISTB    LISTBC      /*                          */ +
   LISTD    LISTDS      /*                          */ +
   LISTDATA LDATA       /*                          */ +
   LOOK                 /* LOOK          DE OS 1.3.0*/ +
   LOOKTTY              /* LOOK          DE OS 1.3.0*/ +
   LU       LISTUSER    /*                          */ +
   MVPXDISP             /* IP COMMAND               */ +
   NETSTAT              /* IP COMMANDS              */ +
   PARMLIB  IKJPRMLB    /*                          */ +
   PASSWORD PW          /*                          */ +
   PE       PERMIT      /*                          */ +
   RACDCERT             /*                          */ +
   RACLINK              /*                          */ +
   RACONVRT CONSPROF    /*                          */ +
   RALT     RALTER      /*                          */ +
   RDEF     RDEFINE     /*                          */ +
   RDEL     RDELETE     /*                          */ +
   RE       REMOVE      /*                          */ +
   RECEIVE              /* TSO COMMANDS             */ +
   RL       RLIST       /*                          */ +
   RVARY                /*                          */ +
   SE       SEND        /*                          */ +
   SETCACHE SETC        /*                          */ +
   SETR     SETROPTS    /*                          */ +
   SR       SEARCH      /*                          */ +
   SYNC                 /*                          */ +
   TESTAUTH TESTA       /*                          */ +
   TRACERTE             /* IP COMMANDS              */ +
   TSS                  /* TSS  R15                 */ +
   ZOSINFO              /* ZOSINFO                  */ +
   PING                 /* IP COMMANDS              */ +
   LPR                  /*                          */ +
   DITTOA               /*                          */ +
   TRANSMIT XMIT        /*                          */ +
   CHECKSEC             /* HARRY2 CLIENT            */ )
                        /*                          */
AUTHPGM NAMES(        /* AUTHORIZED PROGRAMS      */      +
   CSFDAUTH           /* ICSF COMMAND             */ +
   JCLCHECK           /* JCLCHECK                 */ +
   SARSMFT              /* CA VIEW 2.0            */ +
   FDRABR               /* FDR/ABR   DE OS 1.4    */ +
   FDREPORT             /* FDR/ABR   DE OS 1.4    */ +
   FDRQUERY             /* FDR/ABR   DE OS 1.4    */ +
   FDRMONA              /* FDR/ABR   DE OS 1.4    */ +
   FDRCPK               /* FDR/ABR   DE OS 1.4    */ +
   FDRABRUT             /* FDR/ABR   DE OS 1.4    */ +
   FDRSRSA              /* FDR/ABR   DE OS 1.4    */ +
   FTP                  /*                        */ +
/* USTATUS              /*           DE OS 1.3.0  */ +
/* USTCMD               /* UPSTREAM  DE OS 1.3.0  */ +
/* USTRPORT             /* UPSTREAM  DE OS 1.3.0  */ +
   ICADCFGS           /* FIREWALL                 */ +
   ICADCT             /* FIREWALL                 */ +
   ICADDCT            /* FIREWALL                 */ +
   ICADFTPD           /* FIREWALL                 */ +
   ICADIKED           /* FIREWALL                 */ +
   ICADPFTP           /* FIREWALL                 */ +
   ICADSLOG           /* FIREWALL                 */ +
   ICADSOCK           /* FIREWALL                 */ +
   ICADSOXD           /* FIREWALL                 */ +
   ICADSTAK           /* FIREWALL                 */ +
   ICHDSM00           /*                          */ +
   ICHUT100           /*                          */ +
   ICHUT200           /*                          */ +
   ICHUT400           /*                          */ +
   IEBCOPY            /*                          */ +
   IOEBAK             /* DFS                      */ +
   IOEBOS             /* DFS                      */ +
   IOECM              /* DFS                      */ +
   IOEDCEER           /* DFS                      */ +
   IOEDFSXP           /* DFS                      */ +
   IOEFTS             /* DFS                      */ +
   IOEGRWAG           /* DFS                      */ +
   IOEMAPID           /* DFS                      */ +
   IOENEWAG           /* DFS                      */ +
   IOESALVG           /* DFS                      */ +
   IOESCOUT           /* DFS                      */ +
   IOEUDBG            /* DFS                      */ +
   IRRDPI00           /*                          */ +
   IRRDSC00           /*                          */ +
   IRRUT100           /*                          */ +
   IRRUT200           /*                          */ +
   IRRUT400           /*                          */ +
   CTRSPL             /*                          */ +
   CTRCTR             /*                          */ +
   CTMDFS             /*                          */ +
   CTMRUN             /*                          */ +
   TMSIOCAP           /* CA-1                     */ +
   TMSSCR             /* CA-1                     */ +
   DITTOA             /*                          */ +
   CTMAES             /*                          */ )
                      /*                          */
NOTBKGND NAMES(         /* COMMANDS WHICH MAY NOT BE */ +
                        /* ISSUED IN THE BACKGROUND  */ +
   OPER     OPERATOR    /*                           */ +
   TERM     TERMINAL    /*                           */ )
                        /*                           */
AUTHTSF NAMES(          /* PROGRAMS TO BE AUTHORIZED */ +
                        /* WHEN CALLED THROUGH THE   */ +
                        /* TSO SERVICE FACILITY.     */ +
   CAZ2CTSO             /* JCLCHECK                  */ +
   CSFDAUTH             /* ICSF                      */ +
   SARSMFT              /* CA VIEW 2.0               */ +
   FDRSRSA              /* FDR/ABR       DE OS 1.3.0*/      +
   FDRABR               /* FDR/ABR   DE OS 1.4    */ +
   FDREPORT             /* FDR/ABR   DE OS 1.4    */ +
   FDRQUERY             /* FDR/ABR   DE OS 1.4    */ +
   FDRMONA              /* FDR/ABR   DE OS 1.4    */ +
   FDRCPK               /* FDR/ABR   DE OS 1.4    */ +
   FDRABRUT             /* FDR/ABR   DE OS 1.4    */ +
   IKJEHDS1             /*               DE OS 1.3.0  */ +
   IMP      IMPORT      /* DFP COMMANDS  DE OS 1.3.0  */ +
   MVPXDISP             /*  TCPIP        DE OS 1.3.0  */ +
   PTLTSRB              /* PLATINUM               */ +
   RACONVRT             /*               DE OS 1.3.0  */ +
/* USTATUS              /* UPSTREAM      DE OS 1.3.0*/      +
/* USTCMD               /* UPSTREAM      DE OS 1.3.0  */ +
/* USTRPORT             /* UPSTREAM      DE OS 1.3.0  */ +
   ICQASLI0             /*                           */ +
   IEBCOPY              /*                           */ +
   TMSIOCAP             /* CA-1                      */ +
   TMSSCR               /* CA-1                      */ +
   IAMRECVR             /* IAM                       */ +
   IAMXMONA             /* IAM                       */ +
   IKJEFF76             /*                           */ )
                        /*                           */
SEND                         /* SEND COMMAND DEFAULTS  */      +
   OPERSEND(ON)              /*                        */      +
   USERSEND(ON)              /*                        */      +
   SAVE(ON)                  /*                        */      +
   CHKBROD(OFF)              /*                        */      +
   LOGNAME(SYS1.BRODCAST)    /*                        */      +
   USEBROD(ON)               /*                        */      +
   MSGPROTECT(OFF)           /*                        */      +
   OPERSEWAIT(OFF)           /*                        */      +
   BROADCAST(DATASET(SYS1.BRODCAST))
ALLOCATE                /* ALLOCATE COMMAND DEFAULT  */  +
   DEFAULT(OLD)         /*                           */
TRANSREC                         /* ALLOCATE COMMAND DEFAULT  */  +
   CIPHER(YES)          /*                           */ +
   DAPREFIX(TUPREFIX)   /*                           */ +
   LOGNAME(MISC)        /*                           */ +
   LOGSEL(LOG)          /*                           */ +
   NODESMF((NODENAME,SMF)) /*ALLOCATE COMMAND DEFAULT*/ +
   OUTLIM(5000000)      /*                           */ +
   OUTWARN(50000,15000) /*                           */ +
   SPOOLCL(B)           /*                           */ +
   SYSOUT(*)            /*                           */ +
   USRCTL(NAMES.TEXT)   /*                           */ +
   VIO(SYSALLDA)        /*                           */

./ ADD NAME=IKJTSO00
AUTHCMD NAMES(          /* AUTHORIZED COMMANDS      */      +
        ;              ;
AD      ;ADDSD       /*;RACF COMMANDS            */ +
AG      ;ADDGROUP    /*;                         */ +
CAS9UDTN;            /*;CA COMMON SERVICES       */ +
CAE$BQRY;            /*;CA COMMON SERVICES       */ +
ALD     ;ALTDSD      /*;                         */ +
ALG     ;ALTGROUP    /*;                         */ +
ALU     ;ALTUSER     /*;                         */ +
ALTER   ;            /*;DFP COMMDS  DE OS 1.3.0  */ +
AU      ;ADDUSER     /*;                         */ +
BINDDATA;BDATA       /*;DMSMS COMMANDS          */ +
BLKUPD  ;            /*;                         */ +
CDELPAIR;            /*;COMMAND TSO PPRC        */ +
CDELPATH;            /*;COMMAND TSO PPRC        */ +
CESTPAIR;            /*;COMMAND TSO PPRC        */ +
CESTPATH;            /*;COMMAND TSO PPRC        */ +
CGROUP  ;            /*;COMMAND TSO PPRC        */ +
CQUERY  ;            /*;COMMAND TSO PPRC        */ +
CRECOVER;            /*;COMMAND TSO PPRC        */ +
CSUSPEND;            /*;COMMAND TSO PPRC        */ +
CO      ;CONNECT     /*;                         */ +
CONSOLE ;            /*;                         */ +
CONSPROF;            /*;                         */ +
DD      ;DELDSD      /*;                         */ +
DEF     ;DEFINE      /*;DFP COMMDS  DE OS 1.3.0  */ +
DG      ;DELGROUP    /*;                         */ +
DU      ;DELUSER     /*;                         */ +
FTP     ;            /*;                         */ +
IEBCOPY ;            /*;                         */ +
IRRDPI00;            /*;                         */ +
JCLCHECK;            /*;JCLCHECK                 */ +
LD      ;LISTDSD     /*;                         */ +
LG      ;LISTGRP     /*;                         */ +
LISTB   ;LISTBC      /*;                         */ +
LISTD   ;LISTDS      /*;                         */ +
LISTDATA;LDATA       /*;                         */ +
LOOK    ;            /*;LOOK          DE OS 1.3.0*/ +
LOOKTTY ;            /*;LOOK          DE OS 1.3.0*/ +
LU      ;LISTUSER    /*;                         */ +
MVPXDISP;            /*;IP COMMAND               */ +
NETSTAT ;            /*;IP COMMANDS              */ +
PARMLIB ;IKJPRMLB    /*;                         */ +
PASSWORD;PW          /*;                         */ +
PE      ;PERMIT      /*;                         */ +
RACDCERT;            /*;                         */ +
RACLINK ;            /*;                         */ +
RACONVRT;CONSPROF    /*;                         */ +
RALT    ;RALTER      /*;                         */ +
RDEF    ;RDEFINE     /*;                         */ +
RDEL    ;RDELETE     /*;                         */ +
RE      ;REMOVE      /*;                         */ +
RECEIVE ;            /*;TSO COMMANDS             */ +
RL      ;RLIST       /*;                         */ +
RVARY   ;            /*;                         */ +
SE      ;SEND        /*;                         */ +
SETCACHE;SETC        /*;                         */ +
SETR    ;SETROPTS    /*;                         */ +
SR      ;SEARCH      /*;                         */ +
SYNC    ;            /*;                         */ +
TESTAUTH;TESTA       /*;                         */ +
TRACERTE;            /*;IP COMMANDS              */ +
TSS     ;            /*;TSS  R15                 */ +
ZOSINFO ;            /*;ZOSINFO                  */ +
PING    ;            /*;IP COMMANDS              */ +
LPR     ;            /*;                         */ +
DITTOA  ;            /*;                         */ +
TRANSMIT;XMIT        /*;                         */ +
CHECKSEC;            /*;HARRY2 CLIENT            */ )
        ;            /*;                         */
AUTHPGM NAMES(          /*;AUTHORIZED PROGRAMS      */      +
CSFDAUTH;            /*;ICSF COMMAND             */ +
JCLCHECK;            /*;JCLCHECK                 */ +
SARSMFT ;            /*;CA VIEW 2.0            */ +
FDRABR  ;            /*;FDR/ABR   DE OS 1.4    */ +
FDREPORT;            /*;FDR/ABR   DE OS 1.4    */ +
FDRQUERY;            /*;FDR/ABR   DE OS 1.4    */ +
FDRMONA ;            /*;FDR/ABR   DE OS 1.4    */ +
FDRCPK  ;            /*;FDR/ABR   DE OS 1.4    */ +
FDRABRUT;            /*;FDR/ABR   DE OS 1.4    */ +
FDRSRSA ;            /*;FDR/ABR   DE OS 1.4    */ +
FTP     ;            /*;                       */ +
USTATUS ;               /*;          DE OS 1.3.0  */ +
USTCMD     ;            /*;UPSTREAM  DE OS 1.3.0  */ +
USTRPORT;               /*;UPSTREAM  DE OS 1.3.0  */ +
ICADCFGS;            /*;FIREWALL                 */ +
ICADCT  ;            /*;FIREWALL                 */ +
ICADDCT ;            /*;FIREWALL                 */ +
ICADFTPD;            /*;FIREWALL                 */ +
ICADIKED;            /*;FIREWALL                 */ +
ICADPFTP;            /*;FIREWALL                 */ +
ICADSLOG;            /*;FIREWALL                 */ +
ICADSOCK;            /*;FIREWALL                 */ +
ICADSOXD;            /*;FIREWALL                 */ +
ICADSTAK;            /*;FIREWALL                 */ +
ICHDSM00;          /*  ;                       */ +
ICHUT100;          /*  ;                       */ +
ICHUT200;          /*  ;                       */ +
ICHUT400;          /*  ;                       */ +
IEBCOPY ;          /*  ;                       */ +
IOEBAK  ;            /*;DFS                      */ +
IOEBOS  ;            /*;DFS                      */ +
IOECM   ;            /*;DFS                      */ +
IOEDCEER;            /*;DFS                      */ +
IOEDFSXP;            /*;DFS                      */ +
IOEFTS  ;            /*;DFS                      */ +
IOEGRWAG;            /*;DFS                      */ +
IOEMAPID;            /*;DFS                      */ +
IOENEWAG;            /*;DFS                      */ +
IOESALVG;            /*;DFS                      */ +
IOESCOUT;            /*;DFS                      */ +
IOEUDBG ;            /*;DFS                      */ +
IRRDPI00;          /*  ;                       */ +
IRRDSC00;          /*  ;                       */ +
IRRUT100;          /*  ;                       */ +
IRRUT200;          /*  ;                       */ +
IRRUT400;          /*  ;                       */ +
CTRSPL  ;          /*  ;                       */ +
CTRCTR  ;          /*  ;                       */ +
CTMDFS  ;          /*  ;                       */ +
CTMRUN  ;          /*  ;                       */ +
TMSIOCAP;            /*;CA-1                     */ +
TMSSCR  ;            /*;CA-1                     */ +
DITTOA  ;          /*  ;                       */ +
CTMAES  ;          /*  ;                       */ )
        ;          /*  ;                       */
NOTBKGND NAMES(         /*;COMMANDS WHICH MAY NOT BE */ +
        ;            /*;ISSUED IN THE BACKGROUND  */ +
OPER    ;OPERATOR    /*;                          */ +
TERM    ;TERMINAL    /*;                          */ )
        ;            /*;                          */
AUTHTSF NAMES(          /*;PROGRAMS TO BE AUTHORIZED */ +
        ;            /*;WHEN CALLED THROUGH THE   */ +
        ;            /*;TSO SERVICE FACILITY.     */ +
CAZ2CTSO;            /*;JCLCHECK                  */ +
CSFDAUTH;            /*;ICSF                      */ +
SARSMFT ;            /*;CA VIEW 2.0               */ +
FDRSRSA ;            /*;FDR/ABR       DE OS 1.3.0*/      +
FDRABR  ;            /*;FDR/ABR   DE OS 1.4    */ +
FDREPORT;            /*;FDR/ABR   DE OS 1.4    */ +
FDRQUERY;            /*;FDR/ABR   DE OS 1.4    */ +
FDRMONA ;            /*;FDR/ABR   DE OS 1.4    */ +
FDRCPK  ;            /*;FDR/ABR   DE OS 1.4    */ +
FDRABRUT;            /*;FDR/ABR   DE OS 1.4    */ +
IKJEHDS1;            /*;              DE OS 1.3.0  */ +
IMP     ;IMPORT      /*;DFP COMMANDS  DE OS 1.3.0  */ +
MVPXDISP;            /*;TCPIP        DE OS 1.3.0  */ +
PTLTSRB ;            /*;PLATINUM               */ +
RACONVRT;            /*;              DE OS 1.3.0  */ +
USTATUS ;               /*;UPSTREAM      DE OS 1.3.0*/      +
USTCMD     ;            /*;UPSTREAM      DE OS 1.3.0  */ +
USTRPORT;               /*;UPSTREAM      DE OS 1.3.0  */ +
ICQASLI0;            /*;                          */ +
IEBCOPY ;            /*;                          */ +
TMSIOCAP;            /*;CA-1                      */ +
TMSSCR  ;            /*;CA-1                      */ +
IAMRECVR;            /*;IAM                       */ +
IAMXMONA;            /*;IAM                       */ +
IKJEFF76;            /*;                          */ )
                     /*                           */
SEND                         /* SEND COMMAND DEFAULTS  */      +
OPERSEND(ON)              /*                        */      +
USERSEND(ON)              /*                        */      +
SAVE(ON)                  /*                        */      +
CHKBROD(OFF)              /*                        */      +
LOGNAME(SYS1.BRODCAST)    /*                        */      +
USEBROD(ON)               /*                        */      +
MSGPROTECT(OFF)           /*                        */      +
OPERSEWAIT(OFF)           /*                        */      +
BROADCAST(DATASET(SYS1.BRODCAST))
ALLOCATE                /* ALLOCATE COMMAND DEFAULT  */  +
DEFAULT(OLD)         /*                           */
TRANSREC                         /* ALLOCATE COMMAND DEFAULT  */  +
CIPHER(YES)          /*                           */ +
DAPREFIX(TUPREFIX)   /*                           */ +
LOGNAME(MISC)        /*                           */ +
LOGSEL(LOG)          /*                           */ +
NODESMF((NODENAME,SMF)) /*ALLOCATE COMMAND DEFAULT*/ +
OUTLIM(5000000)      /*                           */ +
OUTWARN(50000,15000) /*                           */ +
SPOOLCL(B)           /*                           */ +
SYSOUT(*)            /*                           */ +
USRCTL(NAMES.TEXT)   /*                           */ +
VIO(SYSALLDA)        /*                           */

./ ADD NAME=IKYVBKUP
//IKYVBKUP JOB <job card parameters>
//*********************************************************************
//*  SAMP:      IKYVBKUP                                              *
//*                                                                   *
//*    Licensed Materials - Property of IBM                           *
//*    5694-A01                                                       *
//*    Copyright IBM Corp. 2009                                       *
//*    Status = HKY7760                                               *
//*                                                                   *
//*********************************************************************
//*                                                                   *
//*  This sample JCL may be used to backup the VSAM data sets         *
//*  PKI Services utilizes to store certificate requests and          *
//*  issued certificates. To ensure data integrity, the PKI Services  *
//*  address space must be stopped before a backup is attempted.      *
//*                                                                   *
//*********************************************************************
//*                                                                   *
//*  Caution: This is neither a JCL procedure nor a complete job.     *
//*  Before using this job step, you will have to make the following  *
//*  modifications:                                                   *
//*                                                                   *
//*  1) Change the job card to meet your system requirements.         *
//*                                                                   *
//*  2) If you are not using the default data set qualifiers,         *
//*     change all occurrences of "PKISRVD.VSAM" to the qualifiers    *
//*     you are using.                                                *
//*                                                                   *
//*  3) Change all occurrences of vvvvvv to a VOLSER value            *
//*     that contains sufficient free space to contain a complete     *
//*     backup of both of the PKI Services VSAM data set clusters.    *
//*                                                                   *
//*  4) Change the primary and secondary allocation values for the    *
//*     backup dataset to values that will ensure a complete backup   *
//*     of both VSAM data set clusters. Change the xxx value for the  *
//*     primary allocation, and the yyy value for the secondary       *
//*     allocation.                                                   *
//*                                                                   *
//*-------------------------------------------------------------------*
//* Change Activity:                                                  *
//*                                                                   *
//*    $L0=PKIS11M HKY7760 080828 PDTCG1: VSAM Backup job             *
//*                                                                   *
//* Change Description:                                               *
//*    A000000-999999 New sample written for z/OS release 11          *
//*                                                                   *
//*-------------------------------------------------------------------*
//*
//*-------------------------------------------------------------------*
//* Delete existing backup dataset
//*-------------------------------------------------------------------*
//CATALOG  EXEC PGM=IEHPROGM
//SYSPRINT DD SYSOUT=*
//DD1      DD UNIT=3390,VOLUME=SER=vvvvvv,DISP=OLD,SPACE=(TRK,0)
//SYSIN    DD *
    SCRATCH VOL=3390=vvvvvv,DSNAME=PKISRVD.VSAM.BACKUP
/*
//*-------------------------------------------------------------------*
//* Perform a DFSMS/dss Dump of the two PKI Services VSAM clusters
//*-------------------------------------------------------------------*
//BACKUP1  EXEC PGM=ADRDSSU,COND=(8,LT)
//BACKUPDS DD DSN=PKISRVD.VSAM.BACKUP,DISP=(NEW,CATLG,DELETE),
//       SPACE=(CYL,(xxx,yyy)),VOL=SER=(vvvvvv)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
    DUMP DATASET(INCLUDE(PKISRVD.VSAM.OST -
                         PKISRVD.VSAM.ICL)) -
         OUTDDNAME(BACKUPDS) -
         CANCELERROR         -
         COMPRESS            -
         OPTIMIZE(4)         -
         SPHERE              -
         WAIT(0,0)           -
         SHR
/*

./ ADD NAME=IPCSBAT
//IPCSJOB JOB 'acctinfo','IPCSU1 output',MSGLEVEL=(1,1),
// MSGCLASS=A,CLASS=J,NOTIFY=IPCSU1
//* ------------------------------------------------------
//*
//* Input: dump in data set 'IPCSU1.DUMP1.DUMP'
//* Output:
//* - IPCS dump directory data set for the input dump
//* (IPCSDDIR DD)
//* - Formatted output (SYSTSPRT DD)
//* - TSO/E messages (SYSTSPRT DD)
//* All of the output will have message identifiers
//* printed (due to PROFILE MSGID command in SYSTSIN)
//* ------------------------------------------------------
//IPCS EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=1500K
//IPCSDDIR DD DSN=IPCSU1.DUMP.DIR,DISP=(SHR)
//IPCSPARM DD DSN=DEPTNUM.IPCS.PARMLIB,DISP=SHR
//SYSPROC DD DSN=SYS1.SBLSCLI0,DISP=SHR
//SYSUDUMP DD SYSOUT=A
//SYSTSPRT DD SYSOUT=A
//SYSTSIN DD *
PROFILE MSGID
IPCS NOPARM
SETDEF DSN('IPCSU1.DUMP1.DUMP') LIST NOCONFIRM
%BLSCSCAN
END
/*
Figu
//IPCSJOB JOB 'acctinfo','IPCSU1 output',MSGLEVEL=(1,1),
// MSGCLASS=A,CLASS=J,NOTIFY=IPCSU1
//* ------------------------------------------------------
//*
//* Input: dump in data set 'IPCSU1.DUMP1.DUMP'
//* Output:
//* - IPCS dump directory data set for the input dump
//* (IPCSDDIR DD)
//* - Formatted output (SYSTSPRT DD)
//* - TSO/E messages (SYSTSPRT DD)
//* ------------------------------------------------------
//IPCS EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=1500K
//IPCSDDIR DD DSN=IPCSU1.DUMP.DIR,DISP=(SHR)
//DUMP DD DSN=IPCSU1.DUMP1.DUMP,DISP=SHR
//IPCSPRNT DD DSN=IPCSU1.RSMDATA.LISTV,DISP=(OLD,KEEP,KEEP)
//SYSTSPRT DD SYSOUT=*
//SYSTSIN DD *
IPCS
DROPDUMP DDNAME(DUMP)
RSMDATA REALFRAME ALL STATUS(VRINT,POLLUTE) RANGE(5:86) +
 DDNAME(DUMP) PRINT NOTERMINAL
DROPDUMP DDNAME(DUMP)
END
/*
Figure 61. Running a Subcommand in Batch Mode
Copying and Clearing Dumps in Batch Mode
It is somet
LLOCATE DDNAME(IPCSDDIR) DATASET(DEBUG) REUSE
ALLOCATE DDNAME(IPCSPRNT) SYSOUT(A) REUSE
ALLOCATE DDNAME(IPCSTOC) SYSOUT(A) REUSE

./ ADD NAME=IPOUPDTE
//IPOUPDTE JOB (ACCT#),MVS,
//         NOTIFY=&SYSUID,
//         MSGCLASS=S,MSGLEVEL=(1,1),CLASS=A
//STEP    EXEC PGM=IPOUPDTE,PARM=CHECK       NO WRITES
//*STEP    EXEC PGM=IPOUPDTE,PARM=UPDATE
//*STEP    EXEC PGM=IPOUPDTE,PARM=INSTALL
//*STEP    EXEC PGM=IPOUPDTE,PARM=CHECKM      NO WRITES
//*STEP    EXEC PGM=IPOUPDTE,PARM=UPDATEM
//*STEP    EXEC PGM=IPOUPDTE,PARM=INSTALLM
//SYSPRINT DD   SYSOUT=*
//‡TEST    DD   DSN=STE58.OSEO.MVS,DISP=SHR
//*‡TEST    DD   DSN=S28P.U1.IOA920.PROCLIB,DISP=SHR
//SYSIN    DD   *
PGM<PGZ<
//
918<920<
//
CLASS=X<CLASS=A<
*<A<SYSOUT=<
IPO1<CBIPO<

./ ADD NAME=IVPJOBS
//IVPJOBS   JOB <job card parameters>
//*
//*********************************************************************
//*
//* MEMBER NAME: IVPJOBS
//*
//* DESCRIPTIVE NAME: MVS INSTALLATION VERIFICATION PROCEDURE
//*
//*******************************************************************
//*PROPRIETARY STATEMENT:
//*
//*  LICENSED MATERIALS - PROPERTY OF IBM
//*  5694-A01
//*  (C) COPYRIGHT IBM CORP. 1988, 2001
//*  STATUS = HBB7706
//*
//*********************************************************************
//*
//* INPUT: NONE
//*
//* OUTPUT:
//*
//*   THIS JOB WILL PRODUCE OUTPUT AND RETURN CODES AS FOLLOWS:
//*
//*     STEP IVP WILL COPY FOUR MEMBERS OF SYS1.PARMLIB, USING
//*     IEBPTPCH, TO SYSUT2.  IF ALL MEMBERS ARE PRESENT, THE RETURN
//*     CODE WILL BE 0.  IF ANY ARE NOT PRESENT, THE RETURN CODE
//*     WILL BE 8.
//*
//*     STEP ASM ASSEMBLES A SAMPLE PROGRAM USING
//*     HLASM.  THE ASSEMBLER OUTPUT WILL BE WRITTEN TO SYSPRINT.
//*     THE RETURN CODE FROM THE HLASM PROGRAM SHOULD BE 0.
//*
//*     STEP LKED LINKEDITS THE SAMPLE PROGRAM USING THE MVS/DFP
//*     LINKAGE EDITOR OR DFSMS/MVS PROGRAM MANAGEMENT BINDER
//*     (HEWLH096).  THE UTILITY OUTPUT WILL BE WRITTEN TO SYSPRINT.
//*     THE RETURN CODE SHOULD BE 0.
//*
//*     STEP GO EXECUTES THE SAMPLE PROGRAM ASSEMBLED AND
//*     LINKEDITED ABOVE.  A MESSAGE WILL BE WRITTEN TO SYSPRINT,
//*     WHICH SHOULD INDICATE SUCCESSFUL COMPLETION OF THE PROGRAM
//*     THE RETURN CODE SHOULD BE 0.
//*
//*     STEP ABEND TRIES TO LOAD A NONEXISTENT MODULE (EXPCT806).
//*     THIS SHOULD RESULT IN ABEND 806 REASON CODE 4.  A REGION
//*     DUMP WILL BE WRITTEN TO SYSUDUMP UNLESS PREVENTED BY SLIP
//*     TRAP OR INSTALLATION-SPECIFIED DUMP PARAMETERS.
//*
//* CHANGE ACTIVITY =
//*
//* 06/08/93  DELETED FROM LINKEDIT STEP DD CARD FOR DDNAME=SYSIN
//*           FOR PTM PIG1908 (PMR 6X509)
//*
//* 04/04/94  FIXED CONTINUATION FOR LKED.SYSUT1 AND LKED.SYSLMOD,
//*           CHANGED "JCL COMMAND" STATEMENT TO "COMMAND" STATEMENT
//*           FOR JES3 COMPATIBILITY, REFORMATTED FOR READABILITY,
//*           REMOVED SYSABEND DD STATEMENT FROM STEP IVP, CHANGED
//*           ALL DD STATEMENT OUTPUT CLASSES TO *, ADDED STANDARD
//*           PROLOG, REMOVED OBSOLETE JCL PARAMETERS, AND UPDATED
//*           COMMENTS.  (APAR OW01854)
//*
//* 11/29/94  CHANGED REGION=17M TO REGION=4M FOR PN72064,PN72087
//*
//* 10/06/94  CHANGED IEV90 TO ASMA90
//*
//* 04/04/97  CHANGED COPYRIGHT STATEMENT AND JOB CARD
//*
//* 08/10/99  CHANGED SYSDA TO SYSALLDA
//*
//* 09/01/00  ADDED COMMENTS TO STATEMENT 1 UNDER INSTRUCTIONS
//*
//* 08/14/01  ADDED COMMENTS TO STATEMENT 1 UNDER INSTRUCTIONS
//*
//****END OF SPECIFICATIONS******************************************
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//*
//*                   INSTRUCTIONS:
//*
//*   CHANGE THE JOB CARD INFORMATION FOR YOUR ENVIRONMENT.
//*
//*   THE LAST STEP OF THIS JOB IS INTENDED TO ABEND BY TRYING TO
//*   CALL A PROGRAM NAMED EXPCT806, WHICH IS NOT EXPECTED TO EXIST.
//*   IF YOUR INSTALLATION HAS A PROGRAM NAMED EXPCT806 IN THE ORDER
//*   OF PROGRAM CALL (FOR EXAMPLE, IN THE LPA LIST OR LINK LIST),
//*   CHANGE EXPCT806 TO THE NAME OF A PROGRAM THAT DOES NOT EXIST.
//*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//*
//*              THE IVP CONSISTS OF THESE STEPS:
//*
//*   1. THE COMMAND STATEMENT LABELED "LISTACTV" ISSUES
//*      A CONSOLE MANAGEMENT "DISPLAY ACTIVE, LIST" COMMAND.
//*      IT WILL ALSO GENERATE A WTO WHICH SHOULD BE RESPONDED
//*      TO IMMEDIATELY. THE SYSTEM WILL NOT ACCEPT ANY NEW WORK
//*      UNTIL THE OPERATOR HAS REPLIED TO THE IEFC166D MESSAGE.
//*
//*   2. STEP IVP PRINTS FOUR MEMBERS OF SYS1.PARMLIB USING IEBPTPCH.
//*
//*   3. STEP ASM ASSEMBLES A SAMPLE PROGRAM USING HLASM.
//*      THE PROGRAM WILL RUN AMODE=31, RMODE=ANY.
//*
//*   4. STEP LKED LINKEDITS THE SAMPLE PROGRAM USING THE MVS/DFP
//*      LINKAGE EDITOR OR DFSMS/MVS PROGRAM MANAGEMENT BINDER
//*      (HEWLH096).
//*
//*   5. STEP GO EXECUTES THE SAMPLE PROGRAM ASSEMBLED AND
//*      LINKEDITED ABOVE.
//*
//*   6. STEP ABEND TRIES TO LOAD A NONEXISTENT MODULE (EXPCT806),
//*      AND USE THE SYSUDUMP DD STATEMENT TO GET A REGION DUMP.
//*
//*
//*  FOR MORE INFORMATION ABOUT THE COMMAND STATEMENT SEE
//*           MVS/ESA JCL REFERENCE.  SYNTAX:
//*
//*<LABEL> COMMAND  '<COMMAND TO ISSUE>'  COMMENTS
//*
//* THE FOLLOWING WILL ISSUE A "DISPLAY ACTIVE, LIST" COMMAND
//* UNLESS DISABLED BY THE JOB ENTRY SUBSYSTEM OR DISALLOWED FOR
//* THE SUBMITTING USER BY RACF:
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//*
//LISTACTV COMMAND  'D A,L'   LIST ACTIVE ADDRESS SPACES
//*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//*
//*  THE FOLLOWING STEP WILL PRINT FOUR MEMBERS OF SYS1.PARMLIB
//*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//IVP      EXEC PGM=IEBPTPCH,
//            REGION=4M
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD DSNAME=SYS1.PARMLIB,
//            DISP=SHR
//SYSUT2   DD SYSOUT=*
//SYSIN    DD *
       PRINT   TYPORG=PO,MAXFLDS=5,MAXNAME=5
       MEMBER  NAME=IEACMD00
       RECORD  FIELD=(80)
       MEMBER  NAME=IEAIPS00
       RECORD  FIELD=(80)
       MEMBER  NAME=IEASYS00
       RECORD  FIELD=(80)
       MEMBER  NAME=CLOCK00
       RECORD  FIELD=(80)
/*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//*
//*  THE FOLLOWING STEP ASSEMBLES A SAMPLE PROGRAM.
//*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//ASM   EXEC PGM=ASMA90,
//            PARM=(NODECK,OBJECT),
//            REGION=4M
//SYSLIB   DD DSN=SYS1.MACLIB,
//            DISP=SHR
//SYSUT1   DD DSN=&UT1,
//            SPACE=(1700,(400,50)),
//            UNIT=SYSALLDA
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD DSN=&LOADSET,
//            UNIT=SYSALLDA,
//            SPACE=(400,(40,10)),
//            DISP=(MOD,PASS),
//            DCB=(LRECL=80,BLKSIZE=0,RECFM=FB)
//SYSIN    DD  *
EXAM     TITLE 'SAMPLE PROGRAM'
         PRINT DATA
*
*        THIS IS THE MACRO DEFINITION
*
         MACRO
         MOVE  &TO,&FROM
.*
.*       DEFINE SETC SYMBOL
.*
         LCLC  &TYPE
.*
.*       CHECK NUMBER OF OPERANDS
.*
         AIF   (N'&SYSLIST NE 2).ERROR1
.*
.*       CHECK TYPE ATTRIBUTES OF OPERANDS
.*
         AIF   (T'&TO NE T'&FROM).ERROR2
         AIF   (T'&TO EQ 'C' OR T'&TO EQ 'G' OR T'&TO EQ 'K').TYPECGK
         AIF   (T'&TO EQ 'D' OR T'&TO EQ 'E' OR T'&TO EQ 'H').TYPEDEH
         AIF   (T'&TO EQ 'F').MOVE
         AGO   .ERROR3
.TYPEDEH ANOP
.*
.*       ASSIGN TYPE ATTRIBUTE TO SETC SYMBOL
.*
&TYPE    SETC  T'&TO
.MOVE    ANOP
*        NEXT TWO STATEMENTS GENERATED FOR MOVE MACRO
         L&TYPE   2,&FROM
         ST&TYPE  2,&TO
         MEXIT
.*
.*       CHECK LENGTH ATTRIBUTES OF OPERANDS
.*
.TYPECGK AIF   (L'&TO NE L'&FROM OR L'&TO GT 256).ERROR4
*        NEXT STATEMENT GENERATED FOR MOVE MACRO
         MVC   &TO,&FROM
         MEXIT
.*
.*       ERROR MESSAGES FOR INVALID MOVE MACRO INSTRUCTIONS
.*
.ERROR1  MNOTE 1,'IMPROPER NUMBER OF OPERANDS, NO STATEMENTS GENERATED'
         MEXIT
.ERROR2  MNOTE 1,'OPERAND TYPES DIFFERENT, NO STATEMENTS GENERATED'
         MEXIT
.ERROR3  MNOTE 1,'IMPROPER OPERAND TYPES, NO STATEMENTS GENERATED'
         MEXIT
.ERROR4  MNOTE 1,'IMPROPER OPERAND LENGTHS, NO STATEMENTS GENERATED'
         MEND
*
*        MAIN ROUTINE
*
SAMPLR   CSECT
SAMPLR   AMODE 31
SAMPLR   RMODE ANY
BEGIN    SAVE  (14,12),,*
         BALR  R12,0              ESTABLISH ADDRESSABILITY OF PROGRAM
         USING *,R12              TELL THE ASSEMBLER WHAT BASE TO USE
         ST    13,SAVE13
         LM    R5,R7,=A(LISTAREA,16,LISTEND)  LOAD LIST AREA PARAMETERS
         USING LIST,R5            REGISTER 5 POINTS TO THE LIST
MORE     BAL   R14,SEARCH         FIND LIST ENTRY IN TABLE
         TM    SWITCH,NONE        CHECK TO SEE IF NAME WAS FOUND
         BO    NOTTHERE           BRANCH IF NOT
         USING TABLE,R1           REGISTER 1 NOW POINTS TO TABLE ENTRY
         MOVE  TSWITCH,LSWITCH          MOVE FUNCTIONS
         MOVE  TNUMBER,LNUMBER               FROM LIST ENTRY
         MOVE  TADDRESS,LADDRESS                  TO TABLE ENTRY
LISTLOOP BXLE  R5,R6,MORE         LOOP THROUGH THE LIST
         CLC   TESTTABL(240),TABLAREA
         BNE   NOTRIGHT
         CLC   TESTLIST(96),LISTAREA
         BNE   NOTRIGHT
         WTO '  ASSEMBLER SAMPLE PROGRAM SUCCESSFUL'
EXIT     L     R13,SAVE13
         RETURN (14,12),RC=0
*
NOTRIGHT WTO '  ASSEMBLER SAMPLE PROGRAM UNSUCCESSFUL'
         B     EXIT
NOTTHERE OI    LSWITCH,NONE       TURN ON SWITCH IN LIST ENTRY
         B     LISTLOOP           GO BACK AND LOOP
SAVE13   DC    F'0'
SWITCH   DC    X'00'
NONE     EQU   X'80'
*
*        BINARY SEARCH ROUTINE
*
SEARCH   NI    SWITCH,255-NONE    TURN OFF NOT FOUND SWITCH
         LM    R1,R3,=F'128,4,128' LOAD TABLE PARAMETERS
         LA    R1,TABLAREA-16(R1) GET ADDRESS OF MIDDLE ENTRY
LOOP     SRL   R3,1               DIVIDE INCREMENT BY 2
         CLC   LNAME,TNAME        COMPARE LIST ENTRY WITH TABLE ENTRY
         BH    HIGHER             BRANCH IF SHOULD BE HIGHER IN TABLE
         BCR   8,R14              EXIT IF FOUND
         SR    R1,R3              OTHERWISE IT IS LOWER IN THE TABLE   X
                                     SO SUBTRACT INCREMENT
         BCT   R2,LOOP            LOOP 4 TIMES
         B     NOTFOUND           ARGUMENT IS NOT IN THE TABLE
HIGHER   AR    R1,R3              ADD INCREMENT
         BCT   R2,LOOP            LOOP 4 TIMES
NOTFOUND OI    SWITCH,NONE        TURN ON NOT FOUND SWITCH
         BR    R14                EXIT
*
*        THIS IS THE TABLE
*
         DS    0D
TABLAREA DC    XL8'0',CL8'ALPHA'
         DC    XL8'0',CL8'BETA'
         DC    XL8'0',CL8'DELTA'
         DC    XL8'0',CL8'EPSILON'
         DC    XL8'0',CL8'ETA'
         DC    XL8'0',CL8'GAMMA'
         DC    XL8'0',CL8'IOTA'
         DC    XL8'0',CL8'KAPPA'
         DC    XL8'0',CL8'LAMBDA'
         DC    XL8'0',CL8'MU'
         DC    XL8'0',CL8'NU'
         DC    XL8'0',CL8'OMICRON'
         DC    XL8'0',CL8'PHI'
         DC    XL8'0',CL8'SIGMA'
         DC    XL8'0',CL8'ZETA'
*
*        THIS IS THE LIST
*
LISTAREA DC    CL8'LAMBDA',X'0A',FL3'29',A(BEGIN)
         DC    CL8'ZETA',X'05',FL3'5',A(LOOP)
         DC    CL8'THETA',X'02',FL3'45',A(BEGIN)
         DC    CL8'TAU',X'00',FL3'0',A(1)
         DC    CL8'LIST',X'1F',FL3'465',A(0)
LISTEND  DC    CL8'ALPHA',X'00',FL3'1',A(123)
*
*        THIS IS THE CONTROL TABLE
*
         DS    0D
TESTTABL DC    FL3'1',X'00',A(123),CL8'ALPHA'
         DC    XL8'0',CL8'BETA'
         DC    XL8'0',CL8'DELTA'
         DC    XL8'0',CL8'EPSILON'
         DC    XL8'0',CL8'ETA'
         DC    XL8'0',CL8'GAMMA'
         DC    XL8'0',CL8'IOTA'
         DC    XL8'0',CL8'KAPPA'
         DC    FL3'29',X'0A',A(BEGIN),CL8'LAMBDA'
         DC    XL8'0',CL8'MU'
         DC    XL8'0',CL8'NU'
         DC    XL8'0',CL8'OMICRON'
         DC    XL8'0',CL8'PHI'
         DC    XL8'0',CL8'SIGMA'
         DC    FL3'5',X'05',A(LOOP),CL8'ZETA'
*
*        THIS IS THE CONTROL LIST
*
TESTLIST DC    CL8'LAMBDA',X'0A',FL3'29',A(BEGIN)
         DC    CL8'ZETA',X'05',FL3'5',A(LOOP)
         DC    CL8'THETA',X'82',FL3'45',A(BEGIN)
         DC    CL8'TAU',X'80',FL3'0',A(1)
         DC    CL8'LIST',X'9F',FL3'465',A(0)
         DC    CL8'ALPHA',X'00',FL3'1',A(123)
*
*        THESE ARE THE SYMBOLIC REGISTERS
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R5       EQU   5
R6       EQU   6
R7       EQU   7
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
*        THIS IS THE FORMAT DEFINITION OF LIST ENTRYS
*
LIST     DSECT
LNAME    DS    CL8
LSWITCH  DS    C
LNUMBER  DS    FL3
LADDRESS DS    F
*
*        THIS IS THE FORMAT DEFINITION OF TABLE ENTRYS
*
TABLE    DSECT
TNUMBER  DS    FL3
TSWITCH  DS    C
TADDRESS DS    F
TNAME    DS    CL8
         END   BEGIN
/*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//*
//* THIS STEP WILL LINKEDIT THE PROGRAM ASSEMBLED ABOVE IF THE
//* RETURN CODE FROM ASM WAS ACCEPTABLE.  THE PROGRAM MANAGEMENT
//* BINDER OR LINKAGE EDITOR WILL BE CALLED DEPENDING ON WHETHER
//* DFSMS/MVS OR MVS/DFP IS INSTALLED.
//*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//LKED  EXEC PGM=HEWLH096,
//            PARM=(XREF,LET,LIST,NCAL),
//            REGION=4M,
//            COND=(8,LT,ASM)
//SYSLIN   DD DSN=&LOADSET,
//            DISP=(OLD,DELETE)
//SYSLMOD  DD DSN=&GOSET(GO),
//            UNIT=SYSALLDA,
//            SPACE=(1024,(50,20,1)),
//            DISP=(MOD,PASS)
//SYSUT1   DD DSN=&UT1,
//            UNIT=SYSALLDA,
//            SPACE=(1024,(50,20))
//SYSPRINT DD SYSOUT=*
/*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//*
//* THIS STEP WILL RUN THE PROGRAM IF THE RETURN CODES FROM ASM
//* AND LKED WERE ACCEPTABLE.
//*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//GO    EXEC  PGM=*.LKED.SYSLMOD,
//          COND=((8,LT,ASM),(4,LT,LKED))
/*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//*
//* THIS STEP WILL ATTEMPT TO RUN PROGRAM EXPCT806, WHICH IBM DOES
//* NOT SUPPLY.  IF YOU HAVE A PROGRAM IN YOUR INSTALLATION WITH
//* THIS NAME, CHANGE EXPCT806 TO THE NAME OF A PROGRAM THAT DOES
//* NOT EXIST.  AN ATTEMPT TO LOAD A NONEXISTENT PROGRAM WILL
//* CAUSE AN ABEND 806-4.  UNLESS SLIP SUPPRESSES THE DUMP, A
//* REGION DUMP WILL BE WRITTEN TO SYSUDUMP.
//*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//ABEND EXEC  PGM=EXPCT806,     THIS PROGRAM SHOULD NOT EXIST, SO
//          COND=EVEN         CALLING IT WILL GET ABEND806 AND DUMP
//SYSUDUMP DD  SYSOUT=*

./ ADD NAME=JCMDMVS
//IEFBR14  JOB (ACCT),MVS,MSGCLASS=5,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//* Useful Usage Monitor commands:
//*Start the usage monitor
//*command  S HSIJMON
//*Stop the usage monitor (Normal shutdown)
//*command P HSIJMON
//*Stop the usage monitor (Normal shutdown)
//*command  F HSIJMON,STOP
//*Stop the usage monitor (Normal shutdown)
//*command  F HSIJMON,END
//*Stop the usage monitor without data SORT (avoid QUICK shutdown if possible)
//*command  F HSIJMON,QUICK
//*Stop the usage monitor immediately (data is discarded before a cle   hutdown)
//*command  F HSIJMON,CAN
//*Manually trigger a Switch-and-write cycle
//*command  F HSIJMON,SWI
//*Display dynamic Allocation parameters
//*command  F HSIJMON,D-A
//*Display undocumented diagnostic Counters
//*command  F HSIJMON,D-C
//*Display Dataset name include/exclude lists
//*command  F HSIJMON,D-D
//*Display system Identifier
//*command  F HSIJMON,D-I
//*Display Status settings
//*command  F HSIJMON,D-S
//*Display switch-and-write Time setting
//*command  F HSIJMON,D-T
//*Display program name eXclude list
//*command  F HSIJMON,D-X
//*Refresh Usage Monitor settings from HSIZIN file at any time, without an outag
//*command  F HSIJMON,REF
//*DISP grs allocation
//*COMMAND 'D grs,res=(*,U1PS.CTM918.SCHEDULE)'
//*COMMAND '
//*COMMAND 'D SMS,ACTIVE
//*COMMAND 'D SMS,
//*COMMAND 'D SMS,CACHE ]
//*SMSVSAM SERVER ADDRESS SPACE IS NOT ACTIVE
//*COMMAND 'D SMS,CFCACHE({structurename|*}) ]
//*SMSVSAM SERVER ADDRESS SPACE IS NOT ACTIVE
//*COMMAND 'D SMS,CFLS(ALL|lockstructurename) ]
//*SMSVSAM SERVER ADDRESS SPACE IS NOT ACTIVE
//*COMMAND 'D SMS,CFVOL(volid) ]
//*COMMAND 'D SMS,CICSVR[,{ALL|LOGSTREAMS({LogstreamName|ALL})|RCDS} ]
//*COMMAND 'D SMS,{DRIVE|DRI}({name|ALL})[ ,STATUS]|,DETAIL ]
//*COMMAND 'D SMS,DSNAME(dsn){,TVS{,WTOR}} ]
//*COMMAND 'D SMS,DSNAME(dsn|ALL),ZHL ]
//*zHyperLink Writes disabled
//*COMMAND 'D SMS,DSNAME(dsn),STATS(ZHLWRITE{,RESET}) ]
//*COMMAND 'D SMS,JOB(jobname){,WTOR} ]
//*COMMAND 'D SMS,LIBRARY(ALL),STATUS,LISTDRI'
//*COMMAND 'D SMS,LIBRARY(ALL),LISTDRI'
//*COMMAND 'D SMS,LIBRARY(ALL),detail'
//*TRANSACTIONAL VSAM IS NOT AVAILABLE
//*COMMAND 'D SMS,LOG(ALL),WTOR
//*COMMAND 'D SMS,MONDS({specmask|*}) ]
//*COMMAND 'D SMS,OAM ]

            D SMS,ACTIVE
            [,OAMXCF ]
                   [,OPTIONS ]

                   [,OSMC[,TASK(name)] ]
                   [,{PDSE|PDSE1}{,LATCH(laddr)[,DETAILED]} ]
                   |,SUMMARY
                   {,MODULE(modname)}
                   {,VSTOR}
                   {,HSPSTATS[,DSN(dsname)][,STORCLAS(sc)]]}
                   |,UNMANAGED
                   [,SUMMARY ]
                   [,MAXDSNS(maxds) ]
                   {,CONNECTIONS,DSN(dsname)[,VOL(volser)]

                   [,SEP ]
                   [,SHCDS ]
                   [,SHUNTED,{SPHERE(sphere)|UR({urid|ALL}}{,WTOR} ]

                   [,SMSVSAM[,ALL] ]

                   [,SMSVSAM,QUIESCE ]

                   [,SMSVSAM,DIAG({CONTENTION|C}) ]
                   [,{STORGRP|SG}{(storgrp|ALERT|ALL)}[ ,LISTVOL ]
                   [,{STORGRP|SG}{(storgrp|ALL)}[ ,LISTVOL]|,DETAIL ]
                   [,{TRACE|T} ]
                   [,TRANVSAM[,ALL][,ALLLOGS][,WTOR] ]
                   [,URID({urid|ALL}){,WTOR} ]

                   [,{VOLUME|VOL}(volume) ]
                   [,VOLSELMSG ]
                   [,L={a|name|name-a} ]
//*NO MATCHING INFORMATION FOUND
//*DISP LOGGER
//*NO MATCHING INFORMATION FOUND
//*COMMAND 'D LOGGER,
//*COMMAND 'D LOGGER,LOGSTREAM,STRNAME=ALL
//*active
//*COMMAND 'D LOGGER,STATUS
//*NO DATA SET RECALLS WAITING
//*COMMAND 'D LOGGER,STATUS,RECALLS
//*LOGGER PARAMETER OPTIONS
//*COMMAND 'D LOGGER,ixgcnf,zai
 [,{ZAI}[,VERIFY]] ]
 [,IXGCNF[,{ZAI|MONITOR|MON|MANAGE}] ]
//*CONNECTION INFORMATION BY LOGSTREAM FOR SYSTEM OSEO
//*NO MATCHING INFORMATION FOUND
//*COMMAND 'D LOGGER,CONNECTION,LSNAME|LSN=logstreamname] ]
 [,JOBNAME|JOB|J=mvsjobname]
 [,{SUMM|S } ]
 {DETAIL|D}
 [,{SYSPLEX},{LSNAME =
lsname}]
 [,DASDONLY ]
 [,ZAI ]

 [,{LOGSTREAM|L}[,LSNAME=logstreamname ] ]
 [,STRNAME|STRN=structurename]
 [,DASDONLY ]
 [,ZAI ]
 [,{SUMM|S } ]
 [,{STRUCTURE|STR}[,STRNAME|STRN=structurename] ]
 [,{SUMM|S } ]

 [,L={a|name|name-a}
//*COMMAND 'D XCF
//*COMMAND 'D XCF,PATHIN
//*COMMAND 'D XCF,DEVICE=(/]INDEVNUM,/]INDEVNUM...])|ALL]
//*CFRM COUPLE DATA SET IS NOT AVAILABLE
//*COMMAND 'D XCF,STRUCTURE,STRNAME=ALL'
//*CFRM COUPLE DATA SET IS NOT AVAILABLE
//*COMMAND 'D XCF,STRUCTURE,STATUS=ALLOCATED'
//*COMMAND 'D XCF,SYSNAME=ALL
//*COMMAND 'D XCF,STATUS=(STARTING],RESTARTING],WORKING]
//*COMMAND 'D XCF,STOPPING],STOPFAILED],INOPERATIVE]
//*COMMAND 'D XCF,LINKING],QUIESCING]) ]
//*COMMAND 'D XCF
//*COMMAND 'D XCF,PATHOUT|PO ]
//*COMMAND 'D XCF,DEVICE|DEV=(/]outdevnum,/]outdevnum...])|ALL]
//*COMMAND 'D XCF,STRNAME|STRNM=(strname,strname]...)|ALL]
//*COMMAND 'D XCF,CLASS=(classname,classname]...)|ALL]
//*COMMAND 'D XCF,SYSNAME|SYSNM=(sysname,sysname]...)]
//*COMMAND 'D XCF,STATUS|STAT=(STARTING],RESTARTING],WORKING]
//*COMMAND 'D XCF,STOPPING],STOPFAILED],INOPERATIVE]
//*COMMAND 'D XCF,LINKING],QUIESCING])]
//*COMMAND 'D XCF,REBUILDING],QUIESCED])]
//*COMMAND 'D XCF
//*COMMAND 'D XCF,LOCALMSG|LM,CLASS=(classname,classname]...)|ALL] ]
//*COMMAND 'D XCF,GROUP,ALL'
//*PROTOCOL NOT APPLICABLE IN MONOPLEX MODE
//*COMMAND 'D XCF,SYSPLEX,ALL'
//*COMMAND 'D XCF,COUPLE,TYPE=ALL'
//*COMMAND 'D XCF,CLASSDEF|CD ]
//*COMMAND 'D XCF,CLASS=classname|(classname,classname]...)|ALL]
//*COMMAND 'D XCF|,GROUP|G=groupname
//*COMMAND 'D XCF,STRUCTURE'
//*COMMAND 'D XCF,ALTER=DISABLED|ENABLED] ]
//*COMMAND 'D XCF,STRNAME|STRNM=(strname,strname]...)|ALL]
//*COMMAND 'D XCF,CONNAME|CONNM=(conname,conname]...)|ALL]
//*COMMAND 'D XCF,STATUS|STAT=(ALLOCATED],NOTALLOCATED]
//*COMMAND 'D XCF,DUPENAB],DUPALLOW]
//*COMMAND 'D XCF,LOSSCONN]
//*COMMAND 'D XCF,RBPEND]
//*COMMAND 'D XCF,POLICYCHANGE],DEALLOCPENDING]
//*COMMAND 'D XCF,LARGERCFRMDS],REBUILD],STRDUMP]
//*COMMAND 'D XCF,ALTER],FPCONN],NOCONN],DUPREBUILD]
//*COMMAND 'D XCF,ENCRYPTED] ,NOTENCRYPTED]
//*COMMAND 'D XCF,ENCMISMATCH])]
//*COMMAND 'D XCF
//*COMMAND 'D XCF,CF,CFNAME=ALL'
//*COMMAND 'D XCF,POLICY,TYPE=ALL'
//*COMMAND 'D XCF,PRSMPOLICY|PRSMPOL ]
//*COMMAND 'D XCF
//*COMMAND 'D XCF,ARMSTATUS'
//*COMMAND 'D XCF,RESTARTGRP=ALL'
//*COMMAND 'D XCF,ELEMENT|EL=elname|JOBNAME|JOB=jobname]
//*COMMAND 'D XCF,INITSYS=initsys]
//*COMMAND 'D XCF,CURRSYS=currsys]
//*COMMAND 'D XCF,STATE=(STARTING|START],AVAILABLE|AVAIL],FAILED]
//*COMMAND 'D XCF,RESTARTING|RESTART],RECOVERING|RECOVER])]
//*COMMAND 'D XCF,DETAIL'
//*COMMAND 'D XCF,REALLOCATE|REALLOC,REPORT|TEST ]
//*COMMAND 'D XCF,SERVER'
//*COMMAND 'D XCF,SYSNAME|SYSNM=(sysname,sysname...])]
//*COMMAND 'D XCF,SERVERNAME|SRVNAME|SRVNM=servername]
//*COMMAND 'D XCF,SCOPE=(SUMMARY|SUM)|,(DETAIL|DET)]
//*COMMAND 'D XCF,TYPE=NAME,STATUS=(STALLED)]|
//*COMMAND 'D XCFTYPE=INSTANCE|INST,STATUS=(WORKING|WORK]STALLED])],INSTNUM|
//*COMMAND 'D XCF,STATUS=(WORKING|WORK],STALLED])]
//*COMMAND 'D XCF,NOTEPAD|NP ]
//*COMMAND 'D XCF,NOTEPADNAME|NPNAME|NPNM=notepadname|ALL]
//*COMMAND 'D XCF,STRNAME|STRNM=hostname|ALL]
//*COMMAND 'D XCF,SCOPE=SUMMARY|SUM|DETAIL|DET
//*COMMAND '
//*prog lnklst
//*COMMAND 'd prog,lnklst,names
//*prog apf delete
//*COMMAND 'SETPROG APF,DELETE,DSNAME=SYS4.IOA920.LOAD.VOLUME=BDPMEP'
//*prog apf add
//*COMMAND 'SETPROG APF,ADD,DSNAME=SYS4.IOA920.LOAD.VOLUME=BDPMEM'
//ALCISPFL EXEC PGM=IEFBR14

./ ADD NAME=LOGIC
This member documents briefly the logic used by the CAVXTRT (CA-View Extract)
ISPF Dialog.

1. Test for ISPF Applid of CAVX and if not then
   - create CAVX ISPF Commands table to support the use of RFIND
   - reinvoke command with CAVX ISPF Applid

2. Process an parameter options
   - user may specify a specific CA-View database name
   - /CA will cause all database selections to be passed to
    the Computer Associates CA-View ISPF dialog
   - /LAST will use the last used database

3. If no database or no /LAST then the Get_DB routine will build
   an ISPF selection table of avialable CA-View databases.  The
   user may then select one of the databases using point-and-shoot
   or any non-blank character in the selection field. Selection
   option of C will invoke the Computer Associates CA-View ISPF
   Dialog.

4. The Report selection specification panel prompts for Report-ID,
   Report generation and optional from and to dates.

   - The report-id may be a full 12 character report-id or may be
     masked. A single * may mask a single character.  A double *
     may mask multiple characters. e.g. ab**g*i*
   - The report generation may be blank, *, or ALL for All reports
     or may be a specific generation number
   - The From-Date may be TODAY, WEEK, MONTH, or a specific date
     in the format of mm/dd/yy (or for European dd/mm/yy).
   - The To-Date is only used if there is a From-Date and may only
     be in the format of mm/dd/yy (or for European dd/mm/yy) or TODAY
     (which is the default).

   Note: The date processing is performed within this application

5. Once the selection criteria is defined then a SARBCH /LIST control
   statement is generated and the SARBCH program is called. The resulting
   report is then processed to built an ISPF selection table display of
   all eligible reports.  If a report generation mask was specified then
   it is altered for the /LIST statement appropriately.

6. The Report selection table is displayed and the user may now select
   any report. Multiple reports may be selected but only one is processed
   at a time.

   All reports that are selected will be processed in a similar manner
   except the L (load) option.
   - Call the generalized extract routine
   - If the report is not on Disk (in Location DISK, PDSK, PERM, TEMP,
     or PTMP) then the selection option is changed to L (Load)
   - If the report is on Disk then invoke the appropriate routine to
     process the extracted report.
   - All options, except C (Copy), will have the extracted report dataset
     deleted upon completion of the process.

   Valid commands on this display are:
   - Refresh
     Rebuild the selection list by executing the SARBCH program with
     the generated /LIST statement.
   - Find
     Find a character string in either the report-id or the jobname
   - Enter key
     Will check the status of any report processed using the L (Load)
     selection option.

   Valid selection options are:
   - B
     Use ISPF Browse on the extracted report.
   - C
     Extract the report to a prompted for dataset name.
   - L
     Generate the appropriate SARBCH /PRINT statement and generate
     the necessary JCL to cause the requested report to be loaded
     from CA-View tape to a CA-View managed disk file. The JCL is
     automatically submitted.
   - M
     Pass the extracted dataset name to the XMITIP ISPF dialog using
     the XMITIPFE (XMITIP Front-End) interface.
   - P
     Print the report using the PRINTDS command after prompting the
     user for output information. This prompting panel is very similar
     to the SDSF XS (extract sysout) panel and uses that ISPF Help
     panel.
   - T
     Display a prompt panel for the user with a command entry field
     so the user can use their 3270 terminal emulator to download
     the report. If using IND$FILE the command is processed by this
     application (which just invokes it).  If using TCP/IP FTP then
     the prompting panel displays a sample set of FTP commands.
   - V
     Use ISPF View on the extracted report.

./ ADD NAME=PANELS
!ÁINMR01 ‚  &  N1  	SLBD1  X  YÑ  20190123120505    À
ÁINMR02   à  IEBCOPYå  ú  Vs    ÿ    ‚  ú   & ê  ú  _ Ò  [   
   ó   	SLBD1 CAVXTRT ÜPANELSÂÁINMR02   à  INMCOPYå  ú  Vs      ‚ 
 ú  "4 ê  ú  ê Ò  \äÁINMR03å  ú  Vs      ‚   & Ò   öÈ ≠_ _ &[
 ÄÿêêêÄ  "8"8 Vs  ÇÍ    œ áÿ_&   O*  üÿ   ü   ±& úµ QÏ£ƒ  ú> ú>   
                                                                                
                                                                                
                                                                               
     üÿ         ó CAVXTRTS ⁄CAVXTRT   í Öú^Ï Ç ù  SYSLBD    CAVXTRTD 
  
ú Ñ   SYSLBD    CAVXTRTH  	 Ç	?Ô Ä   SYSLBD    CAVXT
RTL  ñ úÖ"çÍ Ñ   SYSLBD    CAVXTRTP  é ÖúÎ  á  SYSLBD    C
AVXTRTS    òúü úÉÏ â â  SYSLBD               ó CAVXTRT3 ⁄CAVXTRTW  
 Ñú§§  ù ù  SYSLBD    CAVXTRTX  ù ‚		"Öó    SYSLBD    CAVXTRT0 
   ú	? í   SYSLBD    CAVXTRT1  ÇÅ  ú!Ô    SYSLBD    CAVXT
RT2 Ä Òú!ú    SYSLBD  ü   CAVXTRT3  Ä úó    SYSLBD
            ó üüüüüüüü ¬CAVXTRT4  Ü }ú	?Ü    SYSLBD    CAVXTRT5  
 Ü		?    SYSLBD    üüüüüüüü                                           
                                                  Î                             
                                                     üÿ    ú> é 	 )attr default
(%+_)                                                                ® type(text
) intens(high) caps(off) just(asis ) color(turq)                     % type(text
) intens(high)                                                     )ü Body Windo
w(48,7) Expand(ÁÁ)                                                   %-Á-Á- ®Ext
ract CA-View DSN Prompt-Á-Á-                                         +
                                                                     +Enter Data
 Seü t Name%===>_cavxtdsn                                              +
                                                                       +    Pres
s PF3 to cancel or Enter to continue                                   +
                  ü                                                      )Init
                                                                           .curs
or = cavxtdsn                                                              .help
   = cavxtrt4                    ü                                         )Proc
                                                                              ve
r (&cavxtdsn,nb,dsname)                                                    )End
                                                â                               
 ú>    üÿ    ú>  Ë)Attr Default(%+_)
                       /* + type(text  ) intens(low )                   informat
ion only  */              _ type( input) intens(high) caps(on) just(left )
                        ü   µ type( input) intens(high) caps(off) just(left )
                            % type(text) intens(high)
                            $ type(output) intens(high) color(blue) hilite(rever
se)                         ® type(textü ) intens(high) color(blue) hilite(rever
se)                        )Body Expand(ÁÁ)
                           %-Á-Á- CA-View Print Report %-Á-Á-
                           +Command Input%===>_zcmd   ü 

                             +Enter SYSOUT attributes below:
                                                                     ü 
                               +Class       %===>_spc+     +(A through Z, 0 thro
ugh 9)                         +Copies      %===>_spcp+    +(1 to 255)
                               +Chars       %===>_schr+
    ü                            +Forms       %===>_spfm+    **
                                 +Destination %===>_spdest
                                 +FCB         %===>_spfcb+
                   ü               +UCS         %===>_spucs+
                                   +Process Mode%===>_sppm    +**
                                   +Pagedef     %===>_sppdef  +**
                                  ü  +Formdef     %===>_spfdef  +**
                                     +
                                     +Output Descriptor Name%===>_spodes  +(Omit
 with fields marked with **)         )Init       ü 
                                        .cursor = spc
                                        .help = ISFJPOS
                                       )Proc                    ü 
                                          ver(&spc,nb,list,A,B,C,D,E,F,G,H,I,J,K
,L,M,N,O,P,Q,R,S,                             T,U,V,W,X,Y,Z,0,1,2,3,4,5,6,7,8,9)
                                          ver (&spcp,range,1,255)              ü
                                            ver (&spdest,dsname)
                                            ver (&sppm,list,LINE,PAGE)
                                            ver (&spodes,dsname)
              ü                               if  (&spodes NE &Z)
                                                  ver (&spfm,list,&Z)
                                                  ver (&sppm,list,&Z)
                             +                      ver (&sppdef,list,&Z)
                           ∂                          ver (&spfdef,list,&Z)
                                                 )end
                                                 È    ú>    üÿ    ú>  	`)at
tr default(%+_)                                                              µ t
ype(text) intens(high) caps(off) just(asis ) color(yellow)                   ® t
ype(text) intens(high) caps(off) just(asis ) color(turq)                     %ü 
 type(text) intens(high)                                                       )
Body Window(58,10) Expand(ÁÁ)                                                  %
-Á-Á- ®CA-View Report File Transfer%-Á-Á-                                      %
Command ===>_ü zcmd
 ®
 ®From this panel you can now use your 3270 Emulator File
 ®Transfer function to downlü oad the extracted report to
   ®your workstation for further processing.
   ®
   ®Or you may use the TCP/IP File Transferü  Protocol (FTP)
     ®command from your workstation command prompt.
     +
     )Init                                                I
        &zup = cavxtrth
       )End
           ú>    üÿ    ú>  ú-)attr default(%+_)
                                 µ type(text) intens(high) caps(off) just(asis )
 color(yellow)                   ® type(text) intens(high) caps(off) just(asis )
 color(turq)                     %ü  type(text) intens(high)
                                   )Body Window(55,6) Expand(ÁÁ)
                                   %-Á-Á- ®CA-View Report Extract%-Á-Á-
                                   %Command ===>_ü zcmd
                                     +
                                     ®Enter the dataset name to be used for the
selected                             ®CA-View Report to be extraü cted into.
                                       +
                                       )Init
                                        &zup = cavxtrth                        f
                                         )End
                                             ú>    üÿ    ú>  óÄ)attr default
(%+_)                                                              µ type(text)
intens(high) caps(off) just(asis ) color(yellow)                   ® type(text)
intens(high) caps(off) just(asis ) color(turq)                     %ü  type(text
) intens(high)                                                       )Body Expan
d(ÁÁ)                                                                %-Á-Á- ®CA-
View Report Options%-Á-Á-                                            %Command ==
=>_ü zcmd                                                              +
                                                                       ®CA-View
Report Extraction Dialog for Viewing, Extracting, or Mailing           ®a Report
 from CA-View. Thiü s panel defines the report selection options         ®to lim
it the selection list of reports from the database.                      +
                                                                         µReport
 ID®      The CA-View Report ID (ü may be generic with * or **)            µRepo
rt Gen®     * or ALL for all generations, 0 for the current generation     +
          ®   or a specific generation                                     +
                                                ü                            ®Op
tional information to limit the selection list:                              +
                                                                             µFr
om Date ®     Date in mm/dd/yy format                          ü               +
                     or TODAY                                                  +
                     or WEEK for prior 7 days                                  +
                     or MONTH for prior 31 days                               ü 
 µTo Date   ®     Date in mm/dd/yy format
 )Init
  &zup = cavxtrth
 )End        Í
       ú>    üÿ    ú> ù ç)attr default(%+_)
                               ® type(text)   intens(high) caps(off) just(asis )
 color(turq)                   µ type(text)   intens(high) caps(off) just(asis )
 color(yellow)                ü  ‡ type(output) intens(high) caps(off) just(asis
 ) color(red)                    % type(text) intens(high)
                               )Body Expand(ÁÁ)
                               %-Á-Á- ®Extracü t CA-View File Transfer%-Á-Á-
                                 +Command%===>_zcmd

                                                            ü 
                                   ® File: ‡xferdsn
                                   ®
                                   ®You may now begin the file transfer usiü ng
your emulator file transfer process. ®or you may use TCP/IP FTP (File Transfer P
rotocol) from a workstation          ®command prompt:
                                     ®
          ü                                 µftp ‡ftphost
                                       ®     - enter your userid and password wh
en prompted                                 µget‡ftpdsn
                         ü                    µquit
                                         ®
                                         ®Note: When the file transfer is comple
te press Enter or PF3 to leave this     ü  ®      panel. At that point the above
 dataset will be deleted.                  )Init
                                             .cursor = zcmd
                                             .help   = ü cavxtrt5
                                               &ftpdsn = '&xferdsn workstation.f
ilename'                                     )Proc
                                             )End                     ·
                                                   ú> Ö   üÿ    ú>  Ü )Attr D
efault(%+_)                                                              /* + ty
pe(text  ) intens(low )                   information only  */              _ ty
pe( input) intens(high) caps(on) just(left ) color(red)                   ü   ‡
type(output) intens(high) caps(on) just(left ) color(yellow)                  $
type(output) intens(high) caps(on) just(left ) color(red)                     %
type(text) intens(high)                                                       ®
type(textü ) intens(high) color(blue) hilite(reverse)                        )Bo
dy Window(57,9) Expand(ÁÁ)                                                   %-Á
-Á- ®Extract CA-View Reports‡ver %-Á-Á-                                      +
                        ü                                                      +
Patience - The selected reports is now being extracted                         +
                                                                               +
   Report-ID: $rpt                     ü 
 +         Gen: $gen
 +         Seq: $seq
 +       Lines: $prtlines                             ü 
   +
   )Init
   )Proc                                                             %
     )end
         ú> á   üÿ    ú>  é )attr default(%+_)
                               µ type(text) intens(high) caps(off) just(asis ) c
olor(yellow)                   ® type(text) intens(high) caps(off) just(asis ) c
olor(turq) hilite(reverse)     £ü  type(text) intens(high) caps(off) just(asis )
 color(turq)                     % type(text) intens(high) color(red)
                                 ‡ type(output) intens(high) caps(on) just(left
) color(yellow)                  )Body Expand(Áü Á)
                                   %-Á-Á- ®CA-View Extract Reports Tutorial ‡ver
 %-Á-Á-                            %Selection ===>_ZCMD
                                  +%                          ü 
                                     µ  This ISPF Dialog provides a simple inter
face to the CA-View Report           µ  archive database.  This dialog provides
additional functionality to          µ  the Computer Associates CA-View ISPF ü i
nterface.                              µ
                                       µ  The following topics are presented in
sequence, or may be selected by        µ  number:
            ü                            µ
                                            %1+ Report Selection Criteria
                                            %2+ Report Selection Processing Opti
ons                        ü                  %3+ Report Database Selection
                                              %4+ Sorting Report Display Table
                                           +
                                          ü  )Proc
                                                  &zsel = trans( &zcmd
                                                             1,cavxtrt0
                                                         ü     2,cavxtrt2
                                                               3,cavxtrt3
                                                               4,cavxtrt1
                                                               *,'?'    ü 
                                                                 )
                                                      &zup = cavxtrth
                                                 )end
       ò                                               ú>    üÿ    ú> í é`)At
tr Default(%+_)                                                              /*
+ type(text  ) intens(low )                   information only  */
_ type( input) intens(high) caps(on) just(left ) color(red)                   ü 
  ‡ type(output) intens(high) caps(on) just(left ) color(yellow)
  % type(text) intens(high)
  ® type(text) intens(high) color(blue) hilite(reverse)                        )
Body Expand(Áü Á)
 %-Á-Á- ®Extract CA-View Reports‡ver %-Á-Á-
 %Command ===>_Zcmd
 +                          ü 
   +Processing CA-View Database:‡cavdb
   +                            ‡cavdbdes
   +                                       ü 
     +Enter/Verify:
     +Report ID        %===>_rptid                                    +
     +Report Gen       %===>_rptgen+     * or ALL for all,ü  0 for current
       +
       +Optional:
       +From Date        %===>_fromdate+   &dt      or Today or Week or Mü onth
         +To Date          %===>_todate  +   &dt      or Today (default)
         +
         )Init
        ü   .cursor = zcmd
            .help   = cavxtrth
            if (&datefmt = U)
               &dt = mmü /dd/yy
              if (&datefmt = E)
                 &dt = dd/mm/yy
             )Proc                    ü 
                if (&rptgen = &z)
                    &rptgen = *
                ver (&rptid,nb)                      Q
                  ver (&rptgen,nb)
                 )end
                     ú> è   üÿ    ú>   )Attr Default(%+_)
                                              ß type( input) intens(high) caps(o
n ) just(left ) pad('_')                      ^ type(output) intens(low ) caps(o
ff) just(asis ) pad(' ')                    ü   Ë type(output) intens(low ) caps
(off) just(right) pad(' ')                      µ type(text) intens(high) caps(o
ff) just(asis ) color(yellow)                   £ type(output) intens(high) caps
(off) just(asis ) color(blue)                   ‡ type(outpü ut) intens(high) ca
ps(on) just(left ) color(yellow)                  $ type(text  ) intens(high) ca
ps(off) just(asis ) color(turq)                   È type(output) intens(high) ca
ps(off) just(asis ) color(yellow)                 ® type(text) intens(highü ) co
lor(blue) hilite(reverse)                        )Body Expand(//)
                                                 %-/-/-®CAView Report Extraction
 Table‡ver £cavdb                  %-/-/-        %Command ===>_zcmd
         ü            / /%Scroll ===>_amt +        %            £selinfo
                                                   $Commands:µ   Find xx µRefres
h µSort                                            $Selections:µ B:Browse C:Copy
 DD:Delete L:Load M:Mailü  P:Print S:Browse          µ             T:Transfer V:
View                                                 +
                                                     %Sel Act Report-ID    Jobna
me   JobID Gen  Loc  ArchDate ArchTime ü    Lines Xcode+
                                                       )Model
                                                       ßz +^z  ^z           ^z
     ^z     ^z   ^z   ^z       ^z       Ëz       +^z  ü  )Init
                                                           .help = cavxtrth
                                                           .ZVARS = '(sel stat r
pt jname jid gen DLoc archdate archtime prtlines +                   ü xcode)'
                                                             &amt = CSR
                                                           )Reinit
                                                           )Proc
    ü 
               /* Process )BODY fields here      */            If (&ztdsels ^= 0
000)           /* If user selected some rows ... */
               /* .ü .. process )MODEL fields here */           if (&sel = S)
                                                                    &sel = B
                                                                ver (&sel,list,B
,C,DD,L,M,P,T,V)                  £                              )End
                                                                     ú>    üÿ 
   ú>   )Attr Default(%+_)
           /* % type(text  ) intens(high)              Defaults displayed for */
           /* + type(text  ) intens(low )                   information only  */
           /ü * _ type( input) intens(high) caps(on ) just(left )
*/              ß type( input) intens(high) caps(on ) just(left ) pad('_')
                ‡ type(output) intens(high) caps(off) just(left ) color(yellow)
                $ type( texü t)  intens(high) caps(off) just(left ) color(yellow
)                 ^ type( input) intens(low ) caps(off) just(asis ) pad(' ')
                  ® type(text) intens(high) color(blue) hilite(reverse)
               )Body Expand(//)           ü 
                 %-/-/-®CAView Database Selection Table‡ver %/-/-
                 %Command ===>_zcmd                                 / /%Scroll =
==>_amt +        ‡pcmds                                  ü 
                   $Selections: C:CA-Dialog V:Stats VF:Stats Full or anything el
se to select       %Sel  Description                                  Database
                   +                                                    ü 
                     )Model
                     ßz  +^z                                          +^z
                     )Init
       ü                .help = cavxtrth
                        .ZVARS = '(sel cavdbdes cavdb)'
                        &amt = CSR
                      ü   if (&admin EQ OK)
                             &pcmds = 'Admin Selections: R:Reorg'
                          if (&admin NE OK)
                             &pcmds =ü  &z
                           )Reinit
                           )Proc
                            if (&ztdsels = 0000)    ü 
                                 &row = .csrrow
                                 if (&row NE 0)
                                     if (&sel = &z)                ü 
                                           &sel = S
                                if (&ztdsels NE 0000)
                                     &row = &z
  £                              )End
                                     ú>    üÿ    ú> Ä 	`)attr default(%+_)
                                                           µ type(text) intens(h
igh) caps(off) just(asis ) color(yellow)                   ® type(text) intens(h
igh) caps(off) just(asis ) color(turq)                     %ü  type(text) intens
(high)                                                       )Body Expand(ÁÁ)
                                                             %-Á-Á- ®CA-View Rep
ort Database%-Á-Á-                                           %Command ===>_ü zcm
d                                                              +
                                                               ®Select any singl
e CA-View (aka SAR) Report Database withµpoint-and-shoot®or    ®anyµnon-blank®ch
aracter.  ü Then pressµEnter®to start the CA-View Report         ®Extract, View,
 Mail dialog.                                                    +
                                                                 ®Use of selecti
on optionµC®will invoke tü he Computer Associated CA-View          ®ISPF Dialog.
                                                                   +
                                                                   )Init
                                        I                             &zup = cav
xtrth                                                                )End
                                                                         ú> Å  
 üÿ    ú> Ç 	0)attr default(%+_)
               µ type(text) intens(high) caps(off) just(asis ) color(yellow)
               ® type(text) intens(high) caps(off) just(asis ) color(turq)
               %ü  type(text) intens(high)
                 )Body Expand(ÁÁ)
                 %-Á-Á- ®CA-View Sort Report Table%-Á-Á-
                 %Command ===>_ü zcmd
                   +
                      µSort+the Report Table using any of the column headings ex
cept Sel and Act)  +                          ü 
                     +  ®Syntax:µSort column-heading+
                     +        or
                     +          µSort column-heading,order+  ü 
                       +
                       +   order is either A for ascending or D for descending
                       +   * only 1 column may be sorted at a time          ü 
                         )Init
                          &zup = cavxtrth
                         )End
                              ú> É   üÿ    ú>  ç¢)attr default(%+_)
                                                     µ type(text) intens(high) c
aps(off) just(asis ) color(yellow)                   $ type(output) intens(high)
 caps(off) just(asis ) color(yellow)                 ®ü  type(text) intens(high)
 caps(off) just(asis ) color(turq)                     ‡ type(output) intens(hig
h) caps(off) just(asis ) color(turq)                   % type(text) intens(high)
                                                       )Body Expand(Áü Á)
                                                         %-Á-Á- ®CA-View Report
Selection%-Á-Á-                                          %Command ===>_zcmd
                                                         +
    ü                                                      ®Command Options:µFin
d xxx® Find xxx in Report ID or Jobname                    ®                µRef
resh®  Rebuild the selection list                          ®                µSor
t xxx,order® Sort tü he table using a column heading         ®                µE
nter®    with no selections will refresh only                ®
         reports for which Load was requested.               ®
                                  ü                            ®Row Selections:
µB®Browse Reportµ*                                             ®
µC®Copy Report to a Datasetµ*                                  +
µDD®Delete the disk copy of the reportµ*         ü               +
  µL®Load Report from Tape                                       +
  µM®E-Mail Reportµ*                                             +
  µP®Print Reportµ*                                             ü  +
    µS®Browse Reportµ*                                             +
    µT®Transfer Report to a workstationµ*                          +
    µV®View Reportµ**                                              +           ü
                                                                     +  µ* ®The
report must be in DISK, PDSK, PERM, TEMP, or PTMP                    +  µ**®To s
elect specific pages useµVIEW®and thenµEDITPAGE®while in View        )Init
              V                                                         &zup = c
avxtrth                                                                )End
                                                                           ú> 
   óÁINMR06

./ ADD NAME=PROCLIB
R1EX.PROCLIB                                                            00010000
SYS1.PROD.PROCLIB                                                       00020000
EXP.PROCLIB                                                             00030000
SYS1.IBM.PROCLIB                                                        00040000
U1EX.PROCLIB                                                            00050000
S28P.PROCLIB                                                            00060000
ERI.PROCLIB                                                             00070000

./ ADD NAME=RECEIVE
        /* this rexx exec is expected to be invoked by the EXEC command
           thus:

           EXec 'dsname(RECEIVE)'

           Prompting will occur for hlq and optional volser.

           and it will then issue the TSO RECEIVE command for the
           the following members to create these new data sets:

           Member       Dataset
           EXEC         hlq.EXEC and
           PANELS       hlq.PANELS

           You will then need to copy these datasets/members into
           datasets for production use.

           After these data sets are created several of the members
           of this install data set will be browsed.
           */

        parse source x1 x2 x3 x4 dsn .
         x = PROMPT("ON") /* enable prompting */

        say "Enter desired hlq for target data sets",
            "(default is" sysvar("syspref")".CAVXTRT.NEW):"
        pull hlq
        hlq = strip(hlq)

        if hlq = "" then hlq = sysvar("syspref")".CAVXTRT.NEW"

        say "Enter optional volser for target data sets",
            "default is to allow standard allocation to",
            "find a volume."
        pull volser
        volser = strip(volser)

        if volser <> "" then vol = "vol("volser")"
                        else vol = ""

        Say "Using HLQ:" hlq
        if vol <> "" then
           Say "Using Volser:" volser

        queue "dsn('"hlq".exec')" vol
        "Receive inds('"dsn"(exec)')"
        queue "dsn('"hlq".panels')" vol
        "Receive inds('"dsn"(panels)')"

        /* ------------- *
         * build tryexec *
         * ------------- */
         edsn = "'"hlq".exec'"
         pdsn = "'"hlq".panels'"
         t.1 = "/* REXX - Sample for testing */"
         t.2 = '"altlib activate application(exec) dataset('edsn')"'
         t.3 = "address ispexec"
         t.4 = '"libdef ispplib dataset id('pdsn') stack"'
         t.5 = "'select cmd(%cavxtrt) newappl(isr) passlib'"
         t.6 = "address tso"
         t.7 = "'altlib deactivate application(exec)'"
         t.8 = "address ispexec"
         t.9 = "'libdef ispplib'"
         t.0 = 9

        "Alloc f(try) ds('"dsn"(tryexec)') shr"
        "Execio * diskw try (finis stem t."
        "Free f(try)"

        if sysvar('sysispf') <> "ACTIVE" then exit
        Address ISPEXEC
           "Browse dataset('"dsn"($doc)')"
           "Browse dataset('"dsn"(changes)')"
           "Browse dataset('"dsn"($notes)')"
           "Browse dataset('"dsn"($install)')"
           "Browse dataset('"dsn"(annsamp)')"
           "Browse dataset('"dsn"(logic)')"
           "Browse dataset('"dsn"(tryexec)')"


./ ADD NAME=SDSFBAT
//SDSFBAT  JOB (T2,129200),MVS,
//  MSGCLASS=5,CLASS=0,NOTIFY=&SYSUID
// EXEC PGM=SDSF,PARM='++32,1000'
//*ISFOUT DD SYSOUT=*
//ISFOUT   DD  DISP=(NEW,CATLG,DELETE),
//             DSN=&SYSUID..OSEO.SSI,
//             DCB=(DSORG=PS,RECFM=FB,LRECL=256,BLKSIZE=25600),
//             SPACE=(TRK,(1,1)),
//             UNIT=3390
//ISFIN DD *
 SSI
  PRINT ODSN STE58.OSEO.SSI
//
 DA ALL
  PRINT ODSN STE58.OSEO.SDSF
//
// EXEC PGM=ISFAFD
//*ISFOUT DD SYSOUT=*
//ISFOUT   DD  DISP=(MOD,DELETE,DELETE),
//             DSN=&SYSUID..OSEO.SSI,
//             DCB=(DSORG=PS,RECFM=FB,LRECL=256,BLKSIZE=25600),
//             SPACE=(TRK,(1,1)),
//             UNIT=3390
//ISFIN DD *
 DA ALL
  PRINT ODSN STE58.OSEO.SDSF

./ ADD NAME=SMPELIST
//SMPELIST JOB (ACCT),CNTLM,MSGCLASS=5,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=(STE58.OSEO.CNTLM,
// SYS1.SACBCNTL)
//RECEIVE EXEC PGM=IEFBR14
//SMPPUNCH DD  DSN=&SYSUID..CNTRLM.DDDEF,
// DISP=(MOD,DELETE,DELETE),
// BLKSIZE=0,
// SPACE=(TRK,(3,1)),
// RECFM=FBA,
// LRECL=133,
// UNIT=SYSDA
//RECEIVE EXEC PGM=GIMSMP
//SMPCSI   DD DSN=SYS4.IOA920U1.CSI,DISP=SHR
//*SMPNTS  DD PATH='/u/smpe/smpnts/',PATHDISP=KEEP
//SMPPUNCH DD  DSN=&SYSUID..RAYMOND.REPORT,
// DISP=(NEW,CATLG,DELETE),
// BLKSIZE=13300,
// SPACE=(TRK,(3,1)),
// RECFM=FBA,
// LRECL=133,
// UNIT=SYSDA
//SMPLOG DD SYSOUT=*
//SMPOUT DD SYSOUT=*
//SMPRPT DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPCNTL DD *
SET BOUNDARY(IOA9TZN).
UNLOAD DDDEF       .
//
LIST DDDEF       .
//
LIST GLOBALZONE .
SET BOUNDARY(GLOBAL).
SET BOUNDARY(IOA9DZN).
SET BOUNDARY(IOA9TZN).
list lmod(ACFRCDAM) .
list lmod           .
RECEIVE SYSMODS HOLDDATA
ORDER( /* Place an order for service */
ORDERSERVER(ORDRSRVR)
CONTENT(
PTFS(UQ12345,UQ98765) /* Get these PTFs, and any.. */
) /* ..requisites.. */
FORTGTZONES(ZOS14) /* ..for this target zone */
).
/*
//ORDRSRVR DD *
<ORDERSERVER
url="https://eccgw01.boulder.ibm.com/services/projects/ecc/ws/"
keyring="MRWKYRNG"
certificate="SMPE Client Certificate">
</ORDERSERVER>
//
SET BDY (TZONE1) /* Set to zone to edit. */.
ZONEEDIT DDDEF /* Edit DDDEF entries. */.
CHANGE UNIT(*,3350) /* Change unit to 3350 and */.
 /* add UNIT if none exists. */.
ENDZONEEDIT

CHANGE UNIT(3330,3350) /* Change unit from 3330, */
 DATASET(SYS1.*,
 SYS2.*) /* data set name from SYS1. */.
ENDZONEEDIT

./ ADD NAME=TAR
//STE35SPL JOB '0000',CLASS=9,MSGCLASS=S,NOTIFY=&SYSUID
//*-------------------------------------------------------------
//*********************************************************************
//* LIB:    CAI.CE0CJCL(BQ4JJTAR)                                     *
//*                                                                   *
//* DOC:    RESTORE CA SPOOL JAVA TRANSFORMER TAR BACKUP.             *
//*                                                                   *
//* CHANGE: 1/ **CAI**     - CA SPOOL DATA SET PREFIX.                *
//*         2/ **USERID**  - CAIQD2E JCL PROCEDURE USERID.            *
//*         3/ *IMPORTANT* - TAILOR CD DIRECTORY COMMAND TO SPECIFY   *
//*                          THE JAVA TRANSFORMERS DIRECTORY CREATED  *
//*                          AT TIME OF INSTALLATION.                 *
//*                                                                   *
//*         4/ *IMPORTANT* - EITHER RUN THIS JOB UNDER THE CAIQD2E    *
//*                          USERID OR RUN THE HMODHFS STEP BELOW TO  *
//*                          SET THE CAIQD2E USERID AS THE JAVA HFS   *
//*                          DIRECTORIES AND FILES OWNER.             *
//*                                                                   *
//*********************************************************************
//*
//*********************************************************************
//*  RESTORE CA SPOOL JAVA TRANSFORMER TAR BACKUP.                    *
//*********************************************************************
//BQ4JJTAR EXEC  PGM=BPXBATCH,REGION=0M
//SYSTSPRT DD  SYSOUT=A
//STDOUT   DD  SYSOUT=A
//STDERR   DD  SYSOUT=A
//STDPARM  DD  *
SH cd /usr/local/cai/caspoold2e/xenos;
tar -xzvof "//'S28P.SPLD2E14.CE0CDATA(D2ETAR)'";
/*
//*********************************************************************
//*  CHANGE FILE PERMISSIONS FOR ALL CA SPOOL JAVA HFS DIRECTORIES.   *
//*********************************************************************
//HMODHFS EXEC PGM=BPXBATCH,REGION=0M,
//        PARM='SH chmod -R 0777 /usr/local/cai/caspoold2e/xenos'
//
//*********************************************************************
//*  OPTIONAL CHANGE FILE OWNER FOR ALL CA SPOOL JAVA HFS DIRECTORIES.*
//*********************************************************************
//HMODHFS EXEC PGM=BPXBATCH,REGION=0M,
//         PARM='SH chown -R **USERID** /tpv/caspoold2e'
//

./ ADD NAME=TRYEXEC
/* REXX - Sample for testing */
"altlib activate application(exec) dataset('STE58.CAVXTRT.EXEC')"
address ispexec
"libdef ispplib dataset id('STE58.CAVXTRT.PANELS') stack"
'select cmd(%cavxtrt) newappl(isr) passlib'
address tso
'altlib deactivate application(exec)'
address ispexec
'libdef ispplib'
./ ENDUP
!!
//
//* END \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
