//* GENERATED BY REXX PDS2SEQ
//* CHANGE USERID TO YOUR USERID
//* CHANGE PDS IF DESIRED
//* PUT JOBCARD AT TOP, SUBMIT
//*DELETE  EXEC PGM=IEFBR14
//*DD1     DD DSN=SYS019.LP2.MVS,
//*        DISP=(MOD,DELETE),UNIT=SYSDA,SPACE=(TRK,0)
//*
//LOAD    EXEC PGM=IEBUPDTE,PARM='NEW'
//SYSPRINT DD SYSOUT=*
//SYSUT2  DD DSN=SYS019.LP2.MVS,
//        DISP=(NEW,CATLG,DELETE),
//        DCB=(DSORG=PO,LRECL=80,BLKSIZE=8000,RECFM=FB),
//        UNIT=SYSDA,
//        SPACE=(TRK,(10,05,20),RLSE)
//*
//SYSIN  DD DATA,DLM='!!'

./ ADD NAME=$DEFALIA
//SYSALIAS JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=I,                       00010099
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020099
//*----------------------------------------------------------           00030099
//* DANS CE BATCH MANQUE LE CATALOGUE SUR LP2                           00040099
//* POUR TOUS LES CATALOGUES AVEC LP2 VOIR DEFALIA2                     00040199
//*----------------------------------------------------------           00040299
//* ATTENTION !!!! UN 2ND JOB POUR MAJ RACF SUR BRNR                    00042099
//***********************************************************           00050099
//* !!!!!!!! PLUS D'ALIAS SUR LE CATALOG G S Y S T                      00060099
//* !!!!!!!! PLUS D'ALIAS SUR LE CATALOG G P R O D 6                    00070099
//***********************************************************           00080099
//* PLUS D'ALIAS SUR LE CATALOG GTEST ET GTEST SUR G T E S T 2          00090099
//* PLUS D'ALIAS SUR LE CATALOG GPROD ET PROD1: SUR G P R O D 7         00100099
//* PAS D'ALIAS SUR LE CATALOG  GETUD :         SUR G T E S T 2         00110099
//* PAS D'ALIAS SUR LE CATALOG  CRECT1 :        SUR C R E C T 3         00120099
//* ALIAS ***1 USERS BRN1 (EX: PROJRO1)         SUR G P U P 1           00130099
//* ALIAS GXXXXX                                SUR G T E S T 2         00140099
//* ALIAS DVXXX                                 SUR G T E S T 2         00150099
//* ALIAS SYSTEME                               SUR G S Y S T 1         00160099
//* ALIAS PACIFICA                              SUR G O P A L E 2       00170099
//* ALIAS DES CICS                              SUR G C I C S X         00180099
//*********************************************                         00190099
//* CATALOGUES EURO/AN 2000 : CATALOG.G S Y S T   (OBJET SYSTEME)       00200099
//*                         : CATALOG.O P ALE   (OBJETS USER)           00210099
//*                         : CATALOG.G T EST1  (OBJETS ETUDES)         00220099
//*********************************************                         00230099
//* CATALAOGUE RECETTE COMMUNE : CATALOG.C S Y S T (OBJET SYSTEME)      00240099
//*                            : CATALOG.C R E C T 1 (OBJET RECETTE)    00250099
//*                            : CATALOG.C R E C T 2 (OBJET RECETTE)    00260099
//*                            : CATALOG.C R E C T 3 (OBJET RECETTE)    00270099
//* CATALOGUE PRE-PROD CAT     : CATALOG.L Q U A L 4                    00280099
//* CATALAOGUE PRE PROD BRNQ   : CATALOG.L S Y S T (OBJET SYSTEME)      00290099
//*********************************************                         00300099
//*    ATTENTION : CREATION DU PROFILE RACF DE PRODUCTION               00310099
//*                NE PAS EXECUTER RACFID SI PAS PRODUCTION             00320099
//*********************************************                         00330099
//DEFALIAS  EXEC  PGM=IDCAMS,REGION=7M                                  00340099
//SYSPRINT  DD  SYSOUT=*                                                00350099
//SYSIN     DD  *                                                       00360099
    DEFINE  ALIAS  (NAME(DVY24)               -                         00451099
            RELATE(CATALOG.GPROD7))            -                        00452099
    CATALOG(CATALOG.MASTER.ZOS18.BRN2)                                  00453099
//*                                                                     00580099
//                                                                      00581099
//******************************************************************    00590099
//*      CREATION D'UN PROFILE DATASET DANS RACF DATASET                00600099
//*      -----------------------------------------------                00610099
//*    A EXECUTER POUR LES CREATIONS D'ALIAS DE PRODUCTION              00620099
//*    ----------> STCOPAL SI EURO                                      00630099
//*    ----------> STCPRC SI PROD                                       00640099
//******************************************************************    00650099
//RACFID   EXEC PGM=IKJEFT01                                            00660099
//SYSPRINT DD SYSOUT=*                                                  00670099
//SYSTSOUT DD SYSOUT=*                                                  00680099
//SYSTSPRT DD SYSOUT=*                                                  00690099
//SYSTSIN  DD *                                                         00700099
 ADDGROUP PROX24 OWNER(PRODMGT) SUPGROUP(PRODMGT)                       00710099
 ADDSD  'PROX24.*' GENERIC OWNER(PRODMGT) UACC(NONE)                    00720099
 PERMIT 'PROX24.*' ACCESS(ALTER) ID(PRODMGT,PREP,SUPTECH,STCPRC,CTRL)   00730099
 PERMIT 'PROX24.*' ACCESS(READ) ID(DEVMGT,PROJ,STCGRP)                  00740099
 LD DA('PROX24.*') AUTHUSER                                             00750099
/*                                                                      00760099

./ ADD NAME=$EFALIAS
//SYSALIAS JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=I,                       00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//***********************************************************           00030000
//* ATTENTION !!!! UN 2ND JOB POUR MAJ RACF SUR BRNR                    00040000
//***********************************************************           00050000
//* !!!!!!!! PLUS D'ALIAS SUR LE CATALOG G S Y S T                      00060000
//* !!!!!!!! PLUS D'ALIAS SUR LE CATALOG G P R O D 6                    00070000
//***********************************************************           00080000
//* PLUS D'ALIAS SUR LE CATALOG GTEST ET GTEST SUR G T E S T 2          00090000
//* PLUS D'ALIAS SUR LE CATALOG GPROD ET PROD1: SUR G P R O D 7         00100000
//* PAS D'ALIAS SUR LE CATALOG  GETUD :         SUR G T E S T 2         00110000
//* PAS D'ALIAS SUR LE CATALOG  CRECT1 :        SUR C R E C T 3         00120000
//* ALIAS ***1 USERS BRN1 (EX: PROJRO1)         SUR G P U P 1           00130000
//* ALIAS GXXXXX                                SUR G T E S T 2         00140000
//* ALIAS DVXXX                                 SUR G T E S T 2         00150000
//* ALIAS PROXXX                                SUR G T E S T 1         00151000
//* ALIAS SYSTEME                               SUR G S Y S T 1         00152000
//* ALIAS PACIFICA                              SUR G O P A L E 2       00153000
//* ALIAS DES CICS                              SUR G C I C S X         00154000
//*********************************************                         00155000
//* CATALOGUES EURO/AN 2000 : CATALOG.G S Y S T   (OBJET SYSTEME)       00156000
//*                         : CATALOG.O P ALE   (OBJETS USER)           00157000
//*                         : CATALOG.G T EST1  (OBJETS ETUDES)         00158000
//*********************************************                         00159000
//* CATALAOGUE RECETTE COMMUNE : CATALOG.C S Y S T (OBJET SYSTEME)      00160000
//*                            : CATALOG.C R E C T 1 (OBJET RECETTE)    00170000
//*                            : CATALOG.C R E C T 2 (OBJET RECETTE)    00180000
//*                            : CATALOG.C R E C T 3 (OBJET RECETTE)    00190000
//* CATALOGUE PRE-PROD CAT     : CATALOG.L Q U A L 4                    00200000
//* CATALAOGUE PRE PROD BRNQ   : CATALOG.L S Y S T (OBJET SYSTEME)      00210000
//*********************************************                         00220000
//*    ATTENTION : CREATION DU PROFILE RACF DE PRODUCTION               00230000
//*                NE PAS EXECUTER RACFID SI PAS PRODUCTION             00240000
//*********************************************                         00250000
//DEFALIAS  EXEC  PGM=IDCAMS,REGION=7M                                  00260000
//SYSPRINT  DD  SYSOUT=*                                                00270000
//SYSIN     DD  *                                                       00280000
    DEFINE  ALIAS  (NAME(DVY64)              -                          00290000
            RELATE(CATALOG.GTEST2))            -                        00300000
    CATALOG(CATALOG.MASTER.ZOS110.BRN2)                                 00310000
    DEFINE  ALIAS  (NAME(DVY64)               -                         00320000
            RELATE(CATALOG.GTEST2))            -                        00330000
    CATALOG(CATALOG.MASTER.ZOS110.BRN2.BACKUP)                          00340000
    DEFINE  ALIAS  (NAME(DVY64)               -                         00350000
            RELATE(CATALOG.GTEST2))            -                        00360000
    CATALOG(CATALOG.MASTER.ZOS110.BRNR)                                 00370000
    DEFINE  ALIAS  (NAME(DVY64)               -                         00380000
            RELATE(CATALOG.GTEST2))            -                        00390000
    CATALOG(CATALOG.MASTER.ZOS112.BRNR)                                 00400000
    DEFINE  ALIAS  (NAME(DVY64)               -                         00410000
            RELATE(CATALOG.GTEST2))            -                        00420000
    CATALOG(CATALOG.MASTER.ZOS110.BRNQ)                                 00430000
    DEFINE  ALIAS  (NAME(DVY64)               -                         00440000
            RELATE(CATALOG.GTEST2))            -                        00450000
    CATALOG(CATALOG.MASTER.ZOS112.BRNQ)                                 00460000
//                                                                      00470000
//******************************************************************    00480000
//*      CREATION D'UN PROFILE DATASET DANS RACF DATASET                00490000
//*      -----------------------------------------------                00500000
//*    A EXECUTER POUR LES CREATIONS D'ALIAS DE PRODUCTION              00510000
//*    ----------> STCOPAL SI EURO                                      00520000
//*    ----------> STCPRC SI PROD                                       00530000
//******************************************************************    00540000
//RACFID   EXEC PGM=IKJEFT01                                            00550000
//SYSPRINT DD SYSOUT=*                                                  00560000
//SYSTSOUT DD SYSOUT=*                                                  00570000
//SYSTSPRT DD SYSOUT=*                                                  00580000
//SYSTSIN  DD *                                                         00590000
 ADDGROUP DVY51 OWNER(PRODMGT) SUPGROUP(PRODMGT)                        00600000
 ADDSD  'DVY51.*' GENERIC OWNER(PRODMGT) UACC(NONE)                     00610000
 PERMIT 'DVY51.*' ACCESS(ALTER) ID(PRODMGT,PREP,SUPTECH,STCPRC,CTRL)    00620000
 PERMIT 'DVY51.*' ACCESS(READ) ID(DEVMGT,PROJ,STCGRP)                   00630000
 LD DA('DVY51.*') AUTHUSER                                              00640000
/*                                                                      00650000

./ ADD NAME=$INDEX
$DEFALIA
$EFALIAS
$JOB
£CHRIN03
£DEFALIA
£DEFGDG0
£IKJDV12
£IKJSYST
A
ACBJBAS1 SC DEFINE/ALTER/DISPLAY
ACBJBAIE STORAGE CLASS DELETE
ACBJBAIH DSN LIST FROM PREV QUERY
ACBJBAIL GENERATES DATA CLASS LIST AND REPORT
ACBJBAIM DATA CLASS LIST
ACBJBAIN DATA CLASS REPORT
ACBJBAIO GENERATES MANAGEMENT CLASS LIST AND REPORT
ACBJBAIP MANAGEMENT CLASS LIST
ACBJBAIQ MANAGEMENT CLASS REPORT
ACBJBAIU STORAGE CLASS LIST AND REPORT
ACBJBAIV STORAGE CLASS LIST
ACBJBAIW STORAGE CLASS REPORT
ACBJBAIX STORAGE GROUP LIST AND REPORT
ACBJBAIY STORAGE GROUP LIST
ACBJBAIZ STORAGE GROUP REPORT
ACBJBAI4 DASD VOLUME LIST IN BATCH
ACBJBAI5 GENERATES VOLUME LIST
ACBJBAI7 GENERATES DATA SET LIST
ACBJBAI8 GENERATES VOLUME LIST
ACBJBAI9 GENERATES VOLUME LIST
ACBJBAJA DUMMY SG DEFINE/ALTER          group
ACBJBAJB OBJECT SG DEFINE/ALTER/DISPLAY group
ACBJBAJE STORAGE CLASS DELETE
ACBJBAJE STORAGE CLASS DELETE
ACBJBAJF Storage Group Delete
ACBJBAJ2 POOL SG DEFINE, ALTER,DISPLAY  group
ACBJBAJ7 OBJ BKUP SG DEFINE/ALTER       group
ACBJBAJ8 VIO SG DEFINE/ALTER            group
ACCOUNT
ACCOUNTA
ACCOUNT1
ACCOUNT5
ACCSAMP
ACTDDYN
ALIAS2
ALLOBCDS
ALLOCJRL
ALLOGJNR
ALLOMCDS
ALLOOCDS
AMBLIST
ANALYSE
ARCCMDS0
ARCCMD0$
ARCCMD00
ARCFVPST
ARCF0000
ARCGS003
ARCIVPST
ARCSTRST
ARCTOOLS
ARRCMDQ0
ARRCMDR$
ARRCMDR0
ARRCMD00
ASMUX04
BATCNTLE
CACHE271
CACHE272
CATCVTM
CATDEP
CATEXT
COMMAND
COMMND99
COPYFIC1
COPYFULL
COPYIPLV
CSFCKDS
CSFPKDS
CSFSETMK
CSI
CSSLIB
CTSSYNC
DALIASTE
DATACLAS
DEFA
DEFABRNO
DEFABRNQ
DEFABRNR
DEFACCT
DEFALCI
DEFALD31
DEFALIA$
DEFALIAQ
DEFALIAS
DEFALPRO
DEFALPR2
DEFALP2
DEFAPPC
DEFARMQ
DEFARMR
DEFARM2
DEFCDS
DEFGDG
DEFHCDR
DEFLOGPX
DEFLOGR
DEFMANX
DEFNVSAM
DEFNVSAR
DEFNVSAX
DEFPAGE
DEFPAGEQ
DEFRACF
DEFRAG
DEFRAPRO
DEFRMFSP
DEFSGIDX
DEFSPOOL
DEFSWAP
DEFSYQB
DEFSYSP1
DEFUCAT
DEFVVDS
DEFWLMPX
DELALIAS
DELALIA2
DELALXFO
DELNOSCR
DELNSDEF
DELNVSAM
DELPAGE
DELUSCAT
DEVNVTAP
DFHSM
DIAGNOSE
DISK
DLDFMTP
DSNDUMP
DSNDUMP1
DSNDUMP2
DSNMOVE
DSNNOTA
DSNNOTC
DSNNOTS
DSNNOT1
DSNREN
DSNREN1
DSNREN2
DSNREN3
DSNREN4
DSNREN5
DSNREN6
DSNREN7
DUMPFULL
DUMPNOTS
DVOLCAT
EMPTY0
EPILOG
EPILOGX
ESDJCL
EXPDISC
FREEEXPE
GDGMASTQ
GDGMASTR
GDGMAST2
GDGWARNP
GDGWARNQ
GDGWARNR
GIMUNZIP
GIMUNZIQ
GROUBRN2
GRS
HSM$
HSMCMD
HSMRELEA
HSMTTOC
HZSPRINT
ICEAM1
ICEAM2
ICETOOL1
ICETOOL2
ICETOOL3
ICHRFR01
ICHRIN03
ICHRRCDE
IDCAMS
IEBCOPY
IEBGENER
IEC608I
IEFBR14
IEHLIST
IFASMFDP
II
IKJEFT01
IMPCONN
INITRVA
INITSPOO
INITWSF2
INIT3380
INIT3381
INIT3382
INIT3390
INSPECT
INST3390
IOCP
IPCST
IPLTEXT
IPOUPDT
IRA405I
IVP
IVPUTIL
JCMDJES2
JCMDMVS
JCMDOMVS
LISTDATA
LISTLOG
LISTVTOC
LOGINIT
LOGRBRNQ
LOGRBRN1
LOGRBRN2
LOGREC
LOGRECIN
LOGRLP2
LOGRY200
LSTLGSTR
LSTNOCAT
MACRO4
MERGECAT
MKDIRREC
MOVEFILE
MQEXEC
NICO
OPCAEXIT
OPCEXIT7
PDSALTD
PDSCMDQ
PDSCMDR
PDSCMD2
PDSMAN1
PELBRNQ
PELBRN2
PKZIP
PPFA
PRNTVVDS
PROXALIA
PSFCONV
PSFCONV1
PSFCONV2
PSFCONV3
RACFICHR
RACFJES2
RACFNJE
RACFNJEC
RACFOMCR
RACFOMVS
RACFOMV1
RACFOMV2
RACFSAVE
RACFSMP
RACFSYSQ
RACFSYSR
RACFSYS2
RACFUADS
RACFUCAT
RAZINIT
RAZ3380
RAZ33902
RAZ33903
REFORBKP
REFORMAT
REFVTOC
RESTORES
RMFSTAT
RMFSTAT1
RMFTOT
RPTCSI
RRSBRNQ
RRSBRNR
RRSBRN2
RRSLP2
SCEELKED
SCEERUN
SDSFBAT
SDSFBAT1
SECUNZIP
SENDMAI4
SENDMAI5
SETCACHE
SETCACHL
SETCACHS
SETCACHU
SETDASDF
SETDASDU
SETNVS
SETSYS
SMFDEF
SMFRAZ
SMPEBAT
SMPENTS
SMPMVS
SMSADMIN
SNAPFILE
SNAPVOL
SSI
STATDCOL
STATWCOL
STORAID
SYSCATLG
SYSGUARD
SYSINX
SYSOUT
SYSSSTGN
TESTENQ
TLMSHOOK
UCATREOR
UCATSIZE
UNZIPJCL
UU
VTOCIXB
VTOCIXOS
VTOCOSIX
VTOCREF
WLMADMIN
XX
ZAPIPL04
ZAPVTOC
ZZ

./ ADD NAME=$JOB
//IDCAMS    JOB ACCT£,                                                  00010000
//             MVS,                                                     00020000
//             NOTIFY=&SYSUID,                                          00030000
//             MSGCLASS=T                                               00040001
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00050002
//      SYS019.LP2.DB2,                                                 00051002
//      SYS1.SACBCNTL)                                                  00060002

./ ADD NAME=A
0                                                                       00010000
DISPLAYING PROG DEFAULTS (PROG,DEFAULTS)..... 381                       00020000
DISPLAYING DYNAMIC EXITS (PROG,EXIT).. 381                              00030000
DISPLAYING LNKLST INFORMATION (PROG,LNKLST) 383                         00040000
DISPLAYING LPA INFORMATION (PROG,LPA).385                               00050000
DISPLAYING THE STATUS OF THE REFRPROT OPTION (PROG,REFRPROT)..........3800060000
DISPLAYING THE STATUS OF THE TRACKDIRLOAD OPTION (PROG,TRACKDIRLOAD)....00070000
DISPLAYING SYSTEM REQUESTS (R). 386                                     00080000
DISPLAYING RESOURCE RECOVERY SERVICES (RRS) INFORMATION (RRS)..391      00090000
DISPLAYING SLIP TRAP INFORMATION (SLIP). 394                            00100000
DISPLAYING SMF DATA (SMF)........ 395                                   00110000
DISPLAYING THE IN-STORAGE COPY OF THE SMF LIMITS (SMFLIM)......... 396  00120000
DISPLAYING STORAGE MANAGEMENT SUBSYSTEM INFORMATION (SMS).. 399         00130000
DISPLAYING INFORMATION ABOUT ALL SUBSYSTEMS (SSI)......... 416          00140000
DISPLAYING STATIC SYSTEM SYMBOLS (SYMBOLS).... 418                      00150000
DISPLAYING THE LOCAL AND COORDINATED UNIVERSAL TIME AND DATE (T)........00160000
DISPLAYING COMPONENT OR TRANSACTION TRACE STATUS (TRACE).........419    00170000
DISPLAYING DEVICE STATUS AND ALLOCATION (U).........423                 00180000

./ ADD NAME=ACBJBAIE
//ACBJBAIE JOB (ACCT),MVS,MSGCLASS=T,                                   JOB47840
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJE) COMP(5694DF123): BATCH - Storage Class Delete      */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 2001,2006  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $U0=NQDEL  ,HDZ11F0,00/11/28,SNJTCS: INITIAL VERSION     àWA48117*/
//* $Y1=OA13015,HDZ11K0,05/08/31,SNJCCY: add table2              àY1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* Sample JCL to Delete Storage Class                               *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*       CHANGE JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to Delete.            *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* STEP TO DELETE A STORAGE CLASS                                   *
//*                                                                  *
//*   PARAMETERS FOLLOWING DELETE :-                                 *
//*                                                                  *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*   STORCLAS - Storage Class name      (Wild cards not allowed)    *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                                   *
//*                Possible values : Y/N/BLANK                       *
//*                                                                  *
//********************************************************************
//GENLIST  EXEC  ACBJBAOB,
//        TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAIF DELETE +
SCDS('SYS5.LP2.DFSMS.SCDS') +
STORCLAS(SCZOSYS2) +
) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*

./ ADD NAME=ACBJBAIH
//ACBJBAIH JOB (ACCT),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*SPECIFIED QUERY DOES NOT EXIST: 8
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIH) COMP(5695DF123): BATCH  - DSN LIST FROM PREV QUERY */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5695-DF1                                                         */
//* (C) COPYRIGHT 1996, 1998 IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//*                                                                  */
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: INITIAL VERSION        àL0A*/
//*10/04/96  CCY - HDZ11C0: Ship as SPE                      àWA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    àT2A*/
//* $T3=K151321,HDZ11E0,091998,SNJTCS: Possible values          2àT3A*/
//*                                    documentation                 */
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE DATA SET LIST FROM A PREVIOUSLY SAVED     *
//* QUERY, SAVE IT.                                                  *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//************************** ADD BEG *********************************
//*  Parameters:-                                                    *
//*  DSNLIST:  The datasets obtained from the  QUERY1  are saved     *
//*            in this  dataset list. This list can be seen from     *
//*            ISMF primary menu option 'L'                          *
//*                                                                  *
//*  QUERY1 :  This query  should  have been stored previously  from *
//*            the  ISMF primer menu option 1 , Where in you can     *
//*            save  the  QUERY  by typing  in QUERY name in the     *
//*            field  ' Query name to save or retrieve ' and  by     *
//*            QS (Query Save)  primary  command, after entering     *
//*            all  the  required  fields to meet your selection     *
//*            criteria. The  QUERY  could  also  be  saved from     *
//*            ISMF 11.7.1.CREATE DATA SET LIST AND SAVE QUERY.      *
//*                                                                  *
//************************** ADD END *********************************
//********************************************************************
//********************************************************************
//*                                                                  *
//* STEP TO GENERATE DATA SET LIST FROM QUERY AND SAVE IT.           *
//*                                                                  *
//*   QUERY   - QUERY NAME CONTAINING SELECTION CRITERIA             *
//*   PARAMETER FOLLOWING SAVE - NAME FOR THE SAVED LIST (OUTPUT)    *
//*                                                                  *
//********************************************************************
//GENLIST EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB,
// TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAI2 +
SAVE DSNLIST QUERY(QUERY1)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************

./ ADD NAME=ACBJBAIL
//ACBJBAIL JOB (ACCT),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIL) COMP(DF123): BATCH  - Generates Data class     àY2C*/
//*                                         list and Report          */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                         */
//* COPYRIGHT IBM CORP. 2000, 2021                           àI1CàG1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//* $U1=OW44570,HDZ11F0,033000,TCS: Block Size Limit Support     àU1A*/
//* $V1=DCE    ,HDZ11G0,01/01/02,TCS: Dyn Vol Cnt & RLS Support  àV1A*/
//* $U2=OW50676,HDZ11F0,080201,TCS: CICSVR Support               àU2A*/
//* $W1=OA02198,HDZ11H0,03/09/01,TCS: Ventana support            àW1A*/
//* $Y1=K1K0170,HDZ11K0,04/03/15,SNJTCS: VSAM Extent Constraint  àY1A*/
//*                       Removal and RLS Above 2-GB Bar Support àY1A*/
//* $Y2=OA13101,HDZ11K0,05/08/29,SNJTCS: SUPPORT OF VENTANA-3    àY2A*/
//* $90=VSAMSMB,HDZ1190,06/05/31,IBSTG : SUPPORT OF VSAM SMB     à90A*/
//* $A0=SMPO   ,HDZ1A10,07/05/02,IBSTG: SMPO Support             àA0A*/
//* $B1=EAV2   ,HDZ1B10,08/06/10,IBSTG: EATTR keyword support    àB1A*/
//* $C1=CARECL ,HDZ1C10,09/03/12,IBSTG: CA Reclaim support       àC1A*/
//* $D1=OA38205,HDZ1D10,12/01/16,SVLCY: Log Replicate support    àD1A*/
//* $E1=SMBENH ,HDZ2210,12/08/03,SVLCY: SMB RAB/RMODE31 SUPPORT  àE1A*/
//* $F1=SCRENH ,HDZ2220,13/06/13,IBSTG: Guaranteed Space Reduct  àF1A*/
//* $G1=FP0454 ,HDZ2230,15/10/26,IBSTG: DS Encryption            àG1A*/
//* $I1=SDBDESC,HDZ2250,19/07/05,IBSAO:Update DC SDB description àI1A*/
//********************************************************************
//*                                                                  *
//* Sample JCL to generate an ISMF Data Class list, save it, and     *
//* generate  Data Class report from it.                             *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Data Class list and save it                     *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   DCNAMES  - Saved list name        (OUTPUT)                     *
//*   SCDS     - SCDS dataset name      (Valid SCDS dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   DATACLAS - Data Class name        (Wild cards allowed)         *
//*                                                                  *
//********************************************************************
//GENDCLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAIC SAVE DCNAMES +
SCDS('ACTIVE') DATACLAS(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=&SYSUID..DCNAMS.&SYSNAME..REPORT.ACBJBAIL,
//    DISP=(MOD,DELETE,DELETE),
//    SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=256,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: The data set being allocated should not be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD DSN=&SYSUID..DCNAMS.&SYSNAME..REPORT.ACBJBAIL,
// DISP=(NEW,CATLG),
//    BLKSIZE=25600,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=256,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//********************************************************************
//*                                                                  *
//* Report Generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBARB :-                              *
//*                                                                  *
//*       DCNAMES - ISMF saved list name (input)                     *
//*                                                                  *
//*     ISPFILE - Data Class report DSN                              *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*     The following keywords can be used in the SYSIN DS.          *
//*                                                                  *
//*  ------------------------------------------------------------    *
//*    LEN    KEYWORD                  DESC                          *
//*  ------------------------------------------------------------    *
//*                                                                  *
//*     9     DATACLAS               - Data Class.                   *
//*     7     RECORG                 - Record Organization.          *
//*     6     RECFM                  - Record Format.                *
//*     6     LRECL                  - Logical Record Length.        *
//*     7     KEYLEN                 - Key Length.                   *
//*     7     KEYOFF                 - Key offset.                   *
//*     7     AVGREC                 - Average record length.        *
//*     6     AVGVL                  - Average value.                *
//*     8     SPCEPRI                - Space Primary.                *
//*    10     SPACESEC               - Space Secondary.              *
//*    10     SPACEDIR               - Space Directory.              *
//*    11     EXPDATE  ! RETNPRD     - Retention period/exp date.    *
//*     7     VOLCNT                 - Volume count.                 *
//*    11     ADDVOLAMNT             - Additional Volume amount.     *
//*     7     MAXVOL                 - Dynamic Volume Count      à90C*
//*     9     SMBVSP                 - System Managed Buffer     à90C*
//*     7     CISIZE                 - CIsize data.                  *
//*     9     PERFSPCA               - % Free Space CA.              *
//*     9     PERFSPCI               - % Free Space CI.              *
//*     8     SHRXRGN                - Share X Region.               *
//*     8     SHRXSYS                - Share X System.               *
//*     9     LSTMDUID               - Last modified userid.         *
//*    11     LSTMODDATE             - Last modified date.           *
//*    10     LSTMDTIME              - Last modified time.           *
//*    19     DSNTYPE                - Dataset name type.            *
//*    15     XADDR                  - Extended addressability.      *
//*    11     COMPACTION             - Compaction.                   *
//*     9     MEDTYP                 - Media type.               àY2C*
//*    11     RECTECH                - Recording Technology.         *
//*     8     PEFSCLG                - Performance Scaling.      àY2C*
//*     8     PERFSEG                - Performance Segmentation  àY2A*
//*     7     REUSE                  - Reuse.                        *
//*     9     INILOAD                - Initial Load.                 *
//*    11     SPANSTAT               - Spanned/Non Spanned.          *
//*     9     BWO                    - BWO.                          *
//*     7     LOG                    - LOG.                          *
//*    27     LOGSTID                - Log Stream Id.                *
//*    10     SPCCONREL              - Space constraint relief.      *
//*     8     REDSPC                 - Reduce space up to %.         *
//*     8     RECABIS                - Record Access Bias.           *
//*    11     BLKSZLIM               - Block Size Limit.         àU1A*
//*     7     FRLOG                  - Frlog.                    àW1C*
//*    12     RLSCF                  - RLS CF Cache Value.       àV1A*
//*                                                              à90D*
//*     8     EXTCONS                - Extent Constraint Removal.àY1A*
//*    10     RLSABOVE               - RLS Above the 2-GB Bar.   àY1A*
//*    10     OVERRIDE               - Override Space.           àA0A*
//*     5     SDB                    - Force Sys Det Block Size. àI1C*
//*     6     EATTR                  - EATTR.                    àB1A*
//*    10     RECLAIMCA              - CA Reclaim.               àC1A*
//*     8     LOGREPL                - Log Replicate.            àD1A*
//*     8     RMODE31                - RMODE31.                  àE1A*
//*    12     GUARSPCREDU            - Guaranteed Space Reduct.  àF1A*
//*    53     DASDDSKEYL             - DASD Data Set Key Label.  àG1A*
//********************************************************************
//GENDCREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE  DD DSN=&SYSUID..DCNAMS.&SYSNAME..REPORT.ACBJBAIL,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBARB DCNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
DATACLAS
RECORG
RECFM
LRECL
KEYLEN
KEYOFF
AVGREC
AVGVL
SPCEPRI
SPACESEC
SPACEDIR
EXPDATE
VOLCNT
ADDVOLAMNT
MAXVOL
SMBVSP
FRLOG
RLSCF
PEFSCLG
PERFSEG
OVERRIDE
SDB
EATTR
RECLAIMCA
LOGREPL
RMODE31
GUARSPCREDU
DASDDSKEYL
TITLE=STATUS OF Data Classes  AS ON 23/06/19
/*
//********************************************************************
//*                                                                  *
//* Copy the Data class report                                       *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYDCREP EXEC  PGM=IEBGENER
//SYSUT1   DD DSN=&SYSUID..DCNAMS.&SYSNAME..REPORT.ACBJBAIL,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIM
//ACBJBAIM JOB (ACCT),MVS,MSGCLASS=H,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIM) COMP(5695DF123): BATCH - Data Class List           */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5647-A01                                                         */
//* (C) COPYRIGHT 2000  IBM CORP.                                    */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate Data Class list and save it.              *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Data Class list and save it                     *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   DCNAMES - Saved list name         (OUTPUT)                     *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   DATACLAS- Data Class name         (Wild cards allowed)         *
//*                                                                  *
//********************************************************************
//GENDCLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAIC SAVE DCNAMES +
SCDS('ACTIVE') DATACLAS(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAIN
//ACBJBAIN JOB (ACCT),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIN) COMP(DF123): BATCH - Data Class Report         àY2C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                         */
//* COPYRIGHT IBM CORP. 2000, 2021                           àI1CàG1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//* $U1=OW44570,HDZ11F0,033000,TCS: Block Size Limit Support     àU1A*/
//* $V1=DCE    ,HDZ11G0,01/01/02,TCS: Dyn Vol Cnt & RLS Support  àV1A*/
//* $U2=OW50676,HDZ11F0,080201,TCS: CICSVR Support               àU2A*/
//* $V2=OA02198,HDZ11G0,03/05/30,TCS: Ventana Support            àV2A*/
//* $Y1=K1K0170,HDZ11K0,04/03/15,SNJTCS: VSAM Extent Constraint  àY1A*/
//*                       Removal and RLS Above 2-GB Bar Support àY1A*/
//* $Y2=OA13101,HDZ11K0,05/06/30,TCS: Ventana-3 Support          àY2A*/
//* $90=VSAMSMB,HDZ1190,06/05/31,IBSTG: Support of VSAM SMB      à90A*/
//* $A0=SMPO   ,HDZ1A10,07/05/02,IBSTG: SMPO Support             àA0A*/
//* $B1=EAV2   ,HDZ1B10,08/06/10,IBSTG: EATTR keyword support    àB1A*/
//* $C1=CARECL ,HDZ1C10,09/03/12,IBSTG: CA Reclaim support       àC1A*/
//* $D1=OA38205,HDZ1D10,12/01/16,SVLCY: Log Replicate support    àD1A*/
//* $E1=SMBENH ,HDZ2210,12/08/03,SVLCY: SMB RAB/RMODE31 SUPPORT  àE1A*/
//* $F1=SCRENH ,HDZ2220,13/06/13,IBSTG: Guaranteed Space Reduct  àF1A*/
//* $G1=FP0454 ,HDZ2230,15/10/26,IBSTG: DS Encryption            àG1A*/
//* $I1=SDBDESC,HDZ2250,19/07/05,IBSAO:Update DC SDB description àI1A*/
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate Data Class report from a previously       *
//* saved ISMF Data Class list.                                      *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELREPDS EXEC PGM=IEFBR14
//ISPFILE DD  DSN=&SYSUID..DCNAMS.&SYSNAME..REPORT.ACBJBAIN,
//    DISP=(MOD,DELETE,DELETE),
//    SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=256,UNIT=SYSDA,BLKSIZE=25600
/*
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: the data set being allocated should NOT be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..DCNAMS.&SYSNAME..REPORT.ACBJBAIN,
//         DISP=(NEW,CATLG),
// BLKSIZE=25600,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=256,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* Report generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBARB :-                              *
//*                                                                  *
//*       DCNAMES - ISMF saved list name (input)                     *
//*                                                                  *
//*     ISPFILE - Data Class report  DSN                             *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*    The following keywords can be used in the SYSIN DS.           *
//*                                                                  *
//*  ------------------------------------------------------------    *
//*    LEN    KEYWORD                  DESC                          *
//*  ------------------------------------------------------------    *
//*                                                                  *
//*     9     DATACLAS               - Data Class.                   *
//*     7     RECORG                 - Record Organization.          *
//*     6     RECFM                  - Record Format.                *
//*     6     LRECL                  - Logical Record Length.        *
//*     7     KEYLEN                 - Key Length.                   *
//*     7     KEYOFF                 - Key offset.                   *
//*     7     AVGREC                 - Average record length         *
//*     6     AVGVL                  - Average value.                *
//*     8     SPCEPRI                - Space Primary.                *
//*    10     SPACESEC               - Space Secondary.              *
//*    10     SPACEDIR               - Space Directory.              *
//*    11     EXPDATE  ! RETNPRD     - Retention period/exp date.    *
//*     7     VOLCNT                 - Volume count.                 *
//*    11     ADDVOLAMNT             - Additional Volume amount.     *
//*     7     MAXVOL                 - Dynamic Volume Count      à90C*
//*     9     SMBVSP                 - System Managed Buffer     à90A*
//*     7     CISIZE                 - CIsize data.                  *
//*     9     PERFSPCA               - % Free Space CA.              *
//*     9     PERFSPCI               - % Free Space CI.              *
//*     8     SHRXRGN                - Share X Region.               *
//*     8     SHRXSYS                - Share X System.               *
//*     9     LSTMDUID               - Last modified userid.         *
//*    11     LSTMODDATE             - Last modified date.           *
//*    10     LSTMDTIME              - Last modified time.           *
//*    19     DSNTYPE                - Dataset name type.            *
//*    15     XADDR                  - Extended addressability.      *
//*    11     COMPACTION             - Compaction.                   *
//*     9     MEDTYP                 - Media type.               àY2C*
//*    11     RECTECH                - Recording Technology.         *
//*     8     PEFSCLG                - Performance Scaling.      àY2C*
//*     8     PERFSEG                - Performance Segmentation  àY2A*
//*     7     REUSE                  - Reuse.                        *
//*     9     INILOAD                - Initial Load.                 *
//*    11     SPANSTAT               - Spanned/Non Spanned.          *
//*     9     BWO                    - BWO.                          *
//*     7     LOG                    - LOG.                          *
//*    27     LOGSTID                - Log Stream Id.                *
//*    10     SPCCONREL              - Space constraint relief.      *
//*     8     REDSPC                 - Reduce space up to %.         *
//*     8     RECABIS                - Record Access Bias.           *
//*    11     BLKSZLIM               - Block Size Limit.         àU1A*
//*     7     FRLOG                  - Frlog.                    àW1C*
//*    12     RLSCF                  - RLS CF Cache Value.       àV1A*
//*     8     EXTCONS                - Extent Constraint Removal.àY1A*
//*    10     RLSABOVE               - RLS Above the 2-GB Bar.   àY1A*
//*    10     OVERRIDE               - Override Space.           àA0A*
//*     5     SDB                    - Force Sys Det Block Size. àI1C*
//*     6     EATTR                  - EATTR.                    àB1A*
//*    10     RECLAIMCA              - CA Reclaim.               àC1A*
//*     8     LOGREPL                - Log Replicate             àD1A*
//*     8     RMODE31                - RMODE31.                  àE1A*
//*    12     GUARSPCREDU            - Guaranteed Space Reduct.  àF1A*
//*    53     DASDDSKEYL             - DASD Data Set Key Label.  àG1A*
//********************************************************************
//GENDCREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE  DD    DSN=&SYSUID..DCNAMS.&SYSNAME..REPORT.ACBJBAIN,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBARB DCNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
DATACLAS
RECORG
RECFM
LRECL
KEYLEN
KEYOFF
AVGREC
AVGVL
SPCEPRI
SPACESEC
SPACEDIR
EXPDATE
VOLCNT
ADDVOLAMNT
MAXVOL
SMBVSP
FRLOG
RLSCF
PEFSCLG
PERFSEG
OVERRIDE
SDB
EATTR
RECLAIMCA
LOGREPL
RMODE31
GUARSPCREDU
DASDDSKEYL
TITLE=STATUS OF Data Classes  AS OF 23/07/17
/*
//********************************************************************
//*                                                                  *
//* Copy the Data  Class Report                                      *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYDCREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=&SYSUID..DCNAMS.&SYSNAME..REPORT.ACBJBAIN,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIO
//ACBJBAIO JOB (ACCT),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*SYS1.SACBCNTL(ACBJBAIO)
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIO) COMP(DF123): BATCH  - Generates Management    2àE1C*/
//*                                     class list and Report        */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                     àE1C*/
//* COPYRIGHT IBM CORP. 2000, 2019                               àH1C*/
//* END PROPRIETARY V3 STATEMENT
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//* $E1=STIERS   ,HDZ2210,11/04/15,IBSTG: HSM Storage Tiers      àE1A*/
//* $E2=OA43011 ,HDZ2210,13/08/06,IBSTG: Fix incorrect copyright àE2A*/
//* $G1=RMMTAPE,HDZ2230,16/07/22,IBSTK: Support Tape Management  àG1A*/
//*                                     attributes for RMM       àG1A*/
//* $G2=CLOUD2 ,HDZ2230,17/04/10,IBSTK: FP2096 MCStore2 support  àG2A*/
//*                                   Auto Migration Enhancement àG2A*/
//* $H1=HSMLCP ,HDZ2240,18/06/04,IBSTK: HSM LCP support          àH1A*/
//********************************************************************
//*                                                                  *
//* Sample JCL to generate an ISMF Management Class list, save it,   *
//* and generate  Management Class report from it.                   *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Management Class list and save it.              *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   MCNAMES  - Saved list name        (OUTPUT)                     *
//*   SCDS     - SCDS dataset name      (Valid SCDS dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   MGMTCLAS - Management Class name  (Wild cards allowed)         *
//*                                                                  *
//********************************************************************
//GENMCLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAID SAVE MCNAMES +
SCDS('ACTIVE') MGMTCLAS(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=&SYSUID..MCNAMS.&SYSNAME..REPORT.ACBJBAIO,
//    DISP=(MOD,DELETE,DELETE),
//    SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: the data set being allocated should not be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD DSN=&SYSUID..MCNAMS.&SYSNAME..REPORT.ACBJBAIO,
//         DISP=(NEW,CATLG),
//   BLKSIZE=25600,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=256,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
/*
//********************************************************************
//*                                                                  *
//* Report generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBARD :-                              *
//*                                                                  *
//*       MCNAMES - ISMF saved list name (input)                     *
//*                                                                  *
//*     ISPFILE - Management Class report DSN                        *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*    The following keywords can be used in the SYSIN DS.           *
//*                                                                  *
//*  --------------------------------------------------------        *
//*   LEN    KEYWORD                  DESC                           *
//*  --------------------------------------------------------        *
//*                                                                  *
//*    9     MGMTCLAS               - Management Class.              *
//*   10     EXPNONUSE              - Expire Non usage.              *
//*   11     EXPDATE ! EXPDAYS      - Expire Date/Days.              *
//*    8     RETLMIT                - Retention Limit.               *
//*   12     PARTIALREL             - Partial Release.               *
//*    9     PRIMDAYS               - Primary Days.                  *
//*    8     L1DAYS                 - Level 1 days.                  *
//*    9     L2DNOUSE               - Level 2 Days Non-usage     àG2A*
//*    9     MIGTYPE                - CMD/AUTO Migrate.              *
//*   11     SIZELTE                - Size Less Than or Equal to àG2A*
//*    7     ACTLTE                 - Action LTE                 àG2A*
//*   11     SIZEGT                 - Size Greater than          àG2A*
//*    6     ACTGT                  - Action GT                  àG2A*
//*    9     NOGDGPRI               - £ GDG on Primary               *
//*   11     RLDOFGDSAC             - Rolled off GDS action.         *
//*   10     BKPFREQ                - Backup frequency.              *
//*   12     NOBKPSDSE              - £ of Backups (DS exists).      *
//*   13     NOBKPSDSD              - £ of Backups (DS deleted).     *
//*   12     RETDAYSOBKP            - Retain days only backup        *
//*   14     RETDAYSEBKP            - Retain days extra backup.      *
//*    9     BKPAUTH                - ADM/USER Backup.               *
//*    8     AUTOBKP                - Auto backup.                   *
//*    9     LSTMDUID               - Last modified USERID.          *
//*   11     LSTMODDATE             - Last date modified             *
//*   10     LSTMDTIME              - Last time modified.            *
//*    9     CREYEARS               - Creation years                 *
//*    9     CREMNTHS               - Creation Months                *
//*    9     CREDAYS                - Creation days                  *
//*    9     LTUSEYRS               - Last use years                 *
//*    9     LTUSEMON               - Last use months                *
//*    9     LTUSEDAY               - Last use days                  *
//*    8     MOONDAY                - Monthly on day                 *
//*   10     QTLYONDAY              - Quarterly on day               *
//*   10     QTLYONMON              - Quarterly on Month             *
//*    7     YRLYDAY                - Yearly on day                  *
//*    9     YRLYMNTH               - Yearly in month                *
//*   11     NOVERSIONS             - £ of versions                  *
//*   12     RTNOVERSONS            - Retain only Versions           *
//*   10     RTNOUNIT               - Retain only Unit               *
//*   13     RTNEVERSIONS           - Retain extra Versions          *
//*   11     RTNEUNIT               - Retain extra Units             *
//*    9     CPYSER                 - Copy Serial                    *
//*   21     BKPCPTECH              - Backup copy technique          *
//*   21     ABKPCPTECH             - ABACKUP copy technique         *
//*   19     TRCPYTECH              - Transition Copy Technique  àE1A*
//*   14     SERIALERREX            - Serialization Error Exit   àE1A*
//*   31     CLNCNAME               - Cloud Network Connection Name  *
//*   10     RETMETHOD              - Retention Method           àG1A*
//*   10     VOLSETMGL              - Volume Set Management LevelàG1A*
//*   10     EXCLVRSEL              - Exclude from VRSEL         àG1A*
//*   13     WHILECTLG              - Retain While Cataloged     àG1A*
//********************************************************************
//GENMCREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE  DD DSN=&SYSUID..MCNAMS.&SYSNAME..REPORT.ACBJBAIO,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBARD MCNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
MGMTCLAS
EXPNONUSE
EXPDATE
L2DNOUSE
SIZELTE
ACTLTE
SIZEGT
ACTGT
CLNCNAME
RETMETHOD
VOLSETMGL
EXCLVRSEL
WHILECTLG
RETLMIT
PARTIALREL
PRIMDAYS
L1DAYS
MIGTYPE
NOGDGPRI
RLDOFGDSAC
BKPFREQ
NOBKPSDSE
NOBKPSDSD
TITLE=STATUS OF Management Classes AS ON 23/07/19
/*
//********************************************************************
//*                                                                  *
//* Copy the Management Class report                                 *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYMCREP EXEC  PGM=IEBGENER
//SYSUT1   DD DSN=&SYSUID..MCNAMS.&SYSNAME..REPORT.ACBJBAIO,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIP
//ACBJBAIP JOB (ACCT),MVS,MSGCLASS=H,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIP) COMP(5695DF123): BATCH - Management Class List     */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5647-A01                                                         */
//* (C) COPYRIGHT 2000  IBM CORP.                                    */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate Management Class list and save it.        *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Management Class list and save it.              *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   MCNAMES  - Saved list name        (OUTPUT)                     *
//*   SCDS     - SCDS dataset name      (Valid SCDS dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   MGMTCLAS - Management Class name  (Wild cards allowed)         *
//*                                                                  *
//********************************************************************
//GENMCLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAID SAVE MCNAMES +
SCDS('ACTIVE') MGMTCLAS(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAIQ
//ACBJBAIQ JOB (ACCT),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*SYS1.SACBCNTL(ACBJBAIq)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIQ) COMP(DF123): BATCH - Management Class Report   àE1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                     àE1C*/
//* COPYRIGHT IBM CORP. 2000, 2019                               àH1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//* $E1=STIERS   ,HDZ2210,11/04/15,IBSTG : HSM STORAGE TIERS     àE1A*/
//* $E2=OA43011 ,HDZ2210,13/08/06,IBSTG: Fix incorrect copyright àE2A*/
//* $G1=RMMTAPE,HDZ2230,16/07/22,IBSTK: Support Tape Management  àG1A*/
//*                                     attributes for RMM       àG1A*/
//* $G2=CLOUD2 ,HDZ2230,17/04/10,IBSTK: FP2096 MCStore2 support  àG2A*/
//*                                   Auto Migration Enhancement àG2A*/
//* $H1=HSMLCP ,HDZ2240,18/06/04,IBSTK: HSM LCP support          àH1A*/
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate Management Class report from a previously *
//* saved ISMF Management Class list.                                *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=&SYSUID..MCNAMS.&SYSNAME..REPORT.ACBJBAIQ,
//    DISP=(MOD,DELETE,DELETE),
//    SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: the data set being allocated should not be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..MCNAMS.&SYSNAME..REPORT.ACBJBAIQ,
//         DISP=(NEW,CATLG),
//    BLKSIZE=25600,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=256,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* Report generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBARD :-                              *
//*                                                                  *
//*       MCNAMES - ISMF saved list name (input)                     *
//*                                                                  *
//*     ISPFILE - Management Class report DSN                        *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*    The following keywords can be used in the SYSIN DS.           *
//*                                                                  *
//*  ---------------------------------------------------------       *
//*   LEN    KEYWORD                  DESC                           *
//*  ---------------------------------------------------------       *
//*                                                                  *
//*    9     MGMTCLAS               - Management Class.              *
//*   10     EXPNONUSE              - Expire Non usage.              *
//*   11     EXPDATE ! EXPDAYS      - Expire Date/Days.              *
//*    8     RETLMIT                - Retention Limit.               *
//*   12     PARTIALREL             - Partial Release.               *
//*    9     PRIMDAYS               - Primary Days.                  *
//*    8     L1DAYS                 - Level 1 days.                  *
//*    9     L2DNOUSE               - Level 2 Days Non-usage     àG2A*
//*    9     MIGTYPE                - CMD/AUTO Migrate.              *
//*   11     SIZELTE                - Size Less Than or Equal to àG2A*
//*    7     ACTLTE                 - Action LTE                 àG2A*
//*   11     SIZEGT                 - Size Greater than          àG2A*
//*    6     ACTGT                  - Action GT                  àG2A*
//*    9     NOGDGPRI               - £ GDG on Primary               *
//*   11     RLDOFGDSAC             - Rolled off GDS action.         *
//*   10     BKPFREQ                - Backup frequency.              *
//*   12     NOBKPSDSE              - £ of Backups (DS exists).      *
//*   13     NOBKPSDSD              - £ of Backups (DS deleted).     *
//*   12     RETDAYSOBKP            - Retain days only backup        *
//*   14     RETDAYSEBKP            - Retain days extra backup.      *
//*    9     BKPAUTH                - ADM/USER Backup.               *
//*    8     AUTOBKP                - Auto backup.                   *
//*    9     LSTMDUID               - Last modified USERID.          *
//*   11     LSTMODDATE             - Last date modified             *
//*   10     LSTMDTIME              - Last time modified.            *
//*    9     CREYEARS               - Creation years                 *
//*    9     CREMNTHS               - Creation Months                *
//*    9     CREDAYS                - Creation days                  *
//*    9     LTUSEYRS               - Last use years                 *
//*    9     LTUSEMON               - Last use months                *
//*    9     LTUSEDAY               - Last use days                  *
//*    8     MOONDAY                - Monthly on day                 *
//*   10     QTLYONDAY              - Quarterly on day               *
//*   10     QTLYONMON              - Quarterly on Month             *
//*    7     YRLYDAY                - Yearly on day                  *
//*    9     YRLYMNTH               - Yearly in month                *
//*   11     NOVERSIONS             - £ of versions                  *
//*   12     RTNOVERSONS            - Retain only Versions           *
//*   10     RTNOUNIT               - Retain only Unit               *
//*   13     RTNEVERSIONS           - Retain extra Versions          *
//*   11     RTNEUNIT               - Retain extra Units             *
//*    9     CPYSER                 - Copy Serial                    *
//*   21     BKPCPTECH              - Backup copy technique          *
//*   21     ABKPCPTECH             - ABACKUP copy technique         *
//*   19     TRCPYTECH              - Transition Copy Technique  àE1A*
//*   14     SERIALERREX            - Serialization Error Exit   àE1A*
//*   31     CLNCNAME               - Cloud Network Connection Name  *
//*   10     RETMETHOD              - Retention Method           àG1A*
//*   10     VOLSETMGL              - Volume Set Management LevelàG1A*
//*   10     EXCLVRSEL              - Exclude from VRSEL         àG1A*
//*   13     WHILECTLG              - Retain While Cataloged     àG1A*
//********************************************************************
//GENMCREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE  DD    DSN=&SYSUID..MCNAMS.&SYSNAME..REPORT.ACBJBAIQ,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBARD MCNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
MGMTCLAS
EXPNONUSE
L2DNOUSE
SIZELTE
ACTLTE
SIZEGT
ACTGT
CLNCNAME
RETMETHOD
VOLSETMGL
EXCLVRSEL
WHILECTLG
EXPDATE
RETLMIT
PARTIALREL
PRIMDAYS
L1DAYS
MIGTYPE
NOGDGPRI
RLDOFGDSAC
BKPFREQ
NOBKPSDSE
NOBKPSDSD
TITLE=STATUS OF Management Classes AS ON 07/01/12
/*
//********************************************************************
//*                                                                  *
//* Copy the Management Class Report                                 *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYMCREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=&SYSUID..MCNAMS.&SYSNAME..REPORT.ACBJBAIQ,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIU
//ACBJBAIU JOB (ACCT),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIU) COMP(DF123): BATCH  - Generates Storage Class  àA1C*/
//*                                         list and Report          */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2àG1C*/
//* COPYRIGHT IBM CORP. 2000, 2017                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $K0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//* $W1=K1H0049  ,HDZ11H0,01/10/04,SNJTCS: MULTI-TIERED SG       àW1A*/
//* $W2=K1H0106  ,HDZ11H0,01/12/28,SNJTCS: Remove s from SGs     àW2A*/
//* $X1=SMSPAV   ,HDZ11J0,03/04/15,SNJTCS: Support for SMSPAV    àX1A*/
//* $92=OAMSLVL  ,HDZ1190,06/06/21,IBSTG : Support for OSL       à92A*/
//* $A1=MULTLCK,HDZ1A10,07/04/27,IBSAS: Support of MULTILOCK     àA1A*/
//* $D1=BMF    ,HDZ1D10,10/01/29,IBSTG: BMF Disconnect Sphere at àD1A*/
//*                                     CLOSE                    àD1A*/
//* $G1=OA54826,HDZ2230,18/02/28,IBSTK: zHyperLink Storage Class àG1A*/
//*                                     Granularity              àG1A*/
//********************************************************************
//*                                                                  *
//* Sample JCL to generate an ISMF Storage Class list, save it, and  *
//* generate  Storage Class report from it.                          *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Storage Class list and save it                  *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   SCNAMES - Saved list name         (Output)                     *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   STORCLAS- Storage Class name      (Wild cards allowed)         *
//*                                                                  *
//********************************************************************
//GENSCLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAIF SAVE SCNAMES +
SCDS('ACTIVE') STORCLAS(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=&SYSUID..SCNAMS.&SYSNAME..REPORT.ACBJBAIU,
//    DISP=(MOD,DELETE,DELETE),
//    SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: the data set being allocated should not be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..SCNAMS.&SYSNAME..REPORT.ACBJBAIU,
//         DISP=(NEW,CATLG),
//    BLKSIZE=25600,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=256,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* Report generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBARH :-                              *
//*                                                                  *
//*       SCNAMES - ISMF saved list name (input)                     *
//*                                                                  *
//*     ISPFILE - Storage Class report DSN                           *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*     The following keywords can be used in SYSIN DS.              *
//*                                                                  *
//*   --------------------------------------------------------       *
//*     LEN       KEYWORD       DESC                                 *
//*   --------------------------------------------------------       *
//*                                                                  *
//*      9        STORCLAS    - Storage Class                        *
//*      9        DIRRESP     - Direct Response (MSEC)               *
//*      5        DBIS        - Direct Bias.                         *
//*      9        SEQRESP     - Sequential Response (MSEC).          *
//*      5        SBIS        - Sequential bias.                     *
//*     21        AVALBLTY    - Availability.                        *
//*     11        GRNTSPC     - Guaranteed space.                    *
//*      9        LSTMDUID    - Last modified userid.                *
//*     11        LSTMODDATE  - Last date modified.                  *
//*     10        LSTMDTIME   - Last time modified.                  *
//*     11        GRNTSNCWR   - Guaranteed Sync Write.               *
//*      9        INACCRSP    - Initial access response. .           *
//*     21        ACCBLTY     - Accessibility.                       *
//*     15        SUSDATART   - Sustained data rate (MB/Sec)         *
//*      9        CFCACHE     - CF Cache set name.                   *
//*     10        CFDIRWT     - CF Direct weight.                    *
//*     14        CFSEQWT     - CF sequential weight.                *
//*     10        MULTITSG    - Multi-Tiered SG.            àW2C àX1C*
//*     11        PAVCAP      - Pav Capability.                  àX1A*
//*      6        OAMLVL      - OAM Sublevel.                    à92A*
//*      9        CFLOCK      - CF Lock set name.                àA1A*
//*     11        DISCSPHERE  - Disconnect Sphere at CLOSE.      àD1A*
//*      8        ZHLREAD     - zHyperLink Eligible for Read.    àG1A*
//*      9        ZHLWRITE    - zHyperLink Eligible for Write.   àG1A*
//********************************************************************
//GENSCREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE  DD    DSN=&SYSUID..SCNAMS.&SYSNAME..REPORT.ACBJBAIU,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBARH SCNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
STORCLAS
DIRRESP
DBIS
SEQRESP
SBIS
AVALBLTY
GRNTSPC
LSTMDUID
LSTMODDATE
LSTMDTIME
GRNTSNCWR
INACCRSP
MULTITSG
PAVCAP
OAMLVL
DISCSPHERE
ZHLREAD
ZHLWRITE
TITLE=STATUS OF Storage classes  AS ON 23/06/14
/*
//********************************************************************
//*                                                                  *
//* Copy the Storage Class report                                    *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYSCREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=&SYSUID..SCNAMS.&SYSNAME..REPORT.ACBJBAIU,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIV
//ACBJBAIV JOB (ACCT),MVS,MSGCLASS=H,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIV) COMP(5695DF123): BATCH - Storage Class List        */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5647-A01                                                         */
//* (C) COPYRIGHT 2000  IBM CORP.                                    */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate Storage Class list and save it.           *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       CHANGE JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Storage Class list and save it.                 *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   SCNAMES - Saved list name         (Output)                     *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   STORCLAS- Storage Class name      (Wild cards allowed)         *
//*                                                                  *
//********************************************************************
//GENSCLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAIF SAVE SCNAMES +
SCDS('ACTIVE') STORCLAS(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAIW
//ACBJBAIW JOB (ACCT),MVS,MSGCLASS=T,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIW) COMP(DF123): BATCH - Storage Class Report      àA1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2àG1C*/
//* COPYRIGHT IBM CORP. 2000, 2017                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//* $W1=K1H0049  ,HDZ11H0,01/10/04,SNJTCS: Multi-Tiered SG       àW1A*/
//* $W2=K1H0106  ,HDZ11H0,01/12/28,SNJTCS: Remove s from SGs     àW2A*/
//* $X1=SMSPAV   ,HDZ11J0,03/04/15,SNJTCS: Support for SMSPAV    àX1A*/
//* $92=OAMSLVL  ,HDZ1190,06/06/21,IBSTG : Support for OSL       à92A*/
//* $A1=MULTLCK,HDZ1A10,07/04/27,IBSAS: Support of MULTILOCK     àA1A*/
//* $D1=BMF    ,HDZ1D10,10/01/29,IBSTG: BMF Disconnect Sphere at àD1A*/
//*                                     CLOSE                    àD1A*/
//* $G1=OA54826,HDZ2230,18/02/28,IBSTK: zHyperLink Storage Class àG1A*/
//*                                     Granularity              àG1A*/
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate Storage Class report from a previously    *
//* saved ISMF Storage Class list.                                   *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=&SYSUID..SCNAMS.&SYSNAME..REPORT.ACBJBAIW,
//    DISP=(MOD,DELETE,DELETE),
//    SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: the data set being allocated should not be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..SCNAMS.&SYSNAME..REPORT.ACBJBAIW,
//         DISP=(NEW,CATLG),
//    BLKSIZE=25600,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=256,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* Report generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBARH :-                              *
//*                                                                  *
//*       SCNAMES - ISMF saved list name (input)                     *
//*                                                                  *
//*     ISPFILE - Storage Class report DSN                           *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*     The following keywords can be used in SYSIN DS.              *
//*                                                                  *
//*   --------------------------------------------------------       *
//*     LEN       KEYWORD       DESC                                 *
//*   --------------------------------------------------------       *
//*                                                                  *
//*      9        STORCLAS    - Storage Class                        *
//*      9        DIRRESP     - Direct Response (MSEC)               *
//*      5        DBIS        - Direct Bias.                         *
//*      9        SEQRESP     - Sequential Response (MSEC).          *
//*      5        SBIS        - Sequential bias.                     *
//*     21        AVALBLTY    - Availability.                        *
//*     11        GRNTSPC     - Guaranteed space.                    *
//*      9        LSTMDUID    - Last modified userid.                *
//*     11        LSTMODDATE  - Last date modified.                  *
//*     10        LSTMDTIME   - Last time modified.                  *
//*     11        GRNTSNCWR   - Guaranteed Sync Write.               *
//*      9        INACCRSP    - Initial access response. .           *
//*     21        ACCBLTY     - Accessibility.                       *
//*     15        SUSDATART   - Sustained data rate (MB/Sec)         *
//*      9        CFCACHE     - CF Cache set name.                   *
//*     10        CFDIRWT     - CF Direct weight.                    *
//*     14        CFSEQWT     - CF sequential weight.                *
//*     10        MULTITSG    - Multi-Tiered SG.                 àX1C*
//*     11        PAVCAP      - Pav Capability.                  àX1A*
//*      6        OAMLVL      - OAM Sublevel.                    à92A*
//*      9        CFLOCK      - CF Lock set name.                àA1A*
//*     11        DISCSPHERE  - Disconnect Sphere at CLOSE.      àD1A*
//*      8        ZHLREAD     - zHyperLink Eligible for Read.    àG1A*
//*      9        ZHLWRITE    - zHyperLink Eligible for Write.   àG1A*
//********************************************************************
//GENSCREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE  DD    DSN=&SYSUID..SCNAMS.&SYSNAME..REPORT.ACBJBAIW,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBARH SCNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
STORCLAS
DIRRESP
DBIS
SEQRESP
SBIS
AVALBLTY
GRNTSPC
LSTMDUID
LSTMODDATE
LSTMDTIME
GRNTSNCWR
INACCRSP
MULTITSG
PAVCAP
OAMLVL
DISCSPHERE
ZHLREAD
ZHLWRITE
TITLE=STATUS OF Storage classes  AS ON 23/07/19
/*
//********************************************************************
//*                                                                  *
//* Copy the Storage Class report                                    *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYSCREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=&SYSUID..SCNAMS.&SYSNAME..REPORT.ACBJBAIW,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIX
//ACBJBAIX JOB (ACCT),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIX) COMP(DF123): BATCH  - Generates Storage Group      */
//*                                         list and Report          */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                     àE1C*/
//* COPYRIGHT IBM CORP. 2000, 2017                               àG1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//* $V1=SGName,HDZ11G0,00/09/19,TCS: Overflow and              2àV1A */
//*                                     Extend SG Name Support       */
//* $W1=COPY POOL,HDZ11H0,02/01/02,TCS: Copy Pool Backup       2àW1A */
//*                                    SG Name Support               */
//* $Z1=OA16354,HDZ1180,06/06/13,TCS: SG MBTOTAL, MBFREE        àZ1A */
//*                                       Field Length increase àZ1A */
//* $A0=EAV   ,HDZ1A10,06/09/27,IBSTG : EAV Support             àA0A */
//* $90=KFI0424,HDZ1190,07/01/24,IBSTG: Add SG TYPE             à90A */
//* $B1=OAME   ,HDZ1B10,08/06/06,IBSTG: OAM Enhancements        àB1A */
//* $D1=SPACEGB,HDZ1D10,10/03/26,IBSTG: Space Info in GB Support àD1A*/
//* $E1=STIERS ,HDZ2210,11/04/15,IBSTG: HSM STORAGE TIERS        àE1A*/
//* $E2=SMAPH2 ,HDZ2210,11/06/21,IBSTG: SMA Phase 2              àE2A*/
//* $E3=SMARMLV,HDZ2210,12/05/12,IBSTG: Back out SMA Support     àE3A*/
//* $F1=ALRTMSG,HDZ2220,13/10/15,IBSTG: Space alert thresholds   àF1A*/
//* $G1=OAMDB2ID,HDZ2230,16/02/01,IBSTG: Multiple OAM Address    àG1A*/
//*                                      Spaces support          àG1A*/
//********************************************************************
//*                                                                  *
//* Sample JCL to generate an ISMF Storage Group list, save it, and  *
//* generate  Storage Group report from it.                          *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Storage Group list and save it                  *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   SGNAMES - Saved list name         (Output)                     *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   STORGRP - Storage Group name      (Wild cards allowed)         *
//*   STGTYPE - Storage Group type                              3à90A*
//*             Possible values : VIO/POOL/DUMMY/COPY POOL BACKUP/   *
//*                               OBJECT/OBJECT BACKUP/TAPE/BLANK    *
//*                                                             8àD1A*
//*   SPACEGB - Space Info in GB (space information TOTALSPC and     *
//*             FREESPC are shown in gigabytes or megabytes for      *
//*             storage groups in the Active Control Data Set only). *
//*             Possible values : Y - space information in gigabytes *
//*                                   (1G to 99999999G).             *
//*                               N - space information in megabytes *
//*                                   (1 to 999999999).              *
//********************************************************************
//GENSGLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAIG SAVE SGNAMES +
SCDS('SYS5.LP2.DFSMS.SCDS') +
STORGRP(*) STGTYPE(POOL) SPACEGB(N))+
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=&SYSUID..SGNAMS.&SYSNAME..REPORT.ACBJBAIX,
//    DISP=(MOD,DELETE,DELETE),
//    SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=242,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: the data set being allocated should not be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD DSN=&SYSUID..SGNAMS.&SYSNAME..REPORT.ACBJBAIX,
//         DISP=(NEW,CATLG),
//         BLKSIZE=24200,SPACE=(TRK,(3,1)),
//         RECFM=FBA,LRECL=242,UNIT=SYSDA
//SYSPRINT DD    SYSOUT=*
//SYSIN    DD    *
/*
//********************************************************************
//*                                                                  *
//* Report generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBARJ :-                              *
//*                                                                  *
//*       SGNAMES - ISMF saved list name (input)                     *
//*                                                                  *
//*     ISPFILE - Storage Group report DSN                           *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*     The following keywords can be used in SYSIN DS.              *
//*                                                                  *
//*   --------------------------------------------------------       *
//*     LEN       KEYWORD         DESC                               *
//*   --------------------------------------------------------       *
//*                                                                  *
//*      9        STORGRP      -  Storage Group.                     *
//*     17        SGTYPE       -  Storage Group Type.                *
//*      8        VIOMXSZ      -  VIO Maximum Size.                  *
//*      5        VIOU         -  VIO Unit.                          *
//*      9        AUTOMIG      -  Auto Migrate.                      *
//*     15        MIGSYS       -  Migrate System/Sys Group.          *
//*      5        ABCK         -  Auto Back.                         *
//*     14        BKPSYS       -  Backup System/Sys Group.           *
//*      5        ADMP         -  Auto Dump.                         *
//*     13        DUMPSYS      -  Dump System/Sys Group.             *
//*      5        MIGH         -  Migr High.                         *
//*      5        MIGL         -  Migr Low.                          *
//*     10        TOTALSPC     -  MB/GB total space.             àD1C*
//*     10        FREESPC      -  MB/GB free space.              àD1C*
//*      7        PERFSP       -  Percentage free space.             *
//*      9        LSTMODID     -  Last modified USERID.              *
//*     11        LSTMODDATE   -  Last DATE modified.                *
//*     11        LSTMODTIME   -  Last TIME modified.                *
//*      9        DMPCLAS1     -  Dump Class.                        *
//*      9        DMPCLAS2     -  Dump Class.                        *
//*      9        DMPCLAS3     -  Dump Class.                        *
//*      9        DMPCLAS4     -  Dump Class.                        *
//*      9        DMPCLAS5     -  Dump Class.                        *
//*     12        GRNTBKPFREQ  -  Guaranteed BKP frequency.          *
//*     10        QUALIFIER    -  Qualifier.                         *
//*     11        CYCLSTTIME   -  Cycle Start time.                  *
//*      9        CYCLENTM     -  Cycle End time.                    *
//*      9        LIBNAME1     -  Library Name.                      *
//*      9        LIBNAME2     -  Library Name.                      *
//*      9        LIBNAME3     -  Library Name.                      *
//*      9        LIBNAME4     -  Library Name.                      *
//*      9        LIBNAME5     -  Library Name.                      *
//*      9        LIBNAME6     -  Library Name.                      *
//*      9        LIBNAME7     -  Library Name.                      *
//*      9        LIBNAME8     -  Library Name.                      *
//*     12        VOLFULLTHRS  -  Volume full threshold.             *
//*     12        DRVSTRTTHRS  -  Drive start threshold.             *
//*     15        VOLFULWRTERR -  Volume full at write err.          *
//*      9        OSMCSYS      -  OSMC System.                       *
//*      9        OVRFLOW      -  Overflow.                 2àV1A    *
//*      9        EXTSGNM      -  Extend SG Name.                    *
//*      9        CPBSGN       -  Copy Pool Backup SG Name    àW1A   *
//*      7        BREAKPT      -  BreakPointValue.              3àA0A*
//*     10        TRKHITHRS    -  Migr High TRK.                     *
//*     11        TRKLOWTHRS   -  Migr Low TRK.                      *
//*     10        OAMDELPRO    -  OAM Deletion Protection.      2àB1A*
//*     10        OAMRETPRO    -  OAM Retention Protection.          *
//*     10        PROCPRIOR    -  Processing Priority.           àE1A*
//*     11        TOTSPALERT   -  Total Space Alert Threshold %. àF1A*
//*     11        TRKSPALERT   -  Track-Managed Space Alert      àF1A*
//*                               Threshold %.                   àF1A*
//*      9        OAMDB2ID     -  OAM DB2 ID.                    àG1A*
//********************************************************************
//GENSGREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE  DD DSN=&SYSUID..SGNAMS.&SYSNAME..REPORT.ACBJBAIX,
// DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBARJ SGNAMES) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
STORGRP
SGTYPE
VIOMXSZ
VIOU
AUTOMIG
MIGSYS
ABCK
BKPSYS
ADMP
DUMPSYS
OVRFLOW
EXTSGNM
CPBSGN
MIGH
MIGL
TOTALSPC
FREESPC
PERFSP
BREAKPT
TRKHITHRS
TRKLOWTHRS
OAMDELPRO
OAMRETPRO
PROCPRIOR
TOTSPALERT
TRKSPALERT
TITLE=STATUS OF Storage Group  AS ON 23/06/14
/*
//********************************************************************
//*                                                                  *
//* Copy the Storage Group report                                    *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYSGREP EXEC  PGM=IEBGENER
//SYSUT1   DD DSN=&SYSUID..SGNAMS.&SYSNAME..REPORT.ACBJBAIX,
// DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAIY
//ACBJBAIY JOB (ACCT),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIY) COMP(DF123): BATCH - Storage Group List        à90C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                    2à90C*/
//* COPYRIGHT 2000,2011  IBM CORP.                               àD1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//* $90=KFI0424,HDZ1190,07/01/29,IBSTG: Add SG TYPE              à90A*/
//* $D1=SPACEGB,HDZ1D10,10/03/26,IBSTG: Space Info in GB Support àD1A*/
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate Storage Group list and save it.           *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to generate list,     *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Step to generate Storage Group list and save it                  *
//*                                                                  *
//*   Parameters following SAVE :-                                   *
//*                                                                  *
//*   SGNAMES - Saved list name         (Output)                     *
//*   SCDS    - SCDS dataset name       (Valid SCSD dataset name)    *
//*                                     (      or 'ACTIVE'      )    *
//*   STORGRP - Storage Group name      (wild cards allowed)         *
//*   STGTYPE - Storage Group type                              3à90A*
//*             Possible values : VIO/POOL/DUMMY/COPY POOL BACKUP/   *
//*                               OBJECT/OBJECT BACKUP/TAPE/BLANK    *
//*                                                             8àD1A*
//*   SPACEGB - Space Info in GB (space information TOTALSPC and     *
//*             FREESPC are shown in gigabytes or megabytes for      *
//*             storage groups in the Active Control Data Set only). *
//*             Possible values : Y - space information in gigabytes *
//*                                   (1G to 99999999G).             *
//*                               N - space information in megabytes *
//*                                   (1 to 999999999).              *
//*                                                                  *
//********************************************************************
//GENSGLST EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD    *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAIG SAVE SGNAMES +
SCDS('SYS5.LP2.DFSMS.SCDS') +
STORGRP(*) STGTYPE()     SPACEGB(N))+
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAIZ
//ACBJBAIZ JOB (ACCT),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*
//MYLIB    JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAIZ) COMP(DF123): BATCH - Storage Group Report      àA0C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                     àE1C*/
//* COPYRIGHT IBM CORP. 2000, 2017                               àG1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $U0=NAVIQUEST,HDZ11F0,99/07/01,SNJTCS: INITIAL VERSION           */
//* $V1=SGName,HDZ11G0,00/09/19,TCS: Overflow and              2àV1A */
//*                                     Extend SG Name Support       */
//* $W1=COPY POOL,HDZ11H0,02/01/02,TCS: Copy Pool Backup       2àW1A */
//*                                    SG Name Support               */
//* $Z1=OA16354,HDZ1180,06/06/13,TCS: SG MBTOTAL, MBFREE        àZ1A */
//*                                       Field Length increase àZ1A */
//* $A0=EAV   ,HDZ1A10,06/09/27,IBSTG : EAV Support             àA0A */
//* $B1=OAME  ,HDZ1B10,08/06/06,IBSTG : OAM Enhancements        àB1A */
//* $D1=SPACEGB,HDZ1D10,10/03/26,IBSTG: Space Info in GB Support àD1A*/
//* $E1=STIERS ,HDZ2210,11/04/15,IBSTG: HSM STORAGE TIERS        àE1A*/
//* $E2=SMAPH2 ,HDZ2210,11/06/21,IBSTG: SMA Phase 2              àE2A*/
//* $E3=SMARMLV,HDZ2210,12/05/12,IBSTG: Back out SMA Support     àE3A*/
//* $F1=ALRTMSG,HDZ2220,13/10/15,IBSTG: Space alert thresholds   àF1A*/
//* $G1=OAMDB2ID,HDZ2230,16/02/01,IBSTG: Multiple OAM Address    àG1A*/
//*                                      Spaces support          àG1A*/
//*                                                                  */
//********************************************************************/
//*                                                                  *
//* Sample JCL to generate Storage Group report from a previously    *
//* saved ISMF storage group list.                                   *
//*                                                                  *
//*   Instructions before submitting:                                *
//*                                                                  *
//*       Change JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Keywords to include/exclude in the report,          *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//*                                                                  *
//* Delete step, to delete the report data set if it exists already  *
//*                                                                  *
//********************************************************************
//DELISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=&SYSUID..SGNAMS.&SYSNAME..REPORT.ACBJBAIZ,
//    DISP=(MOD,DELETE,DELETE),
//    SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=242,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* Step to allocate ISPFILE, where the generated report is saved    *
//* Note: the data set being allocated should not be a temporary     *
//*       data set.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC  PGM=IEFBR14
//ISPFILE  DD    DSN=&SYSUID..SGNAMS.&SYSNAME..REPORT.ACBJBAIZ,
// DISP=(NEW,CATLG),
//   BLKSIZE=24200,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=242,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* Report generation step                                           *
//*                                                                  *
//*     Parameter following ACBQBARJ :-                              *
//*                                                                  *
//*       SGNAMES - ISMF saved list name (input)                     *
//*                                                                  *
//*     ISPFILE - Storage Group report DSN                           *
//*     SYSIN   - Keywords specifying the data in the report         *
//*                                                                  *
//*     The following keywords can be used in SYSIN DS.              *
//*                                                                  *
//*  ----------------------------------------------------------      *
//*     LEN       KEYWORD         DESC                               *
//*  ----------------------------------------------------------      *
//*                                                                  *
//*      9        STORGRP      -  Storage Group.                     *
//*     17        SGTYPE       -  Storage Group Type.                *
//*      8        VIOMXSZ      -  VIO Maximum Size.                  *
//*      5        VIOU         -  VIO Unit.                          *
//*      9        AUTOMIG      -  Auto Migrate.                      *
//*     15        MIGSYS       -  Migrate System/Sys Group.          *
//*      5        ABCK         -  Auto Back.                         *
//*     14        BKPSYS       -  Backup System/Sys Group.           *
//*      5        ADMP         -  Auto Dump.                         *
//*     13        DUMPSYS      -  Dump System/Sys Group.             *
//*      5        MIGH         -  Migr High.                         *
//*      5        MIGL         -  Migr Low.                          *
//*     10        TOTALSPC     -  MB/GB total space.             àD1C*
//*     10        FREESPC      -  MB/GB free space.              àD1C*
//*      7        PERFSP       -  Percentage free space.             *
//*      9        LSTMODID     -  Last modified USERID.              *
//*     11        LSTMODDATE   -  Last DATE modified.                *
//*     11        LSTMODTIME   -  Last TIME modified.                *
//*      9        DMPCLAS1     -  Dump Class.                        *
//*      9        DMPCLAS2     -  Dump Class.                        *
//*      9        DMPCLAS3     -  Dump Class.                        *
//*      9        DMPCLAS4     -  Dump Class.                        *
//*      9        DMPCLAS5     -  Dump Class.                        *
//*     12        GRNTBKPFREQ  -  Guaranteed BKP frequency.          *
//*     10        QUALIFIER    -  Qualifier.                         *
//*     11        CYCLSTTIME   -  Cycle Start time.                  *
//*      9        CYCLENTM     -  Cycle End time.                    *
//*      9        LIBNAME1     -  Library Name.                      *
//*      9        LIBNAME2     -  Library Name.                      *
//*      9        LIBNAME3     -  Library Name.                      *
//*      9        LIBNAME4     -  Library Name.                      *
//*      9        LIBNAME5     -  Library Name.                      *
//*      9        LIBNAME6     -  Library Name.                      *
//*      9        LIBNAME7     -  Library Name.                      *
//*      9        LIBNAME8     -  Library Name.                      *
//*     12        VOLFULLTHRS  -  Volume full threshold.             *
//*     12        DRVSTRTTHRS  -  Drive start threshold.             *
//*     15        VOLFULWRTERR -  Volume full at write err.          *
//*      9        OSMCSYS      -  OSMC System.                       *
//*      9        OVRFLOW      -  Overflow.                    2àV1A *
//*      9        EXTSGNM      -  Extend SG Name.                    *
//*      9        CPBSGN       -  Copy Pool Backup SG Name      àW1A *
//*      7        BREAKPT      -  BreakPointValue.              3àA0A*
//*     10        TRKHITHRS    -  Migr High TRK.                     *
//*     11        TRKLOWTHRS   -  Migr Low TRK.                      *
//*     10        OAMDELPRO    -  OAM Deletion Protection.      2àB1A*
//*     10        OAMRETPRO    -  OAM Retention Protection.          *
//*     10        PROCPRIOR    -  Processing Priority.           àE1A*
//*     11        TOTSPALERT   -  Total Space Alert Threshold %. àF1A*
//*     11        TRKSPALERT   -  Track-Managed Space Alert      àF1A*
//*                               Threshold %.                   àF1A*
//*      9        OAMDB2ID     -  OAM DB2 ID.                    àG1A*
//********************************************************************
//GENSGREP EXEC  ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE  DD    DSN=&SYSUID..SGNAMS.&SYSNAME..REPORT.ACBJBAIZ,DISP=OLD
//SYSTSIN  DD    *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBARJ SGNAMES) +
SCDS('SYS5.LP2.DFSMS.SCDS') +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN    DD    *
STORGRP
SGTYPE
VIOMXSZ
VIOU
AUTOMIG
MIGSYS
ABCK
BKPSYS
ADMP
DUMPSYS
OVRFLOW
EXTSGNM
CPBSGN
MIGH
MIGL
TOTALSPC
FREESPC
PERFSP
BREAKPT
TRKHITHRS
TRKLOWTHRS
OAMDELPRO
OAMRETPRO
PROCPRIOR
TOTSPALERT
TRKSPALERT
TITLE=STATUS OF Storage Group  AS ON 17/01/10
/*
//********************************************************************
//*                                                                  *
//* Copy the Storage Group report                                    *
//*                                                                  *
//*   SYSUT1 - input (from previous step)                            *
//*   SYSUT2 - output                                                *
//*                                                                  *
//********************************************************************
//CPYSGREP EXEC  PGM=IEBGENER
//SYSUT1   DD    DSN=&SYSUID..SGNAMS.&SYSNAME..REPORT.ACBJBAIZ,DISP=SHR
//SYSUT2   DD    SYSOUT=*
//SYSIN    DD    DUMMY
//SYSPRINT DD    SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAI2
//ACBJBAI2 JOB (ACCT),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAI2) COMP(DF123): BATCH  - GENERATES DATA SET LIST  àY1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2àE1C*/
//* COPYRIGHT IBM CORP. 1996, 2017                               àG1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        àK0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       àK1C*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      àL0A*/
//*$L1=KN20035,HACS120,96/07/12,SNJTCS: PARAMETERS CORRECTED     àL1A*/
//*10/04/96  CCY - HDZ11C0: Ship as SPE                      àWA22861*/
//*09/03/97 TCS - HDZ11D0 : Generation of dataset list, user àWA28670*/
//*  is not able to direct the search to a specific VOLSER.  àWA28670*/
//*$T2=K150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter     àT2A*/
//*$U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for   2àU1A*/
//*                                       DFSMS/MVS ISMF V2R10       */
//*$Y1=K1K0688,HDZ11K0,04/17/12,SNJTCS:DS List via SG, GT64K Fix àY1A*/
//*$Y2=K1K0791,HDZ11K0,05/21/02,SNJTCS:DS List Space Ovrflw Fix  àY2A*/
//*$A0=EAV   ,HDZ1A10,06/09/25,IBSTG : EAV Support               àA0A*/
//*$A1=MULTLCK,HDZ1A10,07/04/27,IBSAS: Support of MULTILOCK      àA1A*/
//*$B1=EAV2   ,HDZ1B10,08/06/10,IBSTG: EATTR keyword support     àB1A*/
//*$E1=PDSESPU,HDZ2210,12/09/04,IBSTG: PDSE Space Utilization    àE1A*/
//*                                    Support (LI3039)          àE1A*/
//*$E2=OA45038,HDZ2210,14/04/15,IBSTG: Update DSN Type           àE2A*/
//*$G1=FP0454 ,HDZ2230,15/10/26,IBSTG: DS Encryption             àG1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO CREATE ISMF DATA SET LIST IN BATCH AND SAVE IT     *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//*   PARAMETERS:                                                    *
//*                                                                  *
//*                                                    46A/C àWA28670*
//*     PARAMETER FOLLOWING SAVE - NAME OF THE SAVED LIST (OUTPUT)   *
//*     ALLOCSP - 0 to 99999999 followed by K (kilobytes) or     àA0C*
//*               M (megabytes). If K or M aren't specified     2àA0A*
//*               the value will be defaulted to K.                  *
//*     ALLOCUT - Allocation Unit, BLK/TRK/ABS/CYL/MB/KB/BYT     àU1A*
//*     BLKSIZE - 0 to 99999 (in Bytes)                              *
//*     BLKUNUSED - 0 to 99999999 (in Kilo Bytes)                àY2C*
//*     CATNAME - ICF CATALOG name                                   *
//*     CATVOL  - VOLUME used in catalog list                        *
//*     CHGIND  - YES/NO                                             *
//*     COMPFMT - YES/NO                                             *
//*     CREATEDT - YYYY/MM/DD  (1900/01/01 to 2155/12/31)            *
//*                YY/MM/DD ( (19)00/01/01 to (19)99/12/31 )         *
//*     CCSIDDSC - CCSID Description                            3àU1A*
//*                0 to 65534 or A 1 to 17 character string          *
//*                that is not a number 0-65534                      *
//*     CFCSTNM  - CF Cache Structure name                       àU1A*
//*     CFCTNM   - CF Cache Set name                             àU1A*
//*     CFMOST   - CF Monitor status ON/OFF                      àU1A*
//*     CFSTIND  - CF status indicator CE/CQ/VRRQ/VRLS/VQ        àU1A*
//*     DATACLS - DATA CLASS name                                    *
//*     DDMATTR - DDM Attributes YES/NO                          àU1A*
//*     DEVTYPE - 3380/3390/9345 for DASD types                      *
//*             - 3480/3480X/3490/3590-1 for TAPE types              *
//*     DSENV   - Dataset Environment MANAGED/UNMANAGED          àU1A*
//*     DSNTYP  - DS name type EXTENDED/HFS/LIBRARY,1/LIBRARY,2/ àE1C*
//*               LIBRARY/LARGE/OTHERS                           àE2C*
//*     DSN     - DATA SET NAME                                      *
//*               ('**' requires catalog name)                       *
//*     DSORG   - DA/DAU/IS/ISU/PO/POU/PS/PSU/UN/VS                  *
//*     ENCRIND - YES/NO                                         àG1A*
//*     ENTRYTYP - AIX/ALIAS/CATALOG/DATA/INDEX/NONVSAM/PATH/        *
//*                DEFERRED/GDG/GDS/ROLLOFF                          *
//*     EXPIREDT - YYYY/MM/DD (1900/01/01 to 2155/12/31)         or  *
//*              - YY/MM/DD ( (19)00/01/01 TO (19)99/12/31 )     or  *
//*              - NEVER    or     1999/00/00                        *
//*     HSMDATA  - Y / N  (Catalog List)                             *
//*     LASTBKUP - YYYY/MM/DD  (1900/01/01 to 2155/12/31)            *
//*                YY/MM/DD ( (19)00/01/01 to (19)99/12/31 )         *
//*     LASTREF  - YYYY/MM/DD  (1900/01/01 to 2155/12/31)            *
//*                YY/MM/DD ( (19)00/01/01 to (19)99/12/31 )         *
//*     LISTTYP  - Inclusive/Exclusive or I/E                   3àU1A*
//*                Inclusive: Display list by Inclusive criteria     *
//*                Exclusive: Display list by Enclusive criteria     *
//*     LRECL   - 0 to 99999 (in Bytes)                              *
//*     MGMTCLS - MANAGEMENT CLASS name                              *
//*     MULTVOL - YES/NO                                             *
//*     NOTUSED% - 0 to 100                                          *
//*     NUMEXT   - 0 to 999                                          *
//*     NUMSTRIPE - 1 to 16                                          *
//*     OPTIMAL - 0 to 99999 (in Bytes)                              *
//*     OWNER   - OWNER of the datasets                              *
//*     QSAVE   - QUERY Name to be saved                             *
//*     QUERY   - QUERY Name to be used                              *
//*     REBLOCK - YES/NO                                             *
//*     RECFMT  - A/B/D/F/M/FS/VS/T/U/V                              *
//*     SECALLOC - 0 to 99999999 followed by K (kilobytes) or    àA0C*
//*                M (megabytes). If K or M aren't specified    2àA0A*
//*                the value will be defaulted to K.                 *
//*     SOURCEGL - 1 / 2 (2-new list)                                *
//*     SOURCENL - 1 / 2 (1-VTOC 2-catalog)                          *
//*     STORCLS - STORAGE CLASS name                                 *
//*     STORGRP - STORAGE GROUP name                             àY1A*
//*     USEDSPC - 0 to 99999999 followed by K (kilobytes) or     àA0C*
//*               M (megabytes). If K or M aren't specified     2àA0A*
//*               the value will be defaulted to K.                  *
//*     USERDATAREDUCT% - 0 to 99                                    *
//*     VTOCDATA - Y / N (Catalog List)                              *
//*     VTOCVSER - VTOC VOLUME SERIAL NUMBERS (VTOC list)            *
//*     CFLSTNM  - CF Lock Structure name                        àA1A*
//*     CFLTNM   - CF Lock Set name                              àA1A*
//*     EATTR    - EATTR                                         àB1A*
//*                                                                  *
//********************************************************************
//SAVELIST EXEC ACBJBAOB,
//         PLIB1=SYS1.DGTPLIB,
//         TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAI2 SAVE DSNLIST +
VTOCDATA(Y) HSMDATA(Y) +
DSN('SYS5.**')) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//
ISPSTART CMD(ACBQBAI2 SAVE DSNLIST +
VTOCDATA(Y) HSMDATA(Y) +
ALLOCSP(GT 500) DSORG(NE PS) +
DSN('SYS019.**')) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)

./ ADD NAME=ACBJBAI4
//ACBJBAI4 JOB (ACCT),MVS,MSGCLASS=T,                                   00020002
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)              00030001
//*SYS1.SACBCNTL(ACBJBAI4)                                           */ 00031001
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL                                      00040000
//********************************************************************/ 00050000
//*$MAC(ACBJBAI4) COMP(DF123): BATCH - DASD VOLUME LIST IN BATCH àA0C*/ 00060000
//*                                                                  */ 00070000
//* PROPRIETARY V3 STATEMENT                                         */ 00080000
//* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00090000
//* 5694-A01                                                         */ 00100000
//* COPYRIGHT 1996,2011  IBM CORP.                                   */ 00110000
//* END PROPRIETARY V3 STATEMENT                                     */ 00120000
//*                                                                  */ 00130000
//* CHANGE ACTIVITY:                                                 */ 00140000
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        àK0A*/ 00150000
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       àK1C*/ 00160000
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      àL0A*/ 00170000
//*10/04/96 CCY - HDZ11C0: Ship as SPE                       àWA22861*/ 00180000
//*09/19/97 TCS - HDZ11D0: In VOL application, to remove the àWA29014*/ 00190000
//*   error message ' SPECIFY ONLY 1 KEYWORD PER LINE '      àWA29014*/ 00200000
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    àT2A*/ 00210000
//*$U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for   2àU1A*/ 00220000
//*                                       DFSMS/MVS ISMF V2R10       */ 00230000
//*$A0=EAV   ,HDZ1A10,06/09/25,IBSTG : EAV Support               àA0A*/ 00240000
//*$C1=OA34489,HDZ1C10,10/10/06,IBSTG: Add comment, insufficient àC1A*/ 00250000
//*                                    storage                   àC1A*/ 00260000
//*$D1=OA38673,HDZ1D10,11/11/28,IBSTG: Support of SMA SPE        àD1A*/ 00270000
//*                                                                  */ 00280000
//********************************************************************/ 00290000
//********************************************************************  00300000
//*                                                                  *  00310000
//* SAMPLE JCL TO GENERATE ISMF DASD VOLUME LIST IN BATCH, SAVE IT,  *  00320000
//* AND SAVE THE QUERY ALSO                                          *  00330000
//*                                                                  *  00340000
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *  00350000
//*                                                                  *  00360000
//*      CHANGE JOBCARD                                              *  00370000
//*      CHANGE PREFIX                                               *  00380000
//*      CHANGE PARAMETERS                                           *  00390000
//*                                                            12àC1A*  00400000
//*      INCREASE THE REGION SIZE IN ACBJBAOB IF YOU DO NOT HAVE     *  00410000
//*      ENOUGH VIRTUAL STORAGE TO GENERATE DASD VOLUME LIST.        *  00420000
//*      FOR EXAMPLE, THE FOLLOWING ISMF REASON CODES INDICATE       *  00430000
//*      INSUFFICIENT STORAGE (SEE ISPF LOG):                        *  00440000
//*      REASON CODE (3037),                                         *  00450000
//*      REASON CODE (3258).                                         *  00460000
//*      THE REQUIRED REGION SIZE DEPENDS ON THE NUMBER OF VOLUMES   *  00470000
//*      ENTRIES AND CAN BE ESTIMATED ON THE BASIS OF 10K FOR EACH   *  00480000
//*      VOLUME ENTRY (THIS DATA IS APPROXIMATE AND CAN VARY ON      *  00490000
//*      DIFFERENT SYSTEMS. SET REGION=(0M) TO HAVE ALL STORAGE      *  00500000
//*      AVAILABLE).                                                 *  00510000
//*                                                                  *  00520000
//*   PARAMETERS:                                                    *  00530000
//*                                                   36A/C àWA29014 *  00540000
//*   PARAMETER FOLLOWING SAVE - NAME OF SAVED LIST (OUTPUT)         *  00550000
//*   ALLOCSP   - 0 to 99999999 followed by K (kilobytes) or     àA0C*  00560000
//*               M (megabytes). If K or M aren't specified     2àA0A*  00570000
//*               the value will be defaulted to K.                  *  00580000
//*   ALSPTRK   - 0 to 99999999 followed by K (kilobytes) or    3àA0A*  00590000
//*               M (megabytes). If K or M aren't specified          *  00600000
//*               the value will be defaulted to K.                  *  00610000
//*   CDSNAME   - Control Dataset Name                               *  00620000
//*   CFVOLST   - CF Volume status ENABLED/QUIESCING/QUIESCED    àU1A*  00630000
//*   CFWSTAT   - ACTIVE/INACTIVE/NONE/PENDING/PINNED                *  00640000
//*   DEVTYPE   - 3380/3390/9345                                     *  00650000
//*             - Installation defined esoteric names(like SYSDA ..) *  00660000
//*   DFWSTAT   - ACTIVE/INACTIVE/NONE/PENDING/PINNED                *  00670000
//*   DUPLXSTAT - NONE / PPRI-FAI / PPRI-PEN / PPRI-SUS / PPRIMARY/  *  00680000
//*               PRI-PEN / PRI-SUS / PRIMARY / PSEC-FAI / PSEC-PEN/ *  00690000
//*               PSEC-SUS /PSECNDRY/ SEC-PEN  / SEC-SUS / SECONDRY/ *  00700000
//*               SIMPLEX / SPAR-BRK / SPAR-PEN / SPARE              *  00710000
//*   FRAG      - 1 to 999                                           *  00720000
//*   FREEDSCB  - 0 to 99999                                         *  00730000
//*   FREESPC   - 0 to 99999999 followed by K (kilobytes) or     àA0C*  00740000
//*               M (megabytes). If K or M aren't specified     2àA0A*  00750000
//*               the value will be defaulted to K.                  *  00760000
//*   FRSPTRK   - 0 to 99999999 followed by K (kilobytes) or    3àA0A*  00770000
//*               M (megabytes). If K or M aren't specified          *  00780000
//*               the value will be defaulted to K.                  *  00790000
//*   FREESPC%  - 0 to 100 (with no % sign)                          *  00800000
//*   FREEVIR   - 0 to 99999                                         *  00810000
//*   FREEXT    - 0 to 9999999                                   àA0C*  00820000
//*   FROMDEV   - 1 to 4 HexaDecimal digits                          *  00830000
//*   INDEX     - DISABLED/ENABLED/NONE                              *  00840000
//*   INIASRES  - Initialized as Reserved (YES / NO)             àD1A*  00850000
//*   LASTDEV   - 1 to 4 HexaDecimal digits (should be >= FROMDEV)   *  00860000
//*   LISTTYP   - Inclusive/Exclusive or I/E                    3àU1A*  00870000
//*               Inclusive: Display list by Inclusive criteria      *  00880000
//*               Exclusive: Display list by Enclusive criteria      *  00890000
//*   LRGEXT    - 1 to 99999999 followed by K (kilobytes) or     àA0C*  00900000
//*               M (megabytes). If K or M aren't specified     2àA0A*  00910000
//*               the value will be defaulted to K.                  *  00920000
//*   LGEXTRK   - 1 to 99999999 followed by K (kilobytes) or    3àA0C*  00930000
//*               M (megabytes). If K or M aren't specified          *  00940000
//*               the value will be defaulted to K.                  *  00950000
//*   OTHERDEV  - 1 to 4 Hex Decimal digits                          *  00960000
//*   OWNERID   - Owner ID, 1 to 14 characters                   àD1A*  00970000
//*   PHYDATA   - Y / N                                              *  00980000
//*   PHYSTAT   - CONVERT/INITIAL/NONSMS/UNKNOWN                     *  00990000
//*   QSAVE     - Query Name to be saved                             *  01000000
//*   QUERY     - Query Name to be used                              *  01010000
//*   RDCACHE   - ACTIVE/INACTIVE/NONE/PENDING                       *  01020000
//*   SHRDASD   - YES / NO                                           *  01030000
//*   SOURCEGL  - 1 / 2 (2-New List)                                 *  01040000
//*   SOURCENL  - 1 / 2 (1-Physical, 2-SMS)                          *  01050000
//*   SPCDATA   - Y / N                                              *  01060000
//*   STORGRP   - Stotage Group name (SMS only)                      *  01070000
//*   SUBSYSID  - 0001 to FFFF (in HexaDecimal)                      *  01080000
//*   USEATTR   - PRIV/PUB/STOR                                      *  01090000
//*   VOL       - Volume serial                                      *  01100000
//*   VOLSTYPE  - 1 / 2 / 3 (1-On Line 2-Not On Line 3-Either)       *  01110000
//*                                                                  *  01120000
//********************************************************************  01130000
//DASDLST EXEC ACBJBAOB,                                                01140000
//        PLIB1=SYS1.DGTPLIB,                                           01150000
//        TABL2=&SYSUID..TEST.ISPTABL                                   01160002
//SYSTSIN  DD *                                                         01170000
PROFILE PREFIX(SYS019) MSGID                                            01180001
ISPSTART CMD(ACBQBAI4 +                                                 01190000
SAVE CHKFRAG QSAVE(CHKFRAG) +                                           01200000
SPCDATA(Y) PHYDATA(Y) +                                                 01210000
VOL(*)             ) +                                                  01220002
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)    01230000
/*                                                                      01240000
//********************************************************************  01250000
//                                                                      01251002
PROFILE PREFIX(SYS019) MSGID                                            01260002
ISPSTART CMD(ACBQBAI4 +                                                 01270002
SAVE CHKFRAG QSAVE(CHKFRAG) +                                           01280002
SPCDATA(Y) PHYDATA(Y) +                                                 01290002
VOL(*) FRAG(GT 450)) +                                                  01300002
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)    01310002

./ ADD NAME=ACBJBAI5
//ACBJBAI5 JOB (ACCT),MVS,MSGCLASS=H,                                   00020001
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)              00030001
//*SYS1.SACBCNTL(ACBJBAI5)                                           */ 00031001
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL                                      00040000
//********************************************************************/ 00050000
//*$MAC(ACBJBAI5) COMP(DF123): BATCH  - GENERATES VOLUME LIST    àA0C*/ 00060000
//*                                                                  */ 00070000
//* PROPRIETARY V3 STATEMENT                                         */ 00080000
//* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00090000
//* 5694-A01                                                    2àA0C*/ 00100000
//* COPYRIGHT 1996,2011  IBM CORP.                                   */ 00110000
//* END PROPRIETARY V3 STATEMENT                                     */ 00120000
//*                                                                  */ 00130000
//* CHANGE ACTIVITY:                                                 */ 00140000
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        àK0A*/ 00150000
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       àK1C*/ 00160000
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      àL0A*/ 00170000
//*10/14/96 CCY - HDZ11C0: Ship as SPE                       àWA22861*/ 00180000
//*09/19/97 TCS - HDZ11D0: In VOL application, to remove the àWA29014*/ 00190000
//*   error message ' SPECIFY ONLY 1 KEYWORD PER LINE '      àWA29014*/ 00200000
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    àT2A*/ 00210000
//*$U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for   2àU1A*/ 00220000
//*                                       DFSMS/MVS ISMF V2R10       */ 00230000
//*$A0=EAV   ,HDZ1A10,06/09/27,IBSTG : EAV Support               àA0A*/ 00240000
//*$C1=OA34489,HDZ1C10,10/10/06,IBSTG: Add comment, insufficient àC1A*/ 00250000
//*                                    storage                   àC1A*/ 00260000
//*$D1=OA38673,HDZ1D10,11/11/28,IBSTG: Support of SMA SPE        àD1A*/ 00270000
//*                                                                  */ 00280000
//********************************************************************/ 00290000
//********************************************************************  00300000
//*                                                                  *  00310000
//* SAMPLE JCL TO GENERATE ISMF DASD VOLUME LIST IN BATCH AND SAVE IT*  00320000
//*                                                                  *  00330000
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *  00340000
//*                                                                  *  00350000
//*      CHANGE JOBCARD                                              *  00360000
//*      CHANGE PREFIX                                               *  00370000
//*      CHANGE PARAMETERS                                           *  00380000
//*                                                            12àC1A*  00390000
//*      INCREASE THE REGION SIZE IN ACBJBAOB IF YOU DO NOT HAVE     *  00400000
//*      ENOUGH VIRTUAL STORAGE TO GENERATE DASD VOLUME LIST.        *  00410000
//*      FOR EXAMPLE, THE FOLLOWING ISMF REASON CODES INDICATE       *  00420000
//*      INSUFFICIENT STORAGE (SEE ISPF LOG):                        *  00430000
//*      REASON CODE (3037),                                         *  00440000
//*      REASON CODE (3258).                                         *  00450000
//*      THE REQUIRED REGION SIZE DEPENDS ON THE NUMBER OF VOLUMES   *  00460000
//*      ENTRIES AND CAN BE ESTIMATED ON THE BASIS OF 10K FOR EACH   *  00470000
//*      VOLUME ENTRY (THIS DATA IS APPROXIMATE AND CAN VARY ON      *  00480000
//*      DIFFERENT SYSTEMS. SET REGION=(0M) TO HAVE ALL STORAGE      *  00490000
//*      AVAILABLE).                                                 *  00500000
//*                                                                  *  00510000
//*   PARAMETERS:                                                    *  00520000
//*                                                   36A/C àWA29014 *  00530000
//*   PARAMETER FOLLOWING SAVE - NAME OF SAVED LIST (OUTPUT)         *  00540000
//*   ALLOCSP   - 0 to 99999999 followed by K (kilobytes) or     àA0C*  00550000
//*               M (megabytes). If K or M aren't specified     2àA0A*  00560000
//*               the value will be defaulted to K.                  *  00570000
//*   ALSPTRK   - 0 to 99999999 followed by K (kilobytes) or    3àA0A*  00580000
//*               M (megabytes). If K or M aren't specified          *  00590000
//*               the value will be defaulted to K.                  *  00600000
//*   CDSNAME   - Control Dataset Name                               *  00610000
//*   CFVOLST   - CF Volume status ENABLED/QUIESCING/QUIESCED    àU1A*  00620000
//*   CFWSTAT   - ACTIVE/INACTIVE/NONE/PENDING/PINNED                *  00630000
//*   DEVTYPE   - 3380/3390/9345                                     *  00640000
//*             - Installation defined esoteric names(like SYSDA ..) *  00650000
//*   DFWSTAT   - ACTIVE/INACTIVE/NONE/PENDING/PINNED                *  00660000
//*   DUPLXSTAT - NONE / PPRI-FAI / PPRI-PEN / PPRI-SUS / PPRIMARY/  *  00670000
//*               PRI-PEN / PRI-SUS / PRIMARY / PSEC-FAI / PSEC-PEN/ *  00680000
//*               PSEC-SUS /PSECNDRY/ SEC-PEN  / SEC-SUS / SECONDRY/ *  00690000
//*               SIMPLEX / SPAR-BRK / SPAR-PEN / SPARE              *  00700000
//*   FRAG      - 1 to 999                                           *  00710000
//*   FREEDSCB  - 0 to 99999                                         *  00720000
//*   FREESPC   - 0 to 99999999 followed by K (kilobytes) or     àA0C*  00730000
//*               M (megabytes). If K or M aren't specified     2àA0A*  00740000
//*               the value will be defaulted to K.                  *  00750000
//*   FRSPTRK   - 0 to 99999999 followed by K (kilobytes) or    3àA0A*  00760000
//*               M (megabytes). If K or M aren't specified          *  00770000
//*               the value will be defaulted to K.                  *  00780000
//*   FREESPC%  - 0 to 100 (with no % sign)                          *  00790000
//*   FREEVIR   - 0 to 99999                                         *  00800000
//*   FREEXT    - 0 to 9999999                                   àA0C*  00810000
//*   FROMDEV   - 1 to 4 HexaDecimal digits                          *  00820000
//*   INDEX     - DISABLED/ENABLED/NONE                              *  00830000
//*   INIASRES  - Initialized as Reserved (YES / NO)             àD1A*  00840000
//*   LASTDEV   - 1 to 4 HexaDecimal digits (should be >= FROMDEV)   *  00850000
//*   LISTTYP   - Inclusive/Exclusive or I/E                    3àU1A*  00860000
//*               Inclusive: Display list by Inclusive criteria      *  00870000
//*               Exclusive: Display list by Enclusive criteria      *  00880000
//*   LRGEXT    - 1 to 99999999 followed by K (kilobytes) or     àA0C*  00890000
//*               M (megabytes). If K or M aren't specified     2àA0A*  00900000
//*               the value will be defaulted to K.                  *  00910000
//*   LGEXTRK   - 1 to 99999999 followed by K (kilobytes) or    3àA0C*  00920000
//*               M (megabytes). If K or M aren't specified          *  00930000
//*               the value will be defaulted to K.                  *  00940000
//*   OTHERDEV  - 1 to 4 Hex Decimal digits                          *  00950000
//*   OWNERID   - Owner ID, 1 to 14 characters                   àD1A*  00960000
//*   PHYDATA   - Y / N                                              *  00970000
//*   PHYSTAT   - CONVERT/INITIAL/NONSMS/UNKNOWN                     *  00980000
//*   QSAVE     - Query Name to be saved                             *  00990000
//*   QUERY     - Query Name to be used                              *  01000000
//*   RDCACHE   - ACTIVE/INACTIVE/NONE/PENDING                       *  01010000
//*   SHRDASD   - YES / NO                                           *  01020000
//*   SOURCEGL  - 1 / 2 (2-New List)                                 *  01030000
//*   SOURCENL  - 1 / 2 (1-Physical, 2-SMS)                          *  01040000
//*   SPCDATA   - Y / N                                              *  01050000
//*   STORGRP   - Stotage Group name (SMS only)                      *  01060000
//*   SUBSYSID  - 0001 to FFFF (in HexaDecimal)                      *  01070000
//*   USEATTR   - PRIV/PUB/STOR                                      *  01080000
//*   VOL       - Volume serial                                      *  01090000
//*   VOLSTYPE  - 1 / 2 / 3 (1-On Line 2-Not On Line 3-Either)       *  01100000
//*                                                                  *  01110000
//********************************************************************  01120000
//GENLIST EXEC ACBJBAOB,                                                01130000
//        PLIB1=SYS1.DGTPLIB,                                           01140000
//        TABL2=&SYSUID..TEST.ISPTABL                                   01150002
//SYSTSIN  DD *                                                         01160000
PROFILE PREFIX(SYS019)                                                  01170001
ISPSTART CMD(ACBQBAI4 +                                                 01180000
SAVE DASDLST +                                                          01190000
SPCDATA(Y) PHYDATA(Y) +                                                 01200000
VOL(*)                   ) +                                            01210002
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)    01220000
/*                                                                      01230000
//********************************************************************  01240000
//                                                                      01241002
ISPSTART CMD(ACBQBAI4 +                                                 01250002
SAVE DASDLST +                                                          01260002
SPCDATA(Y) PHYDATA(Y) +                                                 01270002
VOL(*) INDEX(EQ DISABLED)) +                                            01280002
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)    01290002

./ ADD NAME=ACBJBAI7
//ACBJBAI7 JOB (ACCT),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAI7) COMP(DF123): BATCH  - GENERATES DATA SET LIST  àY1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2àE1C*/
//* COPYRIGHT IBM CORP. 1993, 2017                               àG1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        àK0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       àK1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        àWA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      àL0A*/
//*$L1=KN20035,HACS120,96/07/13,SNJTCS: CHANGED PARAMETERS       àL1A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      àWA22861*/
//*09/03/97 TCS - HDZ11D0 : Generation of dataset list, user àWA28670*/
//*  is not able to direct the search to a specific VOLSER.  àWA28670*/
//*$T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter     àT2A*/
//*$U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for   2àU1A*/
//*                                       DFSMS/MVS ISMF V2R10       */
//*$Y1=K1K0688,HDZ11K0,041222,SNJTCS: DS List via SG, GT64K Fix  àY1A*/
//*$Y2=K1K0791,HDZ11K0,05/02/21,SNJTCS:DS List Space Ovrflw Fix  àY2A*/
//*$A0=EAV   ,HDZ1A10,06/09/25,IBSTG : EAV Support               àA0A*/
//*$A1=MULTLCK,HDZ1A10,07/04/27,IBSAS: Support of MULTILOCK      àA1A*/
//*$B1=EAV2   ,HDZ1B10,08/06/10,IBSTG: EATTR keyword support     àB1A*/
//*$E1=PDSESPU,HDZ2210,12/09/04,IBSTG: PDSE Space Utilization    àE1A*/
//*                                    Support (LI3039)          àE1A*/
//*$E2=OA45038,HDZ2210,14/04/15,IBSTG: Update DSN Type           àE2A*/
//*$G1=FP0454 ,HDZ2230,15/10/26,IBSTG: DS Encryption             àG1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE ISMF DATA SET LIST IN BATCH, SAVE IT,     *
//* AND SAVE THE QUERY ALSO                                          *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                                  *
//*   PARAMETERS:                                                    *
//*                                                                  *
//*                                                    46A/C àWA28670*
//*     PARAMETER FOLLOWING SAVE - NAME OF THE SAVED LIST (OUTPUT)   *
//*     ALLOCSP - 0 to 99999999 followed by K (kilobytes) or     àA0C*
//*               M (megabytes). If K or M aren't specified     2àA0A*
//*               the value will be defaulted to K.                  *
//*     ALLOCUT - Allocation Unit, BLK/TRK/ABS/CYL/MB/KB/BYT     àU1A*
//*     BLKSIZE - 0 to 99999 (in Bytes)                              *
//*     BLKUNUSED - 0 to 99999999 (in Kilo Bytes)                àY2C*
//*     CATNAME - ICF CATALOG name                                   *
//*     CATVOL  - VOLUME used in catalog list                        *
//*     CHGIND  - YES/NO                                             *
//*     COMPFMT - YES/NO                                             *
//*     CREATEDT - YYYY/MM/DD  (1900/01/01 to 2155/12/31)            *
//*                YY/MM/DD ( (19)00/01/01 to (19)99/12/31 )         *
//*     CCSIDDSC - CCSID Description                            3àU1A*
//*                0 to 65534 or A 1 to 17 character string          *
//*                that is not a number 0-65534                      *
//*     CFCSTNM  - CF Cache Structure name                       àU1A*
//*     CFCTNM   - CF Cache Set name                             àU1A*
//*     CFMOST   - CF Monitor status ON/OFF                      àU1A*
//*     CFSTIND  - CF status indicator CE/CQ/VRRQ/VRLS/VQ        àU1A*
//*     DATACLS - DATA CLASS name                                    *
//*     DDMATTR - DDM Attributes YES/NO                          àU1A*
//*     DEVTYPE - 3380/3390/9345 for DASD types                      *
//*             - 3480/3480X/3490/3590-1 for TAPE types              *
//*     DSENV   - Dataset Environment MANAGED/UNMANAGED          àU1A*
//*     DSNTYP  - DS name type EXTENDED/HFS/LIBRARY,1/LIBRARY,2/ àE1C*
//*               LIBRARY/LARGE/OTHERS                           àE2C*
//*     DSN     - DATA SET NAME                                      *
//*               ('**' requires catalog name)                       *
//*     DSORG   - DA/DAU/IS/ISU/PO/POU/PS/PSU/UN/VS                  *
//*     ENCRIND - YES/NO                                         àG1A*
//*     ENTRYTYP - AIX/ALIAS/CATALOG/DATA/INDEX/NONVSAM/PATH/        *
//*                DEFERRED/GDG/GDS/ROLLOFF                          *
//*     EXPIREDT - YYYY/MM/DD (1900/01/01 to 2155/12/31)         or  *
//*              - YY/MM/DD ( (19)00/01/01 TO (19)99/12/31 )     or  *
//*              - NEVER    or     1999/00/00                        *
//*     HSMDATA  - Y / N  (Catalog List)                             *
//*     LASTBKUP - YYYY/MM/DD  (1900/01/01 to 2155/12/31)            *
//*                YY/MM/DD ( (19)00/01/01 to (19)99/12/31 )         *
//*     LASTREF  - YYYY/MM/DD  (1900/01/01 to 2155/12/31)            *
//*                YY/MM/DD ( (19)00/01/01 to (19)99/12/31 )         *
//*     LISTTYP  - Inclusive/Exclusive or I/E                   3àU1A*
//*                Inclusive: Display list by Inclusive criteria     *
//*                Exclusive: Display list by Enclusive criteria     *
//*     LRECL   - 0 to 99999 (in Bytes)                              *
//*     MGMTCLS - MANAGEMENT CLASS name                              *
//*     MULTVOL - YES/NO                                             *
//*     NOTUSED% - 0 to 100                                          *
//*     NUMEXT   - 0 to 999                                          *
//*     NUMSTRIPE - 1 to 16                                          *
//*     OPTIMAL - 0 to 99999 (in Bytes)                              *
//*     OWNER   - OWNER of the datasets                              *
//*     QSAVE   - QUERY Name to be saved                             *
//*     QUERY   - QUERY Name to be used                              *
//*     REBLOCK - YES/NO                                             *
//*     RECFMT  - A/B/D/F/M/FS/VS/T/U/V                              *
//*     SECALLOC - 0 to 99999999 followed by K (kilobytes) or    àA0C*
//*                M (megabytes). If K or M aren't specified    2àA0A*
//*                the value will be defaulted to K.                 *
//*     SOURCEGL - 1 / 2 (2-new list)                                *
//*     SOURCENL - 1 / 2 (1-VTOC 2-catalog)                          *
//*     STORCLS - STORAGE CLASS name                                 *
//*     STORGRP - STORAGE GROUP name                             àY1A*
//*     USEDSPC - 0 to 99999999 followed by K (kilobytes) or     àA0C*
//*               M (megabytes). If K or M aren't specified     2àA0A*
//*               the value will be defaulted to K.                  *
//*     USERDATAREDUCT% - 0 to 99                                    *
//*     VTOCDATA - Y / N (Catalog List)                              *
//*     VTOCVSER - VTOC VOLUME SERIAL NUMBERS (VTOC list)            *
//*     CFLSTNM  - CF Lock Structure name                        àA1A*
//*     CFLTNM   - CF Lock Set name                              àA1A*
//*     EATTR    - EATTR                                         àB1A*
//*                                                                  *
//********************************************************************
//GENLIST EXEC ACBJBAOB,
//        PLIB1=SYS1.DGTPLIB,
//        TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAI2 +
SAVE DSNLIST QSAVE(QUERY1) +
VTOCDATA(Y) HSMDATA(Y) +
DSN('SYS5.**')               +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//
ISPSTART CMD(ACBQBAI2 +
SAVE DSNLIST QSAVE(QUERY1) +
VTOCDATA(Y) HSMDATA(Y) +
DSN('SYS5.**') ALLOCSP(LT 1) +
DSORG(NE PS) INCLUDENULLS(EQ NO)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)

./ ADD NAME=ACBJBAI8
//ACBJBAI8 JOB (ACCT),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1) TIME=(0,10)
//*SYS1.SACBCNTL(ACBJBAI8)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAI8) COMP(DF123): BATCH  - GENERATES VOLUME LIST    àA0C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                    2àA0C*/
//* COPYRIGHT 1996, 2011 IBM CORP.                               àD1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        àK0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       àK1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        àWA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      àL0A*/
//*$L1=KN20035,HACS120,96/07/13,SNJTCS: CHANGED PARAMETERS       àL1A*/
//*10/14/96 CCY - HDZ11C0: Ship as SPE                       àWA22861*/
//*09/19/97 TCS - HDZ11D0: In VOL application, to remove the àWA29014*/
//*   error message ' SPECIFY ONLY 1 KEYWORD PER LINE '      àWA29014*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    àT2A*/
//*11/18/98  TCS - HDZ11E0: Fix for ISPFILE problem          àWA36007*/
//*$U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for   2àU1A*/
//*                                       DFSMS/MVS ISMF V2R10       */
//*$A0=EAV   ,HDZ1A10,06/09/27,IBSTG : EAV Support               àA0A*/
//*$D1=SORT  ,HDZ1D10,10/03/26,IBSTG : SORT Volume List Support  àD1A*/
//*$C1=OA34489,HDZ1C10,10/10/06,IBSTG: Add comment, insufficient àC1A*/
//*                                    storage                   àC1A*/
//*$D2=OA38673,HDZ1D10,11/11/28,IBSTG: Support of SMA SPE        àD2A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE ISMF DASD VOLUME LIST IN BATCH, SAVE  àD1C*
//* THIS LIST, SORT IT AND GENERATE A DASD VOLUME REPORT FROM IT àD1C*
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                            12àC1A*
//*      INCREASE THE REGION SIZE IN ACBJBAOB IF YOU DO NOT HAVE     *
//*      ENOUGH VIRTUAL STORAGE TO GENERATE DASD VOLUME LIST.        *
//*      FOR EXAMPLE, THE FOLLOWING ISMF REASON CODES INDICATE       *
//*      INSUFFICIENT STORAGE (SEE ISPF LOG):                        *
//*      REASON CODE (3037),                                         *
//*      REASON CODE (3258).                                         *
//*      THE REQUIRED REGION SIZE DEPENDS ON THE NUMBER OF VOLUMES   *
//*      ENTRIES AND CAN BE ESTIMATED ON THE BASIS OF 10K FOR EACH   *
//*      VOLUME ENTRY (THIS DATA IS APPROXIMATE AND CAN VARY ON      *
//*      DIFFERENT SYSTEMS. SET REGION=(0M) TO HAVE ALL STORAGE      *
//*      AVAILABLE).                                                 *
//*                                                                  *
//*   PARAMETERS:                                                    *
//*                                                   36A/C àWA29014 *
//*   PARAMETER FOLLOWING SAVE - NAME OF SAVED LIST (OUTPUT)         *
//*   ALLOCSP   - 0 to 99999999 followed by K (kilobytes) or     àA0C*
//*               M (megabytes). If K or M aren't specified     2àA0A*
//*               the value will be defaulted to K.                  *
//*   ALSPTRK   - 0 to 99999999 followed by K (kilobytes) or    3àA0A*
//*               M (megabytes). If K or M aren't specified          *
//*               the value will be defaulted to K.                  *
//*   CDSNAME   - Control Dataset Name                               *
//*   CFVOLST   - CF Volume Status ENABLED/QUIESCING/QUIESCED    àU1A*
//*   CFWSTAT   - ACTIVE/INACTIVE/NONE/PENDING/PINNED                *
//*   DEVTYPE   - 3380/3390/9345                                     *
//*             - Installation defined esoteric names(like SYSDA ..) *
//*   DFWSTAT   - ACTIVE/INACTIVE/NONE/PENDING/PINNED                *
//*   DUPLXSTAT - NONE / PPRI-FAI / PPRI-PEN / PPRI-SUS / PPRIMARY/  *
//*               PRI-PEN / PRI-SUS / PRIMARY / PSEC-FAI / PSEC-PEN/ *
//*               PSEC-SUS /PSECNDRY/ SEC-PEN  / SEC-SUS / SECONDRY/ *
//*               SIMPLEX / SPAR-BRK / SPAR-PEN / SPARE              *
//*   FRAG      - 1 to 999                                           *
//*   FREEDSCB  - 0 to 99999                                         *
//*   FREESPC   - 0 to 99999999 followed by K (kilobytes) or     àA0C*
//*               M (megabytes). If K or M aren't specified     2àA0A*
//*               the value will be defaulted to K.                  *
//*   FRSPTRK   - 0 to 99999999 followed by K (kilobytes) or    3àA0A*
//*               M (megabytes). If K or M aren't specified          *
//*               the value will be defaulted to K.                  *
//*   FREESPC%  - 0 to 100 (with no % sign)                          *
//*   FREEVIR   - 0 to 99999                                         *
//*   FREEXT    - 0 to 9999999                                   àA0C*
//*   FROMDEV   - 1 to 4 HexaDecimal digits                          *
//*   INDEX     - DISABLED/ENABLED/NONE                              *
//*   INIASRES  - Initialized as Reserved (YES / NO)             àD2A*
//*   LASTDEV   - 1 to 4 HexaDecimal digits (should be >= FROMDEV)   *
//*   LISTTYP   - Inclusive/Exclusive or I/E                    3àU1A*
//*               Inclusive: Display list by Inclusive criteria      *
//*               Exclusive: Display list by Enclusive criteria      *
//*   LRGEXT    - 1 to 99999999 followed by K (kilobytes) or     àA0C*
//*               M (megabytes). If K or M aren't specified     2àA0A*
//*               the value will be defaulted to K.                  *
//*   LGEXTRK   - 1 to 99999999 followed by K (kilobytes) or    3àA0C*
//*               M (megabytes). If K or M aren't specified          *
//*               the value will be defaulted to K.                  *
//*   OTHERDEV  - 1 to 4 Hex Decimal digits                          *
//*   OWNERID   - Owner ID, 1 to 14 characters                   àD2A*
//*   PHYDATA   - Y / N                                              *
//*   PHYSTAT   - CONVERT/INITIAL/NONSMS/UNKNOWN                     *
//*   QSAVE     - Query Name to be saved                             *
//*   QUERY     - Query Name to be used                              *
//*   RDCACHE   - ACTIVE/INACTIVE/NONE/PENDING                       *
//*   SHRDASD   - YES / NO                                           *
//*   SOURCEGL  - 1 / 2 (2-New List)                                 *
//*   SOURCENL  - 1 / 2 (1-Physical, 2-SMS)                          *
//*   SPCDATA   - Y / N                                              *
//*   STORGRP   - Stotage Group name (SMS only)                      *
//*   SUBSYSID  - 0001 to FFFF (in HexaDecimal)                      *
//*   USEATTR   - PRIV/PUB/STOR                                      *
//*   VOL       - Volume serial                                      *
//*   VOLSTYPE  - 1 / 2 / 3 (1-On Line 2-Not On Line 3-Either)       *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//*  STEP TO GENERATE DASD VOLUME LIST                               *
//*                                                                  *
//********************************************************************
//DELISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=&SYSUID..DASDVOL.&SYSNAME..REPORT.ACBJBAI8,
//    DISP=(MOD,DELETE,DELETE),
//    SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//GENLIST EXEC ACBJBAOB,
//        PLIB1=SYS1.DGTPLIB,
//        TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAI4 +
SAVE DASDLST +
SPCDATA(Y) PHYDATA(Y) +
CDSNAME('ACTIVE') +
VOL(*)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//********************************************************************
//*                                                                  *
//* STEP TO ALLOCATE ISPFILE, WHERE THE GENERATED REPORT IS SAVED    *
//* NOTE: THE DATA SET BEING ALLOCATED SHOULD NOT BE A TEMPORARY     *
//*       DATA SET.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=&SYSUID..DASDVOL.&SYSNAME..REPORT.ACBJBAI8,
//    DISP=(NEW,CATLG),
//    SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=256,BLKSIZE=25600,UNIT=SYSDA
//SYSPRINT DD SYSOUT=*
//SYSIN  DD *
//********************************************************************
//*                                                                  *
//*  STEP TO SORT A PREVIOUSLY SAVED DASD VOLUME LIST AND        àD1C*
//*  GENERATE A DASD VOLUME REPORT FROM IT.                      àD1C*
//*                                                                  *
//*      PARAMETERS FOR ACBQVAR1: NAME OF SAVED LIST (INPUT);    àD1C*
//*                               SORT(column name) (INPUT) -   3àD1A*
//*                               to sort list by the data column in *
//*                               ascending order.                   *
//*      ISPFILE - GENERATED REPORT (OUTPUT, FROM ALCISPFL STEP)     *
//*      SYSIN - KEY WORDS FOR COLUMNS TO BE INCLUDED IN THE REPORT  *
//*                                                                  *
//*    The following parameters can be specified in SYSIN.    25àU1A *
//*                                                                  *
//*    VOLSER                 ->    Volume Serial                    *
//*    FREESPC   ! FREESP     ->    Free Space                       *
//*    FRSPCTRK  ! FRSPTRK    ->    Free Space in TRK-Managed    àA0A*
//*    %FREE                  ->    % Free                           *
//*    ALLOCSPC  ! ALLOCSP    ->    Allocated Space                  *
//*    ALSPCTRK  ! ALSPTRK    ->    Alloc Space in TRK-Managed   àA0A*
//*    FRAG      ! FRAGINDX   ->    Fragmentation Index              *
//*    LRGEXT    ! EXTLRG     ->    Largest Extent                   *
//*    LGEXTRK   ! EXTLGTRK   ->    Largest Ext in TRK-Managed   àA0A*
//*    FREEXT    ! EXTFREE    ->    Free Extents                     *
//*    INDXSTAT  ! STATINDX   ->    Index Status                     *
//*    FREEDSCB  ! DSCBFREE   ->    Free DSCBS                       *
//*    FREEVIRS  ! VIRSFREE   ->    Free Vtoc Index Records          *
//*    DEVICE    ! DEVICETYPE ->    Device Type                      *
//*    DEVNUM    ! ADDRESS    ->    Device Number                    *
//*    SHARE     ! SHRDASD    ->    Shared DASD                      *
//*    USE       ! USEATTR    ->    Use Attributes                   *
//*    RDCACHE   ! RDSTAT     ->    RD Cache Status                  *
//*    DASDFW                 ->    DASD FW Status                   *
//*    CACHEFW                ->    Cache FW Status                  *
//*    DUPLEX    ! DUPLEXST   ->    Duplex Status                    *
//*    OTHER     ! OTHERDEV   ->    Other Device                     *
//*    SUBSYS    ! SUBSYSID   ->    Subsys ID                        *
//*    PHYSTAT   ! STATPHYS   ->    Physical Status                  *
//*    STORGRP   ! SG         ->    Storage Group Name               *
//*    CFVOLST                ->    CF Volume Status                 *
//*    OWNERID                ->    Owner ID                     àD2A*
//*    INIASRES               ->    Initialized as Reserved      àD2A*
//********************************************************************
//GENREP  EXEC ACBJBAOB,
//        PLIB1=SYS1.DGTPLIB,
//        TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE DD  DSN=&SYSUID..DASDVOL.&SYSNAME..REPORT.ACBJBAI8,DISP=OLD
//SYSTSIN  DD *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQVAR1 DASDLST SORT(VOLSER)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN DD  *
VOLSER
FREESPC
%FREE
ALLOCSP
FREESP
INDXSTAT
FRAG
USEATTR
SG
DEVNUM
TITLE=STATUS OF VOLUMES STARTING WITH PREFIX *
DEVICETYPE
/*
//********************************************************************
//*                                                                  *
//*   COPY DASD VOLUME REPORT                                        *
//*                                                                  *
//*    SYSUT1 - INPUT (FROM PREVIOUS STEP)                           *
//*    SYSUT2 - OUTPUT                                               *
//*                                                                  *
//********************************************************************
//REPGEN   EXEC PGM=IEBGENER
//SYSUT1   DD DSN=&SYSUID..DASDVOL.&SYSNAME..REPORT.ACBJBAI8,DISP=SHR
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//********************************************************************
//
ISPSTART CMD(ACBQVAR1 DASDLST SORT(column name)) +

./ ADD NAME=ACBJBAI9
//ACBJBAI9 JOB (ACCT),MVS,MSGCLASS=T,                                   00020002
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)              00030001
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL                                      00040000
//*SYS1.SACBCNTL(ACBJBAI9)                                           */ 00041001
//********************************************************************/ 00050000
//*$MAC(ACBJBAI9) COMP(5695DF123): BATCH  - GENERATES VOLUME LIST    */ 00060000
//*                                                                  */ 00070000
//* PROPRIETARY V3 STATEMENT                                         */ 00080000
//* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00090000
//* 5694-A01                                                     àC1C*/ 00100000
//* COPYRIGHT 1996,2011  IBM CORP.                                   */ 00110000
//* END PROPRIETARY V3 STATEMENT                                     */ 00120000
//*                                                                  */ 00130000
//* CHANGE ACTIVITY:                                                 */ 00140000
//*                                                                  */ 00150000
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        àK0A*/ 00160000
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       àK1C*/ 00170000
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      àL0A*/ 00180000
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      àWA22861*/ 00190000
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    àT2A*/ 00200000
//*$C1=OA34489,HDZ1C10,10/10/06,IBSTG: Add comment, insufficient àC1A*/ 00210000
//*                                    storage                   àC1A*/ 00220000
//*                                                                  */ 00230000
//********************************************************************/ 00240000
//********************************************************************  00250000
//*                                                                  *  00260000
//* SAMPLE JCL TO GENERATE ISMF DASD VOLUME LIST IN BATCH FROM A     *  00270000
//* PREVIOUSLY SAVED QUERY, AND SAVE THE GENERATED LIST              *  00280000
//*                                                                  *  00290000
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *  00300000
//*                                                                  *  00310000
//*      CHANGE JOBCARD                                              *  00320000
//*      CHANGE PREFIX                                               *  00330000
//*      CHANGE PARAMETERS                                           *  00340000
//*                                                            12àC1A*  00350000
//*      INCREASE THE REGION SIZE IN ACBJBAOB IF YOU DO NOT HAVE     *  00360000
//*      ENOUGH VIRTUAL STORAGE TO GENERATE DASD VOLUME LIST.        *  00370000
//*      FOR EXAMPLE, THE FOLLOWING ISMF REASON CODES INDICATE       *  00380000
//*      INSUFFICIENT STORAGE (SEE ISPF LOG):                        *  00390000
//*      REASON CODE (3037),                                         *  00400000
//*      REASON CODE (3258).                                         *  00410000
//*      THE REQUIRED REGION SIZE DEPENDS ON THE NUMBER OF VOLUMES   *  00420000
//*      ENTRIES AND CAN BE ESTIMATED ON THE BASIS OF 10K FOR EACH   *  00430000
//*      VOLUME ENTRY (THIS DATA IS APPROXIMATE AND CAN VARY ON      *  00440000
//*      DIFFERENT SYSTEMS. SET REGION=(0M) TO HAVE ALL STORAGE      *  00450000
//*      AVAILABLE).                                                 *  00460000
//*                                                                  *  00470000
//*   PARAMETERS:                                                    *  00480000
//*                                                                  *  00490000
//*      PARAMETR FOLLOWING SAVE - NAME OF SAVED LIST (OUTPUT)       *  00500000
//*      QUERY - NAME WITH WHICH THE QUERY WAS SAVED (INPUT)         *  00510000
//*                                                                  *  00520000
//********************************************************************  00530000
//DASDLST  EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB,                           00540002
// TABL2=&SYSUID..TEST.ISPTABL                                          00541002
//SYSTSIN  DD *                                                         00550000
PROFILE PREFIX(SYS019) MSGID                                            00560001
ISPSTART CMD(ACBQBAI4 +                                                 00570000
SAVE DASDLST QUERY(QUERY1)) +                                           00580000
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)    00590000
/*                                                                      00600000
//********************************************************************  00610000

./ ADD NAME=ACBJBAJA
//ACBJBAJA JOB (),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJA) COMP(5695DF123): BATCH - DUMMY SG DEFINE/ALTER     */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 1998,2002  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $T1=NQ5,HDZ11E0,061997,SNJTCS:   NaviQuest Batch Support     àT1A*/
//* $T2=K151321,HDZ11E0,091998,SNJTCS: Possible values          2àT2A*/
//*                                    documentation                 */
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  àWA41441*/
//* 05/23/01 TCS - HDZ11F0: Prolog Updation                  àWA49380*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER DUMMY STORAGE GROUPS IN BATCH         *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//*   PARAMETER FOLLOWING ACBQBAJA - DEFINE OR ALTER                 *
//************************** ADD BEG *********************************
//*                                                        3àWA49380 *
//* Required Fields:                                                 *
//*                                                                  *
//*  SCDS     :  Name of SCDS, length 1-44 characters                *
//*                                                                  *
//*  STORGRP  :  Name of the storage group                           *
//*                                                                  *
//* Optional Fields:                                       2àWA49380 *
//*                                                                  *
//*  DESCR    :  Remarks about the Storage group being defined /     *
//*              altered. Maximum length up to 120 characters.       *
//*                                                                  *
//*  UPDHLVLSCDS:  When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                           àWA41441*
//*                                                                  *
//*                Possible values : Y/N/BLANK               àWA41441*
//************************** ADD END *********************************
//********************************************************************
//********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=&SYSUID..TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAJA +
DEFINE       +
SCDS('SYS5.LP2.DFSMS.SCDS') +
STORGRP(SGSSYS0A) +
DESCR(stogrp lp2 sys5 acbjbaja) +
UPDHLVLSCDS() +
)
/*
//

./ ADD NAME=ACBJBAJB
//ACBJBAJB JOB (),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJB) COMP(DF123): BATCH - OBJECT SG DEFINE/ALTER/   àE1C*/
//*                            DISPLAY                           àE1C*/
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2àE1C*/
//* COPYRIGHT IBM CORP. 1998, 2017                               àG1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $T1=NQ5,HDZ11E0,061997,SNJTCS:   NaviQuest Batch Support     àT1A*/
//* $T2=K151321,HDZ11E0,091998,SNJTCS: Possible values          2àT2A*/
//*                                    documentation                 */
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  àWA41441*/
//* 05/23/01 TCS - HDZ11F0: Prolog Updation                  àWA49380*/
//* 04/25/02 TCS - HDZ11G0: Add a new parameter SGSTSALL()   àWA53756*/
//* 08/30/05 CCY - HDZ11K0: Correct value for CYCLEST        àAA13015*/
//* $B1=OAME   ,HDZ1B10,08/06/06,IBSTG: OAM Enhancements         àB1A*/
//* $E1=SGDISPL,HDZ2210,12/04/02,IBSTG: OBJECT & TAPE SG DISPLAY àE1A*/
//* $F1=OA48375,HDZ2220,15/07/17,IBSTG: Update for OSMC system   àF1A*/
//* $G1=OAMDB2ID,HDZ2230,16/02/01,IBSTG: Multiple OAM Address    àG1A*/
//*                                      Spaces support          àG1A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER/DISPLAY OBJECT TYPE STORAGE       àE1C*
//* GROUPS IN BATCH                                              àE1A*
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//*   PARAMETER FOLLOWING ACBQBAJB - DEFINE OR ALTER                 *
//************************** ADD BEG *********************************
//*                                                        3àWA49380 *
//* Required Fields:                                                 *
//*                                                                  *
//*  SCDS     :  Name of SCDS, length 1-44 characters                *
//*                                                                  *
//*  STORGRP  :  Name of the storage group being defined/altered.    *
//*                                                                  *
//*  QUALFR   :  Designates both  the DB2 database  and High         *
//*              level qualifier (HLQ) for the DB2 tables in         *
//*              in the database for that SG.                        *
//*                                                                  *
//*              Possible values ; 1 - 8 characters.                 *
//*                                                                  *
//*  CYCLEST  :  Beginning of a window of  time in which the         *
//*              OAM can begin storage management processing         *
//*              for this SG.                                        *
//*                                                          àAA13015*
//*              Possible values ; 0 - 23 (HR of DAY), NONE          *
//*                                                                  *
//*  CYCLEET  :  End of a window of  time in which  the  OAM         *
//*              can begin storage management processing for         *
//*              this SG.                                            *
//*                                                                  *
//*              Possible values ; 0 - 23 (HR of DAY), Blank         *
//*                                                                  *
//*  SGSTATUS : This field sets the status of this object storage    *
//*             group, on each system in the SMS complex.            *
//*                                                                  *
//*             Possible values ;                                    *
//*                                                                  *
//*             NOTCON -> The system can not process this object     *
//*                       storage  group. NOTCON is default.         *
//*                                                                  *
//*             ENABLE -> The system can access the object  storage  *
//*                       hierarchy for object storage  groups.      *
//*                                                                  *
//*                                                                  *
//*             DISNEW -> The system can use the OSREQ functions     *
//*                       RETRIEVE and DELETE but not STORE.         *
//*                                                                  *
//*             DISALL -> The system can use the OSREQ functions     *
//*                       RETRIEVE, DELETE or STORE.                 *
//*             Up to 32 statuses can be specified separated by      *
//*             commas to match the 32 systems.  If a status is      *
//*             skipped, the system status that falls in between two *
//*             commas will have default value of ENABLE.            *
//*                                                       14AàWA53756*
//*  SGSTSALL :  This field is similar to SGSTATUS in functionality. *
//*              The difference is that this field accepts a single  *
//*              status value and sets the status of the OBJECT      *
//*              storage group on all the systems to this value.     *
//*                                                                  *
//*              Possible Values :                                   *
//*                 ENABLE/DISALL/DISNEW                             *
//*                                                                  *
//*           Note:  SGSTSALL and SGSTATUS are mutually exclusive.   *
//*                  And so, while specifying value for one of these *
//*                  parameters, either the other parameter should   *
//*                  not be specified or if specified, it should not *
//*                  have any value specified.                       *
//*                                                                  *
//*  OAMDELPRO: This parameter, in concert with the DP=keyword 28àB1A*
//*             in the IEFSSNxx Parmlib member, determines the       *
//*             current deletion-protection mode (enabled or         *
//*             disabled) for all objects in this object storage     *
//*             group. When enabled, objects in this object storage  *
//*             group cannot be deleted prior to their expiration    *
//*             date. Deletion-protection does not restrict any      *
//*             changes to an object's expiration date.              *
//*                                                                  *
//*             Possible Values :                                    *
//*                                                                  *
//*             Y  -> Enable.                                        *
//*             N  -> Disable.                                       *
//*             BLANK -> Same as 'N' option.                         *
//*                                                                  *
//*  OAMRETPRO: New objects stored into an object storage group      *
//*             with this parameter enabled are flagged as           *
//*             retention-protected for the entire life of the       *
//*             objects. A retention-protected object cannot be      *
//*             deleted prior to its expiration date, and its        *
//*             expiration date can never move to an earlier date.   *
//*                                                                  *
//*             Possible Values :                                    *
//*                                                                  *
//*             Y  -> Enable.                                        *
//*             N  -> Disable.                                       *
//*             BLANK -> Same as 'N' option.                         *
//*                                                                  *
//* Optional Fields:                                       2àWA49380 *
//*                                                                  *
//*  DESCR    :  Remarks about the Storage group being defined /     *
//*              altered. Maximum length up to 120 characters.       *
//*                                                            7àE1A *
//*  OSMCPS   :  Identifies the system where OSMC Processing is      *
//*              to be done for this object storage group.           *
//*                                                                  *
//*              Possible values :                                   *
//*              must be 1 to 8 alphanumeric or national        2àF1C*
//*              ($, à or £) characters.                             *
//*                                                                  *
//*  LIBNAME  :  Library name that represents  a defined optical     *
//*              drive configuration or Pseudo library name that     *
//*              represents stand-alone optical drives and shelf     *
//*              resident optical volumes.                           *
//*                                                                  *
//*              Possible values ;                                   *
//*                                                                  *
//*              You  can  specify  up  to  8  libraries of 1-8      *
//*              alphanumeric chars each.                            *
//*                                                                  *
//*  VOLFTHRS :  No of  free  sectors required  for an optical       *
//*              volume (VOLUME FULL THRESHOLD) within this SG.      *
//*                                                                  *
//*              Possible values ; 0 - 9999                          *
//*                                                                  *
//*  DRVSTHRS :  Max no of outstanding  object write  requests       *
//*              for an optical drive (DRIVE START THRESHOLD).       *
//*                                                                  *
//*              Possible values ; 0 - 9999                          *
//*                                                                  *
//*  VOLFWERR :  This field VOLUME-FULL-AT-WRITE ERROR indicates     *
//*              whether a " mark  volume  full  on  first write     *
//*              failure" criteria applies to volumes in this SG.    *
//*              or not.                                             *
//*                                                                  *
//*              Possible values ;                                   *
//*                                                                  *
//*              Y ->  OAM marks an optical volume full the first    *
//*                    time an attempt to write an  object on the    *
//*                    optical volume fails, because of insufficent  *
//*                    space.                                        *
//*              N ->  OAM marks an object volume full  only when    *
//*                    the no.of  available  sectors in  the user    *
//*                    data  area  falls  below  the  VOLUME FULL    *
//*                    THRESHOLD.                                    *
//*                                                                  *
//*  OAMDB2ID :  This field (applicable in a multiple OAM      35àG1A*
//*              configuration only; otherwise ignored) specifies    *
//*              the SSID(s) and/or Group Attachment Name(s) of      *
//*              the DB2 subsystem(s) associated with the OAM Object *
//*              instance(s) in a multiple OAM configuration that    *
//*              can use this storage group name.                    *
//*                                                                  *
//*              Possible values: 1 - 4 alphanumeric or national     *
//*              characters;                                         *
//*              - wild card characters (%) can be included in any   *
//*              position in the specification to allow multiple OAM *
//*              instances to use the storage group name and         *
//*              definition;                                         *
//*              - blank.                                            *
//*              Default: %%%% (all OAM instances on a system can    *
//*              use the storage group name and definition).         *
//*                                                                  *
//*              Notes:                                              *
//*              - Blank is treated the same as the default (%%%%).  *
//*              - Values with trailing blanks will not match an     *
//*              SSID/Group Attachment Name longer than the number   *
//*              of characters specified in OAMDBID. For example,    *
//*              a value of DB% will only match DB or DB followed by *
//*              a single character and a value of %% will only      *
//*              match an SSID or Group Attachment Name that is one  *
//*              or two characters long.                             *
//*              - Where multiple OAM instances match the specified  *
//*              ID, all matching instances can use the same storage *
//*              group name and values specified in the storage      *
//*              group definition. Each OAM instance is associated   *
//*              a different DB2 subsystem, however, so each         *
//*              instance will have a different set of DB2 tables    *
//*              and therefore data is not shared between OAM        *
//*              instances.                                          *
//*                                                                  *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                           àWA41441*
//*                                                                  *
//*                Possible values : Y/N/BLANK               àWA41441*
//************************** ADD END *********************************
//********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=&SYSUID..TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAJB +
DEFINE       +
SCDS('SYS5.LP2.DFSMS.SCDS') +
STORGRP(SGSSYS0B) +
DESCR(stogrp lp2 sys5 acbjbaib) +
QUALFR(DB2S) +
OSMCPS() +
CYCLEST(7) +
CYCLEET(19) +
LIBNAME() +
VOLFTHRS() +
DRVSTHRS() +
VOLFWERR() +
OAMDELPRO() +
OAMRETPRO() +
OAMDB2ID() +
SGSTATUS(ENABLE) +
SGSTSALL() +
UPDHLVLSCDS() +
)
/*
//STEP2   EXEC ACBJBAOB,
//        TABL2=&SYSUID..TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAJB +
DISPLAY +
SCDS('SYS5.LP2.DFSMS.SCDS') +
STORGRP(SGSSYS0B) +
) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(809)
//

./ ADD NAME=ACBJBAJC
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJC) COMP(5694DF123): BATCH - Management Class Delete   */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 2001,2006  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $U0=NQDEL  ,HDZ11F0,00/11/28,SNJTCS: INITIAL VERSION     àWA48117*/
//* $Y1=OA13015,HDZ11K0,05/08/30,SNJCCY: add table2              àY1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* Sample JCL to Delete Management Class                            *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*       CHANGE JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to Delete,            *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* STEP TO DELETE A MANAGEMENT CLASS                                *
//*                                                                  *
//*   PARAMETERS FOLLOWING DELETE :-                                 *
//*                                                                  *
//*   SCDS     - SCDS dataset name       (Valid SCDS dataset name)   *
//*   MGMTCLAS - Management Class name   (Wild cards not allowed)    *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                                   *
//*                Possible values : Y/N/BLANK                       *
//*                                                                  *
//********************************************************************
//GENLIST  EXEC  ACBJBAOB,
//         TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAID DELETE +
SCDS(TEMP.SCDS) +
MGMTCLAS() +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAJD
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJD) COMP(5694DF123): BATCH - Data Class Delete         */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 2001,2006  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $U0=NQDEL  ,HDZ11F0,00/11/28,SNJTCS: INITIAL VERSION     àWA48117*/
//* $Y1=OA13015,HDZ11K0,05/08/31,SNJCCY: add table2              àY1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* Sample JCL to Delete a Data Class construct                      *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*       CHANGE JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to Delete             *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* STEP TO DELETE A DATA CLASS                                      *
//*                                                                  *
//*   PARAMETERS FOLLOWING DELETE :-                                 *
//*                                                                  *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*   DATACLAS- Data Class name         (Wild cards not allowed)     *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                                   *
//*                Possible values : Y/N/BLANK                       *
//*                                                                  *
//********************************************************************
//GENLIST  EXEC  ACBJBAOB,
//        TABL2=userid.TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQBAIC DELETE +
SCDS(TEMP.SCDS) +
DATACLAS() +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAJE
//ACBJBAJE JOB (ACCT),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*RETURN CODE(0008); REASON CODE(3306)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJE) COMP(5694DF123): BATCH - Storage Class Delete      */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 2001,2006  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $U0=NQDEL  ,HDZ11F0,00/11/28,SNJTCS: INITIAL VERSION     àWA48117*/
//* $Y1=OA13015,HDZ11K0,05/08/31,SNJCCY: add table2              àY1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* Sample JCL to Delete Storage Class                               *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*       CHANGE JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to Delete.            *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* STEP TO DELETE A STORAGE CLASS                                   *
//*                                                                  *
//*   PARAMETERS FOLLOWING DELETE :-                                 *
//*                                                                  *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*   STORCLAS - Storage Class name      (Wild cards not allowed)    *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                                   *
//*                Possible values : Y/N/BLANK                       *
//*                                                                  *
//********************************************************************
//GENLIST  EXEC  ACBJBAOB,
//        TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAIF DELETE +
SCDS('SYS5.LP2.DFSMS.SCDS') +
STORCLAS(SCZOSYS2) +
) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//
ISPSTART CMD(ACBQBAIF DELETE +
SCDS('SYS5.LP2.DFSMS.SCDS') +
STORCLAS(SCZOSYS2) +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)

./ ADD NAME=ACBJBAJF
//ACBJBAJF JOB (ACCT),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJF) COMP(5694DF123): BATCH - Storage Group Delete      */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 2001,2006  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//* $U0=NQDEL  ,HDZ11F0,00/11/27,SNJTCS: INITIAL VERSION     àWA48117*/
//* $Y1=OA13015,HDZ11K0,05/08/31,SNJCCY: add table2              àY1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* Sample JCL to Delete Storage Group                               *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*       CHANGE JOBCARD if required,                                *
//*              PREFIX  if required,                                *
//*              Selection Criteria Parameters to Delete,            *
//*              userid.                                             *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* STEP TO DELETE A STORAGE GROUP                                   *
//*                                                                  *
//*   PARAMETERS FOLLOWING DELETE :-                                 *
//*                                                                  *
//*   SCDS    - SCDS dataset name       (Valid SCDS dataset name)    *
//*   STORGRP - Storage Group name      (Wild cards not allowed)     *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                                   *
//*                Possible values : Y/N/BLANK                       *
//*                                                                  *
//********************************************************************
//GENLIST  EXEC  ACBJBAOB,
//        TABL2=&SYSUID..TEST.ISPTABL
//SYSTSIN  DD *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAIG DELETE +
SCDS('SYS5.LP2.DFSMS.SCDS') +
STORGRP(SGSSYS01) +
UPDHLVLSCDS()) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//

./ ADD NAME=ACBJBAJ2
//ACBJBAJ2 JOB (ACCT),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJ2) COMP(DF123): BATCH - POOL SG DEFINE, ALTER,    àD1C*/
//*                            DISPLAY                           àD1A*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                     àE1C*/
//* COPYRIGHT IBM CORP. 1996, 2015                               àF1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: INITIAL VERSION        àL0A*/
//*$L1=KN20040,HACS120,96/07/13,SNJTCS: TYPO CORRECTED           àL1A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      àWA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    àT2A*/
//* $T3=K151321,HDZ11E0,091998,SNJTCS: Possible values          2àT3A*/
//*                                    documentation                 */
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  àWA41441*/
//* $V1=SGName   ,HDZ11G0,09/19/00,TCS: Overflow and            2àV1A*/
//*                                     Extend SG Name Support       */
//* 05/23/01 TCS - HDZ11F0: Prolog Updation                  àWA49380*/
//* $W1=COPY POOL,HDZ11H0,01/02/02,TCS: Copy Pool Backup        2àW1A*/
//*                                    SG Name Support               */
//* 04/25/02 TCS - HDZ11G0: Add a new parameter SGSTSALL()   àWA53756*/
//* 08/28/02 TCS - HDZ11G0: Support for defining Multiple    àWA55817*/
//*                         Pool Storage Groups              àWA55817*/
//* $A0=EAV    ,HDZ1A10,06/09/28,IBSTG : EAV Support             àA0A*/
//* $A1=K1A0193,HDZ1A10,06/11/24,IBSTG : EAV fix                 àA1A*/
//* $C1=SMSR12 ,HDZ1C10,09/05/07,IBSTG : SMSR12 Enhancements     àC1A*/
//* $D1=SGDISP ,HDZ1D10,10/03/26,IBSTG : SG DISPLAY Support      àD1A*/
//* $D2=SMASG  ,HDZ1D10,10/08/09,IBSTG : SMA SUPPORT             àD2A*/
//* $E1=STIERS ,HDZ2210,11/04/15,IBSTG : HSM STORAGE TIERS       àE1A*/
//* $D3=OA38679,HDZ1D10,12/03/13,IBSTG : Back out SMA Support    àD3A*/
//* $E2=OA45067,HDZ2210,14/04/29,IBSTG : Add possible values     àE2A*/
//* $F1=ALRTMSG,HDZ2220,13/10/15,IBSTG : Space alert thresholds  àF1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER/DISPLAY POOL TYPE STORAGE GROUPS  àD1C*
//* IN BATCH                                                     àD1A*
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//************************** ADD BEG *********************************
//*                                                        3àWA49380 *
//* Required Fields:                                                 *
//*                                                                  *
//*  SCDS     :  Name of SCDS, length 1-44 characters                *
//*                                                                  *
//*  STORGRP  :  Name of the storage group                           *
//*                                                                  *
//*  LOWTHRS  : Low   value  of allocation/migration  threshold  to  *
//*             optimize the use of DASD space in a pool SG.         *
//*             Possible values 0-99.                                *
//*                                                                  *
//* TRKLOWTHRS: Use the low value of allocation/migration       5àA1C*
//*             threshold track-managed to specify the threshold     *
//*             percentage of space allocation in the track-managed  *
//*             space that triggers or stops migration of data sets  *
//*             from volumes in this storage group during interval   *
//*             migration.                                           *
//*             Possible values 0-99.                                *
//*                                                                  *
//*  GUARBKFR : Specifies the maximum number of days that can elapse *
//*             between backups. Possible values 1 - 9999,NOLIMIT.   *
//*                                                             3àE1A*
//*  PROCPRIOR: Specifies the processing priority of the storage     *
//*             group. It is used during DFSMShsm space management.  *
//*             Possible values 1-100, default value is 50.      àE2A*
//*                                                                  *
//* Optional Fields:                                       2àWA49380 *
//*                                                                  *
//*  DESCR    :  Remarks about  the  Storage  group  being defined / *
//*              altered.    Maximum length up to 120 characters.    *
//*                                                                  *
//*  AUTOMIG  :  Specifies whether the datasets  on volumes in this  *
//*              storage group can be moved to  DASD or TAPE by the  *
//*              primary  space  management and interval  migration  *
//*              functions of DFSMShsm. Possible values are,         *
//*                                                                  *
//*              Y  -> Datasets are eligible for primary space       *
//*                    management migration.                         *
//*                                                                  *
//*              N  -> Datasets are not eligible for automatic       *
//*                    migration.                                    *
//*                                                                  *
//*              I  -> Datasets are eligible for primary space       *
//*                    management and interval migration.            *
//*                                                                  *
//*              P  -> Datasets are eligible for primary space       *
//*                    management but not interval migration.        *
//*                                                                  *
//*  MIGSYSNM : Name of the system or system  group where automatic  *
//*             migration and  space  management of the volumes  in  *
//*             this  storage  group  would be  performed. Possible  *
//*             values: System or system group names 1 - 8           *
//*             alphanumeric characters in length.                   *
//*                                                                  *
//*  AUTOBKUP : Specifies whether all  the  volumes in  the storage  *
//*             are eligible for  automatic backup. Possible values  *
//*             are Y -> Yes and N -> No                             *
//*                                                                  *
//*  BKUPSYS  : Name of the system or  system group where automatic  *
//*             backup function will be processed.                   *
//*             Possible values: System or system group names 1 - 8  *
//*             alphanumeric characters in length.                   *
//*                                                                  *
//*  AUTODUMP : Specifies whether the volumes in this storage group  *
//*             are to be eligible for automatic  dumping. Possible  *
//*             values are Y -> Yes and N -> No.                     *
//*                                                                  *
//*  DMPSYSNM : Name of the system or  system  group  where volumes  *
//*             in this storage  group  will  automatically dump to  *
//*             backup devices.                                      *
//*             Possible values: System or system group names   2àE2A*
//*             1 - 8 alphanumeric characters in length.             *
//*                                                         13àV1A   *
//*  OVRFLOW  : Use this field to indicate whether the Storage Group *
//*             is an overflow Storage Group. Overflow storage groups*
//*             are reserved storage pools to handle periods of high *
//*             demand for primary space allocations.                *
//*             Possible values are Y -> Yes and N -> No.       2àE2A*
//*             Default value: N.                                    *
//*                                                                  *
//*  EXTSGNM  : Use this field to specify the  name of another pool  *
//*             storage group, the group where sets from the primary *
//*             storage group can be extended to. When an extend     *
//*             storage group name is specified a data set may be    *
//*             extended to that storage group when it can not be    *
//*             exteneded to its currently allocated storage group.  *
//*             Possible values: 1 - 8 alphanumeric characters.  àE2A*
//*                                                          4àW1A   *
//*  CPBSGN   : Use this field to specify the name of the storage    *
//*             group, which contains the eligible volumes           *
//*             for fast replication backup versions.                *
//*             Possible values: 1 - 8 alphanumeric characters.  àE2A*
//*                                                                  *
//*  DUMPCLAS : Use this field to specify 1 to 5 dump classes. ISMF  *
//*             neither  processes  nor verifies the values of DUMP  *
//*             CLASS. 1 - 8 alphanumeric characters.                *
//*             Classes will be separated by ','.                    *
//*                                                                  *
//*  HIGHTHRS : High  value  of allocation/migration  threshold  to  *
//*             optimize the use of DASD space in a pool SG.         *
//*             Possible values 1-100.                           àC1C*
//*                                                                  *
//*  TRKHITHRS: Use the high value of allocation/migration      5àA1C*
//*             threshold track-managed to specify the threshold     *
//*             percentage of space allocation in the track-managed  *
//*             space that triggers or stops migration of data sets  *
//*             from volumes in this storage group during interval   *
//*             migration.                                           *
//*             Possible values 1-100.                           àC1C*
//*                                                            10àF1A*
//* TOTSPALERT: Indicates an alert message will be issued when       *
//*             a minimum percentage of the total space usage on     *
//*             the selected storage group has been reached.         *
//*             Possible values 0-99.                                *
//*                                                                  *
//* TRKSPALERT: Indicates an alert message will be issued when       *
//*             a minimum percentage of the track-managed space      *
//*             usage on the selected storage group has been reached.*
//*             Possible values 0-99.                                *
//*                                                                  *
//*  BREAKPT  : Use this field to specify the disk space        5àA1C*
//*             request, expressed  in number of cylinders,          *
//*             where the system should prefer the cylinder-managed  *
//*             space on an EAV.                                     *
//*             Possible values 0-65520 or blank.                    *
//*                                                                  *
//*  SGSTATUS : specify this field to designate the relationship or  *
//*             status between storage groups and the systems in a   *
//*             a complex. Possible values are,                      *
//*                                                                  *
//*              ENABLE  ->  System or System  Group  can allocate   *
//*                          and access datasets in SG. Default.     *
//*              DISALL  ->  System or System Group can't allocate   *
//*                          or  access datasets in SG.              *
//*              DISNEW  ->  System or System Group can't allocate   *
//*                          new datasets in the SG.                 *
//*              NOTCON  ->  System or System Group is  physically   *
//*                          disconnected  form the SG and can not   *
//*                          allocate datasets in it.                *
//*              QUIALL  ->  If JES3, system can not schedule jobs   *
//*                          that allocate or access   datasets in   *
//*                          the SG.  In JES2 system uses  volumes   *
//*                          in the SG for new allocations only if   *
//*                          other volumes are not available.        *
//*              QUINEW  ->  If JES3, system can not schedule jobs   *
//*                          that allocate new datasets in the SG.   *
//*                          In case of JES2, system uses  volumes   *
//*                          in the SG for new allocations only if   *
//*                          other volumes are not available.        *
//*                                                                  *
//*              Up to 32 statuses can be specified separated by     *
//*              commas to match the 32 systems.  If a status is     *
//*              skipped, the system status that falls in between two*
//*              commas will have default value of ENABLE.           *
//*                                                       15AàWA53756*
//*  SGSTSALL :  This field is similar to SGSTATUS in functionality. *
//*              The difference is that this field accepts a single  *
//*              status value and sets the status of the POOL        *
//*              storage group on all the systems and system groups  *
//*              to this value.                                      *
//*                                                                  *
//*              Possible Values :                                   *
//*                 ENABLE/NOTCON/DISALL/DISNEW/QUIALL/QUINEW        *
//*                                                                  *
//*           Note:  SGSTSALL and SGSTATUS are mutually exclusive.   *
//*                  And so, while specifying value for one of these *
//*                  parameters, either the other parameter should   *
//*                  not be specified or if specified, it should not *
//*                  have any value specified.                       *
//*                                                                  *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                           àWA41441*
//*                                                                  *
//*                Possible values : Y/N/BLANK               àWA41441*
//************************** ADD END *********************************
//********************************************************************
//*
//STEP1   EXEC ACBJBAOB,
//        TABL2=&SYSUID..TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAJ2 +
DEFINE/ALTER +
SCDS('SYS5.LP2.DFSMS.SCDS') +
STORGRP(SGSSYS02) +
DESCR(stogrp lp2 sys5 acbjbaj2) +
AUTOMIG() +
MIGSYSNM() +
AUTOBKUP() +
BKUPSYS() +
AUTODUMP() +
DMPSYSNM() +
OVRFLOW() +
EXTSGNM() +
CPBSGN() +
DUMPCLAS() +
HIGHTHRS() +
LOWTHRS(50) +
GUARBKFR(NOLIMIT) +
SGSTATUS() +
SGSTSALL() +
BREAKPT() +
TRKHITHRS() +
TRKLOWTHRS() +
TOTSPALERT() +
TRKSPALERT() +
PROCPRIOR() +
UPDHLVLSCDS() +
)
/*
//TEMPFILE  DD  DSN=&&TEMPFILE,DISP=(MOD,PASS),
//  SPACE=(TRK,(1,1)),LRECL=300,RECFM=F,BLKSIZE=300
//*
//STEP2   EXEC ACBJBAOB,
//        TABL2=&SYSUID..TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD DSN=&&TEMPFILE,DISP=(OLD,DELETE,DELETE)
/*
//STEP3   EXEC ACBJBAOB,
//        TABL2=&SYSUID..TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAJ2 DISPLAY +
SCDS('SYS5.LP2.DFSMS.SCDS') +
STORGRP(SGSSYS02) +
)
//

./ ADD NAME=ACBJBAJ7
//ACBJBAJ7 JOB (),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJ7) COMP(5695DF123): BATCH - OBJ BKUP SG DEFINE/ALTER  */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2àG1C*/
//* COPYRIGHT IBM CORP. 1998, 2017                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $T1=NQ5,HDZ11E0,061997,SNJTCS:   NaviQuest Batch Support     àT1A*/
//* $T2=K151321,HDZ11E0,091998,SNJTCS: Possible values          2àT2A*/
//*                                    documentation                 */
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  àWA41441*/
//* 05/23/01 TCS - HDZ11F0: Prolog Updation                  àWA49380*/
//* $W1=OAM,HDZ11H0,081301,SNJTCS: Add fields cycle start/end   2àW1A*/
//*                                & OSMC processing system          */
//* 04/03/02 TCS - HDZ11G0: Add a new parameter SGSTSALL()   àWA53756*/
//* $F1=OA48375,HDZ2220,15/07/17,IBSTG: Update for OSMC system   àF1A*/
//* $G1=OAMDB2ID,HDZ2230,16/02/01,IBSTG: Multiple OAM Address    àG1A*/
//*                                      Spaces support          àG1A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER OBJ BACKUP TYPE STORAGE GROUP IN BATCH*
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//*   PARAMETER FOLLOWING ACBQBAJ7 - DEFINE OR ALTER                 *
//************************** ADD BEG *********************************
//*                                                        3àWA49380 *
//* Required Fields:                                                 *
//*                                                                  *
//*  SCDS     :  Name of SCDS, length 1-44 characters                *
//*                                                                  *
//*  STORGRP  :  Name of the storage group being defined/altered.    *
//*                                                          12àW1A  *
//*  CYCLEST  :  Beginning of a window of  time in which the         *
//*              OAM can begin storage management processing         *
//*              for this SG.                                        *
//*                                                                  *
//*              Possible values ; 0 - 23 (HR of DAY), Blank         *
//*                                                                  *
//*  CYCLEET  :  End of a window of  time in which  the  OAM         *
//*              can begin storage management processing for         *
//*              this SG.                                            *
//*                                                                  *
//*              Possible values ; 0 - 23 (HR of DAY), Blank         *
//*                                                                  *
//*  SGSTATUS : This field sets the status of this object or object  *
//*             backup  storage  group, on each  system in  the SMS  *
//*             complex.                                             *
//*                                                                  *
//*             Possible values ;                                    *
//*                                                                  *
//*             NOTCON -> The system can not process this object     *
//*                       backup  storage  group. NOTCON is default. *
//*                                                                  *
//*             ENABLE -> The system can access the Volume set.      *
//*                                                                  *
//*             DISNEW -> The system can use the OSREQ functions     *
//*                       RETRIEVE and DELETE but not STORE.         *
//*                                                                  *
//*             DISALL -> The system can use the OSREQ functions     *
//*                       RETRIEVE, DELETE or STORE.                 *
//*             Up to 32 statuses can be specified separated by      *
//*             commas to match the 32 systems.  If a status is      *
//*             skipped, the system status that falls in between two *
//*             commas will have default value of ENABLE.            *
//*                                                       15AàWA53756*
//*  SGSTSALL :  This field is similar to SGSTATUS in functionality. *
//*              The difference is that this field accepts a single  *
//*              status value and sets the status of the OBJECT      *
//*              BACKUP storage group on all the systems to this     *
//*              value.                                              *
//*                                                                  *
//*              Possible Values :                                   *
//*                 ENABLE/DISALL/DISNEW                             *
//*                                                                  *
//*           Note:  SGSTSALL and SGSTATUS are mutually exclusive.   *
//*                  And so, while specifying value for one of these *
//*                  parameters, either the other parameter should   *
//*                  not be specified or if specified, it should not *
//*                  have any value specified.                       *
//*                                                                  *
//* Optional Fields:                                       2àWA49380 *
//*                                                                  *
//*  DESCR    :  Remarks about the Storage group being defined/      *
//*              altered.   Maximum length up to 120 characters.     *
//*                                                           8àW1A  *
//*  OSMCPS   :  Identifies the system where OSMC Processing is      *
//*              to be done for this object backup storage           *
//*              group.                                              *
//*                                                                  *
//*              Possible values ;                                   *
//*              must be 1 to 8 alphanumeric or national        2àF1C*
//*              ($, à or £) characters.                             *
//*                                                                  *
//*  LIBNAME  :  Library name that represents  a defined optical     *
//*              drive configuration or Pseudo library name that     *
//*              represents stand-alone optical drives and shelf     *
//*              resident optical volumes.                           *
//*                                                                  *
//*              Possible values ;                                   *
//*                                                                  *
//*              You  can  specify  up  to  8  libraries  of 1-8     *
//*              alphanumeric chars each.                            *
//*                                                                  *
//*  VOLFTHRS :  No. of free  sectors required  for an optical       *
//*              volume (VOLUME FULL THRESHOLD) within this SG.      *
//*                                                                  *
//*              Possible values ; 0 - 9999                          *
//*                                                                  *
//*  DRVSTHRS :  Max no of outstanding  object write  requests       *
//*              for an optical drive (DRIVE START THRESHOLD).       *
//*                                                                  *
//*              Possible values ; 0 - 9999                          *
//*                                                                  *
//*  VOLFWERR :  This field VOLUME-FULL-AT-WRITE ERROR indicates     *
//*              whether a " mark  volume  full  on  first write     *
//*              failure" criteria applies to optical volumes        *
//*              in this SG.                                         *
//*                                                                  *
//*              Possible values ;                                   *
//*                                                                  *
//*              Y ->  OAM marks an optical volume full the first    *
//*                    time an attempt to write an  object on the    *
//*                    optical volume fails, because insufficient    *
//*                    space.                                        *
//*              N ->  OAM marks an object volume full  only when    *
//*                    the no. of  available sectors in  the user    *
//*                    data  area  falls  below  the  VOLUME FULL    *
//*                    THRESHOLD.                                    *
//*                                                                  *
//*  OAMDB2ID :  This field (applicable in a multiple OAM      35àG1A*
//*              configuration only; otherwise ignored) specifies    *
//*              the SSID(s) and/or Group Attachment Name(s) of      *
//*              the DB2 subsystem(s) associated with the OAM Object *
//*              instance(s) in a multiple OAM configuration that    *
//*              can use this storage group name.                    *
//*                                                                  *
//*              Possible values: 1 - 4 alphanumeric or national     *
//*              characters;                                         *
//*              - wild card characters (%) can be included in any   *
//*              position in the specification to allow multiple OAM *
//*              instances to use the storage group name and         *
//*              definition;                                         *
//*              - blank.                                            *
//*              Default: %%%% (all OAM instances on a system can    *
//*              use the storage group name and definition).         *
//*                                                                  *
//*              Notes:                                              *
//*              - Blank is treated the same as the default (%%%%).  *
//*              - Values with trailing blanks will not match an     *
//*              SSID/Group Attachment Name longer than the number   *
//*              of characters specified in OAMDBID. For example,    *
//*              a value of DB% will only match DB or DB followed by *
//*              a single character and a value of %% will only      *
//*              match an SSID or Group Attachment Name that is one  *
//*              or two characters long.                             *
//*              - Where multiple OAM instances match the specified  *
//*              ID, all matching instances can use the same storage *
//*              group name and values specified in the storage      *
//*              group definition. Each OAM instance is associated   *
//*              a different DB2 subsystem, however, so each         *
//*              instance will have a different set of DB2 tables    *
//*              and therefore data is not shared between OAM        *
//*              instances.                                          *
//*                                                                  *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                           àWA41441*
//*                                                                  *
//*                Possible values : Y/N/BLANK               àWA41441*
//************************** ADD END *********************************
//********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=&SYSUID..TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAJ7 +
DEFINE/ALTER +
SCDS('SYS5.LP2.DFSMS.SCDS') +
STORGRP(SGSSYS07) +
DESCR(stogrp lp2 sys5 acbjbai7) +
CYCLEST(7) +
CYCLEET(19) +
OSMCPS() +
LIBNAME() +
VOLFTHRS() +
DRVSTHRS() +
VOLFWERR() +
OAMDB2ID() +
SGSTATUS() +
SGSTSALL() +
UPDHLVLSCDS() +
)
/*
//

./ ADD NAME=ACBJBAJ8
//ACBJBAJ8 JOB (),ISMF,MSGCLASS=T,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAJ8) COMP(5695DF123): BATCH - VIO SG DEFINE/ALTER       */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                         */
//* (C) COPYRIGHT 1998,2002  IBM CORP.                               */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $T1=NQ5,HDZ11E0,061997,SNJTCS:   NaviQuest Batch Support     àT1A*/
//* $T2=K151321,HDZ11E0,091998,SNJTCS: Possible values          2àT2A*/
//*                                    documentation                 */
//* $U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for  2àU1A*/
//*                                       DFSMS/MVS ISMF V2R10       */
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  àWA41441*/
//* 05/23/01 TCS - HDZ11F0: Prolog Updation                  àWA49380*/
//* 04/25/02 TCS - HDZ11G0: Add a new parameter SGSTSALL()   àWA53756*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER VIO TYPE STORAGE GROUPS IN BATCH      *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//*   PARAMETER FOLLOWING ACBQBAJ8 - DEFINE OR ALTER                 *
//************************** ADD BEG *********************************
//*                                                        3àWA49380 *
//* Required Fields:                                                 *
//*                                                                  *
//*  SCDS     :  Name of SCDS, length 1-44 characters                *
//*                                                                  *
//*  STORGRP  :  Name of the storage group  being defined.           *
//*                                                                  *
//*  VIOMAX   :  Specify in KB the largest VIO dataset that can be   *
//*              created for the SG.                                 *
//*                                                                  *
//*              Possible Values : 8  - 2000000                      *
//*                                                                  *
//*  VIOUNIT  :  Specify this field to select the storage device     *
//*              type to be simulated by the VIO SG.                 *
//*                                                                  *
//*              Possible Values :Any valid device type              *
//*                               (3380, 3390 etc.)                  *
//*                                                                  *
//* Optional Fields:                                       2àWA49380 *
//*                                                                  *
//*  DESCR    :  Remarks about the Storage group being defined /     *
//*              altered.  Maximum length of up to 120 characters.   *
//*                                                                  *
//*  SGSTATUS :  Use this field to set the status of the VIO         *
//*              storage group on the system or system groups        *
//*              in your complex.                                    *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              ENABLE  ->  System or System  Group  can allocate   *
//*                          and access datasets in SG. Default.     *
//*              DISALL  ->  System or System Group can't allocate   *
//*                          or  access datasets in SG.              *
//*              DISNEW  ->  System or System Group can't allocate   *
//*                          new datasets in the SG.                 *
//*              NOTCON  ->  System or System Group is  physically   *
//*                          disconnected  form the SG and can not   *
//*                          allocate datasets in it.                *
//*              QUIALL  ->  If JES3, system can not schedule jobs   *
//*                          that allocate or access   datasets in   *
//*                          the SG.  In JES2 system uses  volumes   *
//*                          in the SG for new allocations only if   *
//*                          other volumes are not available.        *
//*              QUINEW  ->  If JES3, system can not schedule jobs   *
//*                          that allocate new datasets in the SG.   *
//*                          In case of JES2, system uses  volumes   *
//*                          in the SG for new allocations only if   *
//*                          other volumes are not available.        *
//*                                                                  *
//*              Up to 32 statuses can be specified separated by     *
//*              commas to match the 32 systems.  If a status is     *
//*              skipped, the system status that falls in between two*
//*              commas will have default value of ENABLE.           *
//*                                                       15AàWA53756*
//*  SGSTSALL :  This field is similar to SGSTATUS in functionality. *
//*              The difference is that this field accepts a single  *
//*              status value and sets the status of the VIO Storage *
//*              group on all the systems and system groups to this  *
//*              value.                                              *
//*                                                                  *
//*              Possible Values :                                   *
//*                 ENABLE/NOTCON/DISALL/DISNEW/QUIALL/QUINEW        *
//*                                                                  *
//*           Note:  SGSTSALL and SGSTATUS are mutually exclusive.   *
//*                  And so, while specifying value for one of these *
//*                  parameters, either the other parameter should   *
//*                  not be specified or if specified, it should not *
//*                  have any value specified.                       *
//*                                                                  *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with a *
//*                higher level of SMS, using a lower level of SMS   *
//*                will make this application fail unless you        *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                           àWA41441*
//*                                                                  *
//*                Possible values : Y/N/BLANK               àWA41441*
//************************** ADD END *********************************
//********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=&SYSUID..TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(sys019)
ISPSTART CMD(ACBQBAJ8 +
DEFINE/ALTER +
SCDS('SYS5.LP2.DFSMS.SCDS') +
STORGRP(SGSSYS08) +
DESCR(stogrp lp2 sys5 acbjbajb) +
VIOMAX(4000) +
VIOUNIT(3390) +
SGSTATUS() +
SGSTSALL() +
UPDHLVLSCDS() +
)
/*
//

./ ADD NAME=ACBJBAOD
//ACBJBAOD JOB (ACCT),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAOD) COMP(DF123):BATCH-GENERATE REPORT FROM DSN TBL àA1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2àG1C*/
//* COPYRIGHT IBM CORP. 1996, 2017                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        àK0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       àK1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        àWA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      àL0A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      àWA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    àT2A*/
//*11/18/98  TCS - HDZ11E0: Fix for ISPFILE problem          àWA36007*/
//*$U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for   2àU1A*/
//*                                       DFSMS/MVS ISMF V2R10       */
//*$U2=K160456  ,HDZ11F0,99/09/16,SNJTCS: Documentation Erros   2àU2A*/
//*                                       in $U1.                    */
//*$A1=MULTLCK,HDZ1A10,07/04/27,IBSAS: Support of MULTILOCK      àA1A*/
//*$B1=EAV2   ,HDZ1B10,08/06/10,IBSTG: EATTR keyword support     àB1A*/
//*$G1=FP0454 ,HDZ2230,15/10/26,IBSTG: DS Encryption             àG1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE DATA SET REPORT FROM A PREVIOUSLY SAVED   *
//* ISMF DATA SET LIST                                               *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* DELETE STEP TO DELETE THE REPORT DATA SET IF IT EXISTS ALREADY   *
//*                                                                  *
//********************************************************************
//DELREPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=&SYSUID..DATASET.REPORT.ACBJBAOD,
// DISP=(MOD,DELETE,DELETE),
//    BLKSIZE=25600,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=256,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* STEP TO ALLOCATE ISPFILE, WHERE THE GENERATED REPORT IS SAVED    *
//* NOTE: THE DATA SET BEING ALLOCATED SHOULD NOT BE A TEMPORARY     *
//*       DATA SET.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=&SYSUID..DATASET.REPORT.ACBJBAOD,DISP=(NEW,CATLG),
//    BLKSIZE=25600,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=256,UNIT=SYSDA
/*
//********************************************************************
//*                                                                  *
//* DATA SET REPORT GENERATION STEP                                  *
//*                                                                  *
//*    PARAMETER FOLLOWING ACBQBAR1 - SAVED ISMF LIST (INPUT)        *
//*    ISPFILE - DATA SET REPORT (OUTPUT, FROM ALCISPFL STEP)        *
//*    SYSIN   - KEY WORDS SPECIFYING DATA IN THE REPORT             *
//*                                                                  *
//*    The Following parameters can be specified in SYSIN      42àU1A*
//*                                                                  *
//*    %NOTUSED                ->   % Space Not Used.                *
//*    ALLOCSP    ! ALLOCSPC   ->   Allocated Space.                 *
//*    ALLOCUSED               ->   Used Space.                      *
//*    BACKUP     ! LASTBKUP   ->   Last Backup Date.                *
//*    BLKSIZE    ! CISIZE     ->   Block/CI Size.                   *
//*    BLKUNUSED               ->   Blocks Unused.                   *
//*    CCSIDDES                ->   CCSID Description.               *
//*    CFMONST                 ->   CF Monitor Status.               *
//*    CFSTATUS                ->   CF Status Indicator.             *
//*    CHANGE     ! CHGIND     ->   Change Indicator.                *
//*    COMPRESS                ->   Compressed Format.               *
//*    CREATE     ! CREATEDT   ->   Creation Date.                   *
//*    CSETNAME                ->   CF Cache set name.          1àU2C*
//*    CSTRNAME                ->   CF Cache Structure Name.         *
//*    DC         ! DATACLAS   ->   Data Class Name.                 *
//*    DDMATTR                 ->   DDM attribute.                   *
//*    DEVICE     ! DEVTYPE    ->   Device Type.                     *
//*    DSNAME     ! DSN        ->   Dataset Name.                    *
//*    DSNAMETY                ->   Dataset Name Type.               *
//*    DSORG                   ->   Data Set Organization.           *
//*    ENCRIND                 ->   Encryption Indicator.        àG1A*
//*    ENTRY      ! ENTRYTYPE  ->   Dataset Entry Type.              *
//*    ENVIRONMANT! ENVIR      ->   Dataset Environment.             *
//*    EXPIRE     ! EXPIREDT   ->   Expiration Date.                 *
//*    LASTREF    ! LASTREFDT  ->   Last referenced Date.            *
//*    LRECL                   ->   Record Length.                   *
//*    MC         ! MGMTCLAS   ->   Management Class Name.           *
//*    MULTVOL                 ->   Multi Volume Status.             *
//*    NUMEXT     ! EXTNUM     ->   Number of Extents.               *
//*    NUMSTR                  ->   Number of Stripes.               *
//*    OPTIMAL                 ->   Optimal Block/CI Size.           *
//*    OWNER                   ->   Owner.                           *
//*    REBLK      ! REBLOCK    ->   Reblock Indicator.               *
//*    RECFM      ! RECFMT     ->   Record Format.                   *
//*    SC         ! STORCLAS   ->   Storage Class Name.              *
//*    SECALLOC   ! ALLOCSEC   ->   Secondary Allocation.            *
//*    TOTALS                  ->                                    *
//*    UNIT       ! ALLOCUNI   ->   Allocation Unit.                 *
//*    USERRED%                ->   % User Data Reduction.           *
//*    VOLSER                  ->   Volume Serial.                   *
//*    LSETNAME                ->   CF Lock set name.            àA1A*
//*    LSTRNAME                ->   CF Lock Structure Name .     àA1A*
//*    EATTR                   ->   EATTR.                       àB1A*
//********************************************************************
//GENREP  EXEC ACBJBAOB,
//        PLIB1=SYS1.DGTPLIB,
//        TABL2=&SYSUID..TEST.ISPTABL
//ISPFILE DD  DSN=&SYSUID..DATASET.REPORT.ACBJBAOD,DISP=OLD
//SYSTSIN  DD *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAR1 DSNLIST) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN DD  *
TITLE=LIST OF DATASETS FOR HIGHLEVEL QUALIFIER IBMUSER
DSN
VOLSER
LASTREF
EXTNUM
TOTALS
MC
SC
/*
//********************************************************************
//*                                                                  *
//* COPY THE DATA SET REPORT                                         *
//*                                                                  *
//*    SYSUT1 - INPUT (FROM PREVIOUS STEP)                           *
//*    SYSUT2 - OUTPUT                                               *
//*                                                                  *
//********************************************************************
//STEP2  EXEC PGM=IEBGENER
//SYSUT1   DD  DSN=&SYSUID..DATASET.REPORT.ACBJBAOD,DISP=SHR
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//*

./ ADD NAME=ACBJBAOF
//IBMUSERA JOB (ACCT),'IBMUSER',MSGCLASS=H,
//      NOTIFY=IBMUSER,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAOF) COMP(DF123):BATCH-GENERATES REPORT FROM VOLUME àA0C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                    2àA0C*/
//* COPYRIGHT 1996,2011  IBM CORP.                               àD1C*/
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//* CHANGE ACTIVITY:                                                 */
//*                                                                  */
//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        àK0A*/
//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       àK1C*/
//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        àWA18945*/
//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      àL0A*/
//*10/14/96  CCY - HDZ11C0: Ship as SPE                      àWA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    àT2A*/
//*11/18/98  TCS - HDZ11E0: Fix for ISPFILE problem          àWA36007*/
//*$U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for   2àU1A*/
//*                                       DFSMS/MVS ISMF V2R10       */
//*$A0=EAV    ,HDZ1A10,06/09/27,IBSTG : EAV Support              àA0A*/
//*$D1=SORT   ,HDZ1D10,10/03/26,IBSTG : SORT Volume List Support àD1A*/
//*$D2=OA38673,HDZ1D10,11/11/28,IBSTG : Support of SMA SPE       àD2A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO SORT A PREVIOUSLY SAVED DASD VOLUME LIST AND   àD1C*
//* GENERATE A DASD VOLUME REPORT FROM IT.                       àD1C*
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*       CHANGE JOBCARD                                             *
//*       CHANGE PREFIX                                              *
//*       CHANGE PARAMETERS                                          *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* DELETE STEP TO DELETE THE REPORT IF IT EXISTS ALREADY            *
//*                                                                  *
//********************************************************************
//DELREP  EXEC  PGM=IDCAMS
//SYSPRINT  DD  SYSOUT=*
//SYSIN     DD  *
 DELETE IBMUSER.DASDVOL.REPORT
/*
//********************************************************************
//*                                                                  *
//* STEP TO ALLOCATE ISPFILE, WHERE THE GENERATED REPORT IS SAVED    *
//* NOTE: THE DATA SET BEING ALLOCATED SHOULD NOT BE A TEMPORARY     *
//*       DATA SET.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=IBMUSER.DASDVOL.REPORT,DISP=(NEW,CATLG),
//    BLKSIZE=0,SPACE=(TRK,(3,1)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//SYSPRINT DD SYSOUT=*
//SYSIN  DD *
/*
//********************************************************************
//*                                                                  *
//* STEP TO SORT A PREVIOUSLY SAVED DASD VOLUME LIST AND         àD1C*
//* GENERATE A DASD VOLUME REPORT FROM IT.                       àD1A*
//*                                                                  *
//* PARAMETERS FOLLOWING ACBQVAR1 - ISMF SAVED LIST (INPUT);     àD1C*
//*                                 SORT(column name) (INPUT) - 3àD1A*
//*                                 to sort list by the data column  *
//*                                 in ascending order.              *
//*    ISPFILE - DASD VOLUME REPORT (OUTPUT, FROM ALCISPFL STEP)     *
//*    SYSIN   - KEY WORDS TO SPECIFY THE DATA IN THE REPORT         *
//*                                                                  *
//*    The following parameters can be specified in SYSIN.    25àU1A *
//*                                                                  *
//*    VOLSER                 ->    Volume Serial                    *
//*    FREESPC   ! FREESP     ->    Free Space                       *
//*    FRSPCTRK  ! FRSPTRK    ->    Free Space in TRK-Managed    àA0A*
//*    %FREE                  ->    % Free                           *
//*    ALLOCSPC  ! ALLOCSP    ->    Allocated Space                  *
//*    ALSPCTRK  ! ALSPTRK    ->    Alloc Space in TRK-Managed   àA0A*
//*    FRAG      ! FRAGINDX   ->    Fragmentation Index              *
//*    LRGEXT    ! EXTLRG     ->    Largest Extent                   *
//*    LGEXTRK   ! EXTLGTRK   ->    Largest Ext in TRK-Managed   àA0A*
//*    FREEXT    ! EXTFREE    ->    Free Extents                     *
//*    INDXSTAT  ! STATINDX   ->    Index Status                     *
//*    FREEDSCB  ! DSCBFREE   ->    Free DSCBS                       *
//*    FREEVIRS  ! VIRSFREE   ->    Free Vtoc Index Records          *
//*    DEVICE    ! DEVICETYPE ->    Device Type                      *
//*    DEVNUM    ! ADDRESS    ->    Device Number                    *
//*    SHARE     ! SHRDASD    ->    Shared DASD                      *
//*    USE       ! USEATTR    ->    Use Attributes                   *
//*    RDCACHE   ! RDSTAT     ->    RD Cache Status                  *
//*    DASDFW                 ->    DASD FW Status                   *
//*    CACHEFW                ->    Cache FW Status                  *
//*    DUPLEX    ! DUPLEXST   ->    Duplex Status                    *
//*    OTHER     ! OTHERDEV   ->    Other Device                     *
//*    SUBSYS    ! SUBSYSID   ->    Subsys ID                        *
//*    PHYSTAT   ! STATPHYS   ->    Physical Status                  *
//*    STORGRP   ! SG         ->    Storage Group Name               *
//*    CFVOLST                ->    CF Volume Status                 *
//*    INIASRES               ->    Initialized as Reserved      àD2A*
//*    OWNERID                ->    Owner ID                     àD2A*
//********************************************************************
//GENREP  EXEC ACBJBAOB,
//        PLIB1=SYS1.DGTPLIB,
//        TABL2=userid.TEST.ISPTABL
//ISPFILE DD  DSN=IBMUSER.DASDVOL.REPORT,DISP=OLD
//SYSTSIN  DD *
PROFILE PREFIX(IBMUSER)
ISPSTART CMD(ACBQVAR1 DASDLIST SORT(column name)) +
NEWAPPL(DGT) BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN DD  *
VOLSER
INDXSTAT
FRAG
USEATTR
SG
TITLE=STATUS OF VOLUMES THAT ARE SMS MANAGED
/*
//********************************************************************
//*                                                                  *
//* COPY THE DASD VOLUME REPORT                                      *
//*                                                                  *
//*     SYSUT1 - INPUT (FROM PREVIOUS STEP)                          *
//*     SYSUT2 - OUTPUT                                              *
//*                                                                  *
//********************************************************************
//REPGEN   EXEC PGM=IEBGENER
//SYSUT1   DD  DSN=IBMUSER.DASDVOL.REPORT,DISP=SHR
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//*

./ ADD NAME=ACBJBAR2
//ACBJBAR2 JOB (ACCT),MVS,MSGCLASS=T,                                   JOB46093
//      NOTIFY=&SYSUID.,CLASS=A,MSGLEVEL=(1,1),TIME=NOLIMIT
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAR2) COMP(5695DF123): BATCH - SMS CONFIG. REPORT        */
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5694-A01                                                     àA1C*/
//* COPYRIGHT 1996, 2009 IBM CORP.                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//*                                                                  */
//* $K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION       àK0A*/
//* 02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS       àWA18945*/
//* $L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES     àL0A*/
//* 10/15/96  CCY - HDZ11C0: Ship as SPE                     àWA22861*/
//* $T2=k150142,HDZ11E0,111997,SNJTCS: Adding TABL2 parameter    àT2A*/
//* 11/18/98  TCS - HDZ11E0: Fix for ISPFILE problem         àWA36007*/
//* $A1=OA25855,HDZ1A10,08/10/06,IBSTG: SPACE increasd, CN added àA1A*/
//*                                                                  */
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO GENERATE SMS CONFIGURATION REPORT FROM             *
//* DCOLLECT DATA                                                    *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*      CHANGE JOBCARD                                              *
//*      CHANGE PREFIX                                               *
//*      CHANGE PARAMETERS                                           *
//*                                                                  *
//********************************************************************
//********************************************************************
//*                                                                  *
//* DELETE STEP - TODELETE THE REPORT DATA SET IF IT EXISTS ALREADY  *
//*                                                                  *
//********************************************************************
//DELRPTFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=&SYSUID..SMSCONF.REPORT.ACBJBAR2,
//    DISP=(MOD,DELETE,DELETE),
//    BLKSIZE=0,SPACE=(CYL,(20,10)),RECFM=FBA,LRECL=133,UNIT=SYSDA
//********************************************************************
//*                                                                  *
//* STEP TO ALLOCATE ISPFILE, WHERE THE GENERATED REPORT IS SAVED    *
//* NOTE: THE DATA SET BEING ALLOCATED SHOULD NOT BE A TEMPORARY     *
//*       DATA SET.                                                  *
//*                                                                  *
//********************************************************************
//ALCISPFL EXEC PGM=IEFBR14
//ISPFILE DD  DSN=&SYSUID..SMSCONF.REPORT.ACBJBAR2,DISP=(NEW,CATLG),
//    BLKSIZE=25600,SPACE=(CYL,(20,10)),RECFM=FBA,LRECL=256,UNIT=SYSDA
//*SYSPRINT DD SYSOUT=*
//*SYSIN  DD *
/*
//********************************************************************
//*                                                                  *
//*   REPORT GENERATION STEP                                         *
//*                                                                  *
//*      DCOLIN  - DCOLLECT DATA (INPUT)                             *
//*      ISPFILE - SMS CONFIGURATION REPORT (OUTPUT, FROM ALCISPFL   *
//*                                          STEP)                   *
//*      SYSIN   - PARAMETERS THAT SPECIFY THE OUTPUTS NEEDED        *
//*                                                                  *
//*   PARAMETERS:                                                    *
//*                                                                  *
//*      RECORD=DC - DATA CLASSES                                    *
//*      RECORD=SC - STORAGE CLASSES                                 *
//*      RECORD=MC - MANAGEMENT CLASSES                              *
//*      RECORD=SG - STORAGE GROUPS                                  *
//*      RECORD=BC - BASE CONFIGURATION                              *
//*      RECORD=VL - STORAGE GROUP VOLUMES                           *
//*      RECORD=AG - AGGREGATE GROUPS                                *
//*      RECORD=LB - OAM LIBRARIES                                   *
//*      RECORD=DR - OAM DRIVES                                      *
//*      RECORD=AI - ACS ACCOUNTING                                  *
//*      RECORD=CN - CACHE NAMES                                 àA1A*
//*                                                                  *
//********************************************************************
//REPGEN  EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB,
// TABL2=&SYSUID..TEST.ISPTABL
//DCOLIN  DD  DSN=&SYSUID..&SYSNAME..DCOLLECT,DISP=SHR
//ISPFILE DD  DSN=&SYSUID..SMSCONF.REPORT.ACBJBAR2,DISP=OLD
//SYSTSIN  DD *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAR8) +
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)
/*
//SYSIN DD  *
RECORD=DC
RECORD=MC
RECORD=SC
RECORD=SG
/*
//********************************************************************
//*                                                                  *
//*  COPY SMS CONFIGURATION REPORT                                   *
//*                                                                  *
//*     SYSUT1 - INPUT (FROM PREVIOUS STEP)                          *
//*     SYSUT2 - OUTPUT                                              *
//*                                                                  *
//********************************************************************
//REPGEN   EXEC PGM=IEBGENER
//SYSUT1   DD  DISP=SHR,DSN=&SYSUID..SMSCONF.REPORT.ACBJBAR2
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//********************************************************************

./ ADD NAME=ACBJBAS1
//ACBJBAS1 JOB (ACCT),MVS,MSGCLASS=T,
//      NOTIFY=&SYSUID,CLASS=A,MSGLEVEL=(1,1),TIME=(0,10)
//*Error in REPROing SCDS to Sequential dataset RC = 12
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL
//********************************************************************/
//*$MAC(ACBJBAS1) COMP(DF123): BATCH - SC DEFINE/ALTER/DISPLAY   àA1C*/
//*                                                                  */
//* PROPRIETARY V3 STATEMENT                                         */
//* LICENSED MATERIALS - PROPERTY OF IBM                             */
//* 5650-ZOS                                                    2àG1C*/
//* COPYRIGHT IBM CORP. 1998, 2017                                   */
//* END PROPRIETARY V3 STATEMENT                                     */
//*                                                                  */
//*  CHANGE ACTIVITY:                                                */
//* $T1=NQ5,HDZ11E0,061997,SNJTCS:   NaviQuest Batch Support     àT1A*/
//* $T2=K151321,HDZ11E0,091998,SNJTCS: Possible values          2àT2A*/
//*                                    documentation                 */
//* $U1=NaviQuest,HDZ11F0,99/08/04,SNJTCS: NQ Enhancements for  2àU1A*/
//*     DFSMS/MVS ISMF V2R10, Backup and Versioning fields added     */
//* 10/18/99 TCS - HDZ11E0: Support for Uplevel SCDS update  àWA41441*/
//* 05/23/01 TCS - HDZ11F0: Prolog Updation                  àWA49380*/
//* $W1=K1H0049,HDZ11H0,01/10/04,SNJTCS: Multi Tier SGs          àW1A*/
//* $X1=SMSPAV ,HDZ11J0,03/04/15,SNJTCS: Support for SMSPAV      àX1A*/
//* $92=OAMSLVL,HDZ1190,06/06/20,IBSTGS: Support of OAM Sublevel à92A*/
//* $A1=MULTLCK,HDZ1A10,07/04/27,IBSAS: Support of MULTILOCK     àA1A*/
//* $D1=BMF    ,HDZ1D10,10/01/29,IBSTG: BMF Disconnect Sphere at àD1A*/
//*                                     CLOSE                    àD1A*/
//* $D2=OAMGROW,HDZ1D10,10/04/19,SVLCY: zGrowth support, OAMsubl àD2A*/
//* $G1=OA54826,HDZ2230,18/02/28,IBSTK: zHyperLink Storage Class àG1A*/
//*                                     Granularity              àG1A*/
//********************************************************************/
//********************************************************************
//*                                                                  *
//* SAMPLE JCL TO DEFINE/ALTER/DISPLAY STORAGE CLASSES IN BATCH      *
//*                                                                  *
//*   INSTRUCTIONS BEFORE SUBMITTING:                                *
//*                                                                  *
//*     CHANGE JOBCARD                                               *
//*     CHANGE PREFIX                                                *
//*     CHANGE PARAMETERS                                            *
//*                                                                  *
//*   PARAMETER FOLLOWING ACBQBAS1 - DEFINE OR ALTER OR DISPLAY      *
//*********************** ADD  BEG  **********************************
//*                                                                  *
//* Required Fields:                                       2àWA49380 *
//*                                                                  *
//*   SCDS     : Name of the SCDS, 1-44 characters.                  *
//*                                                                  *
//*   STCNAME  : Storage class being defined/altered.                *
//*                                                                  *
//*              1-8  alphanumeric  characters , begining with       *
//*              alphabet.                                           *
//*                                                                  *
//* Optional Fields:                                       2àWA49380 *
//*                                                                  *
//*   DESCR    : Remarks about the SC being created. 1-120           *
//*              alphanumeric characters.                            *
//*                                                                  *
//*   DMSRESP  : Use DIRECT MILLISECOND RESPONSE field to  specify   *
//*              how quickly the system will read or write data in   *
//*              4K  blocks  on  direct access devices. Enter  the   *
//*              response time in milliseconds. All input and output *
//*              requests are processed  in single 4k bytes.         *
//*                                                                  *
//*              Possible Values : 1 - 999, BLANK                    *
//*                                                                  *
//*   DRTBIAS  : Specify  this  field ( DIRECT BIAS)  to  indicate   *
//*              whether the majority of the I/O scheduled for DSs   *
//*              in this SC will be READ,WRITE or UNKNOWN.           *
//*                                                                  *
//*              Possible Values : R, W, BLANK                       *
//*                                                                  *
//*   SEQMSRES : Use  SEQUENTIAL  MILLISECOND  RESPONSE  field   to  *
//*              specify  how  quickly  the  system  will  read  or  *
//*              write data in  4K  blocks on sequentially accessed  *
//*              devices. Enter  the response time in milliseconds.  *
//*              All I/O requests are processed in single 4K blocks. *
//*                                                                  *
//*              Possible Values : 1 - 999, BLANK                    *
//*                                                                  *
//*   SEQBIAS  : Specify   this   field ( SEQ BIAS)  to   indicate   *
//*              whether the majority of the I/O scheduled for DSs   *
//*              in this SC will be READ,WRITE or UNKNOWN.           *
//*                                                                  *
//*              Possible Values : R, W, BLANK                       *
//*                                                                  *
//*   INIARESS : Use this field (INITIAL ACCESS RESPONSE SECONDS)    *
//*              to  specify the  desired  response time in SECs     *
//*              to  locate,  mount, and prepare  media for          *
//*              data transfer.                                      *
//*                                                                  *
//*              Possible Values : 0 - 9999, BLANK                   *
//*                                                                  *
//*   SUSDTRT  : Use this field (SUSTAINED  DATA RATE (MB/SEC)) to   *
//*              specify the sequential  data  transfer  rate  you   *
//*              want for striped  datasets in this SC. The system   *
//*              uses this value to determine the no.of stripes it   *
//*              will attempt to allocate for the datasets. If you   *
//*              enter ZERO or BLANK  the system  will  attempt to   *
//*              allocate  them  with  one stripe.  Only  extended   *
//*              sequential datasets can be striped.                 *
//*                                                                  *
//*              Possible Values : 0 - 999, BLANK                    *
//*                                                                  *
//*   OAMLVL   : Use the OAM SUBLEVEL field to specify the desired   *
//*              sublevel of an OAM disk or tape hierarchy level to  *
//*              use for object storage.  The OAM SUBLEVEL is only   *
//*              applicable when the INITIAL ACCESS RESPONSE SECONDS *
//*              value is equal to 0, or when the INITIAL ACCESS àD2C*
//*              RESPONSE SECONDS value is greater than 0 and the    *
//*              SUSTAINED DATA RATE value is greater than or equal  *
//*              to 3.                                           àD2C*
//*                                                                  *
//*              Possible values:                                    *
//*                For disk, when IARS = 0 then OSL value of    4àD2A*
//*                  - 1 equates to OAM Disk Sublevel 1,             *
//*                  - 2 equates to OAM Disk Sublevel 2,             *
//*                  - blank defaults to OAM Disk Sublevel 1.        *
//*                                                                  *
//*                For tape, when IARS >= 1 and SDR >= 3 then        *
//*                OSL value of                                  àD2C*
//*                  - 1 equates to OAM Tape Sublevel 1,             *
//*                  - 2 equates to OAM Tape Sublevel 2,             *
//*                  - blank defaults to OAM Tape Sublevel 1.        *
//*                                                                  *
//*                When IARS < 1 or when IARS > 0 and SDR < 3   2àD2C*
//*                then OSL must be blank.                           *
//*                                                                  *
//*   AVALBTY  : Specify whether dataset processing should continue  *
//*              after device failures.                              *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              C  -> Continue to process a DS if a device failure  *
//*                    severs communications with the  volumes that  *
//*                    contains the dataset.                         *
//*              S  -> Continuous processing  is  unavailable after  *
//*                    device failures.                              *
//*              P  -> Data  may  be placed on devices that support  *
//*                    continuous processing.                        *
//*              N  -> Data  is  placed  on any volume. There is no  *
//*                    preference among volumes.                     *
//*                                                                  *
//*   ACCSBTY  : ACCESSIBILITY field specifies whether the datasets  *
//*              in  this  SC be  allocated to volumes supported by  *
//*              concurrent  copy. When  used   with  the   MGMTCLS  *
//*              ABACKUP/BACKUP  COPY  TECHNIQUE  attributes,  this  *
//*              field determines if DS should retain  write access  *
//*              during backup.                                      *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              C  -> Datasets  must  be allocated  to the volumes  *
//*                    supported by concurrent copy.                 *
//*              S  -> Datasets  should be allocated to the volumes  *
//*                    supported by concurrent copy.                 *
//*              P  -> Datasets should be  allocated to the volumes  *
//*                    not supported by concurrent copy.             *
//*              N  -> Datasets should be  allocated to the volumes  *
//*                    whether  the volumes support concurrent copy  *
//*                    or not.                                       *
//*                                                            25àU1A*
//*   BACKUP   : Use  the  BACKUP  option  under ACCESSIBILITY  to   *
//*              specify  that  the datasets  in  this storage class *
//*              when being backed up are unavailable to application *
//*              programs for a minimal period.                      *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              Y      -> Dataset is available for backup.          *
//*              N      -> Dataset is not available for backup.      *
//*              Blank  -> Defaults to N.                            *
//*                                                                  *
//*   VRSNING  : Use the VERSIONING option  under ACCESSIBILITY  to  *
//*              specify  that  the datasets  in  this storage class *
//*              can  have  a  point-in-time  version  available for *
//*              application  testing,  reporting,  or  backup while *
//*              applications  continue  to  access  and  update the *
//*              source dataset.                                     *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              Y      -> Dataset is available for Versioning.      *
//*              N      -> Dataset is not available for Versioning.  *
//*              Blank  -> Defaults to N.                            *
//*                                                                  *
//*   GURNTSPC : GUARANTEED  SPACE  field  specifies whether to use  *
//*              the JCL VOL=SER=  parameter  to  reserve  space on  *
//*              specific volumes for datasets in this SC.           *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              Y  -> Reserve  space  for datasets on the  volumes  *
//*                    specified in the JCL VOL=SER= parameter.      *
//*              N  -> Don't  use  volumes  requested  in  the  JCL  *
//*                     VOL=SER= parameter.                          *
//*                                                                  *
//*   GUASYNWR : GUARANTEED  SYNCHRONOUS  WRITE   field   indicates  *
//*              whether  the  system  should  return  from  a BSAM  *
//*              CHECK  (or WAIT)  issued  for  a  WRITE  against a  *
//*              partitioned  dataset  extended (PDSE)  member or a  *
//*              compressed format data set before (unsynchronized)  *
//*              or after (synchronized) the data has been written   *
//*              to a storage device.                                *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              Y  -> Indicates synchronized write.                 *
//*              N  -> Indicates no synchronization.                 *
//*                                                                  *
//*                                                             7àW1A*
//*   MULTITSG : MULTI TIER SGs field indicates whether or not SMS   *
//*              attempt to allocate using a volume in the first     *
//*              listed storage group prior to allocating against    *
//*              subsequent storage groups.                          *
//*                                                                  *
//*              Possible Values : Y/N/BLANK                         *
//*                                                                  *
//*                                                             5àX1A*
//*   PAVCAP   : Use the PARALLEL ACCESS VOLUME CAPABILITY field     *
//*              to modify the volume preferencing.                  *
//*                                                                  *
//*              Possible Values : R/P/S/N                           *
//*                                                                  *
//*   CFCACSTN : Coupling Facility Cache set name.                   *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              1-8 alphanumeric characters with beginning char     *
//*                                                                  *
//*   CFDTWGHT : Specifies relative importance of  data in a SC      *
//*              when it is accessed directly.                       *
//*                                                                  *
//*              Possible Values : 1 - 11, BLANK                     *
//*                                                                  *
//*   CFSEQWHT : Specifies relative importance of  data in a SC      *
//*              when it is accessed sequentially.                   *
//*                                                                  *
//*              Possible Values : 1 - 11, BLANK                     *
//*                                                                  *
//*   CFLOCSTN : Coupling Facility Lock set name.               6àA1A*
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              1-8 alphanumeric characters with beginning char     *
//*                                                                  *
//*   DISCSPHERE: Disconnect Sphere at CLOSE field indicates   13àD1A*
//*               whether the sphere should be disconnected          *
//*               immediately upon closing the data set or stay      *
//*               connected for a period of time.                    *
//*                                                                  *
//*               Possible Values :                                  *
//*                                                                  *
//*               Y      -> Yes, the sphere will be immediately      *
//*                         disconnected as soon as the data set is  *
//*                         closed.                                  *
//*               N      -> No, sphere stays connected for a period  *
//*                         of time following the "CLOSE".           *
//*                                                                  *
//*   ZHLREAD :  The zHyperLink Eligible for Read field        35àG1A*
//*              indicates whether the data sets in this storage     *
//*              class can use the zHyperLink  feature to read       *
//*              blocks from DASD device. zHyperLink dramatically    *
//*              improves application response time. Good candidates *
//*              for using zHyperLink are synchronous (blocking)     *
//*              reads when the data is likely to be in the device   *
//*              cache. Bad candidates include read-ahead or         *
//*              pre-staging of data (non-blocking), or where data   *
//*              is not likely to be in cache.                       *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              Y  -> YES, zHyperLink eligibility is enabled for    *
//*                    Read requests;                                *
//*              N  -> NO, zHyperLink eligibility is disabled for    *
//*                    Read requests.                                *
//*                                                                  *
//*  ZHLWRITE :  The zHyperLink Eligible for Write field indicates   *
//*              whether the data sets in this storage class can     *
//*              use the zHyperLink feature to write blocks to       *
//*              a DASD device. zHyperLink dramatically improves     *
//*              application response time. Good candidates for      *
//*              using zHyperLink are synchronous (blocking) writes  *
//*              that  follow a log-write pattern. Bad candidates    *
//*              include random writes or lazy/delayed writes        *
//*              (non-blocking).                                     *
//*                                                                  *
//*              Possible Values :                                   *
//*                                                                  *
//*              Y  -> YES, zHyperLink eligibility is enabled for    *
//*                    Write requests;                               *
//*              N  -> NO, zHyperLink eligibility is disabled for    *
//*                    Write requests.                               *
//*                                                                  *
//*   UPDHLVLSCDS: When modifying an SCDS, that was formatted with   *
//*                a higher level of SMS, using a lower level of     *
//*                SMS will make this application fail unless you    *
//*                specify the UPDHLVLSCDS parameter as 'Y'.         *
//*                Default is 'N'.                           àWA41441*
//*                                                                  *
//*                Possible values : Y/N/BLANK               àWA41441*
//*********************** ADD  END  **********************************
//********************************************************************
//STEP1   EXEC ACBJBAOB,
//        TABL2=&SYSUID..TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAS1 DEFINE/ALTER +
SCDS('SYS5.LP2.DFSMS.SCDS') +
STCNAME(SCZOSYS2) +
DESCR(STOCLASS SYS5 LP2) +
DMSRESP() +
DRTBIAS() +
SEQMSRES() +
SEQBIAS() +
INIARESS() +
SUSDTRT() +
OAMLVL() +
AVALBTY() +
ACCSBTY() +
BACKUP() +
VRSNING() +
GURNTSPC() +
GUASYNWR() +
MULTITSG() +
PAVCAP() +
CFCACSTN() +
CFDTWGHT() +
CFSEQWHT() +
CFLOCSTN() +
DISCSPHERE() +
ZHLREAD() +
ZHLWRITE() +
UPDHLVLSCDS() +
)
/*
//STEP2   EXEC ACBJBAOB,
//        TABL2=&SYSUID..TEST.ISPTABL
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
PROFILE PREFIX(SYS019)
ISPSTART CMD(ACBQBAS1 DISPLAY +
SCDS('ACTIVE') +
STCNAME(SCZOSYS2)
)
//

./ ADD NAME=ACTDDYN
*----------------------------------------------------------             00000101
*  LP2                                                                  00000201
*----------------------------------------------------------             00000301
DUMPDS NAME=LP2DUMP.D&YYMMDD..T&HHMMSS..S&SEQ                           00001001
DUMPDS ADD,VOL=SYSISA                                                   00002001
DUMPDS ALLOC=ACTIVE                                                     00003001
*----------------------------------------------------------             00004001
*  BRNR                                                                 00004101
*----------------------------------------------------------             00005001
DUMPDS NAME=BRNRDUMP.D&YYMMDD..T&HHMMSS..S&SEQ                          00010000
DUMPDS ADD,VOL=SYSRD4                                                   00020000
DUMPDS ALLOC=ACTIVE                                                     00030000
*----------------------------------------------------------             00040002
*  BRNQ                                                                 00050002
*----------------------------------------------------------             00060002
DUMPDS NAME=BRNQDUMP.D&YYMMDD..T&HHMMSS..S&SEQ                          00070002
DUMPDS ADD,VOL=SYSQD4                                                   00080002
DUMPDS ALLOC=ACTIVE                                                     00090002
*----------------------------------------------------------             00100003
*  BRN2   LE 02/08/09                                                   00110003
*----------------------------------------------------------             00120003
DUMPDS NAME=BRN2DUMP.D&YYMMDD..T&HHMMSS..S&SEQ                          00130003
DUMPDS ADD,VOL=SYS2D4                                                   00140003
DUMPDS ALLOC=ACTIVE                                                     00150003

./ ADD NAME=ALIAS2
//SYSALIAS JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=I,                       00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//DEFALIAS  EXEC  PGM=IDCAMS,REGION=7M                                  00340000
//SYSPRINT  DD  SYSOUT=*                                                00350000
//SYSIN     DD  *                                                       00360000
    DEFINE  ALIAS  (NAME(DVLOF)               -                         00451003
            RELATE(CATALOG.GTEST2))            -                        00452000
    CATALOG(CATALOG.MASTER.ZOS18.BRNQ)                                  00453001

./ ADD NAME=ALLOBCDS
//ALLOBCDS JOB 1000,'DFHSM',REGION=2M,                                  00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00030000
//*                                                                     00084100
//IDCAMS EXEC PGM=IDCAMS                                                00104000
//SYSPRINT DD SYSOUT=*                                                  00121000
//HSMBCDS DD UNIT=3390,VOL=SER=SYST04,DISP=SHR                          00150000
//SYSIN    DD *                                                         00159000
 IF MAXCC = 0 THEN DO                                                   00205000
   DEFINE CLUSTER (NAME(SYS019.DFHSM.BCDS) VOLUMES(SYST04) -            00206000
        CYLINDERS(50)  FILE(HSMBCDS) -                                  00207000
        RECORDSIZE(334 2040) FREESPACE(0 0) -                           00209000
        INDEXED KEYS(44 0) SHAREOPTIONS(3 3) -                          00210000
        SPEED BUFFERSPACE(530432) -                                     00189500
        UNIQUE NOWRITECHECK) -                                          00211000
        DATA(NAME(SYS019.DFHSM.BCDS.DATA) -                             00212000
        CONTROLINTERVALSIZE(12288)) -                                   00213000
        INDEX(NAME(SYS019.DFHSM.BCDS.INDEX) -                           00214000
        CONTROLINTERVALSIZE(2048))                                      00215000
/*                                                                      00218000

./ ADD NAME=ALLOCJRL
//SYSPGR1  JOB 1000,'PH-GRANIE',REGION=2M,                              00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPGR          00020000
//********************************************************************  00084000
//*  ALLOCATE AND CATALOG THE DFHSM JOURNAL.  *                         00242000
//*****************************************************************     00242100
//*                                                                     00242200
//JNLALC   EXEC PGM=IEFBR14                                             00242300
//JOURNAL DD DSN=SYST.DFHSM.JOURNAL.NEW,DISP=(,CATLG),UNIT=3390,        00243006
//   VOL=SER=SYST17,SPACE=(CYL,(150),,CONTIG)                           00243106
//*                                                                     00243200

./ ADD NAME=ALLOGJNR
//ALLOCJNR JOB 1000,'DFHSM',REGION=8M,                                  00010002
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020002
//*------------------------------------------------------------         00030000
//JNLALC   EXEC PGM=IEFBR14                                             00242300
//HSMLOGX  DD DSN=SYS019.DFHSM.HSMLOGX1,DISP=(,CATLG),UNIT=3390,        00242402
//   VOL=SER=SYST07,SPACE=(CYL,(10))                                    00242500
//HSMLOGY  DD DSN=SYS019.DFHSM.HSMLOGY1,DISP=(,CATLG),UNIT=3390,        00242602
//   VOL=SER=SYST08,SPACE=(CYL,(10))                                    00242700
//********************************************************************  00243001
//*  ALLOCATE AND CATALOG THE DFHSM JOURNAL.  *                         00243101
//*****************************************************************     00243201
//*                                                                     00243301
//JNLALC   EXEC PGM=IEFBR14                                             00243401
//JOURNAL DD DSN=SYS019.DFHSM.JOURRNAL,DISP=(,CATLG),UNIT=3390,         00243503
//   VOL=SER=SYST01,SPACE=(CYL,(40),,CONTIG)                            00243601
//*                                                                     00243701
//*                                                                     00243800

./ ADD NAME=ALLOMCDS
//ALLMCDS  JOB 1000,'DFHSM',REGION=8M,                                  00010000
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00030000
//IDCAMS EXEC PGM=IDCAMS                                                00104000
//SYSPRINT DD SYSOUT=*                                                  00121000
//HSMMCDS  DD UNIT=3390,VOL=SER=SYST11,DISP=SHR                         00144000
//MCDS     DD DSN=SYST.MCDS.PRIMER,DISP=OLD                             00158000
//SYSIN    DD *                                                         00159000
 /*                                                              */     00160000
 /*                                                              */     00171000
 IF MAXCC = 0 THEN DO                                                   00184000
   DEFINE CLUSTER (NAME(SYS019.DFHSM.MCDS) VOLUMES(SYST11) -            00185000
        CYLINDERS(20) FILE(HSMMCDS) -                                   00186000
        RECORDSIZE(435 2040) FREESPACE(0 0) -                           00188000
        INDEXED KEYS(44 0) SHAREOPTIONS(3 3) -                          00189000
        SPEED BUFFERSPACE(530432) -                                     00189500
        UNIQUE NOWRITECHECK) -                                          00190000
        DATA(NAME(SYS019.DFHSM.MCDS.DATA) -                             00191000
        CONTROLINTERVALSIZE(12288)) -                                   00192000
        INDEX(NAME(SYS019.DFHSM.MCDS.INDEX) -                           00193000
        CONTROLINTERVALSIZE(2048))                                      00194000
 END                                                                    00197000
 /*                                                              */     00198000
 /****************************************************************/     00219500
 /* REMOVE THE NEXT DEFINE AND REPRO COMMANDS IF YOU DO NOT      */     00220000
 /* INTEND TO USE TAPE VOLUMES FOR DAILY BACKUP VOLUMES, SPILL   */     00221000
 /* BACKUP VOLUMES, OR MIGRATION LEVEL 2 VOLUMES.                */     00222000
 /*                                                              */     00223000
 /* OMIT THE IMBED AND REPLICATE PARAMETERS BELOW IF YOU PUT THE */     00223600
 /* INDEX FOR THE CONTROL DATA SET ON A DEVICE SERVICED BY A     */     00224200
 /* CACHE-TYPE CONTROL UNIT.                                     */     00224800
 /****************************************************************/     00225400
 /*                                                              */     00226000
//SYSPRINT DD SYSOUT=*                                                  00240100
//
//
        IMBED REPLICATE -                                               00187000

./ ADD NAME=ALLOOCDS
//ALLOOCDS JOB 1000,'DFHSM',REGION=8M,                                  00010000
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00030000
//IDCAMS EXEC PGM=IDCAMS                                                00104000
//SYSPRINT DD SYSOUT=*                                                  00121000
//HSMOCDS  DD UNIT=3390,VOL=SER=SYST01,DISP=SHR                         00156000
//MCDS     DD DSN=SYST.MCDS.PRIMER,DISP=OLD                             00158000
//SYSIN    DD *                                                         00159000
 /*                                                              */     00160000
 IF MAXCC = 0 THEN DO                                                   00227000
   DEFINE CLUSTER (NAME(SYS019.DFHSM.OCDS) VOLUMES(SYST01) -            00228000
        CYLINDERS(20) FILE(HSMOCDS) -                                   00229000
        IMBED REPLICATE -                                               00230000
        RECORDSIZE(1800 2040) FREESPACE(0 0) -                          00231000
        INDEXED KEYS(44 0) SHAREOPTIONS(3 3) -                          00232000
        SPEED BUFFERSPACE(530432) -                                     00189500
        UNIQUE NOWRITECHECK) -                                          00233000
        DATA(NAME(SYS019.DFHSM.OCDS.DATA) -                             00234000
        CONTROLINTERVALSIZE(12288)) -                                   00235000
        INDEX(NAME(SYS019.DFHSM.OCDS.INDEX) -                           00236000
        CONTROLINTERVALSIZE(2048))                                      00237000
   REPRO ODS('SYS019.DFHSM.OCDS') INFILE(MCDS)                          00239000
 END                                                                    00240000
//*                                                                     00240200

./ ADD NAME=AMBLIST
//SYS019AM  JOB ACCT£,                                                  00000100
//             MVS,                                                     00000200
//             NOTIFY=&SYSUID,                                          00000300
//             MSGLEVEL=(1,1)                                           00000400
//DELETE   EXEC PGM=AMBLIST                                             00000600
//SYSPRINT DD SYSOUT=*                                                  00000700
//SYSTSPRT DD SYSOUT=*                                                  00000800
//LOADLIB  DD DSN=SYS2.ADFZCC.SIPVMODA,DISP=SHR                         00000901
//*LOADLIB  DD DSN=SYS2.ADFZCC.SIPVLPA1,DISP=SHR                        00001001
//*ISFOUT  DD DCB=&SYSUID.&SYSNAME..ISFOUT,                             00001100
//* DISP=(OLD,DELETE,DELETE),                                           00001200
//* SPACE=(TRK,(2,2)),                                                  00001300
//* DCB=(LRECL=512,RECFM=FB)                                            00001400
//SYSIN    DD *                                                         00001500
  LISTLOAD OUTPUT=MODLIST,DDN=LOADLIB,                                  00001600
   MEMBER=IPV0LVLX,                                                     00001701
   TITLE=('LOAD MODULE LISTING OF IPV0LVL',20)                          00001800
//                                                                      00001900
   MEMBER=IDILANGX,                                                     00002001
   MEMBER=IPV0LVL,                                                      00002100
LISTLOAD ,                                                              00002200
  OUTPUT=BOTH,                                                          00003000
   DDN=SYSLIB                                                           00004000
  ,MEMBER=IPV0LVL                                                       00005000
//                                                                      00009100
LISTLOAD                                                                00009200
 [OUTPUT={MODLIST|XREF|BOTH|MAP}]                                       00009300
 [,TITLE=('TITLE',POSITION)]                                            00009400
 [,DDN=DDNAME]                                                          00009500
 [,MEMBER={MEMBER|(MEMBER1,MEMBERN...)}]                                00009600
 [,RELOC=HHHHHHHH]                                                      00009700
 [,ADATA={YES|NO}]                                                      00009800
 [,IMPEXP={DUMP|SYMBOLS}]                                               00009900
 [,SECTION1={YES|NO}]                                                   00010000
//                                                                      00010100
LISTIDR                                                                 00010200
 [OUTPUT={IDENT|ALL}]                                                   00010300
 [,TITLE=('TITLE',POSITION)]                                            00010400
 [,DDN=DDNAME]                                                          00010500
 [,MEMBER={MEMBER|(MEMBER1,MEMBERN...)}]                                00010600
 [,MODLIB]                                                              00010700
ADFZCC                                                                  00011000
IPV0LVL                                                                 00020000

./ ADD NAME=ANALYSE
//SYSANAL1 JOB 1000,'SYST-GRANIE',REGION=6M,                            00010006
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//*------------------------------------------------------------         00030003
//S1       EXEC PGM=ICKDSF,REGION=2048K
//SYSPRINT DD SYSOUT=*
//*DD1     DD UNIT=3390,DISP=SHR,VOL=SER=RECT14
//SYSIN    DD *
 ANALYZE UNITADDRESS(112B) -
 SCAN NODRIVE
/*
//
 SCAN NODRIVE FROMRANGE(1020,00) TORANGE(1025,14)
//*------------------------------------------------------------         00030003
//S1       EXEC PGM=ICKDSF,REGION=2048K
//SYSPRINT DD SYSOUT=*
//DD1     DD UNIT=3380,DISP=SHR,VOL=SER=EXPL07
//SYSIN    DD *
 INSPECT DDNAME(DD1) FROMRANGE(133,0) NOVERIFY -
 TORANGE(133,2)  SKIP MAP
/*
//
 INSPECT DDNAME(DD1) FROMRANGE(X'2E3',5) NOVERIFY -
 TORANGE(X'2E3',5)  SKIP MAP
 INSPECT DDNAME(DD1) NOVERIFY TRACKS((X'0000',X'0003'))
 INSPECT UNITADDRESS(2A7) NOVERIFY TRACKS((X'0029',X'0004')) SKIP  -
               CYLRANGE((X'0029',X'002A'))
 INSPECT DDNAME(DD2) NOVERIFY TRACKS((X'02FA',X'0001'))
 INSPECT DDNAME(DD1) NOVERIFY TRACKS((X'0274',X'0004'))

./ ADD NAME=ARCCMDN2
 ADDVOL HSM001 UNIT(3390) MIGRATION (MIGRATIONLEVEL1 -                  00000100
        NOSMALLDATASETPACKING) THRESHOLD(80)                            00000200
 ADDVOL HSM002 -                                                        00000300
 ADDVOL HSM004 -                                                        00000400
 ADDVOL HSM005 -                                                        00000500
 ADDVOL HSM006 -                                                        00000600
 ADDVOL HSM007 -                                                        00000700
 ADDVOL HSM008 -                                                        00000800
 ADDVOL HSM009 -                                                        00000900
 ADDVOL HSM010 -                                                        00001000
 ADDVOL HSM011 -                                                        00001100
 ADDVOL HSM012 -                                                        00001200
 ADDVOL HSM013 -                                                        00001300
 ADDVOL HSM014 -                                                        00001400
 ADDVOL HSM015 -                                                        00001500
 ADDVOL HSM016 -                                                        00001600
 ADDVOL HSM017 -                                                        00001700
 ADDVOL HSM018 -                                                        00001800
 AUTH SYSAJE DATABASEAUTHORITY(CONTROL)                                 00002000
 DEFINE BACKUP(YYYYYYN CYCLESTARTDATE(1990/06/11                        00003000
 DEFINE PRIMARYSPMGMTCYCLE(YYYYYYY CYCLESTARTDATE(1990/06/11            00004000
 DEFINE SECONDARYSPMGMTCYCLE(YYYYYYY CYCLESTARTDATE(1990/06/11          00005000
 DEFINE DUMPCYCLE(NNNNNNY CYCLESTARTDATE(1990/06/11))                   00006000
 DEFINE DUMPCLASS(WEEKLY   DAY(7) RETPD(30) AUTOREUSE NORESET -         00007000
   DATASETRESTORE VTOCCOPIES(5))                                        00008000
 DEFINE DUMPCLASS(WEEKLY2  DAY(7) RETPD(45) AUTOREUSE NORESET -         00009000
   DATASETRESTORE VTOCCOPIES(7))                                        00010000
 DEFINE DUMPCLASS(QUARTERS FREQUENCY(90) RETPD(356) -                   00020000
   NOAUTOREUSE NODATASETRESTORE NORESET -                               00021000
   DISPOSITION('OFF-SITE') VTOCCOPIES(0))                               00022000
 SETSYS ACTLOGMSGLVL(FULL) ACTLOGTYPE(SYSOUT)                           00024000
 SETSYS AUTOBACKUPSTART(0500 0800 0930)                                 00028000
 SETSYS AUTODUMPSTART(1755 2000 2200)                                   00030000
 SETSYS BACKUP(TAPE(VTSS))                                              00070000
 SETSYS BACKUPPREFIX(HSMSCTB)                                           00110000
 SETSYS CDSVERSIONBACKUP(BACKUPCOPIES(4) BACKUPDEVICECATEGORY(DASD)     00130000
 SETSYS COMPACT(DASDMIGRATE)                                            00170000
 SETSYS COMPACTPERCENT(20)                                              00210000
 SETSYS CSALIMITS (MAXIMUM(200) ACTIVE(90) INACTIVE(30))                00340000
 SETSYS CSALIMITS (MWE(4))                                              00370000
 SETSYS DATAMOVER(DFDSS)     *                                          00420000
 SETSYS DAYS(1)                                                         00440000
 SETSYS DEFERMOUNT                                                      00480000
 SETSYS DUMPIO(3,2)                                                     00580000
 SETSYS EXITON(TV)                                                      00620000
 SETSYS INCREMENTALBACKUP(CHANGEDONLY)                                  00660000
 SETSYS INPUTTAPEALLOCATION(NOWAIT)                                     00706000
 SETSYS JES2 NOCONVERSION                                               00709000
 SETSYS JOURNAL(RECOVERY)                                               00800000
 SETSYS MAXBACKUPTASKS(05) NOSKIPABPRIMARY                              00830000
 SETSYS MAXDUMPTASKS(3)                                                 00860000
 SETSYS MAXEXTENTS(5)                                                   00900000
 SETSYS MAXMIGRATIONTASKS(9)                                            00910000
 SETSYS MAXRECALLTASKS(14)                                              00920000
 SETSYS MIGRATEPREFIX(HSMSCT)                                           00930000
 SETSYS MIGRATIONCLEANUPDAYS(14 7                                       00950000
 SETSYS MIGRATIONLEVEL1DAYS(14)                                         00960000
 SETSYS MIGUNITNAME(VTSS)                                               00970000
 SETSYS ML2RECYCLEPERCENT(40)                                           00980000
 SETSYS MONITOR (NOSPACE JOURNAL(70 1) MCDS(90                          01040000
 SETSYS MONITOR (STARTUP NOVOLUME)                                      01100000
 SETSYS MONITOR(MIGRATIONCONTROLDATASET(90))                            01150000
 SETSYS MOUNTWAITTIME(15)                                               01170000
 SETSYS NODEBUG NOEMERGENCY                                             01200000
 SETSYS NOERASEONSCRATCH                                                01230000
 SETSYS NOINTERVALMIGRATION                                             01280000
 SETSYS NORACFIND                                                       01300000
 SETSYS NOREQUEST                                                       01320000
 SETSYS NOSMALLDATASETPACKING                                           01380000
 SETSYS NOSWAP                                                          01470000
 SETSYS OBJECTNAMES(OBJ,OBJECT,LOAD,LOADLIB,LOADMODS,LINKLIB) -         01510000
 SETSYS OPTIMUMDASDBLOCKING                                             01540000
 SETSYS OUTPUTTAPEALLOCATION(NOWAIT)                                    01580000
 SETSYS PARTIALTAPE(BACKUP(MARKFULL) MIGRATION(MARKFULL))               01650000
 SETSYS PRIMARYSPMGMTSTART(0540 0756)                                   01680000
 SETSYS PROFILEBACKUP                                                   01720000
 SETSYS RECALL(PRIVATEVOLUME(LIKE                                       01730000
 SETSYS RECYCLEINPUTDEALLOCFREQUENCY(BACKUP(1) MIGRATION(1))            01770000
 SETSYS RECYCLEOUTPUT(BACKUP(VTSS) MIGRATION(VTSS))                     01790000
 SETSYS RECYCLEPERCENT(40)                                              01810000
 SETSYS RECYCLETAPEALLOCATION(NOWAIT)                                   01830000
 SETSYS SCRATCHFREQUENCY(7) EXPIREDDATASETS(SCRATCH)                    01860000
 SETSYS SECONDARYSPMGMTSTART(0515 0539)                                 01920000
 SETSYS SELECTVOLUME(BACKUP(SCRATCH) MIGRATION(SCRATCH) DUMP(SCRATCH))  01960000
 SETSYS SMF(240)                                                        02010000
 SETSYS SOURCENAMES(ASM,COBOL,FORT,PLI,SOURCE,SRC,SRCLIB,SRCE,CNTL,JCL) 02050000
 SETSYS SPILL(TAPE(VTSS))                                               02120000
 SETSYS SYSOUT(X 1)                                                     02170000
 SETSYS SYS1DUMP                                                        02200000
 SETSYS TAPEDELETION(BACKUP(SCRATCH) MIGRATION(SCRATCH) DUMP(SCRATCH))  02230000
 SETSYS TAPEHARDWARECOMPACT                                             02260000
 SETSYS TAPEINPUTPROMPT(BACKUPTAPES(NO))                                02310000
 SETSYS TAPEINPUTPROMPT(DUMPTAPES(NO))                                  02360000
 SETSYS TAPEINPUTPROMPT(MIGRATIONTAPES(NO))                             02380000
 SETSYS TAPEMAXRECALLTASKS(10)                                          02520000
 SETSYS TAPEMIGRATION(ML2TAPE(TAPE(VTSS)))                              02540000
 SETSYS TAPEMIGRATION(ML2TAPE)                                          02600000
 SETSYS TAPESECURITY(EXPIRATION)                                        02660000
 SETSYS TAPESPANSIZE(4000)                                              02670000
 SETSYS TAPEUTILIZATION(LIBRARYBACKUP PERCENTFULL(100))                 02710000
 SETSYS TAPEUTILIZATION(LIBRARYMIGRATION PERCENTFULL(100))              02760000
 SETSYS TAPEUTILIZATION(UNITTYPE(3490) PERCENTFULL(100))                02780000
 SETSYS UNITNAME(VTSS)                                                  02820000
 SETSYS USERDATASETSERIALIZATION                                        03250000
 SETSYS USERUNITTABLE(VTSS)                                             03310000
 SETSYS VERSIONS(1) FREQUENCY(1)                                        03340000

./ ADD NAME=ARCCMDS0
 AUTH SYSAJE                 /* ESTABLISH THE USER ID THAT CAN*/ -      00010000
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00020000
 AUTH SYSJFR                 /* ESTABLISH THE USER ID THAT CAN*/ -      00021000
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00022000
 AUTH SYSJRI                 /* ESTABLISH THE USER ID THAT CAN*/ -      00022100
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00022200
 AUTH SYSLHU                 /* ESTABLISH THE USER ID THAT CAN*/ -      00022300
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00022400
 AUTH SYSTME                 /* ESTABLISH THE USER ID THAT CAN*/ -      00022500
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00022600
 AUTH SYS012                 /* ESTABLISH THE USER ID THAT CAN*/ -      00022700
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00022800
 AUTH SYS015                 /* ESTABLISH THE USER ID THAT CAN*/ -      00022900
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00023000
 AUTH SYS019                 /* ESTABLISH THE USER ID THAT CAN*/ -      00023100
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00023200
 AUTH PROPRI                 /* ESTABLISH THE USER ID THAT CAN*/ -      00023300
  DATABASEAUTHORITY(USER)    /* ISSUE AUTH COMMANDS.          */        00023400
 AUTH STCPRC                 /* ESTABLISH THE USER ID THAT CAN*/ -      00023500
  DATABASEAUTHORITY(USER)    /* ISSUE AUTH COMMANDS.          */        00023600
 SETSYS JES2                 /* JOB ENTRY SUBSYSTEM ID.       */ -      00023700
   NOCONVERSION              /* DO NOT REBLOCK DATA SETS      */        00023800
                             /* DURING RECALL OR RECOVERY.    */        00023900
 SETSYS -                                                               00024000
   EXITON(TV)                /* ARCTVEXT ACTIVE               */        00024100
 SETSYS -                                                               00024200
   NOREQUEST                 /* DO NOT ASK OPERATOR           */        00024300
                             /* PERMISSION TO START AUTOMATIC */        00024400
                             /* FUNCTIONS.                    */        00024500
 SETSYS -                                                               00024600
   NODEBUG                   /* MOVE OR DELETE DATA WHEN      */ -      00024700
                             /* PERFORMING AUTO FUNCTIONS.    */ -      00024800
   NOEMERGENCY               /* ALLOW ALL DFHSM FUNCTIONS.    */        00024900
 SETSYS -                                                               00025000
   NOSWAP                    /* RUN DFHSM NONSWAPPABLE.       */        00026000
 SETSYS -                                                               00027000
   USERDATASETSERIALIZATION  /* DFHSM USES ITS OWN            */        00028000
                             /* FACILITIES FOR DATA SET       */        00029000
                             /* SERIALIZATION.                */        00030000
/* SETSYS - */                                                          00040000
/*    DATAMOVER(DFDSS)     */                                           00050000
                             /* FACILITIES FOR MOVING         */        00060000
                             /* DATA.                         */        00070000
 SETSYS -                                                               00080000
   OPTIMUMDASDBLOCKING                                                  00090000
                             /* OPTIMUM BLOCK SIZE WHEN       */        00100000
                             /* MOVING DATA TO OWNED DASD.    */        00110000
 /*                                                           */        00120000
 /*************************************************************/        00130000
 /*                      DFHSM EXITS                          */        00140000
 /*************************************************************/        00150000
 /*                     NONE ACTIVATED                        */        00160000
 /*************************************************************/        00170000
 /*     DFHSM LOGGING, JOURNALING, AND REPORTING OPTIONS      */        00180000
 /*************************************************************/        00190000
 /*                                                           */        00200000
 SETSYS -                                                               00210000
   JOURNAL(RECOVERY)         /* WRITE CDS CHANGES TO JOURNAL  */        00220000
                             /* IMMEDIATELY.                  */        00230000
 SETSYS -                                                               00240000
   SMF(240)                  /* WRITE DSR'S & VSR'S TO SMF    */        00250000
                             /* RECORD TYPE 240; WRITE FSR'S  */        00260000
                             /* TO TYPE 241.                  */        00270000
                             /* CLASS A.                      */        00280000
 SETSYS -                                                               00290000
   SYS1DUMP                  /* WRITE DFHSM DUMPS TO SYSTEM   */        00300000
                             /* DUMP DATA SET.                */        00310000
 SETSYS SYSOUT(X 1)                                                     00320000
                                                                        00330000
 SETSYS -                                                               00340000
   ACTLOGMSGLVL(FULL)           /*   ACTIVITY LOGGING         */ -      00350000
   ACTLOGTYPE(SYSOUT)      /* WRITTEN TO SYSOUT CLASS AS    */          00360000
                             /* SPECIFIED BY SYSOUT PARM      */        00370000
 /*                                                           */        00380000
 /*************************************************************/        00390000
 /*                  DFHSM MONITOR OPTIONS                    */        00400000
 /*************************************************************/        00410000
 /*                                                           */        00420000
                             /* SPECIFY WHICH INFORMATIONAL   */        00430000
                             /* MESSAGES TO PRINT AT THE      */        00440000
                             /* OPERATOR CONSOLE.             */        00450000
 SETSYS MONITOR(MIGRATIONCONTROLDATASET(90))                            00460000
                                                                        00470000
 SETSYS MONITOR -                                                       00480000
        (STARTUP             /* LIST STARTUP PARAMETERS.      */ -      00490000
         NOVOLUME)           /* DO NOT SHOW DATA SET LEVEL    */        00500000
                             /* MESSAGES ON SYSTEM CONSOLE.   */        00510000
 SETSYS MONITOR -                                                       00520000
        (NOSPACE             /* DO NOT PRINT SPACE USAGE MSGS.*/ -      00530000
       JOURNAL(70 1) MCDS(90))  /* WARN WHEN JOURNAL IS 90% FULL */     00540000
                             /* CONSIDERING 1 EXTENT IS       */        00550000
                             /* AVAILABLE.                    */        00560000
 /*                                                           */        00570000
 /*************************************************************/        00580000
 /*        DFHSM COMMON SERVICE AREA LIMITING OPTIONS         */        00590000
 /*************************************************************/        00600000
 /*                                                           */        00610000
 SETSYS -                                                               00620000
            CSALIMITS        /* LIMIT DFHSM USAGE OF CSA.     */ -      00630000
             (MWE(4))        /* MAXIMUM OF 4 NOWAIT TYPE MWES */        00640000
                             /* PER ADDRESS SPACE TO BE KEPT  */        00650000
                             /* ON CSA QUEUE.                 */        00660000
 SETSYS CSALIMITS -                                                     00670000
              (MAXIMUM(200)  /* NEVER USE MORE THAN 100K.     */ -      00680000
               ACTIVE(90)    /* LIMIT NOWAIT FUNCTIONS TO 90%.*/ -      00690000
               INACTIVE(30)) /* ALLOW 30% DURING INACTIVITY.  */        00700000
 /*                                                           */        00701000
 /*************************************************************/        00702000
 /*           DFHSM TAPE HANDLING SPECIFICATIONS              */        00703000
 /*************************************************************/        00704000
 /*                                                           */        00705000
 SETSYS -                                                               00706000
   DEFERMOUNT                /* DEFER MOUNT OF TAPE UNTIL     */        00707000
                             /* OPEN PROCESSING.              */        00708000
 SETSYS -                                                               00709000
   TAPEHARDWARECOMPACT       /* USE IMPROVED DATA RECORDING   */        00710000
                             /* CAPABILITY WHEN 3480X IS      */        00720000
                             /* THE OUTPUT DEVICE.            */        00730000
 SETSYS -                                                               00740000
   PARTIALTAPE(              /* DO NOT MARK AS FULL ANY TAPES */ -      00750000
    BACKUP(MARKFULL)         /* THAT ARE ONLY PARTLY FULL     */ -      00760000
    MIGRATION(MARKFULL))                                                00770000
 SETSYS -                                                               00780000
   INPUTTAPEALLOCATION(NOWAIT)   /* DON'T WAIT ON TAPE        */ -      00790000
   OUTPUTTAPEALLOCATION(NOWAIT)  /* ALLOCATION FOR INPUT,     */ -      00800000
   RECYCLETAPEALLOCATION(NOWAIT) /* OUTPUT, OR RECYCLE.       */        00810000
 SETSYS -                                                               00820000
   SELECTVOLUME(             /* VOLUME SELECTION AT TAPE END  */ -      00830000
   BACKUP(SCRATCH)          /* OF VOLUME COMES FROM THE      */ -       00840000
   MIGRATION(SCRATCH)       /* DFHSM-OWNED POOL OF TAPE VOLS.*/ -       00850000
   DUMP(SCRATCH))                                                       00860000
 SETSYS -                                                               00870000
   RECYCLEPERCENT(40)        /* INFORM STORAGE ADMINISTRATOR  */        00880000
                             /* THAT A BACKUP TAPE SHOULD BE  */        00890000
                             /* RECYCLED WHEN THE AMOUNT OF   */        00900000
                             /* VALID DATA ON THE TAPE FALLS  */        00910000
                             /* BELOW 25%.                    */        00920000
 SETSYS -                                                               00930000
   RECYCLEINPUTDEALLOCFREQUENCY(BACKUP(1) MIGRATION(1))                 00940000
 SETSYS -                                                               00950000
   TAPEDELETION(             /* RETURN TAPES THAT NO LONGER   */ -      00960000
    BACKUP(SCRATCH)          /* CONTAIN VALID DATA TO THE     */ -      00970000
    MIGRATION(SCRATCH)       /* DFHSM-OWNED POOL.             */ -      00980000
    DUMP(SCRATCH))                                                      00990000
 SETSYS -                                                               01000000
   USERUNITTABLE(VTSS02)      /*NO ESOTERIC TAPE UNITS        */        01010000
                             /* DEFINED TO DFHSM. CTAPE1      */        01020000
 SETSYS -                                                               01030000
   MOUNTWAITTIME(15)         /* WAIT 10 MINUTES BEFORE        */        01040000
                             /* ISSUING ADDITIONAL MESSAGES   */        01050000
                             /* TO OPERATORS FOR TAPE MOUNTS. */        01060000
 SETSYS -                                                               01070000
   UNITNAME(VTSS02)          /* START OUT WITH 3480X AS UNIT  */        01080000
                             /* TO BE USED FOR SCRATCH TAPES  */        01090000
                             /* DURING BACKUP OR DUMP.        */        01100000
 SETSYS -                                                               01110000
   TAPEINPUTPROMPT(MIGRATIONTAPES(NO))  /* TAPE OPER MSGS    */         01120000
 SETSYS -                                                               01130000
   TAPEINPUTPROMPT(BACKUPTAPES(NO))     /* TAPE OPER MSGS    */         01140000
 SETSYS -                                                               01150000
   TAPEINPUTPROMPT(DUMPTAPES(NO))       /* TAPE OPER MSGS    */         01160000
 /*                                                           */        01170000
 /*************************************************************/        01180000
 /*         DFHSM CONTROL DATA SET BACKUP PARAMETERS          */        01190000
 /*************************************************************/        01200000
 /*                                                           */        01210000
 SETSYS CDSVERSIONBACKUP(    /* MAINTAIN FOUR BACKUP VERSIONS */ -      01220000
        BACKUPCOPIES(4)      /* OF THE CONTROL DATA SETS ON   */ -      01230000
  BACKUPDEVICECATEGORY(DASD)) /* TAPE OF UNIT TYPE CTAPE1     */        01240000
 /*                                                           */        01250000
 /*************************************************************/        01260000
 /*               DFHSM RACF SPECIFICATIONS                   */        01270000
 /*************************************************************/        01280000
 /*                                                           */        01290000
 SETSYS -                                                               01300000
   NORACFIND                 /* DO NOT PUT RACF-INDICATION    */        01310000
                             /* ON BACKUP AND MIGRATION       */        01320000
                             /* COPIES OF DATA SETS.          */        01330000
 SETSYS -                                                               01340000
   TAPESECURITY(EXPIRATION)  /* USE RACF TO PROVIDE TAPE      */        01350000
                             /* SECURITY.                     */        01360000
 SETSYS -                                                               01370000
   NOERASEONSCRATCH          /* DON'T ALLOW ERASE-ON-SCRATCH  */        01380000
                             /* ON ANY DFHSM BACKUP VERSIONS  */        01390000
                             /* AND MIGRATION COPIES.         */        01400000
 SETSYS -                                                               01410000
   PROFILEBACKUP             /* BACKUP DISCRETE RACF PROFILES */        01420000
 /*                                                           */        01430000
 /*************************************************************/        01440000
 /*                DFHSM COMPACTION OPTIONS                   */        01450000
 /*************************************************************/        01460000
 /*                                                           */        01470000
 SETSYS -                                                               01480000
   COMPACT(DASDMIGRATE)      /* USE COMPACTION FOR            */        01490000
                             /* MIGRATION TO DASD.            */        01500000
 SETSYS -                                                               01510000
     COMPACTPERCENT(20)      /* DON'T COMPACT DATA UNLESS     */        01520000
                             /* HISTORICAL DATA SHOWS SAVINGS */        01530000
                             /* OF AT LEAST 20%.              */        01540000
 SETSYS -                                                               01550000
   OBJECTNAMES(OBJ,OBJECT,LOAD,LOADLIB,LOADMODS,LINKLIB) -              01560000
   SOURCENAMES(ASM,COBOL,FORT,PLI,SOURCE,SRC,SRCLIB,SRCE,CNTL,JCL)      01570000
 /*                                                           */        01580000
 /*************************************************************/        01590000
 /*               DFHSM MIGRATION PARAMETERS                  */        01600000
 /*************************************************************/        01610000
 /*                                                           */        01620000
 SETSYS -                                                               01630000
   TAPEMIGRATION(ML2TAPE)    /* NO TAPE MIGRATION  CTAPE1     */        01640000
 SETSYS -                                                               01650000
   MIGUNITNAME(VTSS02)   /* NO TAPE MIGRATION             */            01660000
 SETSYS -                                                               01670000
   ML2RECYCLEPERCENT(40) /* NO TAPE MIGRATION             */            01680000
 SETSYS -                                                               01690000
   TAPEMAXRECALLTASKS(2) /* NO TAPE MIGRATION             */            01700000
 SETSYS -                                                               01710000
   PRIMARYSPMGMTSTART         /*SPECIFY PROCESSING WINDOW FOR */ -      01720000
   (0620 1000)                /*PRIMARY SPACE MANAGEMENT      */        01730000
 DEFINE -                                                               01740000
   PRIMARYSPMGMTCYCLE        /* RUN PRIMARY SPACE MGMT EVERY  */ -      01750000
   (YYYYYYN                  /* DAY, STARTING JUNE 11, 1990   */ -      01760000
   CYCLESTARTDATE(1990/06/11))                                          01770000
 SETSYS -                                                               01780000
     DAYS(1)                 /* DATA SET MUST BE UNREFERENCED */        01790000
                             /* FOR 10 DAYS BEFORE IT WILL BE */        01800000
                             /* MIGRATED.                     */        01810000
 SETSYS -                                                               01820000
     MIGRATEPREFIX(HSMSCT)                                              01830000
                             /* PROVIDE THE HIGH-LEVEL        */        01840000
                             /* QUALIFIER OF THE NAMES OF     */        01850000
                             /* MIGRATED DATA SETS.           */        01860000
 SETSYS -                                                               01870000
   NOINTERVALMIGRATION       /* PERFORM MIGRATION THROUGHOUT  */        01880000
                             /* THE DAY.                      */        01890000
 SETSYS -                                                               01900000
   SECONDARYSPMGMTSTART(0520  /*SPECIFY PROCESSING WINDOW FOR */ -      01910000
     0630)                                                              01920000
                              /*SECONDARY SPACE MANAGEMENT    */        01930000
 DEFINE -                                                               01940000
   SECONDARYSPMGMTCYCLE      /* RUN SECONDARY SPACE MANAGEMENT*/ -      01950000
   (YYYYYNN                  /* EVERY DAY,                    */ -      01960000
   CYCLESTARTDATE(1990/06/11)) /* STARTING JUNE 11, 1990.       */      01970000
 SETSYS -                                                               01980000
   MIGRATIONCLEANUPDAYS(14 7) /* KEEP MCDS STATISTICS RECORDS */        01990000
                             /* FOR RECALLED DATA SETS FOR    */        02000000
                             /* 14 DAYS, AND VOLUME OR DAILY  */        02010000
                             /* STATISTICS RECORDS FOR 7 DAYS.*/        02020000
 SETSYS -                                                               02030000
     MIGRATIONLEVEL1DAYS(14) /* DATA SET MIGRATED TO ML2      */        02040000
                             /* AFTER 45 DAYS UNREFERENCED.   */        02050000
 SETSYS -                                                               02060000
     MAXEXTENTS(5)           /* DATA SET EXTENT REDUCTION     */        02070000
                             /* OCCURS WHEN EXTENTS REACH 10. */        02080000
 SETSYS -                                                               02090000
     MAXRECALLTASKS(6)       /* MAXIMUM OF 8 RECALL TASKS     */        02100000
                             /* ALLOWED AT ONE TIME.          */        02110000
 SETSYS -                                                               02120000
   RECALL(PRIVATEVOLUME(LIKE)) /* AUTO RECALL PLACES          */        02130000
                             /* UNPOOLED DATA SETS ON PRIMARY */        02140000
                             /* VOLUME MARKED PUBLIC, STORAGE,*/        02150000
                             /* OR PRIVATE, THAT HAS LIKE     */        02160000
                             /* CHARACTERISTICS.              */        02170000
 SETSYS -                                                               02180000
   SCRATCHFREQUENCY(7)       /* KEEP LIST DATA SETS 7 DAYS.   */ -      02190000
   EXPIREDDATASETS(SCRATCH)  /* DON'T SCRATCH EXPIRED DATA   */         02200000
                             /* SETS.                         */        02210000
 SETSYS -                                                               02220000
   NOSMALLDATASETPACKING     /* DON'T DO SMALL D.S. PACKING.  */        02230000
 SETSYS -                                                               02240000
   MAXMIGRATIONTASKS(7)      /* MAXIMUM OF THREE AUTOMATIC    */        02250000
                             /* VOLUME MIGRATION TASKS        */        02260000
                             /* TO BE PREFORMED CONCURRENTLY. */        02270000
 /*                                                           */        02280000
 /*************************************************************/        02290000
 /*                 DFHSM BACKUP PARAMETERS                   */        02300000
 /*************************************************************/        02310000
 /*                                                           */        02320000
 DEFINE BACKUP(YYYYYYN       /* BACKUP CYCLE OF ONE DAY.      */ -      02330000
   CYCLESTARTDATE(1990/06/11)) /* RUN BACKUP EVERY DAY TO A     */      02340000
                             /* SINGLE BACKUP VOLUME,         */        02350000
                             /* STARTING MONDAY,              */        02360000
                             /* JUNE 11, 1990.                */        02370000
 SETSYS -                                                               02380000
   BACKUP(TAPE(VTSS02))      /* ACTIVATE BACKUP AND DUMP      */        02390000
 SETSYS -                                                               02400000
   AUTOBACKUPSTART(0510 0800 0930)                                      02410000
                             /* PROVIDE TIME TO START AUTO    */        02420000
                             /* BACKUP, LATE START TIME,      */        02430000
                             /* AND QUIESCE TIME.  AUTOBACKUP */        02440000
                             /* DISABLED UNTIL TIMES SPECIFIED*/        02450000
 SETSYS -                                                               02460000
   BACKUPPREFIX(HSMSCTB)                                                02470000
                             /* PROVIDE THE HIGH-LEVEL        */        02480000
                             /* QUALIFIER OF THE NAMES OF     */        02490000
                             /* BACKUP DATA SETS.             */        02500000
 SETSYS -                                                               02510000
   VERSIONS(1)               /* KEEP ONE VERSION OF BACKED-UP */ -      02520000
   FREQUENCY(1)              /* DATA SET.                     */        02530000
 SETSYS -                                                               02540000
   MAXBACKUPTASKS(05)        /* MAX OF 3 BACKUP TASKS AT ONCE */ -      02550000
   NOSKIPABPRIMARY           /* BACK UP ALL PRIMARY VOLUMES   */        02560000
                             /* THAT HAVE AUTO BACKUP         */        02570000
 SETSYS SPILL(TAPE(VTSS02))  /* ATTRIBUTE.                    */        02580000
                             /* DATA SETS FROM FULL DAILY     */        02590000
                             /* DASD VOLUMES TO SPILL VOLUMES.*/        02600000
 /*                                                           */        02610000
 /*                                                           */        02620000
 SETSYS RECYCLEOUTPUT(BACKUP(VTSS02) MIGRATION(VTSS02))                 02630000
 /*                                                           */        02640000
 SETSYS TAPEMIGRATION(ML2TAPE(TAPE(VTSS02)))                            02650000
 /*                                                           */        02660000
 /*                                                           */        02670000
 SETSYS -                                                               02680000
   INCREMENTALBACKUP(CHANGEDONLY)                                       02690000
 /*INCREMENTALBACKUP(ORIGINAL)    MAKE ORIGINAL BACKUP COPIES */        02700000
                             /* OF DATA SETS DESPITE SETTING  */        02710000
                             /* OF CHANGE BIT.                */        02720000
 /*                                                           */        02730000
 /*************************************************************/        02740000
 /*           DFHSM FULL VOLUME DUMP PARAMETERS               */        02750000
 /*************************************************************/        02760000
 /*                                                           */        02770000
 DEFINE -                                                               02780000
   DUMPCYCLE(NNNNNNY         /* 7-DAY DUMP CYCLE WITH DUMP    */ -      02790000
    CYCLESTARTDATE(1990/06/11)) /* DONE ONLY ON SEVENTH DAY,    */      02800000
                             /* STARTING ON MONDAY, JUNE 11,  */        02810000
                             /* 1990, SO DUMPS CAN OCCUR ON   */        02820000
                             /* SUNDAY.                       */        02830000
 DEFINE DUMPCLASS(WEEKLY  DAY(7) RETPD(30) AUTOREUSE NORESET -          02840000
   DATASETRESTORE VTOCCOPIES(5))                                        02850000
 DEFINE DUMPCLASS(WEEKLY2  DAY(7) RETPD(45) AUTOREUSE NORESET -         02860000
   DATASETRESTORE VTOCCOPIES(7))                                        02870000
                             /* DEFINE A DUMP CLASS NAMED     */        02880000
                             /* SUNDAY THAT WILL BE AUTO      */        02890000
                             /* DUMPED ON THE SEVENTH DAY OF  */        02900000
                             /* OF THE CYCLE.  EACH DUMP COPY */        02910000
                             /* IS HELD FOR 27 DAYS, AND      */        02920000
                             /* THE TAPE IS REUSED WHEN       */        02930000
                             /* SCRATCHED. RESET NO DATA SET  */        02940000
                             /* CHANGE BITS AND ALLOW TSO     */        02950000
                             /* USERS TO RESTORE DATA SETS    */        02960000
                             /* FROM DUMP TAPE. AT MOST, KEEP */        02970000
                             /* FOUR DUMP VTOC COPY DATA SETS */        02980000
                             /* FOR A VOLUME.                 */        02990000
 DEFINE DUMPCLASS(QUARTERS FREQUENCY(90) RETPD(356) -                   03000000
   NOAUTOREUSE NODATASETRESTORE NORESET -                               03010000
   DISPOSITION('OFF-SITE') VTOCCOPIES(0))                               03020000
                             /* DEFINE A DUMP CLASS NAMED     */        03030000
                             /* QUARTERS THAT WILL BE AUTO    */        03040000
                             /* DUMPED EVERY THREE MONTHS AND */        03050000
                             /* HELD FOR ONE WEEK LESS THAN   */        03060000
                             /* A YEAR. USE ONLY FOR FULL     */        03070000
                             /* RESTORES. HOLD THE TAPE       */        03080000
                             /* OFF-SITE. KEEP NO VTOC COPIES */        03090000
                             /* FOR THIS CLASS.               */        03100000
 SETSYS -                                                               03110000
   AUTODUMPSTART(1800 2000 2200)                                        03120000
                             /* PROVIDE TIME TO START AUTO    */        03130000
                             /* DUMP, LATE START TIME,        */        03140000
                             /* AND QUIESCE TIME.  AUTO DUMP  */        03150000
                             /* DISABLED UNTIL TIMES SPECIFIED*/        03160000
 SETSYS -                                                               03170000
   DUMPIO(3,2)               /* BUFFER 5 TRACKS WHEN DUMPING, */        03180000
                             /* 2 TRACKS DURING DATA MOVEMENT */        03190000
 SETSYS -                                                               03200000
   MAXDUMPTASKS(3)           /* ALLOW MAXIMUM OF 3 DUMP TASKS */        03210000
                             /* AT ONE TIME.                  */        03220000
 ADDVOL HSM001 -                                                        03230000
        UNIT(3390) -                                                    03240000
        MIGRATION  -                                                    03250000
        (MIGRATIONLEVEL1 -                                              03260000
         NOSMALLDATASETPACKING) -                                       03270000
        THRESHOLD(80)                                                   03280000
                                                                        03290000
 ADDVOL HSM002 -                                                        03300000
        UNIT(3390) -                                                    03310000
        MIGRATION  -                                                    03320000
        (MIGRATIONLEVEL1 -                                              03330000
         NOSMALLDATASETPACKING) -                                       03340000
        THRESHOLD(80)                                                   03350000
                                                                        03360000
 ADDVOL HSM003 -                                                        03370000
        UNIT(3390) -                                                    03380000
        MIGRATION  -                                                    03390000
        (MIGRATIONLEVEL1 -                                              03400000
         NOSMALLDATASETPACKING) -                                       03410000
        THRESHOLD(80)                                                   03420000
                                                                        03430000
 ADDVOL HSM004 -                                                        03440000
        UNIT(3390) -                                                    03450000
        MIGRATION  -                                                    03460000
        (MIGRATIONLEVEL1 -                                              03470000
         NOSMALLDATASETPACKING) -                                       03480000
        THRESHOLD(80)                                                   03490000
                                                                        03500000
 ADDVOL HSM005 -                                                        03510000
        UNIT(3390) -                                                    03520000
        MIGRATION  -                                                    03530000
        (MIGRATIONLEVEL1 -                                              03540000
         NOSMALLDATASETPACKING) -                                       03550000
        THRESHOLD(80)                                                   03560000
                                                                        03570000
 ADDVOL HSM006 -                                                        03580000
        UNIT(3390) -                                                    03590000
        MIGRATION  -                                                    03600000
        (MIGRATIONLEVEL1 -                                              03610000
         NOSMALLDATASETPACKING) -                                       03620000
        THRESHOLD(80)                                                   03630000
                                                                        03640000
 ADDVOL HSM007 -                                                        03650000
        UNIT(3390) -                                                    03660000
        MIGRATION  -                                                    03670000
        (MIGRATIONLEVEL1 -                                              03680000
         NOSMALLDATASETPACKING) -                                       03690000
        THRESHOLD(80)                                                   03700000
                                                                        03710000
 /*                                                           */        03720000

./ ADD NAME=ARCCMD0$
 AUTH SYSAJE                 /* ESTABLISH THE USER ID THAT CAN*/ -      00020300
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00020400
 AUTH SYS005                 /* ESTABLISH THE USER ID THAT CAN*/ -      00020500
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00020600
 AUTH SYSJRI                 /* ESTABLISH THE USER ID THAT CAN*/ -      00020900
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00021000
 AUTH SYSLHU                 /* ESTABLISH THE USER ID THAT CAN*/ -      00021100
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00021200
 AUTH SYSTME                 /* ESTABLISH THE USER ID THAT CAN*/ -      00022000
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00023000
 AUTH PROPRI                 /* ESTABLISH THE USER ID THAT CAN*/ -      00030000
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00040000
 AUTH STCPRC                 /* ESTABLISH THE USER ID THAT CAN*/ -      00041000
  DATABASEAUTHORITY(USER)    /* ISSUE AUTH COMMANDS.          */        00042000
 SETSYS JES2                 /* JOB ENTRY SUBSYSTEM ID.       */ -      00050000
   NOCONVERSION              /* DO NOT REBLOCK DATA SETS      */        00060000
                             /* DURING RECALL OR RECOVERY.    */        00070000
 SETSYS -                                                               00080000
   EXITON(TV)                /* ARCTVEXT ACTIVE               */        00090000
 SETSYS -                                                               00100000
   NOREQUEST                 /* DO NOT ASK OPERATOR           */        00110000
                             /* PERMISSION TO START AUTOMATIC */        00120000
                             /* FUNCTIONS.                    */        00130000
 SETSYS -                                                               00140000
   NODEBUG                   /* MOVE OR DELETE DATA WHEN      */ -      00150000
                             /* PERFORMING AUTO FUNCTIONS.    */ -      00160000
   NOEMERGENCY               /* ALLOW ALL DFHSM FUNCTIONS.    */        00170000
 SETSYS -                                                               00180000
   NOSWAP                    /* RUN DFHSM NONSWAPPABLE.       */        00190000
 SETSYS -                                                               00200000
   USERDATASETSERIALIZATION  /* DFHSM USES ITS OWN            */        00210000
                             /* FACILITIES FOR DATA SET       */        00220000
                             /* SERIALIZATION.                */        00230000
/* SETSYS - */                                                          00240000
/*    DATAMOVER(DFDSS)     */                                           00250000
                             /* FACILITIES FOR MOVING         */        00260000
                             /* DATA.                         */        00270000
 SETSYS -                                                               00280000
   OPTIMUMDASDBLOCKING       /* DFHSM USES ITS DEFINED        */        00290000
                             /* OPTIMUM BLOCK SIZE WHEN       */        00300000
                             /* MOVING DATA TO OWNED DASD.    */        00310000
 /*                                                           */        00320000
 /*************************************************************/        00330000
 /*                      DFHSM EXITS                          */        00340000
 /*************************************************************/        00350000
 /*                     NONE ACTIVATED                        */        00360000
 /*************************************************************/        00370000
 /*     DFHSM LOGGING, JOURNALING, AND REPORTING OPTIONS      */        00380000
 /*************************************************************/        00390000
 /*                                                           */        00400000
 SETSYS -                                                               00410000
   JOURNAL(RECOVERY)         /* WRITE CDS CHANGES TO JOURNAL  */        00420000
                             /* IMMEDIATELY.                  */        00430000
 SETSYS -                                                               00440000
   SMF(240)                  /* WRITE DSR'S & VSR'S TO SMF    */        00450000
                             /* RECORD TYPE 240; WRITE FSR'S  */        00460000
                             /* TO TYPE 241.                  */        00470000
                             /* CLASS A.                      */        00480000
 SETSYS -                                                               00490000
   SYS1DUMP                  /* WRITE DFHSM DUMPS TO SYSTEM   */        00500000
                             /* DUMP DATA SET.                */        00510000
 SETSYS SYSOUT(X 1)                                                     00520000
                                                                        00530000
 SETSYS -                                                               00540000
   ACTLOGMSGLVL(FULL)           /*   ACTIVITY LOGGING         */ -      00550000
   ACTLOGTYPE(SYSOUT)      /* WRITTEN TO SYSOUT CLASS AS    */          00560000
                             /* SPECIFIED BY SYSOUT PARM      */        00570000
 /*                                                           */        00580000
 /*************************************************************/        00590000
 /*                  DFHSM MONITOR OPTIONS                    */        00600000
 /*************************************************************/        00610000
 /*                                                           */        00620000
                             /* SPECIFY WHICH INFORMATIONAL   */        00630000
                             /* MESSAGES TO PRINT AT THE      */        00640000
                             /* OPERATOR CONSOLE.             */        00650000
 SETSYS MONITOR(MIGRATIONCONTROLDATASET(90))                            00660000
                                                                        00670000
 SETSYS MONITOR -                                                       00680000
        (STARTUP             /* LIST STARTUP PARAMETERS.      */ -      00690000
         NOVOLUME)           /* DO NOT SHOW DATA SET LEVEL    */        00700000
                             /* MESSAGES ON SYSTEM CONSOLE.   */        00701000
 SETSYS MONITOR -                                                       00702000
        (NOSPACE             /* DO NOT PRINT SPACE USAGE MSGS.*/ -      00703000
       JOURNAL(70 1) MCDS(90))  /* WARN WHEN JOURNAL IS 90% FULL */     00704000
                             /* CONSIDERING 1 EXTENT IS       */        00705000
                             /* AVAILABLE.                    */        00706000
 /*                                                           */        00707000
 /*************************************************************/        00708000
 /*        DFHSM COMMON SERVICE AREA LIMITING OPTIONS         */        00709000
 /*************************************************************/        00710000
 /*                                                           */        00720000
 SETSYS -                                                               00730000
            CSALIMITS        /* LIMIT DFHSM USAGE OF CSA.     */ -      00740000
             (MWE(4))        /* MAXIMUM OF 4 NOWAIT TYPE MWES */        00750000
                             /* PER ADDRESS SPACE TO BE KEPT  */        00760000
                             /* ON CSA QUEUE.                 */        00770000
 SETSYS CSALIMITS -                                                     00780000
              (MAXIMUM(200)  /* NEVER USE MORE THAN 100K.     */ -      00790000
               ACTIVE(90)    /* LIMIT NOWAIT FUNCTIONS TO 90%.*/ -      00800000
               INACTIVE(30)) /* ALLOW 30% DURING INACTIVITY.  */        00810000
 /*                                                           */        00820000
 /*************************************************************/        00830000
 /*           DFHSM TAPE HANDLING SPECIFICATIONS              */        00840000
 /*************************************************************/        00850000
 /*                                                           */        00860000
 SETSYS -                                                               00870000
   DEFERMOUNT                /* DEFER MOUNT OF TAPE UNTIL     */        00880000
                             /* OPEN PROCESSING.              */        00890000
 SETSYS -                                                               00900000
   TAPEHARDWARECOMPACT       /* USE IMPROVED DATA RECORDING   */        00910000
                             /* CAPABILITY WHEN 3480X IS      */        00920000
                             /* THE OUTPUT DEVICE.            */        00930000
 SETSYS -                                                               00940000
   PARTIALTAPE(              /* DO NOT MARK AS FULL ANY TAPES */ -      00950000
    BACKUP(MARKFULL)         /* THAT ARE ONLY PARTLY FULL     */ -      00960000
    MIGRATION(MARKFULL))                                                00970000
 SETSYS TAPEUTILIZATION(UNITTYPE(3490) PERCENTFULL(100))                00971000
 SETSYS TAPEUTILIZATION(LIBRARYBACKUP PERCENTFULL(100))                 00972000
 SETSYS TAPEUTILIZATION(LIBRARYMIGRATION PERCENTFULL(100))              00973000
 SETSYS TAPESPANSIZE(4000)                                              00974000
 SETSYS -                                                               00980000
   INPUTTAPEALLOCATION(NOWAIT)   /* DON'T WAIT ON TAPE        */ -      00990000
   OUTPUTTAPEALLOCATION(NOWAIT)  /* ALLOCATION FOR INPUT,     */ -      01000000
   RECYCLETAPEALLOCATION(NOWAIT) /* OUTPUT, OR RECYCLE.       */        01010000
 SETSYS -                                                               01020000
   SELECTVOLUME(             /* VOLUME SELECTION AT TAPE END  */ -      01030000
   BACKUP(SCRATCH)          /* OF VOLUME COMES FROM THE      */ -       01040000
   MIGRATION(SCRATCH)       /* DFHSM-OWNED POOL OF TAPE VOLS.*/ -       01050000
   DUMP(SCRATCH))                                                       01060000
 SETSYS -                                                               01070000
   RECYCLEPERCENT(40)        /* INFORM STORAGE ADMINISTRATOR  */        01080000
                             /* THAT A BACKUP TAPE SHOULD BE  */        01090000
                             /* RECYCLED WHEN THE AMOUNT OF   */        01100000
                             /* VALID DATA ON THE TAPE FALLS  */        01110000
                             /* BELOW 25%.                    */        01120000
 SETSYS -                                                               01121000
   RECYCLEINPUTDEALLOCFREQUENCY(BACKUP(1) MIGRATION(1))                 01122000
 SETSYS -                                                               01130000
   TAPEDELETION(             /* RETURN TAPES THAT NO LONGER   */ -      01140000
    BACKUP(SCRATCH)          /* CONTAIN VALID DATA TO THE     */ -      01150000
    MIGRATION(SCRATCH)       /* DFHSM-OWNED POOL.             */ -      01160000
    DUMP(SCRATCH))                                                      01170000
 SETSYS -                                                               01180000
   USERUNITTABLE(VTSS)        /*NO ESOTERIC TAPE UNITS        */        01190000
                             /* DEFINED TO DFHSM. CTAPE1      */        01200000
 SETSYS -                                                               01210000
   MOUNTWAITTIME(15)         /* WAIT 10 MINUTES BEFORE        */        01220000
                             /* ISSUING ADDITIONAL MESSAGES   */        01230000
                             /* TO OPERATORS FOR TAPE MOUNTS. */        01240000
 SETSYS -                                                               01250000
   UNITNAME(VTSS)            /* START OUT WITH 3480X AS UNIT  */        01260000
                             /* TO BE USED FOR SCRATCH TAPES  */        01270000
                             /* DURING BACKUP OR DUMP.        */        01280000
 SETSYS -                                                               01290000
   TAPEINPUTPROMPT(MIGRATIONTAPES(NO))  /* TAPE OPER MSGS    */         01300000
 SETSYS -                                                               01310000
   TAPEINPUTPROMPT(BACKUPTAPES(NO))     /* TAPE OPER MSGS    */         01320000
 SETSYS -                                                               01330000
   TAPEINPUTPROMPT(DUMPTAPES(NO))       /* TAPE OPER MSGS    */         01340000
 /*                                                           */        01350000
 /*************************************************************/        01360000
 /*         DFHSM CONTROL DATA SET BACKUP PARAMETERS          */        01370000
 /*************************************************************/        01380000
 /*                                                           */        01390000
 SETSYS CDSVERSIONBACKUP(    /* MAINTAIN FOUR BACKUP VERSIONS */ -      01400000
        BACKUPCOPIES(4)      /* OF THE CONTROL DATA SETS ON   */ -      01410000
  BACKUPDEVICECATEGORY(DASD)) /* TAPE OF UNIT TYPE CTAPE1     */        01420000
 /*                                                           */        01430000
 /*************************************************************/        01440000
 /*               DFHSM RACF SPECIFICATIONS                   */        01450000
 /*************************************************************/        01460000
 /*                                                           */        01470000
 SETSYS -                                                               01480000
   NORACFIND                 /* DO NOT PUT RACF-INDICATION    */        01490000
                             /* ON BACKUP AND MIGRATION       */        01500000
                             /* COPIES OF DATA SETS.          */        01510000
 SETSYS -                                                               01520000
   TAPESECURITY(EXPIRATION)  /* USE RACF TO PROVIDE TAPE      */        01530000
                             /* SECURITY.                     */        01540000
 SETSYS -                                                               01550000
   NOERASEONSCRATCH          /* DON'T ALLOW ERASE-ON-SCRATCH  */        01560000
                             /* ON ANY DFHSM BACKUP VERSIONS  */        01570000
                             /* AND MIGRATION COPIES.         */        01580000
 SETSYS -                                                               01590000
   PROFILEBACKUP             /* BACKUP DISCRETE RACF PROFILES */        01600000
 /*                                                           */        01610000
 /*************************************************************/        01620000
 /*                DFHSM COMPACTION OPTIONS                   */        01630000
 /*************************************************************/        01640000
 /*                                                           */        01650000
 SETSYS -                                                               01660000
   COMPACT(DASDMIGRATE)      /* USE COMPACTION FOR            */        01670000
                             /* MIGRATION TO DASD.            */        01680000
 SETSYS -                                                               01690000
     COMPACTPERCENT(20)      /* DON'T COMPACT DATA UNLESS     */        01700000
                             /* HISTORICAL DATA SHOWS SAVINGS */        01710000
                             /* OF AT LEAST 20%.              */        01720000
 SETSYS -                                                               01730000
   OBJECTNAMES(OBJ,OBJECT,LOAD,LOADLIB,LOADMODS,LINKLIB) -              01740000
   SOURCENAMES(ASM,COBOL,FORT,PLI,SOURCE,SRC,SRCLIB,SRCE,CNTL,JCL)      01750000
 /*                                                           */        01760000
 /*************************************************************/        01761000
 /*   DFHSM PATCH ADD 05.09.2011 FOR ZOS 1.12                 */        01762000
 /*   DFHSM PATCH SUPPRESS 07.11.11 APRES PTF                 */        01762100
 /*************************************************************/        01763000
 /* PATCH .MGCB.+ED BITS(......0.)                            */        01765000
 /*                                                           */        01766000
 /*************************************************************/        01770000
 /*               DFHSM MIGRATION PARAMETERS                  */        01780000
 /*************************************************************/        01790000
 /*                                                           */        01800000
 SETSYS -                                                               01810000
   TAPEMIGRATION(ML2TAPE)    /* NO TAPE MIGRATION  CTAPE1     */        01820000
 SETSYS -                                                               01830000
   MIGUNITNAME(VTSS)     /* NO TAPE MIGRATION             */            01840000
 SETSYS -                                                               01850000
   ML2RECYCLEPERCENT(40) /* NO TAPE MIGRATION             */            01860000
 SETSYS -                                                               01870000
   TAPEMAXRECALLTASKS(10) /* NO TAPE MIGRATION             */           01880000
 SETSYS -                                                               01890000
   PRIMARYSPMGMTSTART         /*SPECIFY PROCESSING WINDOW FOR */ -      01900000
   (0540 0756)                /*PRIMARY SPACE MANAGEMENT      */        01910000
 DEFINE -                                                               01920000
   PRIMARYSPMGMTCYCLE        /* RUN PRIMARY SPACE MGMT        */ -      01930000
   (YYYYYYY                  /* DIM. A COMPTER 09.10.2017 PHR */ -      01941000
   CYCLESTARTDATE(1990/06/11))                                          01950000
 SETSYS -                                                               01960000
     DAYS(1)                 /* DATA SET MUST BE UNREFERENCED */        01970000
                             /* FOR 10 DAYS BEFORE IT WILL BE */        01980000
                             /* MIGRATED.                     */        01990000
 SETSYS -                                                               02000000
     MIGRATEPREFIX(HSMSCT)                                              02010000
                             /* PROVIDE THE HIGH-LEVEL        */        02020000
                             /* QUALIFIER OF THE NAMES OF     */        02030000
                             /* MIGRATED DATA SETS.           */        02040000
 SETSYS -                                                               02050000
   NOINTERVALMIGRATION       /* PERFORM MIGRATION THROUGHOUT  */        02060000
                             /* THE DAY.                      */        02070000
 SETSYS -                                                               02080000
   SECONDARYSPMGMTSTART(0515  /*SPECIFY PROCESSING WINDOW FOR */ -      02090000
     0539)                                                              02100000
                              /*SECONDARY SPACE MANAGEMENT    */        02110000
 DEFINE -                                                               02120000
   SECONDARYSPMGMTCYCLE      /* RUN SECONDARY SPACE MANAGEMENT*/ -      02130000
   (YYYYYYY                  /* DIM. A COMPTER 09.10.2017 PHR */ -      02140000
   CYCLESTARTDATE(1990/06/11)) /* STARTING JUNE 11, 1990.       */      02150000
 SETSYS -                                                               02160000
   MIGRATIONCLEANUPDAYS(14 7) /* KEEP MCDS STATISTICS RECORDS */        02170000
                             /* FOR RECALLED DATA SETS FOR    */        02180000
                             /* 14 DAYS, AND VOLUME OR DAILY  */        02190000
                             /* STATISTICS RECORDS FOR 7 DAYS.*/        02200000
 SETSYS -                                                               02210000
     MIGRATIONLEVEL1DAYS(14) /* DATA SET MIGRATED TO ML2      */        02220000
                             /* AFTER 45 DAYS UNREFERENCED.   */        02230000
 SETSYS -                                                               02240000
     MAXEXTENTS(5)           /* DATA SET EXTENT REDUCTION     */        02250000
                             /* OCCURS WHEN EXTENTS REACH 10. */        02260000
 SETSYS -                                                               02270000
     MAXRECALLTASKS(14)      /* MAXIMUM OF 15 RECALL TASKS   */         02280000
                             /* ALLOWED AT ONE TIME.          */        02290000
 SETSYS -                                                               02300000
   RECALL(PRIVATEVOLUME(LIKE)) /* AUTO RECALL PLACES          */        02310000
                             /* UNPOOLED DATA SETS ON PRIMARY */        02320000
                             /* VOLUME MARKED PUBLIC, STORAGE,*/        02330000
                             /* OR PRIVATE, THAT HAS LIKE     */        02340000
                             /* CHARACTERISTICS.              */        02350000
 SETSYS -                                                               02360000
   SCRATCHFREQUENCY(7)       /* KEEP LIST DATA SETS 7 DAYS.   */ -      02370000
   EXPIREDDATASETS(SCRATCH)  /* DON'T SCRATCH EXPIRED DATA   */         02380000
                             /* SETS.                         */        02390000
 SETSYS -                                                               02400000
   NOSMALLDATASETPACKING     /* DON'T DO SMALL D.S. PACKING.  */        02410000
 SETSYS -                                                               02420000
   MAXMIGRATIONTASKS(9)      /* MAXIMUM OF THREE AUTOMATIC    */        02430000
                             /* VOLUME MIGRATION TASKS        */        02440000
                             /* TO BE PREFORMED CONCURRENTLY. */        02450000
 /*                                                           */        02460000
 /*************************************************************/        02470000
 /*                 DFHSM BACKUP PARAMETERS                   */        02480000
 /*************************************************************/        02490000
 /*                                                           */        02500000
 DEFINE BACKUP(YYYYYYN       /* BACKUP CYCLE OF ONE DAY.      */ -      02510000
   CYCLESTARTDATE(1990/06/11)) /* RUN BACKUP EVERY DAY TO A     */      02520000
                             /* SINGLE BACKUP VOLUME,         */        02530000
                             /* STARTING MONDAY,              */        02540000
                             /* JUNE 11, 1990.                */        02550000
 SETSYS -                                                               02560000
   BACKUP(TAPE(VTSS))        /* ACTIVATE BACKUP AND DUMP      */        02570000
 SETSYS -                                                               02580000
   AUTOBACKUPSTART(0500 0800 0930)                                      02590000
                             /* PROVIDE TIME TO START AUTO    */        02600000
                             /* BACKUP, LATE START TIME,      */        02610000
                             /* AND QUIESCE TIME.  AUTOBACKUP */        02620000
                             /* DISABLED UNTIL TIMES SPECIFIED*/        02630000
 SETSYS -                                                               02640000
   BACKUPPREFIX(HSMSCTB)                                                02650000
                             /* PROVIDE THE HIGH-LEVEL        */        02660000
                             /* QUALIFIER OF THE NAMES OF     */        02670000
                             /* BACKUP DATA SETS.             */        02680000
 SETSYS -                                                               02690000
   VERSIONS(1)               /* KEEP ONE VERSION OF BACKED-UP */ -      02700000
   FREQUENCY(1)              /* DATA SET.                     */        02710000
 SETSYS -                                                               02720000
   MAXBACKUPTASKS(05)        /* MAX OF 3 BACKUP TASKS AT ONCE */ -      02730000
   NOSKIPABPRIMARY           /* BACK UP ALL PRIMARY VOLUMES   */        02740000
                             /* THAT HAVE AUTO BACKUP         */        02750000
 SETSYS SPILL(TAPE(VTSS))    /* ATTRIBUTE.                    */        02760000
                             /* DATA SETS FROM FULL DAILY     */        02770000
                             /* DASD VOLUMES TO SPILL VOLUMES.*/        02780000
 /*                                                           */        02790000
 /*                                                           */        02800000
 SETSYS RECYCLEOUTPUT(BACKUP(VTSS) MIGRATION(VTSS))                     02810000
 /*                                                           */        02820000
 SETSYS TAPEMIGRATION(ML2TAPE(TAPE(VTSS)))                              02830000
 /*                                                           */        02840000
 /*                                                           */        02850000
 SETSYS -                                                               02860000
   INCREMENTALBACKUP(CHANGEDONLY)                                       02870000
 /*INCREMENTALBACKUP(ORIGINAL)    MAKE ORIGINAL BACKUP COPIES */        02880000
                             /* OF DATA SETS DESPITE SETTING  */        02890000
                             /* OF CHANGE BIT.                */        02900000
 /*                                                           */        02910000
 /*************************************************************/        02920000
 /*           DFHSM FULL VOLUME DUMP PARAMETERS               */        02930000
 /*************************************************************/        02940000
 /*                                                           */        02950000
 DEFINE -                                                               02960000
   DUMPCYCLE(NNNNNNY         /* 7-DAY DUMP CYCLE WITH DUMP    */ -      02970000
    CYCLESTARTDATE(1990/06/11)) /* DONE ONLY ON SEVENTH DAY,    */      02980000
                             /* STARTING ON MONDAY, JUNE 11,  */        02990000
                             /* 1990, SO DUMPS CAN OCCUR ON   */        03000000
                             /* SUNDAY.                       */        03010000
 DEFINE DUMPCLASS(WEEKLY  DAY(7) RETPD(30) AUTOREUSE NORESET -          03020000
   DATASETRESTORE VTOCCOPIES(5))                                        03030000
 DEFINE DUMPCLASS(WEEKLY2  DAY(7) RETPD(45) AUTOREUSE NORESET -         03040000
   DATASETRESTORE VTOCCOPIES(7))                                        03050000
                             /* DEFINE A DUMP CLASS NAMED     */        03060000
                             /* SUNDAY THAT WILL BE AUTO      */        03070000
                             /* DUMPED ON THE SEVENTH DAY OF  */        03080000
                             /* OF THE CYCLE.  EACH DUMP COPY */        03090000
                             /* IS HELD FOR 27 DAYS, AND      */        03100000
                             /* THE TAPE IS REUSED WHEN       */        03110000
                             /* SCRATCHED. RESET NO DATA SET  */        03120000
                             /* CHANGE BITS AND ALLOW TSO     */        03130000
                             /* USERS TO RESTORE DATA SETS    */        03140000
                             /* FROM DUMP TAPE. AT MOST, KEEP */        03150000
                             /* FOUR DUMP VTOC COPY DATA SETS */        03160000
                             /* FOR A VOLUME.                 */        03170000
 DEFINE DUMPCLASS(QUARTERS FREQUENCY(90) RETPD(356) -                   03180000
   NOAUTOREUSE NODATASETRESTORE NORESET -                               03190000
   DISPOSITION('OFF-SITE') VTOCCOPIES(0))                               03200000
                             /* DEFINE A DUMP CLASS NAMED     */        03210000
                             /* QUARTERS THAT WILL BE AUTO    */        03220000
                             /* DUMPED EVERY THREE MONTHS AND */        03230000
                             /* HELD FOR ONE WEEK LESS THAN   */        03240000
                             /* A YEAR. USE ONLY FOR FULL     */        03250000
                             /* RESTORES. HOLD THE TAPE       */        03260000
                             /* OFF-SITE. KEEP NO VTOC COPIES */        03270000
                             /* FOR THIS CLASS.               */        03280000
 SETSYS -                                                               03290000
   AUTODUMPSTART(1755 2000 2200)                                        03300000
                             /* PROVIDE TIME TO START AUTO    */        03310000
                             /* DUMP, LATE START TIME,        */        03320000
                             /* AND QUIESCE TIME.  AUTO DUMP  */        03330000
                             /* DISABLED UNTIL TIMES SPECIFIED*/        03340000
 SETSYS -                                                               03350000
   DUMPIO(3,2)               /* BUFFER 5 TRACKS WHEN DUMPING, */        03360000
                             /* 2 TRACKS DURING DATA MOVEMENT */        03370000
 SETSYS -                                                               03380000
   MAXDUMPTASKS(3)           /* ALLOW MAXIMUM OF 3 DUMP TASKS */        03390000
                             /* AT ONE TIME.                  */        03400000
 ADDVOL HSM001 -                                                        03410000
        UNIT(3390) -                                                    03420000
        MIGRATION  -                                                    03430000
        (MIGRATIONLEVEL1 -                                              03440000
         NOSMALLDATASETPACKING) -                                       03450000
        THRESHOLD(80)                                                   03460000
                                                                        03470000
 ADDVOL HSM002 -                                                        03480000
        UNIT(3390) -                                                    03490000
        MIGRATION  -                                                    03500000
        (MIGRATIONLEVEL1 -                                              03510000
         NOSMALLDATASETPACKING) -                                       03520000
        THRESHOLD(80)                                                   03530000
                                                                        03540000
 ADDVOL HSM003 -                                                        03550000
        UNIT(3390) -                                                    03560000
        MIGRATION  -                                                    03570000
        (MIGRATIONLEVEL1 -                                              03580000
         NOSMALLDATASETPACKING) -                                       03590000
        THRESHOLD(80)                                                   03600000
                                                                        03610000
 ADDVOL HSM004 -                                                        03620000
        UNIT(3390) -                                                    03630000
        MIGRATION  -                                                    03640000
        (MIGRATIONLEVEL1 -                                              03650000
         NOSMALLDATASETPACKING) -                                       03660000
        THRESHOLD(80)                                                   03670000
                                                                        03680000
 ADDVOL HSM005 -                                                        03690000
        UNIT(3390) -                                                    03700000
        MIGRATION  -                                                    03710000
        (MIGRATIONLEVEL1 -                                              03720000
         NOSMALLDATASETPACKING) -                                       03730000
        THRESHOLD(80)                                                   03740000
                                                                        03750000
 ADDVOL HSM006 -                                                        03751000
        UNIT(3390) -                                                    03752000
        MIGRATION  -                                                    03753000
        (MIGRATIONLEVEL1 -                                              03754000
         NOSMALLDATASETPACKING) -                                       03755000
        THRESHOLD(80)                                                   03756000
                                                                        03757000
 ADDVOL HSM007 -                                                        03758000
        UNIT(3390) -                                                    03759000
        MIGRATION  -                                                    03759100
        (MIGRATIONLEVEL1 -                                              03759200
         NOSMALLDATASETPACKING) -                                       03759300
        THRESHOLD(80)                                                   03759400
                                                                        03759500
 ADDVOL HSM008 -                                                        03759600
        UNIT(3390) -                                                    03759700
        MIGRATION  -                                                    03759800
        (MIGRATIONLEVEL1 -                                              03759900
         NOSMALLDATASETPACKING) -                                       03760000
        THRESHOLD(80)                                                   03770000
                                                                        03771000
 ADDVOL HSM009 -                                                        03772000
        UNIT(3390) -                                                    03773000
        MIGRATION  -                                                    03774000
        (MIGRATIONLEVEL1 -                                              03775000
         NOSMALLDATASETPACKING) -                                       03776000
        THRESHOLD(80)                                                   03777000
                                                                        03778000
 ADDVOL HSM010 -                                                        03779000
        UNIT(3390) -                                                    03779100
        MIGRATION  -                                                    03779200
        (MIGRATIONLEVEL1 -                                              03779300
         NOSMALLDATASETPACKING) -                                       03779400
        THRESHOLD(80)                                                   03779500
                                                                        03779600
 ADDVOL HSM011 -                                                        03779700
        UNIT(3390) -                                                    03779800
        MIGRATION  -                                                    03779900
        (MIGRATIONLEVEL1 -                                              03780000
         NOSMALLDATASETPACKING) -                                       03781000
        THRESHOLD(80)                                                   03782000
                                                                        03782100
 ADDVOL HSM012 -                                                        03782200
        UNIT(3390) -                                                    03782300
        MIGRATION  -                                                    03782400
        (MIGRATIONLEVEL1 -                                              03782500
         NOSMALLDATASETPACKING) -                                       03782600
        THRESHOLD(80)                                                   03782700
                                                                        03782800
 ADDVOL HSM013 -                                                        03782900
        UNIT(3390) -                                                    03783000
        MIGRATION  -                                                    03783100
        (MIGRATIONLEVEL1 -                                              03783200
         NOSMALLDATASETPACKING) -                                       03783300
        THRESHOLD(80)                                                   03783400
                                                                        03784000
 ADDVOL HSM014 -                                                        03785000
        UNIT(3390) -                                                    03786000
        MIGRATION  -                                                    03787000
        (MIGRATIONLEVEL1 -                                              03788000
         NOSMALLDATASETPACKING) -                                       03789000
        THRESHOLD(80)                                                   03789100
                                                                        03789200
 ADDVOL HSM015 -                                                        03789300
        UNIT(3390) -                                                    03789400
        MIGRATION  -                                                    03789500
        (MIGRATIONLEVEL1 -                                              03789600
         NOSMALLDATASETPACKING) -                                       03789700
        THRESHOLD(80)                                                   03789800
                                                                        03789900
 ADDVOL HSM016 -                                                        03790000
        UNIT(3390) -                                                    03791000
        MIGRATION  -                                                    03792000
        (MIGRATIONLEVEL1 -                                              03793000
         NOSMALLDATASETPACKING) -                                       03794000
        THRESHOLD(80)                                                   03795000
                                                                        03797000
 ADDVOL HSM017 -                                                        03798000
        UNIT(3390) -                                                    03799000
        MIGRATION  -                                                    03799100
        (MIGRATIONLEVEL1 -                                              03799200
         NOSMALLDATASETPACKING) -                                       03799300
        THRESHOLD(80)                                                   03799400
                                                                        03799500
 ADDVOL HSM018 -                                                        03799600
        UNIT(3390) -                                                    03799700
        MIGRATION  -                                                    03799800
        (MIGRATIONLEVEL1 -                                              03799900
         NOSMALLDATASETPACKING) -                                       03800000
        THRESHOLD(80)                                                   03801000
                                                                        03802000
 /*                                                           */        03810000

./ ADD NAME=ARCCMD00
 AUTH SYSAJE                 /* ESTABLISH THE USER ID THAT CAN*/ -      00020345
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00020440
 AUTH SYS005                 /* ESTABLISH THE USER ID THAT CAN*/ -      00020545
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00020645
 AUTH SYSJRI                 /* ESTABLISH THE USER ID THAT CAN*/ -      00020945
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00021045
 AUTH SYSLHU                 /* ESTABLISH THE USER ID THAT CAN*/ -      00021145
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00021245
 AUTH SYSTME                 /* ESTABLISH THE USER ID THAT CAN*/ -      00022045
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00023045
 AUTH PROPRI                 /* ESTABLISH THE USER ID THAT CAN*/ -      00030018
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00040040
 AUTH STCPRC                 /* ESTABLISH THE USER ID THAT CAN*/ -      00041018
  DATABASEAUTHORITY(USER)    /* ISSUE AUTH COMMANDS.          */        00042018
 SETSYS JES2                 /* JOB ENTRY SUBSYSTEM ID.       */ -      00050000
   NOCONVERSION              /* DO NOT REBLOCK DATA SETS      */        00060000
                             /* DURING RECALL OR RECOVERY.    */        00070000
 SETSYS -                                                               00080000
   EXITON(TV)                /* ARCTVEXT ACTIVE               */        00090000
 SETSYS -                                                               00100000
   NOREQUEST                 /* DO NOT ASK OPERATOR           */        00110000
                             /* PERMISSION TO START AUTOMATIC */        00120000
                             /* FUNCTIONS.                    */        00130000
 SETSYS -                                                               00140000
   NODEBUG                   /* MOVE OR DELETE DATA WHEN      */ -      00150000
                             /* PERFORMING AUTO FUNCTIONS.    */ -      00160000
   NOEMERGENCY               /* ALLOW ALL DFHSM FUNCTIONS.    */        00170000
 SETSYS -                                                               00180000
   NOSWAP                    /* RUN DFHSM NONSWAPPABLE.       */        00190000
 SETSYS -                                                               00200000
   USERDATASETSERIALIZATION  /* DFHSM USES ITS OWN            */        00210000
                             /* FACILITIES FOR DATA SET       */        00220000
                             /* SERIALIZATION.                */        00230000
/* SETSYS - */                                                          00240000
/*    DATAMOVER(DFDSS)     */                                           00250000
                             /* FACILITIES FOR MOVING         */        00260000
                             /* DATA.                         */        00270000
 SETSYS -                                                               00280000
   OPTIMUMDASDBLOCKING       /* DFHSM USES ITS DEFINED        */        00290000
                             /* OPTIMUM BLOCK SIZE WHEN       */        00300000
                             /* MOVING DATA TO OWNED DASD.    */        00310000
 /*                                                           */        00320000
 /*************************************************************/        00330000
 /*                      DFHSM EXITS                          */        00340000
 /*************************************************************/        00350000
 /*                     NONE ACTIVATED                        */        00360000
 /*************************************************************/        00370000
 /*     DFHSM LOGGING, JOURNALING, AND REPORTING OPTIONS      */        00380000
 /*************************************************************/        00390000
 /*                                                           */        00400000
 SETSYS -                                                               00410000
   JOURNAL(RECOVERY)         /* WRITE CDS CHANGES TO JOURNAL  */        00420000
                             /* IMMEDIATELY.                  */        00430000
 SETSYS -                                                               00440000
   SMF(240)                  /* WRITE DSR'S & VSR'S TO SMF    */        00450000
                             /* RECORD TYPE 240; WRITE FSR'S  */        00460000
                             /* TO TYPE 241.                  */        00470000
                             /* CLASS A.                      */        00480000
 SETSYS -                                                               00490000
   SYS1DUMP                  /* WRITE DFHSM DUMPS TO SYSTEM   */        00500000
                             /* DUMP DATA SET.                */        00510000
 SETSYS SYSOUT(X 1)                                                     00520000
                                                                        00530000
 SETSYS -                                                               00540000
   ACTLOGMSGLVL(FULL)           /*   ACTIVITY LOGGING         */ -      00550000
   ACTLOGTYPE(SYSOUT)      /* WRITTEN TO SYSOUT CLASS AS    */          00560000
                             /* SPECIFIED BY SYSOUT PARM      */        00570000
 /*                                                           */        00580000
 /*************************************************************/        00590000
 /*                  DFHSM MONITOR OPTIONS                    */        00600000
 /*************************************************************/        00610000
 /*                                                           */        00620000
                             /* SPECIFY WHICH INFORMATIONAL   */        00630000
                             /* MESSAGES TO PRINT AT THE      */        00640000
                             /* OPERATOR CONSOLE.             */        00650000
 SETSYS MONITOR(MIGRATIONCONTROLDATASET(90))                            00660000
                                                                        00670000
 SETSYS MONITOR -                                                       00680000
        (STARTUP             /* LIST STARTUP PARAMETERS.      */ -      00690000
         NOVOLUME)           /* DO NOT SHOW DATA SET LEVEL    */        00700000
                             /* MESSAGES ON SYSTEM CONSOLE.   */        00701000
 SETSYS MONITOR -                                                       00702000
        (NOSPACE             /* DO NOT PRINT SPACE USAGE MSGS.*/ -      00703000
       JOURNAL(70 1) MCDS(90))  /* WARN WHEN JOURNAL IS 90% FULL */     00704017
                             /* CONSIDERING 1 EXTENT IS       */        00705000
                             /* AVAILABLE.                    */        00706000
 /*                                                           */        00707000
 /*************************************************************/        00708000
 /*        DFHSM COMMON SERVICE AREA LIMITING OPTIONS         */        00709000
 /*************************************************************/        00710000
 /*                                                           */        00720000
 SETSYS -                                                               00730000
            CSALIMITS        /* LIMIT DFHSM USAGE OF CSA.     */ -      00740000
             (MWE(4))        /* MAXIMUM OF 4 NOWAIT TYPE MWES */        00750000
                             /* PER ADDRESS SPACE TO BE KEPT  */        00760000
                             /* ON CSA QUEUE.                 */        00770000
 SETSYS CSALIMITS -                                                     00780000
              (MAXIMUM(200)  /* NEVER USE MORE THAN 100K.     */ -      00790000
               ACTIVE(90)    /* LIMIT NOWAIT FUNCTIONS TO 90%.*/ -      00800000
               INACTIVE(30)) /* ALLOW 30% DURING INACTIVITY.  */        00810000
 /*                                                           */        00820000
 /*************************************************************/        00830000
 /*           DFHSM TAPE HANDLING SPECIFICATIONS              */        00840000
 /*************************************************************/        00850000
 /*                                                           */        00860000
 SETSYS -                                                               00870000
   DEFERMOUNT                /* DEFER MOUNT OF TAPE UNTIL     */        00880000
                             /* OPEN PROCESSING.              */        00890000
 SETSYS -                                                               00900000
   TAPEHARDWARECOMPACT       /* USE IMPROVED DATA RECORDING   */        00910000
                             /* CAPABILITY WHEN 3480X IS      */        00920000
                             /* THE OUTPUT DEVICE.            */        00930000
 SETSYS -                                                               00940000
   PARTIALTAPE(              /* DO NOT MARK AS FULL ANY TAPES */ -      00950000
    BACKUP(MARKFULL)         /* THAT ARE ONLY PARTLY FULL     */ -      00960001
    MIGRATION(MARKFULL))                                                00970000
 SETSYS TAPEUTILIZATION(UNITTYPE(3490) PERCENTFULL(100))                00971042
 SETSYS TAPEUTILIZATION(LIBRARYBACKUP PERCENTFULL(100))                 00972042
 SETSYS TAPEUTILIZATION(LIBRARYMIGRATION PERCENTFULL(100))              00973042
 SETSYS TAPESPANSIZE(4000)                                              00974042
 SETSYS -                                                               00980000
   INPUTTAPEALLOCATION(NOWAIT)   /* DON'T WAIT ON TAPE        */ -      00990000
   OUTPUTTAPEALLOCATION(NOWAIT)  /* ALLOCATION FOR INPUT,     */ -      01000000
   RECYCLETAPEALLOCATION(NOWAIT) /* OUTPUT, OR RECYCLE.       */        01010000
 SETSYS -                                                               01020000
   SELECTVOLUME(             /* VOLUME SELECTION AT TAPE END  */ -      01030000
   BACKUP(SCRATCH)          /* OF VOLUME COMES FROM THE      */ -       01040000
   MIGRATION(SCRATCH)       /* DFHSM-OWNED POOL OF TAPE VOLS.*/ -       01050000
   DUMP(SCRATCH))                                                       01060000
 SETSYS -                                                               01070000
   RECYCLEPERCENT(40)        /* INFORM STORAGE ADMINISTRATOR  */        01080000
                             /* THAT A BACKUP TAPE SHOULD BE  */        01090000
                             /* RECYCLED WHEN THE AMOUNT OF   */        01100000
                             /* VALID DATA ON THE TAPE FALLS  */        01110000
                             /* BELOW 25%.                    */        01120000
 SETSYS -                                                               01121000
   RECYCLEINPUTDEALLOCFREQUENCY(BACKUP(1) MIGRATION(1))                 01122000
 SETSYS -                                                               01130000
   TAPEDELETION(             /* RETURN TAPES THAT NO LONGER   */ -      01140000
    BACKUP(SCRATCH)          /* CONTAIN VALID DATA TO THE     */ -      01150000
    MIGRATION(SCRATCH)       /* DFHSM-OWNED POOL.             */ -      01160000
    DUMP(SCRATCH))                                                      01170000
 SETSYS -                                                               01180000
   USERUNITTABLE(VTSS)        /*NO ESOTERIC TAPE UNITS        */        01190020
                             /* DEFINED TO DFHSM. CTAPE1      */        01200000
 SETSYS -                                                               01210000
   MOUNTWAITTIME(15)         /* WAIT 10 MINUTES BEFORE        */        01220000
                             /* ISSUING ADDITIONAL MESSAGES   */        01230000
                             /* TO OPERATORS FOR TAPE MOUNTS. */        01240000
 SETSYS -                                                               01250000
   UNITNAME(VTSS)            /* START OUT WITH 3480X AS UNIT  */        01260020
                             /* TO BE USED FOR SCRATCH TAPES  */        01270000
                             /* DURING BACKUP OR DUMP.        */        01280000
 SETSYS -                                                               01290000
   TAPEINPUTPROMPT(MIGRATIONTAPES(NO))  /* TAPE OPER MSGS    */         01300000
 SETSYS -                                                               01310000
   TAPEINPUTPROMPT(BACKUPTAPES(NO))     /* TAPE OPER MSGS    */         01320000
 SETSYS -                                                               01330000
   TAPEINPUTPROMPT(DUMPTAPES(NO))       /* TAPE OPER MSGS    */         01340000
 /*                                                           */        01350000
 /*************************************************************/        01360000
 /*         DFHSM CONTROL DATA SET BACKUP PARAMETERS          */        01370000
 /*************************************************************/        01380000
 /*                                                           */        01390000
 SETSYS CDSVERSIONBACKUP(    /* MAINTAIN FOUR BACKUP VERSIONS */ -      01400000
        BACKUPCOPIES(4)      /* OF THE CONTROL DATA SETS ON   */ -      01410000
  BACKUPDEVICECATEGORY(DASD)) /* TAPE OF UNIT TYPE CTAPE1     */        01420000
 /*                                                           */        01430000
 /*************************************************************/        01440000
 /*               DFHSM RACF SPECIFICATIONS                   */        01450000
 /*************************************************************/        01460000
 /*                                                           */        01470000
 SETSYS -                                                               01480000
   NORACFIND                 /* DO NOT PUT RACF-INDICATION    */        01490000
                             /* ON BACKUP AND MIGRATION       */        01500000
                             /* COPIES OF DATA SETS.          */        01510000
 SETSYS -                                                               01520000
   TAPESECURITY(EXPIRATION)  /* USE RACF TO PROVIDE TAPE      */        01530000
                             /* SECURITY.                     */        01540000
 SETSYS -                                                               01550000
   NOERASEONSCRATCH          /* DON'T ALLOW ERASE-ON-SCRATCH  */        01560000
                             /* ON ANY DFHSM BACKUP VERSIONS  */        01570000
                             /* AND MIGRATION COPIES.         */        01580000
 SETSYS -                                                               01590000
   PROFILEBACKUP             /* BACKUP DISCRETE RACF PROFILES */        01600000
 /*                                                           */        01610000
 /*************************************************************/        01620000
 /*                DFHSM COMPACTION OPTIONS                   */        01630000
 /*************************************************************/        01640000
 /*                                                           */        01650000
 SETSYS -                                                               01660000
   COMPACT(DASDMIGRATE)      /* USE COMPACTION FOR            */        01670000
                             /* MIGRATION TO DASD.            */        01680000
 SETSYS -                                                               01690000
     COMPACTPERCENT(20)      /* DON'T COMPACT DATA UNLESS     */        01700000
                             /* HISTORICAL DATA SHOWS SAVINGS */        01710000
                             /* OF AT LEAST 20%.              */        01720000
 SETSYS -                                                               01730000
   OBJECTNAMES(OBJ,OBJECT,LOAD,LOADLIB,LOADMODS,LINKLIB) -              01740000
   SOURCENAMES(ASM,COBOL,FORT,PLI,SOURCE,SRC,SRCLIB,SRCE,CNTL,JCL)      01750000
 /*                                                           */        01760000
 /*************************************************************/        01761036
 /*   DFHSM PATCH ADD 05.09.2011 FOR ZOS 1.12                 */        01762036
 /*   DFHSM PATCH SUPPRESS 07.11.11 APRES PTF                 */        01762138
 /*************************************************************/        01763036
 /* PATCH .MGCB.+ED BITS(......0.)                            */        01765038
 /*                                                           */        01766036
 /*************************************************************/        01770036
 /*               DFHSM MIGRATION PARAMETERS                  */        01780000
 /*************************************************************/        01790000
 /*                                                           */        01800000
 SETSYS -                                                               01810000
   TAPEMIGRATION(ML2TAPE)    /* NO TAPE MIGRATION  CTAPE1     */        01820000
 SETSYS -                                                               01830000
   MIGUNITNAME(VTSS)     /* NO TAPE MIGRATION             */            01840020
 SETSYS -                                                               01850000
   ML2RECYCLEPERCENT(40) /* NO TAPE MIGRATION             */            01860000
 SETSYS -                                                               01870000
   TAPEMAXRECALLTASKS(10) /* NO TAPE MIGRATION             */           01880054
 SETSYS -                                                               01890000
   PRIMARYSPMGMTSTART         /*SPECIFY PROCESSING WINDOW FOR */ -      01900000
   (0540 0756)                /*PRIMARY SPACE MANAGEMENT      */        01910057
 DEFINE -                                                               01920000
   PRIMARYSPMGMTCYCLE        /* RUN PRIMARY SPACE MGMT        */ -      01930046
   (YYYYYYY                  /* DIM. A COMPTER 09.10.2017 PHR */ -      01941048
   CYCLESTARTDATE(1990/06/11))                                          01950000
 SETSYS -                                                               01960000
     DAYS(1)                 /* DATA SET MUST BE UNREFERENCED */        01970000
                             /* FOR 10 DAYS BEFORE IT WILL BE */        01980000
                             /* MIGRATED.                     */        01990000
 SETSYS -                                                               02000000
     MIGRATEPREFIX(HSMSCT)                                              02010000
                             /* PROVIDE THE HIGH-LEVEL        */        02020000
                             /* QUALIFIER OF THE NAMES OF     */        02030000
                             /* MIGRATED DATA SETS.           */        02040000
 SETSYS -                                                               02050000
   NOINTERVALMIGRATION       /* PERFORM MIGRATION THROUGHOUT  */        02060000
                             /* THE DAY.                      */        02070000
 SETSYS -                                                               02080000
   SECONDARYSPMGMTSTART(0515  /*SPECIFY PROCESSING WINDOW FOR */ -      02090057
     0539)                                                              02100057
                              /*SECONDARY SPACE MANAGEMENT    */        02110000
 DEFINE -                                                               02120000
   SECONDARYSPMGMTCYCLE      /* RUN SECONDARY SPACE MANAGEMENT*/ -      02130000
   (YYYYYYY                  /* DIM. A COMPTER 09.10.2017 PHR */ -      02140048
   CYCLESTARTDATE(1990/06/11)) /* STARTING JUNE 11, 1990.       */      02150000
 SETSYS -                                                               02160000
   MIGRATIONCLEANUPDAYS(14 7) /* KEEP MCDS STATISTICS RECORDS */        02170000
                             /* FOR RECALLED DATA SETS FOR    */        02180000
                             /* 14 DAYS, AND VOLUME OR DAILY  */        02190000
                             /* STATISTICS RECORDS FOR 7 DAYS.*/        02200000
 SETSYS -                                                               02210000
     MIGRATIONLEVEL1DAYS(14) /* DATA SET MIGRATED TO ML2      */        02220000
                             /* AFTER 45 DAYS UNREFERENCED.   */        02230000
 SETSYS -                                                               02240000
     MAXEXTENTS(5)           /* DATA SET EXTENT REDUCTION     */        02250000
                             /* OCCURS WHEN EXTENTS REACH 10. */        02260000
 SETSYS -                                                               02270000
     MAXRECALLTASKS(14)      /* MAXIMUM OF 15 RECALL TASKS   */         02280054
                             /* ALLOWED AT ONE TIME.          */        02290000
 SETSYS -                                                               02300000
   RECALL(PRIVATEVOLUME(LIKE)) /* AUTO RECALL PLACES          */        02310000
                             /* UNPOOLED DATA SETS ON PRIMARY */        02320000
                             /* VOLUME MARKED PUBLIC, STORAGE,*/        02330000
                             /* OR PRIVATE, THAT HAS LIKE     */        02340000
                             /* CHARACTERISTICS.              */        02350000
 SETSYS -                                                               02360000
   SCRATCHFREQUENCY(7)       /* KEEP LIST DATA SETS 7 DAYS.   */ -      02370000
   EXPIREDDATASETS(SCRATCH)  /* DON'T SCRATCH EXPIRED DATA   */         02380000
                             /* SETS.                         */        02390000
 SETSYS -                                                               02400000
   NOSMALLDATASETPACKING     /* DON'T DO SMALL D.S. PACKING.  */        02410000
 SETSYS -                                                               02420000
   MAXMIGRATIONTASKS(9)      /* MAXIMUM OF THREE AUTOMATIC    */        02430054
                             /* VOLUME MIGRATION TASKS        */        02440000
                             /* TO BE PREFORMED CONCURRENTLY. */        02450000
 /*                                                           */        02460000
 /*************************************************************/        02470000
 /*                 DFHSM BACKUP PARAMETERS                   */        02480000
 /*************************************************************/        02490000
 /*                                                           */        02500000
 DEFINE BACKUP(YYYYYYN       /* BACKUP CYCLE OF ONE DAY.      */ -      02510000
   CYCLESTARTDATE(1990/06/11)) /* RUN BACKUP EVERY DAY TO A     */      02520000
                             /* SINGLE BACKUP VOLUME,         */        02530000
                             /* STARTING MONDAY,              */        02540000
                             /* JUNE 11, 1990.                */        02550000
 SETSYS -                                                               02560000
   BACKUP(TAPE(VTSS))        /* ACTIVATE BACKUP AND DUMP      */        02570020
 SETSYS -                                                               02580000
   AUTOBACKUPSTART(0500 0800 0930)                                      02590026
                             /* PROVIDE TIME TO START AUTO    */        02600000
                             /* BACKUP, LATE START TIME,      */        02610000
                             /* AND QUIESCE TIME.  AUTOBACKUP */        02620000
                             /* DISABLED UNTIL TIMES SPECIFIED*/        02630000
 SETSYS -                                                               02640000
   BACKUPPREFIX(HSMSCTB)                                                02650000
                             /* PROVIDE THE HIGH-LEVEL        */        02660000
                             /* QUALIFIER OF THE NAMES OF     */        02670000
                             /* BACKUP DATA SETS.             */        02680000
 SETSYS -                                                               02690000
   VERSIONS(1)               /* KEEP ONE VERSION OF BACKED-UP */ -      02700000
   FREQUENCY(1)              /* DATA SET.                     */        02710000
 SETSYS -                                                               02720000
   MAXBACKUPTASKS(05)        /* MAX OF 3 BACKUP TASKS AT ONCE */ -      02730002
   NOSKIPABPRIMARY           /* BACK UP ALL PRIMARY VOLUMES   */        02740000
                             /* THAT HAVE AUTO BACKUP         */        02750000
 SETSYS SPILL(TAPE(VTSS))    /* ATTRIBUTE.                    */        02760020
                             /* DATA SETS FROM FULL DAILY     */        02770000
                             /* DASD VOLUMES TO SPILL VOLUMES.*/        02780000
 /*                                                           */        02790000
 /*                                                           */        02800000
 SETSYS RECYCLEOUTPUT(BACKUP(VTSS) MIGRATION(VTSS))                     02810020
 /*                                                           */        02820000
 SETSYS TAPEMIGRATION(ML2TAPE(TAPE(VTSS)))                              02830020
 /*                                                           */        02840000
 /*                                                           */        02850000
 SETSYS -                                                               02860000
   INCREMENTALBACKUP(CHANGEDONLY)                                       02870000
 /*INCREMENTALBACKUP(ORIGINAL)    MAKE ORIGINAL BACKUP COPIES */        02880000
                             /* OF DATA SETS DESPITE SETTING  */        02890000
                             /* OF CHANGE BIT.                */        02900000
 /*                                                           */        02910000
 /*************************************************************/        02920000
 /*           DFHSM FULL VOLUME DUMP PARAMETERS               */        02930000
 /*************************************************************/        02940000
 /*                                                           */        02950000
 DEFINE -                                                               02960000
   DUMPCYCLE(NNNNNNY         /* 7-DAY DUMP CYCLE WITH DUMP    */ -      02970000
    CYCLESTARTDATE(1990/06/11)) /* DONE ONLY ON SEVENTH DAY,    */      02980000
                             /* STARTING ON MONDAY, JUNE 11,  */        02990000
                             /* 1990, SO DUMPS CAN OCCUR ON   */        03000000
                             /* SUNDAY.                       */        03010000
 DEFINE DUMPCLASS(WEEKLY  DAY(7) RETPD(30) AUTOREUSE NORESET -          03020000
   DATASETRESTORE VTOCCOPIES(5))                                        03030000
 DEFINE DUMPCLASS(WEEKLY2  DAY(7) RETPD(45) AUTOREUSE NORESET -         03040000
   DATASETRESTORE VTOCCOPIES(7))                                        03050000
                             /* DEFINE A DUMP CLASS NAMED     */        03060000
                             /* SUNDAY THAT WILL BE AUTO      */        03070000
                             /* DUMPED ON THE SEVENTH DAY OF  */        03080000
                             /* OF THE CYCLE.  EACH DUMP COPY */        03090000
                             /* IS HELD FOR 27 DAYS, AND      */        03100000
                             /* THE TAPE IS REUSED WHEN       */        03110000
                             /* SCRATCHED. RESET NO DATA SET  */        03120000
                             /* CHANGE BITS AND ALLOW TSO     */        03130000
                             /* USERS TO RESTORE DATA SETS    */        03140000
                             /* FROM DUMP TAPE. AT MOST, KEEP */        03150000
                             /* FOUR DUMP VTOC COPY DATA SETS */        03160000
                             /* FOR A VOLUME.                 */        03170000
 DEFINE DUMPCLASS(QUARTERS FREQUENCY(90) RETPD(356) -                   03180000
   NOAUTOREUSE NODATASETRESTORE NORESET -                               03190000
   DISPOSITION('OFF-SITE') VTOCCOPIES(0))                               03200000
                             /* DEFINE A DUMP CLASS NAMED     */        03210000
                             /* QUARTERS THAT WILL BE AUTO    */        03220000
                             /* DUMPED EVERY THREE MONTHS AND */        03230000
                             /* HELD FOR ONE WEEK LESS THAN   */        03240000
                             /* A YEAR. USE ONLY FOR FULL     */        03250000
                             /* RESTORES. HOLD THE TAPE       */        03260000
                             /* OFF-SITE. KEEP NO VTOC COPIES */        03270000
                             /* FOR THIS CLASS.               */        03280000
 SETSYS -                                                               03290000
   AUTODUMPSTART(1755 2000 2200)                                        03300021
                             /* PROVIDE TIME TO START AUTO    */        03310000
                             /* DUMP, LATE START TIME,        */        03320000
                             /* AND QUIESCE TIME.  AUTO DUMP  */        03330000
                             /* DISABLED UNTIL TIMES SPECIFIED*/        03340000
 SETSYS -                                                               03350000
   DUMPIO(3,2)               /* BUFFER 5 TRACKS WHEN DUMPING, */        03360000
                             /* 2 TRACKS DURING DATA MOVEMENT */        03370000
 SETSYS -                                                               03380000
   MAXDUMPTASKS(3)           /* ALLOW MAXIMUM OF 3 DUMP TASKS */        03390000
                             /* AT ONE TIME.                  */        03400000
 ADDVOL HSM001 -                                                        03410000
        UNIT(3390) -                                                    03420000
        MIGRATION  -                                                    03430000
        (MIGRATIONLEVEL1 -                                              03440000
         NOSMALLDATASETPACKING) -                                       03450000
        THRESHOLD(80)                                                   03460000
                                                                        03470000
 ADDVOL HSM002 -                                                        03480000
        UNIT(3390) -                                                    03490000
        MIGRATION  -                                                    03500000
        (MIGRATIONLEVEL1 -                                              03510000
         NOSMALLDATASETPACKING) -                                       03520000
        THRESHOLD(80)                                                   03530000
                                                                        03540000
 ADDVOL HSM003 -                                                        03550000
        UNIT(3390) -                                                    03560000
        MIGRATION  -                                                    03570000
        (MIGRATIONLEVEL1 -                                              03580000
         NOSMALLDATASETPACKING) -                                       03590000
        THRESHOLD(80)                                                   03600000
                                                                        03610000
 ADDVOL HSM004 -                                                        03620000
        UNIT(3390) -                                                    03630000
        MIGRATION  -                                                    03640000
        (MIGRATIONLEVEL1 -                                              03650000
         NOSMALLDATASETPACKING) -                                       03660000
        THRESHOLD(80)                                                   03670000
                                                                        03680000
 ADDVOL HSM005 -                                                        03690000
        UNIT(3390) -                                                    03700000
        MIGRATION  -                                                    03710000
        (MIGRATIONLEVEL1 -                                              03720000
         NOSMALLDATASETPACKING) -                                       03730000
        THRESHOLD(80)                                                   03740000
                                                                        03750000
 ADDVOL HSM006 -                                                        03751000
        UNIT(3390) -                                                    03752000
        MIGRATION  -                                                    03753000
        (MIGRATIONLEVEL1 -                                              03754000
         NOSMALLDATASETPACKING) -                                       03755000
        THRESHOLD(80)                                                   03756000
                                                                        03757000
 ADDVOL HSM007 -                                                        03758000
        UNIT(3390) -                                                    03759000
        MIGRATION  -                                                    03759100
        (MIGRATIONLEVEL1 -                                              03759200
         NOSMALLDATASETPACKING) -                                       03759300
        THRESHOLD(80)                                                   03759400
                                                                        03759500
 ADDVOL HSM008 -                                                        03759619
        UNIT(3390) -                                                    03759719
        MIGRATION  -                                                    03759819
        (MIGRATIONLEVEL1 -                                              03759919
         NOSMALLDATASETPACKING) -                                       03760019
        THRESHOLD(80)                                                   03770019
                                                                        03771019
 ADDVOL HSM009 -                                                        03772019
        UNIT(3390) -                                                    03773019
        MIGRATION  -                                                    03774019
        (MIGRATIONLEVEL1 -                                              03775019
         NOSMALLDATASETPACKING) -                                       03776019
        THRESHOLD(80)                                                   03777019
                                                                        03778019
 ADDVOL HSM010 -                                                        03779022
        UNIT(3390) -                                                    03779122
        MIGRATION  -                                                    03779222
        (MIGRATIONLEVEL1 -                                              03779322
         NOSMALLDATASETPACKING) -                                       03779422
        THRESHOLD(80)                                                   03779522
                                                                        03779622
 ADDVOL HSM011 -                                                        03779722
        UNIT(3390) -                                                    03779822
        MIGRATION  -                                                    03779922
        (MIGRATIONLEVEL1 -                                              03780022
         NOSMALLDATASETPACKING) -                                       03781022
        THRESHOLD(80)                                                   03782022
                                                                        03782123
 ADDVOL HSM012 -                                                        03782223
        UNIT(3390) -                                                    03782323
        MIGRATION  -                                                    03782423
        (MIGRATIONLEVEL1 -                                              03782523
         NOSMALLDATASETPACKING) -                                       03782623
        THRESHOLD(80)                                                   03782723
                                                                        03782823
 ADDVOL HSM013 -                                                        03782923
        UNIT(3390) -                                                    03783023
        MIGRATION  -                                                    03783123
        (MIGRATIONLEVEL1 -                                              03783223
         NOSMALLDATASETPACKING) -                                       03783323
        THRESHOLD(80)                                                   03783423
                                                                        03784022
 ADDVOL HSM014 -                                                        03785028
        UNIT(3390) -                                                    03786028
        MIGRATION  -                                                    03787028
        (MIGRATIONLEVEL1 -                                              03788028
         NOSMALLDATASETPACKING) -                                       03789028
        THRESHOLD(80)                                                   03789128
                                                                        03789229
 ADDVOL HSM015 -                                                        03789329
        UNIT(3390) -                                                    03789429
        MIGRATION  -                                                    03789529
        (MIGRATIONLEVEL1 -                                              03789629
         NOSMALLDATASETPACKING) -                                       03789729
        THRESHOLD(80)                                                   03789829
                                                                        03789929
 ADDVOL HSM016 -                                                        03790030
        UNIT(3390) -                                                    03791030
        MIGRATION  -                                                    03792030
        (MIGRATIONLEVEL1 -                                              03793030
         NOSMALLDATASETPACKING) -                                       03794030
        THRESHOLD(80)                                                   03795030
                                                                        03797031
 ADDVOL HSM017 -                                                        03798031
        UNIT(3390) -                                                    03799031
        MIGRATION  -                                                    03799131
        (MIGRATIONLEVEL1 -                                              03799231
         NOSMALLDATASETPACKING) -                                       03799331
        THRESHOLD(80)                                                   03799431
                                                                        03799531
 ADDVOL HSM018 -                                                        03799631
        UNIT(3390) -                                                    03799731
        MIGRATION  -                                                    03799831
        (MIGRATIONLEVEL1 -                                              03799931
         NOSMALLDATASETPACKING) -                                       03800031
        THRESHOLD(80)                                                   03801031
                                                                        03802031
 /*                                                           */        03810031

./ ADD NAME=ARCCMD99
 SETSYS EXITON(TV)                /* ARCTVEXT ACTIVE               */   00090058
 SETSYS NOREQUEST                 /* DO NOT ASK OPERATOR           */   00110058
 SETSYS NODEBUG                   /* MOVE OR DELETE DATA WHEN      */   00150058
        NOEMERGENCY               /* ALLOW ALL DFHSM FUNCTIONS.    */   00170058
 SETSYS NOSWAP                    /* RUN DFHSM NONSWAPPABLE.       */   00190058
 SETSYS USERDATASETSERIALIZATION  /* DFHSM USES ITS OWN            */   00210058
 SETSYS OPTIMUMDASDBLOCKING       /* DFHSM USES ITS DEFINED        */   00290058
 SETSYS JOURNAL(RECOVERY)         /* WRITE CDS CHANGES TO JOURNAL  */   00420058
 SETSYS SMF(240)                  /* WRITE DSR'S & VSR'S TO SMF    */   00450058
 SETSYS SYS1DUMP                  /* WRITE DFHSM DUMPS TO SYSTEM   */   00490058
 SETSYS SYSOUT(X 1)                                                     00520000
 SETSYS ACTLOGMSGLVL(FULL)           /*   ACTIVITY LOGGING         */   00550058
        ACTLOGTYPE(SYSOUT)      /* WRITTEN TO SYSOUT CLASS AS    */     00560058
 SETSYS MONITOR(MIGRATIONCONTROLDATASET(90))                            00660000
 SETSYS MONITOR(STARTUP             /* LIST STARTUP PARAMETERS.      */ 00690058
                NOVOLUME)           /* DO NOT SHOW DATA SET LEVEL    */ 00700058
 SETSYS MONITOR(NOSPACE             /* DO NOT PRINT SPACE USAGE MSGS.*/ 00703058
              JOURNAL(70 1) MCDS(90))  /* WARN WHEN JOURNAL IS 90% FULL 00704058
 SETSYS CSALIMITS        /* LIMIT DFHSM USAGE OF CSA.     */            00740058
             (MWE(4))        /* MAXIMUM OF 4 NOWAIT TYPE MWES */        00750000
 SETSYS CSALIMITS                                                       00780058
              (MAXIMUM(200)  /* NEVER USE MORE THAN 100K.     */        00790058
               ACTIVE(90)    /* LIMIT NOWAIT FUNCTIONS TO 90%.*/        00800058
               INACTIVE(30)) /* ALLOW 30% DURING INACTIVITY.  */        00810000
 SETSYS DEFERMOUNT                /* DEFER MOUNT OF TAPE UNTIL     */   00880058
 SETSYS TAPEHARDWARECOMPACT       /* USE IMPROVED DATA RECORDING   */   00910058
 SETSYS PARTIALTAPE(              /* DO NOT MARK AS FULL ANY TAPES */   00950058
         BACKUP(MARKFULL)         /* THAT ARE ONLY PARTLY FULL     */   00960058
         MIGRATION(MARKFULL))                                           00970058
 SETSYS TAPEUTILIZATION(UNITTYPE(3490) PERCENTFULL(100))                00971042
 SETSYS TAPEUTILIZATION(LIBRARYBACKUP PERCENTFULL(100))                 00972042
 SETSYS TAPEUTILIZATION(LIBRARYMIGRATION PERCENTFULL(100))              00973042
 SETSYS TAPESPANSIZE(4000)                                              00974042
 SETSYS INPUTTAPEALLOCATION(NOWAIT)   /* DON'T WAIT ON TAPE        */   00990058
        OUTPUTTAPEALLOCATION(NOWAIT)  /* ALLOCATION FOR INPUT,     */   01000058
        RECYCLETAPEALLOCATION(NOWAIT) /* OUTPUT, OR RECYCLE.       */   01010058
 SETSYS SELECTVOLUME(             /* VOLUME SELECTION AT TAPE END  */   01030058
        BACKUP(SCRATCH)          /* OF VOLUME COMES FROM THE      */    01040058
        MIGRATION(SCRATCH)       /* DFHSMOWNED POOL OF TAPE VOLS.*/     01050058
        DUMP(SCRATCH))                                                  01060058
 SETSYS RECYCLEPERCENT(40)        /* INFORM STORAGE ADMINISTRATOR  */   01080058
 SETSYS RECYCLEINPUTDEALLOCFREQUENCY(BACKUP(1) MIGRATION(1))            01122058
 SETSYS TAPEDELETION(             /* RETURN TAPES THAT NO LONGER   */   01140058
         BACKUP(SCRATCH)          /* CONTAIN VALID DATA TO THE     */   01150058
         MIGRATION(SCRATCH)       /* DFHSMOWNED POOL.              */   01160058
         DUMP(SCRATCH))                                                 01170058
 SETSYS USERUNITTABLE(VTSS)        /*NO ESOTERIC TAPE UNITS        */   01190058
 SETSYS MOUNTWAITTIME(15)         /* WAIT 10 MINUTES BEFORE        */   01220058
 SETSYS UNITNAME(VTSS)            /* START OUT WITH 3480X AS UNIT  */   01260058
 SETSYS TAPEINPUTPROMPT(MIGRATIONTAPES(NO))  /* TAPE OPER MSGS    */    01300058
 SETSYS TAPEINPUTPROMPT(BACKUPTAPES(NO))     /* TAPE OPER MSGS    */    01320058
 SETSYS TAPEINPUTPROMPT(DUMPTAPES(NO))       /* TAPE OPER MSGS    */    01340058
 SETSYS CDSVERSIONBACKUP(    /* MAINTAIN FOUR BACKUP VERSIONS */        01400058
        BACKUPCOPIES(4)      /* OF THE CONTROL DATA SETS ON   */        01410058
        BACKUPDEVICECATEGORY(DASD)) /* TAPE OF UNIT TYPE CTAPE1     */  01420058
 SETSYS NORACFIND                 /* DO NOT PUT RACFINDICATION     */   01490058
 SETSYS TAPESECURITY(EXPIRATION)  /* USE RACF TO PROVIDE TAPE      */   01530058
 SETSYS NOERASEONSCRATCH          /* DON'T ALLOW ERASEONSCRATCH    */   01560058
 SETSYS PROFILEBACKUP             /* BACKUP DISCRETE RACF PROFILES */   01600058
 SETSYS COMPACT(DASDMIGRATE)      /* USE COMPACTION FOR            */   01670058
 SETSYS COMPACTPERCENT(20)      /* DON'T COMPACT DATA UNLESS     */     01700058
 SETSYS OBJECTNAMES(OBJ,OBJECT,LOAD,LOADLIB,LOADMODS,LINKLIB)           01740058
        SOURCENAMES(ASM,COBOL,FORT,PLI,SOURCE,SRC,SRCLIB,SRCE,CNTL,JCL) 01750058
 SETSYS                                                                 01810058
        TAPEMIGRATION(ML2TAPE)    /* NO TAPE MIGRATION  CTAPE1     */   01820058
 SETSYS                                                                 01830058
        MIGUNITNAME(VTSS)     /* NO TAPE MIGRATION             */       01840058
 SETSYS                                                                 01850058
        ML2RECYCLEPERCENT(40) /* NO TAPE MIGRATION             */       01860058
 SETSYS                                                                 01870058
        TAPEMAXRECALLTASKS(10) /* NO TAPE MIGRATION             */      01880058
 SETSYS                                                                 01890058
        PRIMARYSPMGMTSTART         /*SPECIFY PROCESSING WINDOW FOR */   01900058
        (0540 0756)                /*PRIMARY SPACE MANAGEMENT      */   01910058
 DEFINE PRIMARYSPMGMTCYCLE        /* RUN PRIMARY SPACE MGMT        */   01930058
        (YYYYYYY                  /* DIM. A COMPTER 09.10.2017 PHR */   01941058
        CYCLESTARTDATE(1990/06/11))                                     01950058
 SETSYS DAYS(1)                 /* DATA SET MUST BE UNREFERENCED */     01970058
 SETSYS MIGRATEPREFIX(HSMSCT)                                           02010058
 SETSYS NOINTERVALMIGRATION       /* PERFORM MIGRATION THROUGHOUT  */   02060058
 SETSYS SECONDARYSPMGMTSTART(0515  /*SPECIFY PROCESSING WINDOW FOR */   02090058
          0539)                                                         02100058
 DEFINE SECONDARYSPMGMTCYCLE      /* RUN SECONDARY SPACE MANAGEMENT*/   02130058
        (YYYYYYY                  /* DIM. A COMPTER 09.10.2017 PHR */   02140058
        CYCLESTARTDATE(1990/06/11)) /* STARTING JUNE 11, 1990.       */ 02150058
 SETSYS MIGRATIONCLEANUPDAYS(14 7) /* KEEP MCDS STATISTICS RECORDS */   02170058
 SETSYS MIGRATIONLEVEL1DAYS(14) /* DATA SET MIGRATED TO ML2      */     02220058
 SETSYS MAXEXTENTS(5)           /* DATA SET EXTENT REDUCTION     */     02250058
 SETSYS MAXRECALLTASKS(14)      /* MAXIMUM OF 15 RECALL TASKS   */      02280058
 SETSYS RECALL(PRIVATEVOLUME(LIKE)) /* AUTO RECALL PLACES          */   02310058
 SETSYS SCRATCHFREQUENCY(7)       /* KEEP LIST DATA SETS 7 DAYS.   */   02370058
        EXPIREDDATASETS(SCRATCH)  /* DON'T SCRATCH EXPIRED DATA   */    02380058
 SETSYS NOSMALLDATASETPACKING     /* DON'T DO SMALL D.S. PACKING.  */   02410058
 SETSYS MAXMIGRATIONTASKS(9)      /* MAXIMUM OF THREE AUTOMATIC    */   02430058
 DEFINE BACKUP(YYYYYYN       /* BACKUP CYCLE OF ONE DAY.      */        02510058
        CYCLESTARTDATE(1990/06/11)) /* RUN BACKUP EVERY DAY TO A     */ 02520058
 SETSYS BACKUP(TAPE(VTSS))        /* ACTIVATE BACKUP AND DUMP      */   02570058
 SETSYS AUTOBACKUPSTART(0500 0800 0930)                                 02590058
 SETSYS BACKUPPREFIX(HSMSCTB)                                           02650058
 SETSYS VERSIONS(1)               /* KEEP ONE VERSION OF BACKEDUP */    02700058
        FREQUENCY(1)              /* DATA SET.                     */   02710058
 SETSYS MAXBACKUPTASKS(05)        /* MAX OF 3 BACKUP TASKS AT ONCE */   02730058
        NOSKIPABPRIMARY           /* BACK UP ALL PRIMARY VOLUMES   */   02740058
 SETSYS SPILL(TAPE(VTSS))    /* ATTRIBUTE.                    */        02760020
 SETSYS RECYCLEOUTPUT(BACKUP(VTSS) MIGRATION(VTSS))                     02810020
 SETSYS TAPEMIGRATION(ML2TAPE(TAPE(VTSS)))                              02830020
 SETSYS INCREMENTALBACKUP(CHANGEDONLY)                                  02870058
 DEFINE DUMPCYCLE(NNNNNNY         /* 7DAY DUMP CYCLE WITH DUMP     */   02970058
         CYCLESTARTDATE(1990/06/11)) /* DONE ONLY ON SEVENTH DAY,    */ 02980058
 DEFINE DUMPCLASS(WEEKLY  DAY(7) RETPD(30) AUTOREUSE NORESET            03020058
        DATASETRESTORE VTOCCOPIES(5))                                   03030058
 DEFINE DUMPCLASS(WEEKLY2  DAY(7) RETPD(45) AUTOREUSE NORESET           03040058
        DATASETRESTORE VTOCCOPIES(7))                                   03050058
 DEFINE DUMPCLASS(QUARTERS FREQUENCY(90) RETPD(356)                     03180058
        NOAUTOREUSE NODATASETRESTORE NORESET                            03190058
        DISPOSITION('OFFSITE') VTOCCOPIES(0))                           03200058
 SETSYS AUTODUMPSTART(1755 2000 2200)                                   03300058
 SETSYS DUMPIO(3,2)               /* BUFFER 5 TRACKS WHEN DUMPING, */   03360058
 SETSYS MAXDUMPTASKS(3)           /* ALLOW MAXIMUM OF 3 DUMP TASKS */   03390058
 ADDVOL HSM001                                                          03410058
        UNIT(3390)                                                      03420058
        MIGRATION                                                       03430058
        (MIGRATIONLEVEL1                                                03440058
         NOSMALLDATASETPACKING)                                         03450058
        THRESHOLD(80)                                                   03460000
 ADDVOL HSM002                                                          03480058
        UNIT(3390)                                                      03490058
        MIGRATION                                                       03500058
        (MIGRATIONLEVEL1                                                03510058
         NOSMALLDATASETPACKING)                                         03520058
        THRESHOLD(80)                                                   03530000
 ADDVOL HSM003                                                          03550058
        UNIT(3390)                                                      03560058
        MIGRATION                                                       03570058
        (MIGRATIONLEVEL1                                                03580058
         NOSMALLDATASETPACKING)                                         03590058
        THRESHOLD(80)                                                   03600000
 ADDVOL HSM004                                                          03620058
        UNIT(3390)                                                      03630058
        MIGRATION                                                       03640058
        (MIGRATIONLEVEL1                                                03650058
         NOSMALLDATASETPACKING)                                         03660058
        THRESHOLD(80)                                                   03670000
 ADDVOL HSM005                                                          03690058
        UNIT(3390)                                                      03700058
        MIGRATION                                                       03710058
        (MIGRATIONLEVEL1                                                03720058
         NOSMALLDATASETPACKING)                                         03730058
        THRESHOLD(80)                                                   03740000
 ADDVOL HSM006                                                          03751058
        UNIT(3390)                                                      03752058
        MIGRATION                                                       03753058
        (MIGRATIONLEVEL1                                                03754058
         NOSMALLDATASETPACKING)                                         03755058
        THRESHOLD(80)                                                   03756000
 ADDVOL HSM007                                                          03758058
        UNIT(3390)                                                      03759058
        MIGRATION                                                       03759158
        (MIGRATIONLEVEL1                                                03759258
         NOSMALLDATASETPACKING)                                         03759358
        THRESHOLD(80)                                                   03759400
 ADDVOL HSM008                                                          03759658
        UNIT(3390)                                                      03759758
        MIGRATION                                                       03759858
        (MIGRATIONLEVEL1                                                03759958
         NOSMALLDATASETPACKING)                                         03760058
        THRESHOLD(80)                                                   03770019
 ADDVOL HSM009                                                          03772058
        UNIT(3390)                                                      03773058
        MIGRATION                                                       03774058
        (MIGRATIONLEVEL1                                                03775058
         NOSMALLDATASETPACKING)                                         03776058
        THRESHOLD(80)                                                   03777019
 ADDVOL HSM010                                                          03779058
        UNIT(3390)                                                      03779158
        MIGRATION                                                       03779258
        (MIGRATIONLEVEL1                                                03779358
         NOSMALLDATASETPACKING)                                         03779458
        THRESHOLD(80)                                                   03779522
 ADDVOL HSM011                                                          03779758
        UNIT(3390)                                                      03779858
        MIGRATION                                                       03779958
        (MIGRATIONLEVEL1                                                03780058
         NOSMALLDATASETPACKING)                                         03781058
        THRESHOLD(80)                                                   03782022
 ADDVOL HSM012                                                          03782258
        UNIT(3390)                                                      03782358
        MIGRATION                                                       03782458
        (MIGRATIONLEVEL1                                                03782558
         NOSMALLDATASETPACKING)                                         03782658
        THRESHOLD(80)                                                   03782723
 ADDVOL HSM013                                                          03782958
        UNIT(3390)                                                      03783058
        MIGRATION                                                       03783158
        (MIGRATIONLEVEL1                                                03783258
         NOSMALLDATASETPACKING)                                         03783358
        THRESHOLD(80)                                                   03783423
 ADDVOL HSM014                                                          03785058
        UNIT(3390)                                                      03786058
        MIGRATION                                                       03787058
        (MIGRATIONLEVEL1                                                03788058
         NOSMALLDATASETPACKING)                                         03789058
        THRESHOLD(80)                                                   03789128
 ADDVOL HSM015                                                          03789358
        UNIT(3390)                                                      03789458
        MIGRATION                                                       03789558
        (MIGRATIONLEVEL1                                                03789658
         NOSMALLDATASETPACKING)                                         03789758
        THRESHOLD(80)                                                   03789829
 ADDVOL HSM016                                                          03790058
        UNIT(3390)                                                      03791058
        MIGRATION                                                       03792058
        (MIGRATIONLEVEL1                                                03793058
         NOSMALLDATASETPACKING)                                         03794058
        THRESHOLD(80)                                                   03795030
 ADDVOL HSM017                                                          03798058
        UNIT(3390)                                                      03799058
        MIGRATION                                                       03799158
        (MIGRATIONLEVEL1                                                03799258
         NOSMALLDATASETPACKING)                                         03799358
        THRESHOLD(80)                                                   03799431
 ADDVOL HSM018                                                          03799658
        UNIT(3390)                                                      03799758
        MIGRATION                                                       03799858
        (MIGRATIONLEVEL1                                                03799958
         NOSMALLDATASETPACKING)                                         03800058
        THRESHOLD(80)                                                   03801031

./ ADD NAME=ARCFVPST
SYS1.SAMPLIB(ARCFVPST)                                                  00010000
//UPDJOB JOB ********* REPLACE WITH JOB CARD PARAMETERS **************  00020000
//*                                                                     00030000
//********************************************************************  00040000
//* THIS IS A JOB STREAM TO VERIFY THE MAJOR FUNCTIONS OF HSM.       *  00050000
//* BEFORE THIS JOB IS EXECUTED, YOU MUST USE THE STARTER            *  00060000
//* SET IN SAMPLIB MEMBER ARCSTRST TO ESTABLISH AN HSM OPERATING     *  00070000
//* ENVIRONMENT.                                                     *  00080000
//*                                                                  *  00090000
//* THE JOBS CONTAINED IN THIS SECTION ASSUME THAT YOU HAVE          *  00100000
//* PERFORMED ALL THE OPERATIONS INVOLVED WITH ESTABLISHING THE      *  00110000
//* STARTER SET IN YOUR SYSTEM.                                      *  00120000
//*                                                                  *  00130000
//* IF YOU WANT HSM TO PROCESS SMS-MANAGED DATA SETS DURING FVP,     *  00140000
//* YOU MUST DEFINE STORAGE CLASS FILTERS THAT ALLOW ALLOCATION OF   *  00150000
//* THOSE DATA SETS (PROCESSED BY THE FVP) TO SMS-MANAGED STORAGE.   *  00160000
//* FOR EXAMPLE, YOU CAN USE THE HIGH-LEVEL QUALIFIER DEFINED BY     *  00170000
//* THE ?AUTHID PARAMETER TO DETERMINE IF THE DATASETS ARE TO BE     *  00180000
//* SMS-MANAGED.                                                     *  00190000
//*                                                                  *  00200000
//* PLACE THE APPROPRIATE JOB CARD PARAMETERS ON THE JOB CARD ABOVE  *  00210000
//* AND SUBMIT THIS JOB.                                             *  00220000
//*                                                                  *  00230000
//* THIS JOB WILL CREATE THE MEMBER "FVP" IN THE PDS NAMED           *  00240000
//*                "HSM.SAMPLE.CNTL"                                 *  00250000
//* THAT WAS CREATED BY THE JOB IN SAMPLIB MEMBER "ARCSTRST".        *  00260000
//*                                                                  *  00270000
//* AFTER YOU HAVE RUN THIS JOB, FOLLOW THE INSTRUCTIONS IN          *  00280000
//* "HSM.SAMPLE.CNTL" MEMBER "FVP" TO PERFORM THE FUNCTION           *  00290000
//* VERIFICATION PROCEDURE.                                          *  00300000
//********************************************************************  00310000
//*                                                                     00320000
//UPDSTEP EXEC PGM=IEBGENER                                             00330000
//SYSPRINT DD SYSOUT=*                                                  00340000
//SYSUT2   DD DSN=HSM.SAMPLE.CNTL(FVP),                                 00350000
//            DISP=OLD                                                  00360000
//SYSIN    DD DUMMY                                                     00370000
//SYSUT1   DD DATA,DLM='$$'                                             00380000
//?AUTHIDA JOB ?JOBPARM                                                 00390000
//*                                                                     00400000
//********************************************************************  00410000
//*                                                                  *  00420000
//* THIS FVP REQUIRES 3 DASD VOLUMES: AN HSM MANAGED VOLUME, A       *  00430000
//* MIGRATION LEVEL 1 VOLUME, AND A USER VOLUME.  THE USER VOLUME    *  00440000
//* WILL BE BACKED UP AND DUMPED TO EXERCISE THOSE HSM FUNCTIONS.    *  00450000
//* IT ALSO REQUIRES LABELED TAPES FOR BACKUP, DUMP, AND TAPE        *  00460000
//* MIGRATION IF YOU ARE VERIFYING TAPE USAGE.                       *  00470000
//*                                                                  *  00480000
//* EDIT THIS JCL TO CUSTOMIZE IT FOR YOUR SYSTEM.                   *  00490000
//*                                                                  *  00500000
//* CUSTOMIZATION CAN BE EXPEDITED BY MAKING GLOBAL CHANGES TO THE   *  00510000
//* PARAMETERS IDENTIFIED BELOW.  YOU MAY HAVE TO MAKE OTHER CHANGES *  00520000
//* AS IDENTIFIED IN THE COMMENTS EMBEDDED IN THE JCL.               *  00530000
//* THE PARAMETERS TO BE CHANGED ALL BEGIN WITH A QUESTION MARK (?). *  00540000
//*                                                                  *  00550000
//* CHANGE THE PARAMETERS IDENTIFIED BELOW TO VALUES FOR YOUR SYSTEM *  00560000
//********************************************************************  00570000
//* ?JOBPARM                                                         *  00580000
//*           - PARAMETERS TO APPEAR ON THE JOB CARD                 *  00590000
//*                                                                  *  00600000
//*   NOTE    - HSM VERIFICATION STEPS ISSUE AUTHORIZED DATABASE     *  00610000
//*             COMMANDS.  THE USERID THAT APPEARS IN JOB CARDS      *  00620000
//*             BELOW MUST BE GIVEN DATABASE AUTHORITY BY THE        *  00630000
//*             CONTROL-AUTHORIZED USER (SEE THE STARTER SET FOR     *  00640000
//*             YOUR CONTROL-AUTHORIZED USERID).                     *  00650000
//*                                                                  *  00660000
//* ?AUTHID   - USERID OF AN AUTHORIZED DATABASE USER.  THIS WILL BE *  00670000
//*             USED AS THE HIGH-LEVEL QUALIFIER OF DATA SETS ON     *  00680000
//*             THE HSM MANAGED VOLUME.  IN ORDER TO RUN MIGRATION   *  00690000
//*             OF A VSAM DATA SET, THIS USERID MUST BE AN ALIAS OF  *  00700000
//*             AN EXISTING ICF CATALOG.  SEE "MIGRATION OF A VSAM   *  00710000
//*             DATA SET" BELOW.                                     *  00720000
//*           - THIS USERID IS USED TO NAME THE JOBS IN THIS         *  00730000
//*             PROCEDURE.                                           *  00740000
//*             TO EXPEDITE THE EXECUTION OF THIS PROCEDURE, IT IS   *  00750000
//*             SUGGESTED THAT THIS USERID BE USED TO SUBMIT THE     *  00760000
//*             JOBS IN THIS PROCEDURE FROM TSO.                     *  00770000
//* ?PASSWRD  - PASSWORD OF AUTHORIZED DATABASE USER ?AUTHID         *  00780000
//* ?PRIVOL   - VOLUME SERIAL OF A HSM MANAGED VOLUME TO BE USED     *  00790000
//*             AS A PRIMARY VOLUME.                                 *  00800000
//*             ***** NOTE FOR JES3 USERS *****                      *  00810000
//*             THE ADDVOL COMMAND FOR ?PRIVOL MUST BE PLACED IN     *  00820000
//*             THE HSM PARMLIB MEMBER IN A JES3 ENVIRONMENT.        *  00830000
//*             REMOVE THAT ADDVOL COMMAND FROM THE PROCEDURE        *  00840000
//*             BELOW.                                               *  00850000
//* ?PRIUNT   - UNIT TYPE OF THAT PRIMARY VOLUME                     *  00860000
//* ?MIGVOL   - VOLUME SERIAL OF A VOLUME TO BE USED AS A MIGRATION  *  00870000
//*             LEVEL 1 VOLUME.                                      *  00880000
//*             ***** NOTE FOR JES3 USERS *****                      *  00890000
//*             THE ADDVOL COMMAND FOR ?MIGVOL MUST BE PLACED IN     *  00900000
//*             THE HSM PARMLIB MEMBER IN A JES3 ENVIRONMENT.        *  00910000
//*             REMOVE THAT ADDVOL COMMAND FROM THE PROCEDURE        *  00920000
//*             BELOW.                                               *  00930000
//* ?MIGUNT   - UNIT TYPE OF THAT MIGRATION LEVEL 1 VOLUME           *  00940000
//*                                                                  *  00950000
//*    NOTE   - THIS PROCEDURE VERIFIES THE SMALL DATA SET PACKING   *  00960000
//*             FUNCTION.  IF YOU DO NOT INTEND TO USE TO USE THAT   *  00970000
//*             FUNCTION, REMOVE THE ALLOCATION OF THE SDSP DATA     *  00980000
//*             SET AND THE SDSP KEYWORD FROM THE ML1 VOLUME ADDVOL  *  00990000
//*             COMMAND AND SETSYS COMMAND BELOW.                    *  01000000
//*           - THE FOLLOWING KEYWORDS APPLY ONLY TO THE SDSP        *  01010000
//*             FUNCTION VERIFICATION.                               *  01020000
//*                                                                  *  01030000
//* ?UID      - AUTHORIZED USER ID FOR THE HSM STARTED PROCEDURE.    *  01040000
//*             THIS MUST BE SET TO THE SAME VALUE AS YOU SPECIFIED  *  01050000
//*             IN THE STARTER SET FOR THAT KEYWORD.                 *  01060000
//*             IT IS USED AS THE HIGH-LEVEL QUALIFIER OF THE SMALL  *  01070000
//*             DATA SET PACKING DATA SET ALLOCATED ON THE ML1       *  01080000
//*             VOLUME.                                              *  01090000
//* ?UCATNAM  - CATALOGNAME/PASSWORD OF USER CATALOG FOR HSM DATA    *  01100000
//*             SETS. THIS MUST BE THE SAME VALUE THAT YOU ASSIGNED  *  01110000
//*             TO THIS PARAMETER IN THE STARTER SET.                *  01120000
//*                                                                  *  01130000
//*    NOTE    - MIGRATION OF A VSAM DATA SET REQUIRES AN INTEGRATED *  01140000
//*              CATALOG FACILITY (DF/EF) CATALOG.  AN ALIAS OF      *  01150000
//*              '?AUTHID' MUST BE DEFINED TO AN INTEGRATED CATALOG  *  01160000
//*              FACILITY (DF/EF) USER CATALOG.                      *  01170000
//*            - VSAM DATA SET MIGRATION MUST BE REMOVED FROM THE    *  01180000
//*              FVP IF DF/EF CATALOG IS NOT INSTALLED ON THE SYSTEM *  01190000
//*              YOU WILL FIND THE STEPS AND COMMANDS ASSOCIATED     *  01200000
//*              WITH VSAM DATA SET MIGRATION BY SEARCHING FOR THE   *  01210000
//*              DATA SET NAME "DATAV8" IN THE JOB STREAM BELOW.     *  01220000
//*            - THE FOLLOWING KEYWORDS APPLY ONLY TO STEP4, VSAM    *  01230000
//*              DATA SET ALLOCATION.                                *  01240000
//*                                                                  *  01250000
//* ?XCATNAM   - CATALOGNAME/PASSWORD OF EXISTING USER ICF CATALOG   *  01260000
//*              WITH ALIAS OF '?AUTHID'.                            *  01270000
//*                                                                  *  01280000
//*   NOTE     - TAPES ARE REQUIRED TO VERIFY TAPE MIGRATION AND     *  01290000
//*              TAPE BACKUP.  IF YOUR SYSTEM WILL NOT INCLUDE THOSE *  01300000
//*              FUNCTIONS, REMOVE TAPE VERIFICATION FROM THIS       *  01310000
//*              PROCEDURE.  TAPE VERIFICATION IS PERFORMED BY THE   *  01320000
//*              JOB NAMED "?AUTHIDF".                               *  01330000
//*            - MOUNT REQUESTS FOR 'PRIVAT' WILL APPEAR WHEN A TAPE *  01340000
//*              IS NEEDED FOR BACKUP, MIGRATION, OR DUMP.           *  01350000
//*              TAPES USED WILL BE AUTOMATICALLY ADDED TO HSM       *  01360000
//*              CONTROL.  AFTER THE FVP COMPLETES, USE THE DELVOL   *  01370000
//*              PURGE COMMAND TO REMOVE THESE TAPES FROM HSM        *  01380000
//*              CONTROL.                                            *  01390000
//*            - THE FOLLOWING KEYWORDS APPLY TO TAPE VERIFICATION   *  01400000
//*              AND TO DUMP VERIFICATION.                           *  01410000
//*                                                                  *  01420000
//* ?TAPEUNT   - TAPE UNIT IDENTIFICATION                            *  01430000
//*                                                                  *  01440000
//*   NOTE     - TAPE AND ONE DASD VOLUME ARE REQUIRED TO VERIFY     *  01450000
//*              DFDSS DUMP.  IF YOUR SYSTEM WILL NOT INCLUDE THAT   *  01460000
//*              FUNCTION, REMOVE DUMP VERIFICATION FROM THIS        *  01470000
//*              PROCEDURE.  DUMP VERIFICATION IS PERFORMED BY THE   *  01480000
//*              JOB NAMED "?AUTHIDG".                               *  01490000
//*            - TAPE UNIT ID IS SPECIFIED BY THE "TAPEUNIT"         *  01500000
//*              PARAMETER ABOVE.                                    *  01510000
//*            - THE FOLLOWING KEYWORD APPLIES TO DUMP VERIFICATION  *  01520000
//*              ONLY.                                               *  01530000
//*                                                                  *  01540000
//* ?DMPCLAS  -  NAME OF DUMP CLASS TO BE DEFINED FOR DUMP           *  01550000
//*              VERIFICATION.                                       *  01560000
//*                                                                  *  01570000
//* AFTER EDITING THE PROCEDURE AND REPLACING PARAMETERS, YOU CAN    *  01580000
//* SUBMIT THE PROCEDURE FOR EXECUTION AFTER STARTING HSM            *  01590000
//* (MAKE SURE THAT YOU HAVE REPLACED ALL NEEDED PARAMETERS BY       *  01600000
//* DOING A "FIND ?" TO LOCATED MISSED PARAMETERS.)                  *  01610000
//* THE PROCEDURE CONTAINS 7 JOBS, ALL BUT THE FIRST OF WHICH        *  01620000
//* ARE HELD (TYPRUN=HOLD).   RELEASE EACH JOB IN THIS PROCEDURE     *  01630000
//* ONLY AFTER ITS PRECEDING JOB HAS COMPLETED.                      *  01640000
//* THE FIRST JOB IN THE PROCEDURE CREATES A NEW MEMBER, "FVPCLEAN", *  01650000
//* IN "HSM.SAMPLE.CNTL".  THAT MEMBER CAN BE SUBMITTED TO REMOVE    *  01660000
//* DATA SETS ALLOCATED BY THE FVP AND ALL HSM-OWNED DASD VOLUMES    *  01670000
//* THAT WERE ADDVOL'ED BY THIS PROCEDURE.  USE THE DELVOL PURGE     *  01680000
//* COMMAND TO REMOVE TAPE VOLUMES.                                  *  01690000
//********************************************************************  01700000
//********************************************************************  01710000
//* THIS STEP CREATES THE MEMBER FVPCLEAN IN THE HSM.SAMPLE.CNTL     *  01720000
//* DATA SET.                                                        *  01730000
//********************************************************************  01740000
//*                                                                     01750000
//UPDSTEP EXEC PGM=IEBGENER                                             01760000
//SYSPRINT DD SYSOUT=*                                                  01770000
//SYSUT2   DD UNIT=SYSDA,                                               01780000
//            DSN=HSM.SAMPLE.CNTL(FVPCLEAN),                            01790000
//            DISP=OLD                                                  01800000
//SYSIN    DD DUMMY                                                     01810000
//SYSUT1   DD DATA,DLM='$A'                                             01820000
//?AUTHIDH JOB ?JOBPARM,                                                01830000
//    TYPRUN=HOLD                                                       01840000
//*                                                                     01850000
//********************************************************************  01860000
//*                       CLEAN UP                                   *  01870000
//*                                                                  *  01880000
//* THIS JOB DELETES ALL DATA SETS THAT WERE CREATED AS A RESULT OF  *  01890000
//* A PREVIOUS PROCESSING OF THE FVP.                                *  01900000
//*                                                                  *  01910000
//* IF IT IS NECESSARY TO RESTART THE FVP, THIS CLEAN UP MUST BE RUN *  01920000
//* FIRST.                                                           *  01930000
//*                                                                  *  01940000
//* IF YOU HAVE ADDED TAPES FOR BACKUP, MIGRATION, OR DUMP, YOU      *  01950000
//* SHOULD DELVOL PURGE THOSE VOLUMES.                               *  01960000
//*                                                                  *  01970000
//* YOU SHOULD DELETE THE MCD RECORDS CREATED BY MIGRATION           *  01980000
//********************************************************************  01990000
//*                                                                     02000000
//STEP1 EXEC PGM=IKJEFT01,REGION=512K                                   02010000
//SYSPRINT DD SYSOUT=*                                                  02020000
//SYSTSPRT DD SYSOUT=*                                                  02030000
//SYSTSIN  DD *                                                         02040000
  DELETE '?AUTHID.PRIMER'                                               02050000
  DELETE '?AUTHID.DATA1'                                                02060000
  DELETE '?AUTHID.DATA2'                                                02070000
  DELETE '?AUTHID.DATA3'                                                02080000
  DELETE '?AUTHID.DATA4'                                                02090000
  DELETE '?AUTHID.DATA5'                                                02100000
  DELETE '?AUTHID.DATA6'                                                02110000
 HSEND WAIT DELVOL ?MIGVOL MIGRATION                                    02120000
 HSEND WAIT DELVOL ?PRIVOL PRIMARY                                      02130000
/*                                                                      02140000
//STEP2 EXEC PGM=IDCAMS                                                 02150000
//SYSPRINT DD SYSOUT=*                                                  02160000
//SYSIN DD *                                                            02170000
  DELETE (?UID.SMALLDS.V?MIGVOL) CLUSTER PURGE                          02180000
  DELETE (?AUTHID.DATAV7) CLUSTER PURGE                                 02190000
  DELETE (?AUTHID.DATAV8) CLUSTER PURGE                                 02200000
/*                                                                  *   02210000
//STEP3 EXEC PGM=IKJEFT01,REGION=512K                                   02220000
//SYSPRINT DD SYSOUT=*                                                  02230000
//SYSTSPRT DD SYSOUT=*                                                  02240000
//SYSTSIN  DD *                                                         02250000
  /* You might receive the message FIXCDS COMMAND FAILED with a */      02260000
  /* return code of 0015 and/or message ARC0195I ERROR = RECORD */      02270000
  /* NOT FOUND if the MCD is not found.                         */      02280000
  HSEND WAIT FIXCDS D ?AUTHID.DATA1 DELETE                              02290000
  HSEND WAIT FIXCDS D ?AUTHID.DATA2 DELETE                              02300000
  HSEND WAIT FIXCDS D ?AUTHID.DATA3 DELETE                              02310000
  HSEND WAIT FIXCDS D ?AUTHID.DATA4 DELETE                              02320000
  HSEND WAIT FIXCDS D ?AUTHID.DATAV8 DELETE                             02330000
/*                                                                      02340000
$A                                                                      02350000
//********************************************************************  02360000
//* THIS STEP ALLOCATES NONVSAM DATA SETS USED FOR FUNCTION          *  02370000
//* VERIFICATION.  IT ALSO ALLOCATES "?AUTHID.PRIMER", A DATA SET    *  02380000
//* THAT IS USED TO PRIME THE VSAM DATA SETS CREATED BY STEP4.       *  02390000
//********************************************************************  02400000
//*                                                                     02410000
//STEP1 EXEC PGM=IEBDG                                                  02420000
//SYSPRINT DD SYSOUT=*                                                  02430000
//DATA1 DD DSN=?AUTHID.DATA1,DISP=(,CATLG),UNIT=?PRIUNT,                02440000
// SPACE=(TRK,(1)),VOL=SER=?PRIVOL,                                     02450000
// DCB=(RECFM=FB,LRECL=80,BLKSIZE=400,DSORG=PS)                         02460000
//DATA2 DD DSN=?AUTHID.DATA2,DISP=(,CATLG),UNIT=?PRIUNT,                02470000
// SPACE=(TRK,(1)),VOL=SER=?PRIVOL,                                     02480000
// DCB=(RECFM=VB,LRECL=100,BLKSIZE=500,DSORG=PS)                        02490000
//DATA3 DD DSN=?AUTHID.DATA3(DATA),DISP=(,CATLG),UNIT=?PRIUNT,          02500000
//  VOL=SER=?PRIVOL,SPACE=(TRK,(2,,10)),                                02510000
//  DCB=(RECFM=FB,LRECL=80,BLKSIZE=400,DSORG=PO)                        02520000
//DATA4 DD DSN=?AUTHID.DATA4,DISP=(,CATLG),UNIT=?PRIUNT,                02530000
// SPACE=(TRK,(3)),VOL=SER=?PRIVOL,                                     02540000
// DCB=(RECFM=FB,LRECL=80,BLKSIZE=400,DSORG=PS)                         02550000
//DATA5 DD DSN=?AUTHID.DATA5,DISP=(,CATLG),UNIT=?PRIUNT,                02560000
// SPACE=(CYL,(1)),VOL=SER=?PRIVOL,                                     02570000
// DCB=(RECFM=FB,LRECL=80,BLKSIZE=400)                                  02580000
//PRIMER DD DSN=?AUTHID.PRIMER,DISP=(NEW,CATLG),UNIT=?PRIUNT,           02590000
// VOL=SER=?PRIVOL,DCB=(RECFM=F,LRECL=200,BLKSIZE=200),SPACE=(TRK,(1))  02600000
//SYSIN DD *                                                            02610000
 DSD OUTPUT=(DATA1)                                                     02620000
 FD  NAME=A,LENGTH=80,STARTLOC=1,FILL=' ',PICTURE=32,'FVP DATA1 JOB=FVP 02630000
   FVP1 STEP=STEP1'                                                     02640000
 CREATE NAME=A                                                          02650000
 END                                                                    02660000
 DSD OUTPUT=(DATA2)                                                     02670000
 FD  NAME=B,LENGTH=80,STARTLOC=1,FILL=' ',PICTURE=32,'FVP DATA2 JOB=FVP 02680000
   FVP1 STEP=STEP1'                                                     02690000
 CREATE NAME=B,QUANTITY=10                                              02700000
 END                                                                    02710000
 DSD OUTPUT=(DATA3)                                                     02720000
 FD  NAME=C,LENGTH=80,STARTLOC=1,FILL=' ',PICTURE=32,'FVP DATA3 JOB=FVP 02730000
   FVP1 STEP=STEP1'                                                     02740000
 CREATE NAME=C,QUANTITY=50                                              02750000
 END                                                                    02760000
 DSD OUTPUT=(DATA4)                                                     02770000
 FD  NAME=D,LENGTH=80,STARTLOC=1,FILL=' ',PICTURE=32,'FVP DATA4 JOB=FVP 02780000
   FVP1 STEP=STEP1'                                                     02790000
 CREATE NAME=D,QUANTITY=150                                             02800000
 END                                                                    02810000
 DSD OUTPUT=(DATA5)                                                     02820000
 FD  NAME=E,LENGTH=80,STARTLOC=1,FILL=' ',PICTURE=32,'FVP DATA5 JOB=FVP 02830000
   FVP1 STEP=STEP1'                                                     02840000
 CREATE NAME=E,QUANTITY=1000                                            02850000
 END                                                                    02860000
 DSD OUTPUT=(PRIMER)                                                    02870000
 FD NAME=F,LENGTH=44,STARTLOC=1,PICTURE=44,                            X02880000
   'Z9999999999999999999999999999999999999999999'                       02890000
 CREATE NAME=F                                                          02900000
 END                                                                    02910000
/*                                                                      02920000
//********************************************************************  02930000
//*          CREATE SMALL-DATA-SET-PACKING (SDSP) DATA SET           *  02940000
//*                                                                  *  02950000
//*   THIS JOB DEFINES AND INITIALIZES A SMALL-DATA-SET-PACKING DATA *  02960000
//*   SET ON A MIGRATION VOLUME.                                     *  02970000
//*                                                                  *  02980000
//*   THE DATA SET NAME IS REQUIRED TO BE "?UID.SMALLDS.V?MIGVOL",   *  02990000
//*   WHERE ?UID IS THE AUTHORIZED HSM USERID (UID) AND WHERE THE    *  03000000
//*   ?MIGVOL IS THE VOLUME SERIAL NUMBER OF THE MIGRATION LEVEL 1   *  03010000
//*   VOLUME ON WHICH IT RESIDES.                                    *  03020000
//*                                                                  *  03030000
//*   NOTE: IF THE VOLUME IS ON A 3350 DEVICE, CHANGE THE            *  03040000
//*   CONTROL INTERVAL SIZE VALUE FOR THE DATA COMPONENT TO          *  03050000
//*   16384 (16K) BYTES.                                             *  03060000
//********************************************************************  03070000
//*                                                                     03080000
//SDSPA EXEC PGM=IDCAMS,REGION=512K                                     03090000
//SYSPRINT DD SYSOUT=*                                                  03100000
//SDSP1 DD UNIT=?MIGUNT,VOL=SER=?MIGVOL,DISP=SHR                        03110000
//SYSIN DD *                                                            03120000
 DEFINE CLUSTER (NAME(?UID.SMALLDS.V?MIGVOL) VOLUMES(?MIGVOL) -         03130000
        CYLINDERS(5 1) FILE(SDSP1) -                                    03140000
        RECORDSIZE(2093 2093) FREESPACE(0 0) -                          03150000
        INDEXED KEYS(45 0) -                                            03160000
        UNIQUE NOWRITECHECK) -                                          03170000
        DATA -                                                          03180000
        (CONTROLINTERVALSIZE(20480)) -                                  03190000
        INDEX -                                                         03200000
        (CONTROLINTERVALSIZE(4096)) -                                   03210000
        CATALOG(?UCATNAM)                                               03220000
 REPRO IDS(?AUTHID.PRIMER) ODS(?UID.SMALLDS.V?MIGVOL)                   03230000
//*                                                                     03240000
//********************************************************************  03250000
//*              PRINT THE DATA SETS CREATED IN STEP1                *  03260000
//********************************************************************  03270000
//*                                                                     03280000
//STEP2 EXEC PGM=IDCAMS,REGION=512K                                     03290000
//SYSPRINT DD SYSOUT=*                                                  03300000
//DATA1 DD DSN=?AUTHID.DATA1,DISP=SHR                                   03310000
//DATA2 DD DSN=?AUTHID.DATA2,DISP=SHR                                   03320000
//DATA3 DD DSN=?AUTHID.DATA3(DATA),DISP=SHR                             03330000
//DATA4 DD DSN=?AUTHID.DATA4,DISP=SHR                                   03340000
//DATA5 DD DSN=?AUTHID.DATA5,DISP=SHR                                   03350000
//SYSIN DD *                                                            03360000
 PRINT INFILE(DATA1) COUNT(1)                                           03370000
 PRINT INFILE(DATA2) COUNT(1)                                           03380000
 PRINT INFILE(DATA3) COUNT(1)                                           03390000
 PRINT INFILE(DATA4) COUNT(1)                                           03400000
 PRINT INFILE(DATA5) COUNT(1)                                           03410000
//?AUTHIDB JOB ?JOBPARM,                                                03420000
//    TYPRUN=HOLD                                                       03430000
//*                                                                     03440000
//********************************************************************  03450000
//*          PERFORM DATA SET BACKUP, MIGRATION, AND RECALL.         *  03460000
//********************************************************************  03470000
//*                                                                     03480000
//STEP3 EXEC PGM=IKJEFT01,REGION=512K                                   03490000
//SYSPRINT DD SYSOUT=*                                                  03500000
//SYSTSPRT DD SYSOUT=*                                                  03510000
//SYSTSIN DD *                                                          03520000
 /* You might receive the message FIXCDS COMMAND FAILED with a */       03530000
 /* return code of 0015 and/or message ARC0195I ERROR = RECORD */       03540000
 /* NOT FOUND if the MCD is not found.                         */       03550000
 HSEND WAIT SETSYS SDSP(1) FREQUENCY(0)                                 03560000
 HSEND WAIT ADDVOL ?PRIVOL UNIT(?PRIUNT) PRIMARY(AR)                    03570000
 HSEND WAIT ADDVOL ?MIGVOL UNIT(?MIGUNT) MIG(ML1 SDSP)                  03580000
 HBACKDS '?AUTHID.DATA1' WAIT                                           03590000
 HBACKDS '?AUTHID.DATA3' WAIT                                           03600000
 HBACKDS '?AUTHID.DATA5' WAIT                                           03610000
 HLIST LEVEL(?AUTHID) BOTH INCLUDEPRIM TERM                             03620000
 HSEND WAIT FIXCDS D '?AUTHID.DATA1' PATCH(X'5D' X'88000F')             03630000
 HSEND WAIT FIXCDS D '?AUTHID.DATA2' PATCH(X'5D' X'88000F')             03640000
 HSEND WAIT FIXCDS D '?AUTHID.DATA3' PATCH(X'5D' X'88000F')             03650000
 HSEND WAIT FIXCDS D '?AUTHID.DATA4' PATCH(X'5D' X'88000F')             03660000
 HMIGRATE '?AUTHID.DATA1' WAIT                                          03670000
 HMIGRATE '?AUTHID.DATA2' WAIT                                          03680000
 HMIGRATE '?AUTHID.DATA3' WAIT                                          03690000
 HMIGRATE '?AUTHID.DATA4' WAIT                                          03700000
 HLIST LEVEL(?AUTHID) TERM                                              03710000
 HRECALL '?AUTHID.DATA1' WAIT                                           03720000
 HRECALL '?AUTHID.DATA3' WAIT                                           03730000
 HRECALL '?AUTHID.DATA4' WAIT                                           03740000
 HLIST LEVEL(?AUTHID) INCLUDEPRIM TERM                                  03750000
//*                                                                     03760000
//********************************************************************  03770000
//*             THIS STEP CREATES TWO VSAM DATA SETS.                *  03780000
//*                                                                  *  03790000
//*     STEP4 - IDCAMS CREATES THE TWO VSAM DATA SETS.               *  03800000
//*                                                                  *  03810000
//*     NOTE  - MIGRATION OF A VSAM DATA SET REQUIRES AN INTEGRATED  *  03820000
//*             CATALOG FACILITY (ICF) CATALOG.                      *  03830000
//*             THE DATA SET WITH THE NAME DATAV8 IS USED BY A       *  03840000
//*             SUBSEQUENT STEP FOR MIGRATION.  YOU CAN REMOVE THE   *  03850000
//*             DEFINITION OF DATAV8 IF YOU ARE NOT GOING TO TEST    *  03860000
//*             VSAM DATA SET MIGRATION.                             *  03870000
//********************************************************************  03880000
//*                                                                     03890000
//STEP4   EXEC PGM=IDCAMS,REGION=512K                                   03900000
//DD1       DD DISP=OLD,UNIT=?PRIUNT,VOL=SER=?PRIVOL                    03910000
//SYSPRINT  DD SYSOUT=*                                                 03920000
//SYSIN     DD *                                                        03930000
 /*                                                                     03940000
 /********************************************************************  03950000
 /* DEFINE A VSAM CLUSTER FOR USE IN BACKUP.  THIS DOES NOT REQUIRE  *  03960000
 /* AN INTEGRATED CATALOG FACILITY (ICF) CATALOG.                    *  03970000
 /********************************************************************  03980000
 /*                                                                     03990000
     DEFINE CLUSTER -                                                   04000000
            (NAME(?AUTHID.DATAV7) -                                     04010000
            VOLUMES(?PRIVOL) -                                          04020000
            FILE(DD1) -                                                 04030000
            UNIQUE -                                                    04040000
            INDEXED -                                                   04050000
            RECORDS(50 50) -                                            04060000
            KEYS(2 1) -                                                 04070000
            RECORDSIZE(800 800))                                        04080000
     REPRO -                                                            04090000
       INDATASET(?AUTHID.PRIMER) -                                      04100000
       OUTDATASET(?AUTHID.DATAV7)                                       04110000
     PRINT -                                                            04120000
       INDATASET(?AUTHID.DATAV7)                                        04130000
 /*                                                                     04140000
 /********************************************************************  04150000
 /* DEFINE A VSAM CLUSTER FOR USE IN MIGRATION.  THIS REQUIRES AN    *  04160000
 /* INTEGRATED CATALOG FACILITY (ICF) CATALOG.                       *  04170000
 /********************************************************************  04180000
 /*                                                                     04190000
     DEFINE CLUSTER -                                                   04200000
            (NAME(?AUTHID.DATAV8) -                                     04210000
            UNIQUE -                                                    04220000
            NONINDEXED -                                                04230000
            FILE(DD1) -                                                 04240000
            RECORDS(50 50) -                                            04250000
            VOLUMES(?PRIVOL)   -                                        04260000
            RECORDSIZE(800 800) )                                       04270000
     REPRO -                                                            04280000
       INDATASET(?AUTHID.PRIMER) -                                      04290000
       OUTDATASET(?AUTHID.DATAV8)                                       04300000
     PRINT -                                                            04310000
       INDATASET(?AUTHID.DATAV8)                                        04320000
//?AUTHIDC JOB ?JOBPARM,                                                04330000
//    TYPRUN=HOLD                                                       04340000
//*                                                                     04350000
//********************************************************************  04360000
//*     THIS STEP BACKS UP, RECOVERS, MIGRATES, AND RECALLS          *  04370000
//*     VSAM DATA SETS.                                              *  04380000
//*                                                                  *  04390000
//*     STEP5  - BACKDS A VSAM DATA SET (DATAV7)                     *  04400000
//*            - MIGRATE A VSAM DATA SET (DATAV8)                    *  04410000
//*            - LIST THE CONTENTS OF THE MCDS AND BCDS              *  04420000
//*            - RECOVER A VSAM DATA SET (DATAV7)                    *  04430000
//*            - RECALL A VSAM DATA SET (DATAV8)                     *  04440000
//*            - LIST THE CONTENTS OF THE MCDS AND BCDS              *  04450000
//*                                                                  *  04460000
//*    NOTE    - THIS STEP REQUIRES THE DATA SET WITH THE NAME       *  04470000
//*              DATAV8 TO BE DEFINED IN A DF/EF CATALOG. IF YOUR    *  04480000
//*              SYSTEM DOES NOT HAVE DF/EF CATALOG SUPPORT,         *  04490000
//*              REMOVE THE COMMANDS REFERRING TO DATAV8.            *  04500000
//********************************************************************  04510000
//*                                                                     04520000
//STEP5  EXEC PGM=IKJEFT01,REGION=512K                                  04530000
//SYSPRINT DD SYSOUT=*                                                  04540000
//SYSTSPRT DD SYSOUT=*                                                  04550000
//SYSTSIN DD *                                                          04560000
 /* You might receive the message FIXCDS COMMAND FAILED with a */       04570000
 /* return code of 0015 and/or message ARC0195I ERROR = RECORD */       04580000
 /* NOT FOUND if the MCD is not found.                         */       04590000
HBACKDS '?AUTHID.DATAV7' WAIT                                           04600000
HSEND WAIT FIXCDS D '?AUTHID.DATAV8' PATCH(X'5D' X'88000F')             04610000
HMIGRATE '?AUTHID.DATAV8' WAIT                                          04620000
HLIST LEVEL(?AUTHID) BOTH INCLUDEPRIM TERM                              04630000
HRECOVER '?AUTHID.DATAV7' REPLACE WAIT                                  04640000
HRECALL '?AUTHID.DATAV8' WAIT                                           04650000
HLIST LEVEL(?AUTHID) BOTH INCLUDEPRIM TERM                              04660000
//*                                                                     04670000
//********************************************************************  04680000
//* THESE STEPS DELETE TWO OF THE DATA SETS AND RECREATE THEM WITH   *  04690000
//* DIFFERENT DATA SO THAT RECOVERED DATA CAN BE TESTED.             *  04700000
//*                                                                  *  04710000
//*     STEP6 - IEFBR14 DELETE "?AUTHID.DATA1" AND "?AUTHID.DATA5".  *  04720000
//*     STEP7 - IEBDG RECREATE "?AUTHID.DATA1" AND "?AUTHID.DATA5"   *  04730000
//*             WITH NEW DATA.                                       *  04740000
//*     STEP8 - AMS LIST "?AUTHID.DATA1" AND "?AUTHID.DATA5"         *  04750000
//********************************************************************  04760000
//*                                                                     04770000
//STEP6 EXEC PGM=IEFBR14                                                04780000
//DD1 DD DSN=?AUTHID.DATA1,DISP=(OLD,DELETE)                            04790000
//DD2 DD DSN=?AUTHID.DATA5,DISP=(OLD,DELETE)                            04800000
//STEP7 EXEC PGM=IEBDG                                                  04810000
//SYSPRINT DD SYSOUT=*                                                  04820000
//DATA1 DD DSN=?AUTHID.DATA1,DISP=(,CATLG),                             04830000
// UNIT=?PRIUNT,VOL=SER=?PRIVOL,                                        04840000
// SPACE=(TRK,(1)),DCB=(RECFM=FB,LRECL=80,BLKSIZE=400,DSORG=PS)         04850000
//DATA5 DD DSN=?AUTHID.DATA5,DISP=(,CATLG),                             04860000
// UNIT=?PRIUNT,VOL=SER=?PRIVOL,                                        04870000
// SPACE=(CYL,(1)),DCB=(RECFM=FB,LRECL=80,BLKSIZE=400)                  04880000
//SYSIN DD *                                                            04890000
 DSD OUTPUT=(DATA1)                                                     04900000
 FD  NAME=A,LENGTH=80,STARTLOC=1,FILL=' ',PICTURE=36,'FVP DATA1 NEW JOB 04910000
   =FVPFVP2 STEP=STEP7'                                                 04920000
 CREATE NAME=A                                                          04930000
 END                                                                    04940000
 DSD OUTPUT=(DATA5)                                                     04950000
 FD  NAME=E,LENGTH=80,STARTLOC=1,FILL=' ',PICTURE=36,'FVP DATA5 NEW JOB 04960000
   =FVPFVP2 STEP=STEP7'                                                 04970000
 CREATE NAME=E,QUANTITY=1000                                            04980000
 END                                                                    04990000
//STEP8 EXEC PGM=IDCAMS,REGION=512K                                     05000000
//SYSPRINT DD SYSOUT=*                                                  05010000
//DATA1 DD DSN=?AUTHID.DATA1,DISP=SHR                                   05020000
//DATA5 DD DSN=?AUTHID.DATA5,DISP=SHR                                   05030000
//SYSIN DD *                                                            05040000
 PRINT INFILE(DATA1) COUNT(1)                                           05050000
 PRINT INFILE(DATA5) COUNT(1)                                           05060000
//*                                                                     05070000
//?AUTHIDD JOB ?JOBPARM,                                                05080000
//    TYPRUN=HOLD                                                       05090000
//*                                                                     05100000
//********************************************************************  05110000
//* THIS STEP RECOVERS "?AUTHID.DATA1" AND "?AUTHID.DATA5" FROM      *  05120000
//* HSM BACKUP.                                                      *  05130000
//*                                                                  *  05140000
//*           - RECOVER "?AUTHID.DATA1" AND REPLACE ONLINE COPY.     *  05150000
//*           - RECOVER "?AUTHID.DATA5" AS A NEW DATA SET            *  05160000
//*             "?AUTHID.DATA6".                                     *  05170000
//********************************************************************  05180000
//*                                                                     05190000
//STEP9 EXEC PGM=IKJEFT01,REGION=512K                                   05200000
//SYSPRINT DD SYSOUT=*                                                  05210000
//SYSTSPRT DD SYSOUT=*                                                  05220000
//SYSTSIN DD *                                                          05230000
 HRECOVER '?AUTHID.DATA1' REPLACE WAIT                                  05240000
 HRECOVER '?AUTHID.DATA5' NEWNAME('?AUTHID.DATA6') WAIT                 05250000
//*                                                                     05260000
//?AUTHIDE JOB ?JOBPARM,                                                05270000
//    TYPRUN=HOLD                                                       05280000
//*                                                                     05290000
//********************************************************************  05300000
//* THIS STEP LISTS "?AUTHID.DATA1", "?AUTHID.DATA5", AND            *  05310000
//* "?AUTHID.DATA6" AS RECOVERED AND FORCES "?AUTHID.DATA2" TO BE    *  05320000
//* RECALLED VIA JCL REFERENCE.                                      *  05330000
//*                                                                  *  05340000
//*    STEP10 - AMS LIST "?AUTHID.DATA1", "?AUTHID.DATA5", AND       *  05350000
//*             "?AUTHID.DATA6".                                     *  05360000
//*             "?AUTHID.DATA1" SHOULD HAVE OLD DATA SINCE REPLACE   *  05370000
//*             MADE "?AUTHID.DATA5".                                *  05380000
//*             "?AUTHID.DATA5" SHOULD HAVE NEW DATA SINCE NO        *  05390000
//*             REPLACE MODE.                                        *  05400000
//*             "?AUTHID.DATA6" SHOULD HAVE THE OLD VERSION OF       *  05410000
//*             "?AUTHID.DATA5"                                      *  05420000
//*                                                                  *  05430000
//*    STEP11 - IEFBR14 FORCE ALLOCATION TO RECALL "?AUTHID.DATA2".  *  05440000
//********************************************************************  05450000
//*                                                                     05460000
//STEP10 EXEC PGM=IDCAMS,REGION=512K                                    05470000
//SYSPRINT DD SYSOUT=*                                                  05480000
//DATA1 DD DSN=?AUTHID.DATA1,DISP=SHR                                   05490000
//DATA5 DD DSN=?AUTHID.DATA5,DISP=SHR                                   05500000
//DATA6 DD DSN=?AUTHID.DATA6,DISP=SHR                                   05510000
//SYSIN DD *                                                            05520000
 PRINT INFILE(DATA1) COUNT(1)                                           05530000
 PRINT INFILE(DATA5) COUNT(1)                                           05540000
 PRINT INFILE(DATA6) COUNT(1)                                           05550000
//STEP11 EXEC PGM=IEFBR14                                               05560000
//DD1 DD DSN=?AUTHID.DATA2,DISP=OLD                                     05570000
//*******************************************************************   05580000
//*                                                                     05590000
//?AUTHIDF JOB ?JOBPARM,                                                05600000
//    TYPRUN=HOLD                                                       05610000
//*                                                                     05620000
//*******************************************************************   05630000
//* THIS JOB PERFORMS THE VERIFICATION OF TAPE SUPPORT.  IF TAPE    *   05640000
//* IS NOT USED, THIS JOB SHOULD BE REMOVED FROM THE PROCEDURE.     *   05650000
//********************************************************************  05660000
//*                                                                     05670000
//********************************************************************  05680000
//*   THE FOLLOWING STEP WILL:                                       *  05690000
//*           - BACKUP "?AUTHID.DATA5" TO ML1 DASD.                  *  05700000
//*           - CHANGE TO DIRECT TAPE MIGRATION.                     *  05710000
//*           - MIGRATE "?AUTHID.DATA5".                             *  05720000
//*           - CHANGE TO DASD MIGRATION.                            *  05730000
//*           - LIST MIGRATION VOLUMES.                              *  05740000
//*           - RECALLS "?AUTHID.DATA5".                             *  05750000
//*           - BACKS UP VOLUME ?PRIVOL TO TAPE.                     *  05760000
//*           - LIST BACKUP VOLUMES.                                 *  05770000
//*           - RECOVER ?PRIVOL FROM TAPE                            *  05780000
//********************************************************************  05790000
//*                                                                     05800000
//STEP12 EXEC PGM=IKJEFT01,REGION=512K                                  05810000
//SYSPRINT DD SYSOUT=*                                                  05820000
//SYSTSPRT DD SYSOUT=*                                                  05830000
//SYSTSIN DD *                                                          05840000
 /* You might receive the message FIXCDS COMMAND FAILED with a */       05850000
 /* return code of 0015 and/or message ARC0195I ERROR = RECORD */       05860000
 /* NOT FOUND if the MCD is not found.                         */       05870000
 HSEND WAIT SETSYS UNIT(?TAPEUNT)                                       05880000
 HBACKDS '?AUTHID.DATA5' WAIT                                           05890000
 HSEND WAIT SETSYS TAPEMIGRATION(DIRECT(TAPE(?TAPEUNT)))                05900000
 HSEND WAIT FIXCDS D '?AUTHID.DATA5' PATCH(X'5D' X'88000F')             05910000
 HMIGRATE '?AUTHID.DATA5' WAIT                                          05920000
 HSEND WAIT SETSYS TAPEMIGRATION(NONE)                                  05930000
 HSEND WAIT LIST MIGRATIONVOLUME                                        05940000
 HRECALL '?AUTHID.DATA5' WAIT                                           05950000
 HSEND WAIT BACKVOL VOLUME(?PRIVOL) UNIT(?PRIUNT) B(TAPE) TOTAL         05960000
 HSEND WAIT LIST BACKUPVOLUME                                           05970000
 HSEND WAIT RECOVER * TOVOLUME(?PRIVOL) UNIT(?PRIUNT)                   05980000
//*                                                                     05990000
//********************************************************************  06000000
//*                                                                     06010000
//?AUTHIDG JOB ?JOBPARM,                                                06020000
//    TYPRUN=HOLD                                                       06030000
//*                                                                     06040000
//********************************************************************  06050000
//* THIS JOB VERIFIES THE DFDSS DUMP FUNCTION. IF THE DFDSS DUMP     *  06060000
//* FUNCTION IS NOT TO BE USED IN YOUR SYSTEM, REMOVE THIS JOB FROM  *  06070000
//* THE PROCEDURE.                                                   *  06080000
//*                                                                  *  06090000
//* THE DUMP FUNCTION USES THE DUMP CLASS NAMED "?DMPCLAS". THE      *  06100000
//* VOLUME ?PRIVOL IS DUMPED TO THAT CLASS.                          *  06110000
//********************************************************************  06120000
//*                                                                     06130000
//STEP13 EXEC PGM=IKJEFT01,REGION=512K                                  06140000
//SYSPRINT DD SYSOUT=*                                                  06150000
//SYSTSPRT DD SYSOUT=*                                                  06160000
//SYSTSIN DD *                                                          06170000
 HSEND WAIT DEFINE DUMPCLASS(?DMPCLAS FREQUENCY(90) RETPD(356) -        06180000
      NOAUTOREUSE NODATASETRESTORE NORESET -                            06190000
      DISPOSITION('FVP-END') VTOCCOPIES(0))                             06200000
 HSEND WAIT BACKVOL VOL(?PRIVOL) DUMP(DUMPCLASS(?DMPCLAS) -             06210000
      RETPD(NOLIMIT)) UNIT(?PRIUNT)                                     06220000
 HSEND WAIT LIST DUMPCLASS(?DMPCLAS)                                    06230000
 HSEND WAIT RECOVER * FROMDUMP(DUMPCLASS(?DMPCLAS)) -                   06240000
      TOVOL(?PRIVOL) U(?PRIUNT)                                         06250000
 HSEND WAIT LIST DUMPCLASS(?DMPCLAS)                                    06260000
$$                                                                      06270000

./ ADD NAME=ARCF0000
CHAPTER 25. ABACKUP COMMAND: BACKING UP AGGREGATED DATA SETS.... 687    00010000
EXECUTE AND VERIFY: SPECIFYING WHETHER DATA MOVEMENT PROCESSING OR DATA 00020000
FILTEROUTPUTDATASET: SPECIFYING THE OUTPUT DATA SET...........689       00030000
LIST: LISTING DATA SETS NOT BACKED UP DUE TO THE SKIP PARAMETER.........00040000
MOVE: REMOVING THE DATA SETS.... 689                                    00050000
OPTIMIZE: OVERRIDING THE SETSYS ABARSOPTIMIZE COMMAND690                00060000
PROCESSONLY: DESIGNATING THE CATEGORIES TO PROCESS.. 690                00070000
SKIP: SKIPPING DATA SETS ON VOLUMES PROTECTED BY PPRC OR XRC...........600080000
STACK AND NOSTACK: OVERRIDING THE SETSYS ABARSTAPES SETTING......691    00090000
UNIT: DESIGNATING THE OUTPUT DEVICE....... 691                          00100000
CHAPTER 26. ADDVOL COMMAND: ADDING OR CHANGING DFSMSHSM VOLUMES...... 6900110000
BACKUP, DUMP, MIGRATION, AND PRIMARY: IDENTIFYING THE TYPE OF VOLUME... 00120000
UNIT: SPECIFYING THE TYPE OF DEVICE......... 696                        00130000
AUTOBACKUP AND NOAUTOBACKUP: SPECIFYING WHETHER THE PRIMARY VOLUME IS EL00140000
AUTOMATIC BACKUP........697                                             00150000
AUTODUMP AND NOAUTODUMP: SPECIFYING WHETHER A VOLUME IS ELIGIBLE FOR AUT00160000
DUMPING TO TAPE.......... 698                                           00170000
AUTOMIGRATION AND NOAUTOMIGRATION: SPECIFYING WHETHER THE PRIMARY VOLUME00180000
ELIGIBLE FOR AUTOMATIC VOLUME SPACE MANAGEMENT.... 698                  00190000
AUTORECALL AND NOAUTORECALL: SPECIFYING WHETHER THE PRIMARY VOLUME IS EL00200000
AUTOMATIC RECALL...........699                                          00210000
BACKUPDEVICECATEGORY: SPECIFYING WHERE BACKUP VERSIONS RESIDE. 699      00220000
DAILY AND SPILL: IDENTIFYING THE TYPE OF BACKUP VOLUME...........700    00230000
DELETEBYAGE, DELETEIFBACKEDUP, AND MIGRATE: SPECIFYING THE TYPE OF SPACE00240000
MANAGEMENT ON A PRIMARY VOLUME..... 700                                 00250000
DENSITY: SPECIFYING THE TAPE DENSITY..... 701                           00260000
DRAIN AND NODRAIN: SPECIFYING WHETHER A VOLUME SHOULD BE SELECTED FOR MI00270000
DUMPCLASS: RESTRICTING THE SPECIFIED VOLUME TO USE A SPECIFIC DUMP CLASS00280000
MIGRATIONLEVEL1 AND MIGRATIONLEVEL2: SPECIFYING THE MIGRATION LEVEL... 700290000
OVERFLOW AND NOOVERFLOW: SPECIFYING THE USAGE OF A LEVEL 1 VOLUME FOR DA00300000
MIGRATION AND BACKUP VERSIONS........... 703                            00310000
SMALLDATASETPACKING AND NOSMALLDATASETPACKING: SPECIFYING SMALL DATA SET00320000
PACKING ON THE LEVEL 1 VOLUME.703                                       00330000
THRESHOLD: SPECIFYING THRESHOLDS OF OCCUPANCY..........704              00340000
TRACKMANAGEDTHRESHOLD: SPECIFYING THE HIGH AND LOW THRESHOLD FOR THE TRA00350000
SPACE OF A NON-SMS LEVEL 0 EXTENDED ADDRESS VOLUME......705             00360000
CHAPTER 27. ALTERDS COMMAND: CHANGING THE BACK-UPS FOR A NON-SMS-MANAGED00370000
NAME: SPECIFYING THE NAME OF THE DATA SET OR UNIX FILE BEING ALTERED...700380000
FREQUENCY AND SYSFREQUENCY: SPECIFYING THE FREQUENCY OF BACKUP VERSIONS.00390000
VERSIONS AND SYSVERSIONS: SPECIFYING THE NUMBER OF BACKUP VERSIONS TO MA00400000
CHAPTER 28. ALTERPRI COMMAND: ALTERING THE PRIORITY OF QUEUED REQUESTS..00410000
REQUEST, USERID, AND DATASETNAME, AND FILENAME: SPECIFYING THE REQUESTS 00420000
REPRIORITIZED..... 714                                                  00430000
OVERFLOW AND NOOVERFLOW: SPECIFYING THE USAGE OF A LEVEL 1 VOLUME FOR DA00440000
MIGRATION AND BACKUP VERSIONS........... 703                            00450000
SMALLDATASETPACKING AND NOSMALLDATASETPACKING: SPECIFYING SMALL DATA SET00460000
PACKING ON THE LEVEL 1 VOLUME.703                                       00470000
THRESHOLD: SPECIFYING THRESHOLDS OF OCCUPANCY..........704              00480000
TRACKMANAGEDTHRESHOLD: SPECIFYING THE HIGH AND LOW THRESHOLD FOR THE TRA00490000
SPACE OF A NON-SMS LEVEL 0 EXTENDED ADDRESS VOLUME......705             00500000
CHAPTER 27. ALTERDS COMMAND: CHANGING THE BACK-UPS FOR A NON-SMS-MANAGED00510000
NAME: SPECIFYING THE NAME OF THE DATA SET OR UNIX FILE BEING ALTERED...700520000
FREQUENCY AND SYSFREQUENCY: SPECIFYING THE FREQUENCY OF BACKUP VERSIONS.00530000
VERSIONS AND SYSVERSIONS: SPECIFYING THE NUMBER OF BACKUP VERSIONS TO MA00540000
CHAPTER 28. ALTERPRI COMMAND: ALTERING THE PRIORITY OF QUEUED REQUESTS..00550000
REQUEST, USERID, AND DATASETNAME, AND FILENAME: SPECIFYING THE REQUESTS 00560000
REPRIORITIZED..... 714                                                  00570000
HIGH AND LOW: SPECIFYING THE NEW PRIORITY OF A REQUEST714               00580000
CHAPTER 29. ARECOVER COMMAND: RECOVERING A SPECIFIED AGGREGATE GROUP... 00590000
AGGREGATE: SPECIFYING THE AGGREGATE GROUP TO BE RECOVERED.. 719         00600000
DATASETNAME: SPECIFYING THE CONTROL FILE..........719                   00610000
VOLUMES AND XMIT: SPECIFYING THE VOLUME TYPE........... 719             00620000
EXECUTE, VERIFY, AND PREPARE: SPECIFYING WHETHER DATA MOVEMENT OR VERIFI00630000
SHOULD OCCUR OR WHETHER AN ABR RECORD SHOULD BE CREATED.. 720           00640000
OPTIONAL PARAMETERS OF THE ARECOVER COMMAND... 720                      00650000
ACTIVITY: RECOVERING THE ACTIVITY LOG......721                          00660000
DATASETCONFLICT: RESOLVING DATA SET NAMING CONFLICTS...........721      00670000
DATE AND VERSION: SPECIFYING THE SPECIFIC AGGREGATE GROUP TO BE RECOVERE00680000
INSTRUCTION: RECOVERING THE INSTRUCTION DATA SET....... 722             00690000
MENTITY: SPECIFYING A MODEL ENTITY........722                           00700000
MIGRATEDDATA: SPECIFYING THE MIGRATION LEVEL FOR RECOVERING MIGRATED DAT00710000
NOBACKUPMIGRATED: SPECIFYING THAT AUTOMATIC BACKUP DOES NOT OCCUR FOR RE00720000
MIGRATED DATA SETS.......723                                            00730000
ONLYDATASET: RECOVER A SINGLE DATA SET OR A GROUP OF DATA SETS FROM AN A00740000
BACKUP. 723                                                             00750000
PERCENTUTILIZED: SPECIFYING THE PERCENTAGE OF DASD SPACE USED DURING ARE00760000
DATA SETS TO NON-SMS VOLUMES724                                         00770000
RECOVERNEWNAMEALL AND RECOVERNEWNAMELEVEL: SPECIFYING A HIGH-LEVEL QUALI00780000
FOR RECOVERED DATA SETS724                                              00790000
STACK AND NOSTACK: SPECIFYING WHETHER OR NOT THE ABACKUP OUTPUT IS STACK00800000
TARGETUNIT: SPECIFYING UNIT TYPES TO BE USED FOR ARECOVER..725          00810000
TGTGDS: OVERRIDING THE SETSYS ARECOVERTGTGDS COMMAND 726                00820000
UNIT: SPECIFYING UNIT TYPES USED FOR ARECOVER 726                       00830000
VOLCOUNT: ALLOWING DATA SETS TO EXPAND TO MULTIVOLUME AS NECESSARY DURIN00840000
HOW TO CREATE THE ABR RECORD........... 727                             00850000
EXAMPLES OF HOW TO CODE THE ARECOVER COMMAND 727                        00860000
CHAPTER 30. AUDIT COMMAND: AUDITING DFSMSHSM..... 731                   00870000
AUDITING CONTROL DATA SETS......731                                     00880000
AUDITING COMMON QUEUES...... 732                                        00890000
USING THE AUDIT COMMAND....732                                          00900000
SYNTAX OF THE ENHANCED AUDIT COMMANDS...732                             00910000
SYNTAX OF THE ORIGINAL AUDIT COMMANDS.......734                         00920000
REQUIRED AND OPTIONAL PARAMETERS OF THE AUDIT COMMAND 737               00930000
ABARSCONTROLS: REQUESTING AN AUDIT OF ABR RECORDS IN THE BCDS.... 737   00940000
ALL, BACKUPCONTROLDATASET, MIGRATIONCONTROLDATASET, AND                 00950000
OFFLINECONTROLDATASET: REQUESTING AN AUDIT OF DATA SETS.........737     00960000
BACKUPTYPE, BACKUPVOLUMES, AND VOLUMES: REQUESTING AN AUDIT OF PRIMARY, 00970000
MIGRATION, OR BACKUP VOLUMES.738                                        00980000
XVII                                                                    00990000
COMMONQUEUE: REQUESTING AN AUDIT OF COMMON QUEUES........739            01000000
COPYPOOLCONTROLS: REQUESTING AN AUDIT OF FAST REPLICATION CDS RECORD REL01010000
DATASETCONTROLS: REQUESTING AN AUDIT OF DATA SET CONTROL RECORDS.. 740  01020000
DATASETNAMES, LEVELS, AND RESUME: REQUESTING AN AUDIT OF DATA SETS......01030000
DIRECTORYCONTROLS VOLUMES: COMPARING A VTOC OR A TTOC TO CDS RECORDS....01040000
FILECONTROLS: REQUESTING AN AUDIT OF UNIX FILE CONTROL RECORDS........ 701050000
FILE, FILELEVEL, AND RESUME: REQUESTING AN AUDIT OF UNIX FILES........ 701060000
MASTERCATALOG AND USERCATALOG: REQUESTING AN AUDIT OF A CATALOG.........01070000
MEDIACONTROLS VOLUMES, MEDIACONTROLS(SDSP) VOLUMES AND                  01080000
MEDIACONTROLS(CLOUD): REQUESTING AN AUDIT OF CONTROL INFORMATION...... 701090000
VOLUMECONTROLS (BACKUP, MIGRATION, AND RECOVERABLE): REQUESTING AN AUDIT01100000
CONTROL INFORMATION......743                                            01110000
OPTIONAL PARAMETERS OF THE AUDIT COMMAND...........744                  01120000
FIX AND NOFIX: SPECIFYING WHETHER AUDITING REPAIRS ERRORS....... 744    01130000
OUTDATASET, SYSOUT, AND TERMINAL: SPECIFYING THE OUTPUT LOCATION FOR THE01140000
REPORT: SPECIFYING HOW MUCH AUDIT INFORMATION TO PRINT.......... 746    01150000
SERIALIZATION: STABILIZING CONTROL INFORMATION 746                      01160000
USING THE AUDIT COMMAND....747                                          01170000
CHAPTER 31. AUTH COMMAND: IDENTIFYING AUTHORIZED USERS...... 749        01180000
SYNTAX OF THE AUTH COMMAND...........749                                01190000
REQUIRED PARAMETERS OF THE AUTH COMMAND........... 749                  01200000
USERID: SPECIFYING THE USER WHOSE AUTHORIZATION IS TO BE CHANGED........01210000
DATABASEAUTHORITY AND REVOKE: GIVING AUTHORITY TO OR REVOKING AUTHORITY 01220000
EXAMPLES OF HOW TO CODE THE AUTH COMMAND......... 751                   01230000
CHAPTER 32. BACKDS COMMAND: BACKING UP A SPECIFIC DATA SET........... 7501240000
SYNTAX OF THE BACKDS COMMAND FOR A UNIX FILE...... 754                  01250000
REQUIRED PARAMETERS OF THE BACKDS COMMAND.......755                     01260000
DSNAME: SPECIFYING THE NAME OF THE DATA SET TO BE BACKED UP.. 755       01270000
FILEPATH: SPECIFYING THE NAME OF THE UNIX FILE TO BE BACKED UP..755     01280000
OPTIONAL PARAMETERS FOR THE BACKDS COMMAND...... 756                    01290000
CC: SPECIFYING CONCURRENT COPY FOR DATA SET BACKUP....... 756           01300000
CHANGEDONLY/TOTAL: SPECIFYING WHETHER TO BACK UP UNIX FILES THAT HAVE A 01310000
DATE IN THEIR METADATA  758                                             01320000
DELETE: SPECIFYING WHETHER TO DELETE THE UNIX FILE AFTER A SUCCESSFUL BA01330000
EXCLUDE: SPECIFYING FILES OR DIRECTORIES TO BE EXCLUDED FROM PROCESSING.01340000
NEWNAME: SPECIFYING A NAME TO ASSIGN TO THE BACKUP VERSION.759          01350000
RECURSE: EXAMINE SUBDIRECTORIES OF THE SPECIFIED UNIX FILE PATH........701360000
RETAINDAYS: SPECIFYING THE NUMBER OF DAYS TO RETAIN A BACKUP COPY.. 761 01370000
TARGET: SPECIFYING A REQUIRED TARGET OUTPUT DEVICE.......762            01380000
UNIT: SPECIFYING THE TYPE OF DEVICE......... 762                        01390000
VOLUME: SPECIFYING THE VOLUME WHERE THE DATA SET RESIDES......762       01400000
DELETE EXPIRED BACKUP VERSIONS OF UNIX FILES........... 762             01410000
EXAMPLES OF HOW TO CODE THE BACKDS COMMAND.....763                      01420000
CHAPTER 33. BACKFILE COMMAND: BACKING UP A SPECIFIC UNIX FILE....... 76501430000
CHAPTER 34. BACKDS COMMAND: BACKING UP A SPECIFIC DATA SET........... 7601440000
CHAPTER 35. BACKFILE COMMAND: BACKING UP A SPECIFIC UNIX FILE....... 76901450000
CHAPTER 36. BACKVOL COMMAND: BACKING UP DATA SETS FROM VOLUMES OR DUMPIN01460000
BACKING UP DATA SETS FROM ONE OR MORE SMS-MANAGED VOLUMES OR DUMPING SMS01470000
VOLUMES..... 771                                                        01480000
SYNTAX OF THE BACKVOL COMMAND WITH SMS-MANAGED VOLUMES.....772          01490000
REQUIRED PARAMETERS FOR SMS-MANAGED VOLUMES.... 773                     01500000
CONTROLDATASETS: SPECIFYING THE CONTROL DATA SETS TO BE BACKED UP 773   01510000
XVIII                                                                   01520000
STORAGEGROUP: SPECIFYING THE STORAGE GROUP TO BACK UP OR DUMP.....773   01530000
VOLUMES: SPECIFYING THE VOLUMES TO BE BACKED UP OR DUMPED 774           01540000
OPTIONAL PARAMETERS FOR SMS-MANAGED CONTROL DATA SETS... 775            01550000
BACKUPDEVICECATEGORY: SPECIFYING THE BACKUP DEVICE FOR THE CONTROL DATA 01560000
JOURNAL.. 775                                                           01570000
DATAMOVER: SPECIFYING THE TYPE OF DATA MOVEMENT USED WHEN BACKING UP THE01580000
DATA SETS.......... 775                                                 01590000
NULLJOURNALONLY: SPECIFYING THAT DFSMSHSM NULL THE JOURNAL......... 776 01600000
OPTIONAL PARAMETERS FOR SMS-MANAGED VOLUMES..... 776                    01610000
BACKUPDEVICECATEGORY: SPECIFYING WHERE THE BACKUP VERSIONS ARE TO RESIDE01620000
DUMP, INCREMENTAL, AND TOTAL: SPECIFYING WHICH DATA SETS ARE BACKED UP. 01630000
DUMPCLASS: SPECIFYING THAT EACH DUMP COPY BE TARGETED TO A PARTICULAR DU01640000
RETENTIONPERIOD: REQUESTING A SPECIFIC RETENTION PERIOD FOR THE DUMP COP01650000
STACK/MAXSTACK AND MINSTACK: SPECIFYING THE MAXIMUM AND MINIMUM NUMBER O01660000
DUMP COPIES TO BE STACKED FOR THE SPECIFIED DUMP CLASSES.. 778          01670000
TERMINAL: REQUESTING THAT BACKUP OR DUMP MESSAGES APPEAR AT THE TERMINAL01680000
EXAMPLES OF HOW TO CODE THE BACKVOL COMMAND FOR SMS-MANAGED VOLUMES.....01690000
BACKING UP DATA SETS FROM ONE OR MORE NON-SMS-MANAGED VOLUMES OR FROM AL01700000
VOLUMES OR DUMPING NON-SMS-MANAGED VOLUMES.......... 781                01710000
SYNTAX OF THE BACKVOL COMMAND WITH NON-SMS-MANAGED VOLUMES......... 782 01720000
SUMMARY OF PARAMETERS...782                                             01730000
REQUIRED PARAMETERS FOR NON-SMS-MANAGED VOLUMES OR ALL PRIMARY VOLUMES..01740000
CONTROLDATASETS: SPECIFYING THE CONTROL DATA SETS TO BE BACKED UP 783   01750000
PRIMARY AND VOLUMES: SPECIFYING THE VOLUMES TO BE BACKED UP OR DUMPED.7801760000
OPTIONAL PARAMETERS FOR NON-SMS-MANAGED CONTROL DATA SETS........784    01770000
BACKUPDEVICECATEGORY: SPECIFYING THE BACKUP DEVICE FOR THE CONTROL DATA 01780000
JOURNAL.. 784                                                           01790000
DATAMOVER: SPECIFYING THE TYPE OF DATA MOVEMENT USED WHEN BACKING UP THE01800000
DATA SETS.......... 784                                                 01810000
NULLJOURNALONLY: SPECIFYING THAT DFSMSHSM NULL THE JOURNAL......... 784 01820000
OPTIONAL PARAMETERS FOR NON-SMS-MANAGED VOLUMES OR ALL PRIMARY VOLUMES..01830000
BACKUPDEVICECATEGORY: SPECIFYING WHERE THE BACKUP VERSIONS RESIDE.......01840000
DUMP, INCREMENTAL, AND TOTAL: SPECIFYING WHICH DATA SETS ARE BACKED UP. 01850000
DUMPCLASS: SPECIFYING THAT EACH DUMP COPY BE TARGETED TO A PARTICULAR DU01860000
FREQUENCY: SPECIFYING THE FREQUENCY OF BACKUP FOR DATA SETS.786         01870000
RETENTIONPERIOD: REQUESTING A SPECIFIC RETENTION PERIOD FOR THE DUMP COP01880000
STACK/MAXSTACK AND MINSTACK: SPECIFYING THE MAXIMUM AND MINIMUM NUMBER O01890000
DUMP COPIES TO BE STACKED FOR THE SPECIFIED DUMP CLASSES.. 786          01900000
TERMINAL: REQUESTING THAT BACKUP OR DUMP MESSAGES APPEAR AT THE TERMINAL01910000
UNIT: SPECIFYING THE TYPE OF DEVICE......... 787                        01920000
EXAMPLES OF HOW TO CODE THE BACKVOL COMMAND FOR NON-SMS-MANAGED VOLUMES.01930000
CHAPTER 37. BDELETE COMMAND: DELETING BACKUP VERSIONS OF A DATA SET.....01940000
SYNTAX OF THE BDELETE COMMAND..... 789                                  01950000
REQUIRED PARAMETERS OF THE BDELETE COMMAND..... 789                     01960000
DSNAME: SPECIFYING THE NAME OF THE DATA SET WHOSE BACKUP VERSIONS ARE TO01970000
PATHNAME: SPECIFYING THE NAME OF THE UNIX FILE WHOSE BACKUP VERSIONS ARE01980000
ALL, DATE AND TIME, AND VERSIONS: SPECIFYING WHICH BACKUP VERSIONS TO DE01990000
ALL: DELETING ALL BACKUP VERSIONS 790                                   02000000
DATE AND TIME: SPECIFYING THE DATE AND TIME OF THE BACKUP VERSION TO DEL02010000
VERSIONS: SPECIFYING THE BACKUP VERSIONS TO DELETE.....791              02020000
OPTIONAL PARAMETERS OF THE BDELETE COMMAND...... 791                    02030000
FROMVOLUME: SPECIFYING THE VOLUME WHERE THE DATA SET RESIDED WHEN THE BA02040000
VERSIONS WERE CREATED. 791                                              02050000
EXAMPLES OF HOW TO CODE THE BDELETE COMMAND... 791                      02060000
CHAPTER 38. CANCEL COMMAND: CANCELING A QUEUED OR ACTIVE DFSMSHSM REQUES02070000
SYNTAX OF THE CANCEL COMMAND.......793                                  02080000
XIX                                                                     02090000
OPTIONAL PARAMETERS OF THE CANCEL COMMAND........ 793                   02100000
DATASETNAME: CANCELING A QUEUED REQUEST BY DATA SET NAME 794            02110000
FILENAME: CANCELING A QUEUED REQUEST BY UNIX FILE NAME.......794        02120000
REQUEST: CANCELING A QUEUED REQUEST BY REQUEST NUMBER....... 794        02130000
USERID: CANCELING A QUEUED REQUEST BY USER ID 794                       02140000
SASINDEX: CANCELING AN ACTIVE REQUEST BY ABARS SECONDARY ADDRESS SPACE..02150000
TCBADDRESS: CANCELING AN ACTIVE REQUEST BY TCB ADDRESS...... 795        02160000
EXAMPLES OF HOW TO CODE THE CANCEL COMMAND..... 795                     02170000
CHAPTER 39. DEFINE COMMAND: DEFINING CONTROL STRUCTURES FOR USE BY DFSMS02180000
SYNTAX OF THE DEFINE COMMAND....... 798                                 02190000
OPTIONAL PARAMETERS OF THE DEFINE COMMAND.........800                   02200000
ARPOOL: IDENTIFYING THE VOLUMES FOR AGGREGATE RECOVERY..........800     02210000
BACKUP: SPECIFYING THE BACKUP CYCLE..... 801                            02220000
CYCLESTARTDATE: SPECIFYING THE START DATE OF A CYCLE.. 802              02230000
DUMPCLASS: ADDING OR CHANGING A VOLUME DUMP CLASS.802                   02240000
DUMPCLASS(AUTOREUSE AND NOAUTOREUSE): SPECIFIES WHETHER DUMP VOLUMES ARE02250000
AUTOMATICALLY AVAILABLE FOR REUSE WHEN INVALIDATED... 804               02260000
DUMPCLASS(DATASETRESTORE AND NODATASETRESTORE): DATA SET RESTORE IS ALLO02270000
FROM A FULL-VOLUME DUMP COPY IN THIS DUMP CLASS......805                02280000
DUMPCLASS(DAY): SPECIFYING THE TARGET DAY OF THE DUMP CYCLE FOR THIS CLA02290000
DUMPCLASS(DISABLE): SPECIFYING THE VOLUME DUMP CLASS AND MAKING IT UNAVA02300000
TARGET OF ANY FULL-VOLUME DUMP...........806                            02310000
DUMPCLASS(DISPOSITION): SPECIFYING THE DISPOSITION OF DUMP VOLUMES......02320000
DUMPCLASS(ENCRYPT): SPECIFYING WHETHER TO ENCRYPT THE DUMP DATA WITH HOS02330000
ENCRYPTION........807                                                   02340000
DUMPCLASS(FASTREPLICATIONDUMP): SPECIFYING WHETHER A DUMP CLASS IS REQUI02350000
OPTIONAL 808                                                            02360000
DUMPCLASS(FASTREPLICATIONRECOVER): SPECIFYING WHETHER A DUMP CLASS COPY 02370000
IMMEDIATELY AVAILABLE TO BE MOUNTED FOR RECOVERY....808                 02380000
DUMPCLASS(FREQUENCY): SPECIFYING THE MINIMUM NUMBER OF DAYS THAT MUST EL02390000
BETWEEN VOLUME DUMPS OF A VOLUME TO THIS CLASS..... 809                 02400000
DUMPCLASS(HWCOMPRESS): SPECIFYING WHETHER TO COMPRESS THE DATA TO BE ENC02410000
DUMPCLASS(RECOVERRESET): SPECIFYING WHETHER TO RESET THE DATA-SET-CHANGE02420000
IN THE VTOC ENTRY.........810                                           02430000
DUMPCLASS(RESET AND NORESET): SPECIFYING WHETHER DFSMSDSS RESETS THE CHA02440000
FOR EACH DATA SET FOLLOWING A FULL-VOLUME DUMP......... 810             02450000
DUMPCLASS(RETENTIONPERIOD): SPECIFYING THE ENFORCEMENT OF RETENTION PERI02460000
DUMP COPIES IN THIS CLASS........ 811                                   02470000
DUMPCLASS(STACK/MAXSTACK) AND DUMPCLASS(MINSTACK): SPECIFYING THE MAXIMU02480000
AND MINIMUM NUMBER OF DUMP COPIES THAT ARE STACKED FOR THIS DUMP CLASS..02490000
DUMPCLASS(TAPEEXPIRATIONDATE): SPECIFYING A UNIQUE EXPIRATION DATE FOR A02500000
COPIES CREATED IN A DUMP........ 813                                    02510000
DUMPCLASS(UNIT): SPECIFYING A DEFAULT TAPE UNIT NAME.......... 813      02520000
DUMPCLASS(VTOCCOPIES): SPECIFYING THE NUMBER OF DUMP VTOC COPY DATA SETS02530000
FOR DUMP COPIES CREATED IN THIS CLASS. 814                              02540000
DUMPCLASS(ZCOMPRESS): SPECIFYING WHETHER TO USE ZEDC SERVICES ON THE DUM02550000
DUMPCYCLE: SPECIFYING THE AUTOMATIC DUMP CYCLE....... 815               02560000
MIGRATIONCLEANUPCYCLE AND SECONDARYSPMGMTCYCLE: SPECIFYING THE CYCLE FOR02570000
AUTOMATIC SECONDARY SPACE MANAGEMENT FUNCTIONS. 816                     02580000
MIGRATIONLEVEL2: SPECIFYING DASD LEVEL 2 VOLUMES AND THEIR ASSOCIATED KE02590000
STRUCTURE.......... 816                                                 02600000
POOL: IDENTIFYING THE NON-SMS-MANAGED VOLUMES WHERE THE DATA SETS WITH T02610000
QUALIFIER ARE RECALLED....817                                           02620000
PRIMARYSPMGMTCYCLE: SPECIFYING THE CYCLE FOR AUTOMATIC PRIMARY SPACE MAN02630000
SWITCHTAPES: RELEASING MOUNTED TAPES FOR COMMAND DATA SET BACKUP........02640000
VOLUMEPOOL: IDENTIFYING GROUPS OF VOLUMES WHERE DATA SETS ARE RECALLED..02650000
EXAMPLES OF HOW TO CODE THE DEFINE COMMAND......821                     02660000
XX                                                                      02670000
CHAPTER 40. DELETE COMMAND: DELETING A MIGRATED DATA SET FROM A MIGRATIO02680000
SYNTAX OF THE DELETE COMMAND........825                                 02690000
REQUIRED PARAMETERS OF THE DELETE COMMAND........825                    02700000
DSNAME: SPECIFYING THE DATA SET TO BE DELETED... 825                    02710000
OPTIONAL PARAMETERS OF THE DELETE COMMAND.........825                   02720000
PURGE: SPECIFYING DELETION OF A DATA SET 826                            02730000
EXAMPLES OF HOW TO CODE THE DELETE COMMAND......826                     02740000
CHAPTER 41. DELVOL COMMAND: REMOVING A VOLUME FROM DFSMSHSM MANAGEMENT..02750000
SYNTAX OF THE DELVOL COMMAND....... 827                                 02760000
REQUIRED PARAMETERS OF THE DELVOL COMMAND........828                    02770000
VOLSER: SPECIFYING THE VOLUME YOU ARE DELETING... 828                   02780000
BACKUP, DUMP, MIGRATION, AND PRIMARY: SPECIFYING THE TYPE OF VOLUME.... 02790000
OPTIONAL PARAMETERS OF THE DELVOL COMMAND.........829                   02800000
COPYPOOLCOPY: DELETING A COPY POOL DUMP VOLUME.... 829                  02810000
LASTCOPY: INVALIDATING THE ONLY VALID DUMP COPY OF A SOURCE VOLUME..829 02820000
MARKFULL, PURGE, REASSIGN, AND UNASSIGN: SPECIFYING THE OPTIONS FOR DELE02830000
BACKUP, DUMP, OR ML2 VOLUME829                                          02840000
EXAMPLES OF HOW TO CODE THE DELVOL COMMAND......831                     02850000
CHAPTER 42. DISPLAY COMMAND: DISPLAYING DFSMSHSM STORAGE LOCATIONS......02860000
CHAPTER 43. EXPIREBV COMMAND: DELETING UNWANTED BACKUP VERSIONS OF DATA 02870000
SYNTAX OF THE EXPIREBV COMMAND... 838                                   02880000
REQUIRED PARAMETERS OF THE EXPIREBV COMMAND....838                      02890000
DISPLAY AND EXECUTE: SPECIFYING WHETHER TO DELETE THE BACKUP VERSIONS...02900000
OPTIONAL PARAMETERS OF THE EXPIREBV COMMAND.... 839                     02910000
ABARSVERSIONS: SPECIFYING THAT ONLY AGGREGATE GROUP VERSIONS ARE TO BE P02920000
NONSMSVERSIONS: SPECIFYING EXPIRATION CRITERIA FOR BACKUP VERSIONS OF DA02930000
MANAGED BY SMS......... 840                                             02940000
STARTKEY AND RESUME: DETERMINING THE STARTING POINT FOR BCDS PROCESSING 02950000
COMMAND EXECUTION.... 841                                               02960000
UNIXPATH: SPECIFYING THE UNIX FILE, EMPTY DIRECTORY, OR NONEMPTY DIRECTO02970000
BACKUP. 841                                                             02980000
ENDKEY: DETERMINING THE ENDING POINT FOR BCDS PROCESSING DURING COMMAND 02990000
OUTDATASET AND SYSOUT: SPECIFYING THE OUTPUT LOCATION FOR EXPIREBV DISPL03000000
EXAMPLES OF HOW TO CODE THE EXPIREBV COMMAND. 844                       03010000
CHAPTER 44. FIXCDS COMMAND: DISPLAYING OR MODIFYING MCDS, BCDS, AND OCDS03020000
CHAPTER 45. FRBACKUP COMMAND: REQUESTING A FAST REPLICATION BACKUP OR DU03030000
SYNTAX OF THE FRBACKUP COMMAND..851                                     03040000
REQUIRED PARAMETER OF THE FRBACKUP COMMAND.... 852                      03050000
COPYPOOL: SPECIFYING THE NAME OF THE COPY POOL FOR BACKUP... 852        03060000
OPTIONAL PARAMETERS OF THE FRBACKUP COMMAND... 852                      03070000
BACKUPSTORAGEGROUP: OVERRIDING THE COPY POOL BACKUP STORAGE GROUP WITH A03080000
ALTERNATE STORAGE GROUP...........852                                   03090000
DUMP: CREATING A FAST REPLICATION DASD VERSION FOLLOWED BY A DUMP.... 8503100000
DUMPCLASS: SPECIFYING UNIQUE DUMP CLASSES FOR FAST REPLICATION DUMP PROC03110000
EXECUTE, PREPARE, WITHDRAW, AND DUMPONLY: SPECIFYING THE BACKUP OR DUMP 03120000
FCINCREMENTAL: REQUESTING DFSMSHSM TO CREATE A COPY POOL VERSION USING I03130000
FLASHCOPY........ 854                                                   03140000
FCINCREMENTALLAST: REQUESTING A FLASHCOPY INCREMENTAL COPY WITH A SUBSEQ03150000
WITHDRAW.......... 855                                                  03160000
FORCE: REPLACING A DASD BACKUP COPY THAT HAS AN INCOMPLETE DUMP COPY....03170000
MESSAGEDATASET: SPECIFYING THE DATE AND TIME USED IN THE MESSAGE DATA SE03180000
NOVTOCENQ: REQUESTING DFSMSHSM TO NOT SERIALIZE THE VTOC OF PROCESSED VO03190000
XXI                                                                     03200000
TOKEN: SPECIFYING AN IDENTIFIER FOR EACH COPY POOL BACKUP VERSION...... 03210000
EXAMPLES OF HOW TO CODE THE FRBACKUP COMMAND 856                        03220000
CHAPTER 46. FRDELETE COMMAND: DELETING FAST REPLICATION BACKUP OR DUMP V03230000
SYNTAX OF THE FRDELETE COMMAND... 859                                   03240000
REQUIRED PARAMETERS OF THE FRDELETE COMMAND... 859                      03250000
COPYPOOL: SPECIFYING THE NAME OF THE COPY POOL FOR DELETION..859        03260000
ALL, TOKEN, AND VERSIONS: SPECIFYING THE DELETE ACTION.........859      03270000
OPTIONAL PARAMETERS OF THE FRDELETE COMMAND.... 860                     03280000
DASDONLY, DUMPONLY, AND BOTH: SPECIFYING WHICH COPIES TO DELETE 860     03290000
EXAMPLES OF HOW TO CODE THE FRDELETE COMMAND. 860                       03300000
CHAPTER 47. FREEVOL COMMAND: FREEING DFSMSHSM-OWNED VOLUMES........... 803310000
SYNTAX OF THE FREEVOL COMMAND..... 864                                  03320000
REQUIRED PARAMETERS OF THE FREEVOL COMMAND..... 864                     03330000
MIGRATIONVOLUME AND BACKUPVOLUME: SPECIFYING A VOLUME TO FREE..........803340000
ML1BACKUPVERSIONS: MOVING BACKUP VERSIONS OFF MIGRATION VOLUMES.........03350000
OPTIONAL PARAMETERS OF THE FREEVOL COMMAND...... 865                    03360000
AGE: SPECIFYING DATA SET USE........865                                 03370000
TARGETLEVEL: SPECIFYING THE TARGET TO WHICH DATA SETS ARE MOVED...... 8603380000
RETAINNEWESTVERSION: PREVENTING MOVEMENT OF BACKUP VERSIONS.. 866       03390000
EXAMPLES OF HOW TO CODE THE FREEVOL COMMAND... 867                      03400000
CHAPTER 48. FRRECOV COMMAND: REQUESTING A FAST REPLICATION RECOVERY.....03410000
SYNTAX OF THE FRRECOV COMMAND.... 870                                   03420000
REQUIRED PARAMETERS OF THE FRRECOV COMMAND.....871                      03430000
COPYPOOL: SPECIFYING THE COPY POOL FOR WHICH TO RECOVER ALL BACKUP VOLUM03440000
DSNAME: SPECIFYING THE DATA SETS TO RECOVER FROM A COPY POOL BACKUP VERS03450000
TOVOLUME: SPECIFYING A SINGLE VOLUME WITHIN A COPY POOL TO RECOVER.. 87203460000
OPTIONAL PARAMETERS OF THE FRRECOV COMMAND......872                     03470000
ALLOWPPRCP: SPECIFYING METRO MIRROR AND GLOBAL MIRROR PRIMARY VOLUMES AN03480000
MIRROR OPTIONS FOR A FLASHCOPY OPERATION....... 872                     03490000
ALLOWXRCP: SPECIFYING AN EXTENDED REMOTE COPY PRIMARY VOLUME OPTION FOR 03500000
OPERATION..........873                                                  03510000
DATE, GENERATION, TOKEN, VERSION: SPECIFYING A SPECIFIC BACKUP VERSION T03520000
FASTREPLICATION: INDICATING A RECOVERY PREFERENCE....874                03530000
FORCE: ALLOWING RECOVERY FROM A DASD BACKUP COPY THAT HAS AN INCOMPLETE 03540000
FROMCOPYPOOL: RECOVERING A VOLUME OR DATA SET THAT BELONGS TO MULTIPLE C03550000
FROMDASD: RECOVERING A VOLUME FROM DASD.... 875                         03560000
FROMDUMP: RECOVERING A VOLUME FROM A DUMP TAPE.... 875                  03570000
MESSAGEDATASET: SPECIFYING THE DATE AND TIME USED IN THE MESSAGE DATA SE03580000
NEWNAME: SPECIFYING A NEW DATA SET NAME FOR THE RECOVERED DATA SET......03590000
NOCOPYPOOLBACKUP: SETTING AN ALTERNATE RETURN CODE...........877        03600000
REPLACE: RECOVERING A CATALOGED DATA SET......... 877                   03610000
RSA: OVERRIDING THE RSA KEY LABEL .......... 877                        03620000
VERIFY: VERIFYING THAT NO UNEXPECTED FLASHCOPY RELATIONSHIP EXISTS FOR A03630000
POOL...... 878                                                          03640000
EXAMPLES OF HOW TO CODE THE FRRECOV COMMAND...878                       03650000
CHAPTER 49. HOLD COMMAND: PREVENTING DFSMSHSM FUNCTIONS FROM RUNNING.88103660000
SYNTAX OF THE HOLD COMMAND...........882                                03670000
OPTIONAL PARAMETERS OF THE HOLD COMMAND 883                             03680000
ABACKUP: PREVENTING AGGREGATE BACKUP 883                                03690000
ALL: PREVENTING ALL DFSMSHSM FUNCTIONS 884                              03700000
ARECOVER: PREVENTING AGGREGATE RECOVERY........ 884                     03710000
AUDIT: ENDING THE AUDIT FUNCTION.885                                    03720000
AUTOEXPIRATION: PREVENTING DATA SETS FROM EXPIRING..885                 03730000
XXII                                                                    03740000
AUTOMIGRATION: PREVENTING AUTOMATIC VOLUME AND AUTOMATIC SECONDARY SPACE03750000
MANAGEMENT....886                                                       03760000
BACKUP: PREVENTING BACKUPS...... 886                                    03770000
COMMONQUEUE: PREVENTING COMMON QUEUE FUNCTIONS 887                      03780000
DUMP: PREVENTING DUMPS.888                                              03790000
ENDOFDATASET: SPECIFYING WHEN AGGREGATE GROUP PROCESSING SHOULD STOP....03800000
ENDOFDATASET AND ENDOFVOLUME: SPECIFYING WHEN VOLUME PROCESSING SHOULD S03810000
EVENTDRIVENMIGRATION: PREVENTING INTERVAL AND ON-DEMAND MIGRATION.... 8903820000
EXPIREBV: ENDING THE EXPIRE BACKUP FUNCTION....891                      03830000
FRBACKUP: PREVENTING FAST REPLICATION BACKUP OR DUMP PROCESSING.....891 03840000
FRRECOV: PREVENTING FAST REPLICATION RECOVERY PROCESSING........891     03850000
LIST: ENDING THE LIST FUNCTION....... 893                               03860000
LOG: PREVENTING LOGGING... 893                                          03870000
MIGRATION: PREVENTING SPACE MANAGEMENT......893                         03880000
RECALL: PREVENTING RECALL AND DELETION...893                            03890000
RECOVER: PREVENTING RECOVERY AND RESTORE........ 894                    03900000
RECYCLE: ENDING THE RECYCLE FUNCTION.....894                            03910000
REPORT: ENDING THE REPORT FUNCTION........ 894                          03920000
TAPECOPY: PREVENTING DFSMSHSM FROM COPYING A TAPE 895                   03930000
TAPEREPL: PREVENTING DFSMSHSM FROM REPLACING AN ORIGINAL TAPE VOLUME WIT03940000
EXAMPLES OF HOW TO CODE THE HOLD COMMAND......... 895                   03950000
CHAPTER 50. HSENDCMD COMMAND: ISSUING DFSMSHSM AUTHORIZED-USER COMMANDS 03960000
TERMINAL...........899                                                  03970000
SYNTAX OF THE HSENDCMD COMMAND.899                                      03980000
REQUIRED PARAMETERS OF THE HSENDCMD COMMAND. 899                        03990000
COMMAND: SPECIFYING DFSMSHSM AUTHORIZED COMMAND899                      04000000
OPTIONAL PARAMETERS OF THE HSENDCMD COMMAND..899                        04010000
WAIT AND NOWAIT: SPECIFYING WHETHER TO WAIT FOR COMMAND COMPLETION......04020000
EXAMPLES OF HOW TO CODE THE HSENDCMD COMMAND...........901              04030000
CHAPTER 51. HSENDU COMMAND: ISSUING DFSMSHSM AUTHORIZED USER COMMANDS TO04040000
DFSMSHSM HOST..........903                                              04050000
CHAPTER 52. LIST COMMAND: LISTING INFORMATION FROM THE MCDS, BCDS, AND O04060000
SYNTAX OF THE LIST COMMAND.906                                          04070000
REQUIRED PARAMETERS OF THE LIST COMMAND. 911                            04080000
AGGREGATE: LISTING THE AGGREGATE BACKUP AND RECOVERY ACTIVITY INFORMATIO04090000
BACKUPVOLUME: LISTING BACKUP VOLUME ENTRIES........... 911              04100000
CLOUD: LISTING INFORMATION FROM CLOUD STORAGE.. 912                     04110000
COPYPOOL: LISTING INFORMATION FOR EACH VERSION OF A COPY POOL.912       04120000
COPYPOOLBACKUPSTORAGEGROUP: LISTING COPY POOL INFORMATION FOR EACH VOLUM04130000
SPECIFIED COPY POOL BACKUP STORAGE GROUP..... 912                       04140000
DATASETNAME AND LEVEL: LISTING DATA SET ENTRIES........ 912             04150000
DUMPCLASS: LISTING DUMP CLASS PROFILES 913                              04160000
DUMPVOLUME: LISTING INFORMATION ABOUT A SINGLE DUMP VOLUME OR A SET OF D04170000
FILENAME AND FILELEVEL: LISTING UNIX FILE ENTRIES.......914             04180000
HOST: LISTING ALL CONTROL DATA SETS SERIALIZED BY THE DFSMSHSM HOST....904190000
MIGRATIONVOLUME, MIGRATIONLEVEL1, MIGRATIONLEVEL2, AND VOLUME: LISTING  04200000
MIGRATION VOLUMES....... 915                                            04210000
PRIMARYVOLUME: LISTING PRIMARY VOLUMES....... 915                       04220000
TAPETABLEOFCONTENTS: LISTING TAPE VOLUME INFORMATION FROM THE OCDS..... 04230000
TAPETABLEOFCONTENTS(VOLSER): LISTING TAPE VOLUME INFORMATION AND DATA SE04240000
FROM THE TTOC. 916                                                      04250000
USER: LISTING USER ENTRIES 917                                          04260000
OPTIONAL PARAMETERS OF THE LIST COMMAND.. 917                           04270000
ALLDUMPS AND BACKUPCONTENTS: DETERMINING EXISTENCE OF DUMPS OR LISTING  04280000
INCREMENTAL BACKUP CONTENTS. 917                                        04290000
XXIII                                                                   04300000
ALLVOLS, DATASETS, DUMPVOLS, FASTREPLICATIONVOLS, AND NOVOLS: LISTING A 04310000
TYPE OF COPY POOL INFORMATION. 918                                      04320000
BACKUPCONTROLDATASET, MIGRATIONCONTROLDATASET, AND BOTH: CONTROLLING THE04330000
SOURCE OF INFORMATION.. 919                                             04340000
DATASETINFORMATION AND NODATASETINFORMATION: INCLUDING OR NOT INCLUDING 04350000
SET INFORMATION 919                                                     04360000
DATE AND VERSION: SPECIFYING THE DATE OR VERSION OF THE AGGREGATE GROUP.04370000
DUMPCONTENTS: LISTING CONTENTS OF A SET OF DUMP VOLUMES....920          04380000
INCLUDEPRIMARY: LISTING ENTRIES FOR ANY DATA SET THAT HAS MIGRATED.. 92004390000
OUTDATASET, SYSOUT, AND TERMINAL: SPECIFYING THE LOCATION OF OUTPUT FOR 04400000
RECURSE: EXAMINE SUBDIRECTORIES OF THE SPECIFIED UNIX FILE PATH........904410000
RESET: REQUESTING THAT THE HOST ID FIELD INDICATE NO SERIALIZATION......04420000
SELECT: LISTING ONLY THOSE DATA SET OR VOLUME ENTRIES THAT MEET SELECTIO04430000
SELECT (ACTIVE AND RETAINDAYS): DISPLAYING INFORMATION ABOUT ACTIVE AND 04440000
BACKUP COPIES..924                                                      04450000
SELECT (AGE): SPECIFYING DATA SET USE BY AGE.... 924                    04460000
SELECT (ALTERNATEVOLUME AND NOALTERNATEVOLUME): LISTING TAPE VOLUMES THA04470000
ALTERNATE TAPE VOLUMES........... 924                                   04480000
SELECT (AVAILABLE): LISTING AVAILABLE DUMP VOLUMES FOR DUMP OUTPUT......04490000
SELECT (CAPACITYMODE): IDENTIFYING TAPE VOLUMES BY THEIR ABILITY TO USE 04500000
CAPACITY925                                                             04510000
SELECT (CONNECTED AND NOTCONNECTED): LIST VOLUMES THAT CONTAIN SPANNING 04520000
SELECT (DISASTERALTERNATEVOLUMES): LISTING TAPE VOLUMES THAT HAVE DISAST04530000
ALTERNATE VOLUMES........926                                            04540000
SELECT (DUMPCLASS)......926                                             04550000
SELECT (DUMPSTATE, FASTREPLICATIONSTATE, INCOMPLETERECOVERY, AND        04560000
NONPREFERREDFRVOLS): LISTING SPECIFIC INFORMATION ABOUT COPY POOLS....9204570000
SELECT (EFMT1, EFMT2, EEFMT2, EFMT3, EEFMT3, EFMT4, EEFMT4, ENCRYPTED, A04580000
NOTENCRYPTED): RECORDING FORMAT.. 927                                   04590000
SELECT (EMPTY, FULL, NOTFULL, ASSOCIATED, NOTASSOCIATED, ERRORALTERNATE,04600000
RECYCLETAKEAWAY): IDENTIFYING TAPE VOLUME CAPACITY.......927            04610000
SELECT (EXCESSIVEVOLUMES): LISTING VOLUMES WITH DATA SETS SPANNING FOUR 04620000
VOLUMES928                                                              04630000
SELECT (EXPIRED): LISTING EXPIRED DUMP VOLUMES........ 928              04640000
SELECT (FAILEDCREATE): LISTING ALL TAPE VOLUMES THAT HAVE INCOMPLETE DAT04650000
INFORMATION SAVED IN THE OCDS TTOC RECORD..929                          04660000
SELECT (FAILEDRECYCLE): LISTING ONLY THOSE VOLUMES THAT HAVE FAILED RECY04670000
SELECT (LIBRARY AND NOLIBRARY): LISTING TAPE VOLUME LIBRARY STATUS......04680000
SELECT (MIGRATIONLEVEL1, MIGRATIONLEVEL2, VOLUME(VOLSER), BACKUP, AND BO04690000
REQUESTING SPECIFIC INFORMATION FOR VOLUMES. 930                        04700000
SELECT (MULTIPLEVOLUME): LISTING MULTIPLE-VOLUME NON-VSAM DATA SETS FROM04710000
DUMP VTOC COPY DATA SETS..... 930                                       04720000
SELECT (NORETENTIONLIMIT): LIST DUMP VOLUMES WITH NO RETENTION PERIOD.. 04730000
SELECT (OVERFLOW AND NOOVERFLOW): LIST OVERFLOW OR NON-OVERFLOW ML1 VOLU04740000
SELECT (RECALLTAKEAWAY): LISTING ML2 VOLUMES TAKEN AWAY BY RECALL OR ABA04750000
FUNCTIONS.......... 931                                                 04760000
SELECT (RESUMEAUDIT): LISTING TAPE VOLUMES THAT ARE CAPABLE OF BEING RES04770000
AUDIT MEDIACONTROLS WAS INTERRUPED...... 931                            04780000
SELECT (SMALLDATASETPACKING AND NOSMALLDATASETPACKING): SPECIFYING WHETH04790000
DATA SETS HAVE MIGRATED TO SDSP........ 932                             04800000
SELECT (UNAVAILABLE): LISTING DUMP VOLUMES WITH INVALID CONTENTS..932   04810000
SELECT (UNEXPIRED): LISTING DUMP VOLUMES THAT HAVE NOT REACHED THEIR EXP04820000
SELECT (VSAM): SPECIFYING THE DATA SET ORGANIZATION.... 933             04830000
SUMMARY: REQUESTING A SUMMARY..........933                              04840000
EXAMPLES OF HOW TO CODE COMMONLY USED LIST REQUESTS.......933           04850000
CHAPTER 53. LOG COMMAND: ENTERING DATA INTO THE DFSMSHSM LOG...... 939  04860000
SYNTAX OF THE LOG COMMAND. 939                                          04870000
XXIV                                                                    04880000
REQUIRED PARAMETERS OF THE LOG COMMAND..939                             04890000
DATA: SPECIFYING THE DATA FOR THE LOG........ 939                       04900000
EXAMPLE OF HOW TO CODE THE LOG COMMAND. 939                             04910000
CHAPTER 54. MIGRATE COMMAND: REQUESTING A SPACE MANAGEMENT FUNCTION. 94104920000
REQUESTING A SPACE MANAGEMENT FUNCTION FOR SMS-MANAGED DATA SETS.....94204930000
SYNTAX OF THE MIGRATE COMMAND FOR SMS-MANAGED DATA SETS...... 942       04940000
SUMMARY OF PARAMETERS...943                                             04950000
REQUIRED PARAMETERS OF THE MIGRATE COMMAND FOR SMS-MANAGED DATA SETS....04960000
DATASETNAME: SPECIFYING MIGRATION AND/OR CLASS TRANSITION FOR A SPECIFIC04970000
MIGRATIONLEVEL1: SPECIFYING MIGRATION OF DATA SETS FROM LEVEL 1 TO LEVEL04980000
VOLUME: SPECIFYING THE SPACE MANAGEMENT ATTRIBUTE FOR THE ELIGIBLE DATA 04990000
STORAGEGROUP: SPECIFYING THE SPACE MANAGEMENT ATTRIBUTE FOR THE ELIGIBLE05000000
STORAGE GROUP...945                                                     05010000
OPTIONAL PARAMETERS OF THE MIGRATE COMMAND FOR SMS-MANAGED DATA SETS....05020000
BOTH: SPECIFYING THAT TRANSITION OR MIGRATION OF DATA SETS SHOULD BE PRO05030000
CONVERT: SPECIFYING MOVEMENT OF DATA SETS FROM ONE VOLUME TO ANOTHER....05040000
CLOUD: SPECIFYING MIGRATION OF A DATA SET DIRECTLY TO CLOUD.......946   05050000
DAYS: SPECIFYING MIGRATION ELIGIBILITY OF DATA SETS.......... 947       05060000
KEEPMIGDATE: SPECIFYING MIGRATION OF A DATA SET SHOULD KEEP ITS ORIGINAL05070000
ONE EXISTS.........947                                                  05080000
MIGRATIONLEVEL1: SPECIFYING MIGRATION OF A DATA SET. 948                05090000
MIGRATIONLEVEL2: SPECIFYING MIGRATION OF A DATA SET DIRECTLY TO A LEVEL 05100000
MIGRATIONONLY: SPECIFYING THAT ONLY MIGRATION OF DATA SETS SHOULD BE PRO05110000
MOVE: SPECIFYING THAT ONLY MOVING OF DATA SETS SHOULD BE PROCESSED.. 94905120000
TERMINAL: REQUESTING THAT VOLUME SPACE MANAGEMENT MESSAGES APPEAR AT THE05130000
TRANSITION: SPECIFYING THAT ONLY TRANSITIONS OF DATA SET SHOULD BE PROCE05140000
TRANSITIONONLY: SPECIFYING THAT ONLY TRANSITION OF DATA SETS SHOULD BE P05150000
EXAMPLES OF HOW TO CODE THE MIGRATE COMMAND FOR SMS-MANAGED DATA SETS...05160000
REQUESTING A SPACE MANAGEMENT FUNCTION FOR NON-SMS-MANAGED DATA SETS....05170000
SYNTAX OF THE MIGRATE COMMAND FOR NON-SMS-MANAGED DATA SETS...........9505180000
SUMMARY OF PARAMETERS...951                                             05190000
REQUIRED PARAMETERS OF THE MIGRATE COMMAND FOR NON-SMS-MANAGED DATA SETS05200000
DATASETNAME: SPECIFYING MIGRATION OF A SPECIFIC DATA SET....... 952     05210000
MIGRATIONLEVEL1: SPECIFYING MIGRATION OF DATA SETS FROM LEVEL 1 TO LEVEL05220000
PRIMARY: SPECIFYING SPACE MANAGEMENT OF ELIGIBLE DATA SETS ON ALL PRIMAR05230000
VOLUME: SPECIFYING THE SPACE MANAGEMENT ATTRIBUTE FOR THE ELIGIBLE DATA 05240000
OPTIONAL PARAMETERS OF THE MIGRATE COMMAND FOR NON-SMS-MANAGED DATA SETS05250000
CONVERT: SPECIFYING MOVEMENT OF DATA SETS FROM ONE VOLUME TO ANOTHER....05260000
DAYS: SPECIFYING MIGRATION ELIGIBILITY OF DATA SETS.......... 955       05270000
MIGRATIONLEVEL1: SPECIFYING MIGRATION OF A DATA SET DIRECTLY TO APPROPRI05280000
HIERARCHY.......... 956                                                 05290000
MIGRATIONLEVEL2: SPECIFYING MIGRATION OF A DATA SET DIRECTLY TO A LEVEL 05300000
TERMINAL: REQUESTING THAT VOLUME SPACE MANAGEMENT MESSAGES APPEAR AT THE05310000
UNIT: SPECIFYING THE TYPE OF DEVICE......... 956                        05320000
EXAMPLES OF HOW TO CODE THE MIGRATE COMMAND FOR NON-SMS-MANAGED DATA SET05330000
CHAPTER 55. ONLYIF COMMAND: RUNNING COMMANDS IN ARCCMDXX CONDITIONALLY..05340000
SYNTAX OF THE ONLYIF COMMAND........959                                 05350000
REQUIRED PARAMETERS OF THE ONLYIF COMMAND........ 959                   05360000
HSMHOST: SPECIFYING THE HOST ID OF A SPECIFIC HOST OR HOSTS.....960     05370000
OPTIONAL PARAMETERS OF THE ONLYIF COMMAND......... 960                  05380000
BEGIN: BEGIN A GROUP OF COMMANDS........960                             05390000
END: END A GROUP OF COMMANDS...960                                      05400000
EXAMPLES OF HOW TO CODE THE ONLYIF COMMAND...... 960                    05410000
CHAPTER 56. PATCH COMMAND: MODIFYING STORAGE WITHIN DFSMSHSM... 963     05420000
CHAPTER 57. QUERY COMMAND: DISPLAYING THE STATUS OF PARAMETERS, STATISTI05440000
SYNTAX OF THE QUERY COMMAND.........966                                 05450000
OPTIONAL PARAMETERS OF THE QUERY COMMAND.......... 967                  05460000
ABARS: DISPLAYING AGGREGATE BACKUP AND RECOVERY CONTROL PARAMETERS......05470000
ACTIVE: DISPLAYING ALL ACTIVE REQUESTS.... 967                          05480000
ARPOOL: DISPLAYING AGGREGATE RECOVERY POOLS... 967                      05490000
AUTOPROGRESS: DISPLAYING AN INDICATION OF VOLUMES TO BE PROCESSED968    05500000
BACKUP: DISPLAYING BACKUP PARAMETERS AND BACKUP VOLUMES..969            05510000
CDSVERSIONBACKUP: DISPLAYING THE CONTROL DATA SET MULTIPLE BACKUP SUPPOR05520000
HSENDCMD QUERY CDSVERSIONBACKUP                                         05521001
COMMONQUEUE: DISPLAYING COMMON QUEUE INFORMATION......... 969           05530000
CONTROLDATASETS: DISPLAYING CONTROL DATA SET SPACE-USE INFORMATION......05540000
HSENDCMD QUERY CONTROLDATASETS                                          05541002
COPYPOOL: DISPLAYING COPY POOL INFORMATION.... 970                      05550000
CSALIMITS: DISPLAYING THE COMMON SERVICE AREA STORAGE LIMITS........... 05560000
DATASETNAME, FILENAME, REQUEST, AND USER: DISPLAYING SELECTED REQUESTS..05570000
IMAGE: DISPLAYING INFORMATION FOR THE DFSMSHSM ADDRESS SPACES ACTIVE WIT05580000
Z/OS IMAGE.......971                                                    05590000
MIGRATIONLEVEL2: DISPLAYING KEY RANGES AND MIGRATION LEVEL 2 VOLUMES....05600000
POOL: DISPLAYING RECALL POOLS...... 971                                 05610000
RETAIN: DISPLAYING DATA SET LEVELS PREVENTED FROM SPACE MANAGEMENT......05620000
SECURITY: DISPLAYING THE TYPE OF COMMAND AUTHORIZATION IN EFFECT......9705630000
SETSYS: DISPLAYING CONTROL PARAMETERS.. 971                             05640000
SPACE: DISPLAYING VOLUME SPACE-USE INFORMATION..........972             05650000
STARTUP: DISPLAYING THE STARTUP INFORMATION..... 972                    05660000
STATISTICS: DISPLAYING DAILY STATISTICS....972                          05670000
TRAPS: DISPLAYING TRAP REQUESTS..972                                    05680000
VOLUMEPOOL: DISPLAYING CURRENT VOLUME POOLS 972                         05690000
WAITING: DISPLAYING THE NUMBER OF REQUESTS WAITING TO BE PROCESSED 972  05700000
EXAMPLES OF HOW TO CODE THE QUERY COMMAND.......972                     05710000
CHAPTER 58. RECALL COMMAND: RECALLING A SPECIFIC MIGRATED DATA SET 973  05720000
SYNTAX OF THE RECALL COMMAND........973                                 05730000
REQUIRED PARAMETERS OF THE RECALL COMMAND........973                    05740000
DSNAME: SPECIFYING THE NAME OF THE DATA SET TO BE RECALLED...... 973    05750000
OPTIONAL PARAMETERS OF THE RECALL COMMAND.........974                   05760000
DAOPTION: SELECTING TARGET VOLUME TRACK LENGTH........... 974           05770000
DFDSSOPTION: PASS OPTIONAL PARAMETERS TO DFSMSDSS........... 975        05780000
FORCENONSMS: RECALLING AN SMS-MANAGED DATA SET TO A NON-SMS-MANAGED VOLU05790000
UNIT: SPECIFYING THE TYPE OF DEVICE......... 975                        05800000
VOLUME: SPECIFYING THE VOLUME TO RECEIVE THE RECALLED DATA SET..........05810000
EXAMPLES OF HOW TO CODE THE RECALL COMMAND......976                     05820000
CHAPTER 59. RECOVER COMMAND: RECOVERING A BACKUP VERSION OR DUMP COPY OF05830000
UNIX FILE, OR A VOLUME.979                                              05840000
SYNTAX OF THE RECOVER COMMAND.... 980                                   05850000
REQUIRED PARAMETERS OF THE RECOVER COMMAND.....982                      05860000
DSNAME: SPECIFYING THE NAME OF THE DATA SET TO BE RECOVERED... 982      05870000
PATHNAME: SPECIFYING THE NAME OF THE UNIX FILE TO BE RECOVERED..........05880000
OPTIONAL PARAMETERS OF THE RECOVER COMMAND......983                     05890000
DAOPTION: SELECTING TARGET VOLUME TRACK LENGTH........... 983           05900000
DATE, GENERATION, AND VERSION: SPECIFYING THE PARTICULAR BACKUP VERSION 05910000
TO RECOVER.........984                                                  05920000
DFDSSOPTION: PASS OPTIONAL PARAMETERS TO DFSMSDSS........... 985        05930000
EXCLUDE: SPECIFYING FILES OR DIRECTORIES TO BE EXCLUDED FROM PROCESSING.05940000
FORCENONSMS: RECOVERING AN SMS-MANAGED DATA SET TO A NON-SMS-MANAGED VOL05950000
FROMDUMP: SPECIFYING WHICH DUMP COPY IS USED FOR RESTORING DATA SETS....05960000
FROMVOLUME: SPECIFYING THE VOLUME FROM WHICH THE BACKUP VERSION OF A DAT05970000
BEEN CREATED....988                                                     05980000
XXVI                                                                    05990000
NEWDIR : RECOVER FILES TO A DIFFERENT DIRECTORY...988                   06000000
NEWNAME: SPECIFYING A NEW DATA SET NAME FOR THE RECOVERED DATA SET......06010000
RECURSE: EXAMINE SUBDIRECTORIES OF THE SPECIFIED UNIX FILE PATH........906020000
RSA: SPECIFYING THAT THE RSA PARAMETER IS TO OVERRIDE THE RSA KEY LABEL 06030000
TARGETVOLUME: SPECIFYING THE VOLUME TO RECEIVE THE RESTORED DATA SETS...06040000
TERMINAL: REQUESTING THAT VOLUME RECOVERY MESSAGES APPEAR AT THE TERMINA06050000
TOVOLUME: SPECIFYING THE VOLUME TO RECEIVE THE RECOVERED DATA SET...991 06060000
UNIT: SPECIFYING THE TYPE OF DEVICE......... 991                        06070000
EXAMPLES OF HOW TO CODE THE RECOVER COMMAND.. 992                       06080000
CHAPTER 60. RECYCLE COMMAND: CONSOLIDATING VALID DATA TO ONE TAPE FROM O06090000
SYNTAX OF THE GENERIC RECYCLE COMMAND.... 996                           06100000
SYNTAX OF THE SPECIFIC RECYCLE COMMAND....996                           06110000
REQUIRED PARAMETERS OF THE RECYCLE COMMAND......997                     06120000
ALL, BACKUP, DAILY, ML2, SPILL, AND VOLUME: SPECIFYING THE TAPE VOLUMES 06130000
EXECUTE, VERIFY, AND DISPLAY: SPECIFYING WHETHER TO LIST OR TO RECYCLE T06140000
OPTIONAL PARAMETERS OF THE RECYCLE COMMAND...... 999                    06150000
CHECKFIRST: ALLOWING CONNECTED SET TO BE RECYCLED SOONER.... 999        06160000
FORCE: FORCING DFSMSHSM TO PERMIT A TAPE RECYCLE......999               06170000
LIMIT: QUIESCING RECYCLE PROCESSING WHEN THE DESIRED NUMBER OF TAPES HAV06180000
RETURNED TO SCRATCH....1000                                             06190000
OUTDATASET: DIRECTING RECYCLE MESSAGES....... 1000                      06200000
PERCENTVALID: SPECIFYING THE PERCENT VALID CRITERIA FOR RECYCLE ELIGIBIL06210000
SELECT: SPECIFYING TAPE ELIGIBILITY FOR GENERIC RECYCLE..1002           06220000
TAPELIST: LISTING VOLUMES FOR PULLING AND MOUNTING TAPES......1002      06230000
EXAMPLES OF HOW TO CODE THE RECYCLE COMMAND. 1005                       06240000
CHAPTER 61. RELEASE COMMAND: RELEASING ALL OR SOME DFSMSHSM FUNCTIONS FO06250000
SYNTAX OF THE RELEASE COMMAND... 1010                                   06260000
OPTIONAL PARAMETERS OF THE RELEASE COMMAND.... 1011                     06270000
ABACKUP: RELEASING AGGREGATE BACKUP1011                                 06280000
ALL: RELEASING ALL DFSMSHSM FUNCTIONS1011                               06290000
ARECOVER: RELEASING AGGREGATE RECOVERY........1011                      06300000
AUDIT: RELEASING THE AUDIT FUNCTION......1012                           06310000
AUTOEXPIRATION: RELEASING AUTOMATIC EXPIRATION.....1012                 06320000
AUTOMIGRATION: RELEASING ONLY AUTOMATIC VOLUME AND AUTOMATIC SECONDARY S06330000
MANAGEMENT. 1012                                                        06340000
BACKUP: RELEASING BACKUP....... 1012                                    06350000
COMMONQUEUE: RELEASING HOLDS ON THE COMMON QUEUE.......1013             06360000
DUMP: RELEASING DUMP..1014                                              06370000
EVENTDRIVENMIGRATION: RELEASING INTERVAL AND ON-DEMAND MIGRATION....101406380000
EXPIREBV: RELEASING THE EXPIRE BACKUP VERSIONS FUNCTION...... 1015      06390000
FRBACKUP: RELEASING THE FAST REPLICATION BACKUP OR DUMP FUNCTION.. 1015 06400000
FRRECOV: RELEASING THE FAST REPLICATION RECOVER FUNCTION....... 1015    06410000
HARDCOPY: RELEASING THE ACTIVITY LOGS.1016                              06420000
LIST: RELEASING THE LIST FUNCTION.1016                                  06430000
LOG: RELEASING LOGGING...1016                                           06440000
MIGRATION: RELEASING SPACE MANAGEMENT..... 1017                         06450000
RECALL: RELEASING RECALL AND DELETION.. 1017                            06460000
RECOVER: RELEASING RECOVERY AND RESTORE........1018                     06470000
RECYCLE: RELEASING THE RECYCLE FUNCTION..........1018                   06480000
REPORT: RELEASING THE REPORT FUNCTION. 1018                             06490000
RMM: RELEASING THE DFSMSRMM FUNCTION......... 1019                      06500000
TAPECOPY: RELEASING THE TAPE COPY FUNCTION... 1019                      06510000
TAPEREPL: RELEASING THE TAPE REPLACE FUNCTION........... 1019           06520000
EXAMPLES OF HOW TO CODE THE RELEASE COMMAND. 1019                       06530000
CHAPTER 62. REPORT COMMAND: REQUESTING REPORTS BASED ON DFSMSHSM STATIST06540000
XXVII                                                                   06550000
SYNTAX OF THE REPORT COMMAND.... 1024                                   06560000
SUMMARY OF PARAMETERS.1025                                              06570000
OPTIONAL PARAMETERS OF THE REPORT COMMAND......1025                     06580000
DAILY: REQUESTING DAILY STATISTICS..........1025                        06590000
DELETE: DELETING STATISTICS RECORDS USED AS INPUT TO THE REPORT.........06600000
FROMDATE: REQUESTING STATISTICS OF ACTIVITY ON OR AFTER THE SPECIFIED DA06610000
FUNCTION AND NOFUNCTION: REQUESTING STATISTICS BY FUNCTION....... 1026  06620000
FUNCTION(BACKUP): REQUESTING STATISTICS OF THE BACKUP FUNCTION....1027  06630000
FUNCTION(DELETE): REQUESTING STATISTICS OF THE DELETE FUNCTION.......10206640000
FUNCTION(MIGRATION): REQUESTING STATISTICS OF THE MIGRATION FUNCTION....06650000
FUNCTION(RECALL): REQUESTING STATISTICS OF THE RECALL FUNCTION........1006660000
FUNCTION(RECYCLE): REQUESTING STATISTICS OF THE RECYCLE FUNCTION...1028 06670000
FUNCTION(RECOVER): REQUESTING STATISTICS OF THE RECOVERY FUNCTION1028   06680000
FUNCTION(SPILL): REQUESTING STATISTICS OF THE SPILL FUNCTION..1029      06690000
FUNCTION(TRANSITION): REQUESTING STATISTICS OF THE TRANSITION FUNCTION..06700000
OUTDATASET AND SYSOUT: SPECIFYING THE OUTPUT LOCATION......1029         06710000
SUMMARY: REQUESTING ONLY THE TOTALS OF THE STATISTICS 1030              06720000
TODATE: REQUESTING STATISTICS OF ACTIVITY ON OR BEFORE THE SPECIFIED DAT06730000
VOLUMES: REQUESTING VOLUME STATISTICS...........1030                    06740000
EXAMPLES OF HOW TO CODE THE REPORT COMMAND...1031                       06750000
CHAPTER 63. SETMIG COMMAND: CHANGING THE SPACE MANAGEMENT STATUS OF NON-06760000
DATA SETS OR VOLUMES 1033                                               06770000
SYNTAX OF THE SETMIG COMMAND.....1033                                   06780000
REQUIRED PARAMETERS OF THE SETMIG COMMAND..... 1033                     06790000
DATASETNAME, LEVEL, AND VOLUME: CHANGING THE SPACE MANAGEMENT STATUS....06800000
OPTIONAL PARAMETERS OF THE SETMIG COMMAND...... 1034                    06810000
COMMANDMIGRATION, MIGRATION, AND NOMIGRATION: SPECIFYING THE WAY SPACE  06820000
MANAGEMENT IS CONTROLLED.... 1034                                       06830000
EXAMPLES OF HOW TO CODE THE SETMIG COMMAND...1035                       06840000
CHAPTER 64. SETSYS COMMAND: ESTABLISHING OR CHANGING THE VALUES OF DFSMS06850000
PARAMETERS... 1037                                                      06860000
SYNTAX OF THE SETSYS COMMAND..... 1037                                  06870000
SETSYS FAST-PATH FOR DFSMSHSM FUNCTIONS1055                             06880000
RELATIONSHIP OF SMS TO SETSYS PARAMETERS........... 1062                06890000
SUMMARY OF DFSMSHSM DEFAULT VALUES...... 1064                           06900000
OPTIONAL PARAMETERS OF THE SETSYS COMMAND.......1073                    06910000
ABARSACTLOGMSGLVL: SPECIFYING WHICH DFSMSDSS MESSAGES ARE WRITTEN TO THE06920000
ABARSACTLOGTYPE: SPECIFYING THE ABARS ACTIVITY LOG OUTPUT DATA SET TYPE 06930000
ABARSBUFFERS: SPECIFYING THE NUMBER OF I/O BUFFERS FOR ABARS..... 1074  06940000
ABARSDELETEACTIVITY: ALLOWING DFSMSHSM TO AUTOMATICALLY DELETE THE ABARS06950000
LOG...... 1075                                                          06960000
ABARSKIP: SPECIFYING WHICH TYPES OF DATA SETS ABACKUP SHOULD SKIP.......06970000
ABARSOPTIMIZE: ADJUSTING PERFORMANCE WHEN BACKING UP LEVEL 0 DASD SPECIF06980000
INCLUDE LIST.. 1075                                                     06990000
ABARSPROCNAME: SPECIFYING THE BASE PROCEDURE NAME TO START THE ABARS SEC07000000
ADDRESS SPACE1075                                                       07010000
ABARSTAPES: ALLOWING DFSMSHSM TO STACK THE ABACKUP OUTPUT FILES.........07020000
ABARSUNITNAME: SPECIFYING A UNIT NAME FOR ABARS.1076                    07030000
ABARSVOLCOUNT: SPECIFYING THE METHOD FOR DETERMINING VOLUME COUNT FOR SM07040000
DATA SET ALLOCATIONS DONE BY DFSMSDSS.......1077                        07050000
ACCEPTPSCBUSERID AND NOACCEPTPSCBUSERID: ALLOWING NON-RACF INSTALLATIONS07060000
ISSUE AUTHORIZED COMMANDS IN A TMP ENVIRONMENT 1077                     07070000
ACTLOGMSGLVL: SPECIFYING MESSAGE LEVEL FOR RECORDING DATA SETS.... 1078 07080000
ACTLOGTYPE: SPECIFYING THE TYPE OF OUTPUT DATA SET TO RECEIVE MESSAGES..07090000
ARECOVERML2UNIT: SPECIFYING THE UNIT WHEN RECOVERING MIGRATED DATA SETS 07100000
NONSPECIFIC VOLUMES..1079                                               07110000
XXVIII                                                                  07120000
ARECOVERPERCENTUTILIZED: SPECIFYING THE PERCENTAGE OF DASD SPACE FOR NON07130000
VOLUMES..... 1080                                                       07140000
ARECOVERTGTGDS: PASSING THE TGTGDS PARAMETER TO DFSMSDSS DURING RESTORE 07150000
ARECOVERUNITNAME: SPECIFYING TAPE UNIT TYPE FOR AGGREGATE RECOVERY......07160000
AUTOBACKUPSTART: SPECIFYING WHEN AUTOMATIC BACKUP IS TO START...1081    07170000
AUTODUMPSTART: SPECIFYING WHEN AUTOMATIC DUMP IS TO START......... 1082 07180000
AUTOMIGRATIONSTART: SPECIFYING THE START TIME FOR AUTOMATIC PRIMARY SPAC07190000
MANAGEMENT. 1083                                                        07200000
BACKUP AND NOBACKUP: SPECIFYING WHETHER YOU INTEND TO USE DFSMSHSM BACKU07210000
RECOVERY, AND DUMP...1083                                               07220000
BACKUPPREFIX: SPECIFYING THE PREFIX FOR THE BACKUP VERSION NAME OR THE D07230000
SET NAME........ 1087                                                   07240000
CDSVERSIONBACKUP: SPECIFYING WHETHER THE CONTROL DATA SETS SHOULD BE BAC07250000
MULTIPLE DATA SETS......1088                                            07260000
CDSVERSIONBACKUP (BACKUPCOPIES): SPECIFYING THE NUMBER OF BACKUP COPIES 07270000
FOR EACH CONTROL DATA SET AND JOURNAL DATA SET..........1089            07280000
CDSVERSIONBACKUP (BACKUPDEVICECATEGORY): SPECIFYING THE BACKUP DEVICE TO07290000
THE CONTROL DATA SETS AND JOURNAL WILL BE BACKED UP 1089                07300000
CDSVERSIONBACKUP (DATAMOVER): SPECIFYING THE TYPE OF DATA MOVEMENT USED 07310000
PERFORMING CDSVERSIONBACKUP....1091                                     07320000
CDSVERSIONBACKUP (BCDSBACKUPDSN): SPECIFYING THE INITIAL CHARACTERS OF T07330000
DATA SET NAME FOR THE BACKUP CONTROL DATA SET........ 1092              07340000
CDSVERSIONBACKUP (MCDSBACKUPDSN): SPECIFYING THE INITIAL CHARACTERS OF T07350000
DATA SET NAME FOR THE MIGRATION CONTROL DATA SET.....1092               07360000
CDSVERSIONBACKUP (OCDSBACKUPDSN): SPECIFYING THE INITIAL CHARACTERS OF T07370000
DATA SET NAME FOR THE OFFLINE CONTROL DATA SET.......... 1093           07380000
CDSVERSIONBACKUP (JRNLBACKUPDSN): SPECIFYING THE INITIAL CHARACTERS OF T07390000
DATA SET NAME FOR THE JOURNAL DATA SET..........1093                    07400000
CLASSTRANSITIONS: SPECIFYING IF CLASS TRANSITIONS WILL BE PERFORMED DURI07410000
MIGRATION........1093                                                   07420000
CLOUDMIGRATION: SPECIFYING THE TYPE OF MIGRATION TO CLOUD..........1094 07430000
CLOUD: SPECIFYING CLOUD PROPERTIES... 1094                              07440000
COMMONQUEUE: SPECIFYING SETTINGS FOR THE COMMON QUEUES........... 1095  07450000
COMMONQUEUE (DUMP(CONNECT(BASENAME))): SPECIFYING THE XCF FUNCTIONAL GRO07460000
NAME SUFFIX FOR REMOTE DUMP PROCESSING.....1095                         07470000
COMMONQUEU(DUMP(DISCONNECT)): SPECIFYING THAT A SYSTEM DISCONNECT ITSELF07480000
USING THE CURRENTLY CONNECTED XCF FUNCTIONAL GROUP FOR DUMP PROCESSING 107490000
COMMONQUEUE (DUMP(MASTERSCHEDULERCANDIDATE)): SPECIFYING WHETHER THE HOS07500000
IS A MASTER SCHEDULER CANDIDATE FOR GROUPED FUNCTION OF DUMP......1096  07510000
COMMONQUEUE (RECALL(CONNECT(BASENAME))): SPECIFYING THE BASE NAME OF THE07520000
STRUCTURE FOR CRQ HOST CONNECTION... 1097                               07530000
COMMONQUEUE (RECALL(DISCONNECT)): SPECIFYING DISCONNECTION FROM THE CRQ.07540000
COMMONQUEUE RECOVER(CONNECT(BASENAME)): SPECIFYING THE XCF FUNCTIONAL GR07550000
NAME SUFFIX FOR REMOTE FULL VOLUME RECOVER FROM DUMP PROCESSING1098     07560000
COMMONQUEUE RECOVER(DISCONNECT): SPECIFYING THAT A SYSTEM DISCONNECT ITS07570000
USING THE CURRENTLY CONNECTED XCF FUNCTIONAL GROUP FOR RECOVER PROCESSIN07580000
COMMONQUEUE RECOVER(MASTERSCHEDULERCANDIDATE): SPECIFYING WHETHER THE HO07590000
IS A MASTER SCHEDULER CANDIDATE FOR GROUPED FUNCTION OF RECOVER... 1099 07600000
COMPACT: SPECIFYING WHEN COMPACTION SHOULD BE DONE.........1100         07610000
COMPACT ALL AND NONE: SPECIFYING WHETHER TO COMPACT DATA SETS.. 1100    07620000
COMPACT DASDBACKUP AND NODASDBACKUP: SPECIFYING WHETHER TO COMPACT DATA 07630000
DURING BACKUP TO DASD......... 1101                                     07640000
COMPACT DASDMIGRATE AND NODASDMIGRATE: SPECIFYING WHETHER TO COMPACT DAT07650000
SETS DURING MIGRATION TO DASD.......... 1101                            07660000
COMPACT TAPEBACKUP AND NOTAPEBACKUP: SPECIFYING WHETHER TO COMPACT DATA 07670000
DURING BACKUP TO TAPE........... 1102                                   07680000
COMPACT TAPEMIGRATE AND NOTAPEMIGRATE: SPECIFYING WHETHER TO COMPACT DAT07690000
DURING MIGRATION TO TAPE........1102                                    07700000
XXIX                                                                    07710000
COMPACTPERCENT: SPECIFYING THE PERCENTAGE OF SPACE SAVED FOR COMPACTION.07720000
CONVERSION AND NOCONVERSION: SPECIFYING WHETHER REBLOCKING IS TO OCCUR..07730000
CSALIMITS AND NOCSALIMITS: SPECIFYING WHETHER TO USE CSA LIMITING FOR MW07740000
CSALIMITS (ACTIVE): SPECIFYING THE PERCENTAGE OF THE MAXIMUM LIMIT TO BE07750000
ANY TYPE OF MWE........1104                                             07760000
CSALIMITS (INACTIVE): SPECIFYING THE PERCENTAGE OF THE MAXIMUM LIMIT TO 07770000
NOWAIT MWES..........1105                                               07780000
CSALIMITS (MAXIMUM): SPECIFYING THE MAXIMUM NUMBER OF CSA BYTES ALLOCATE07790000
TYPES OF MWES........... 1105                                           07800000
CSALIMITS (MWE): SPECIFYING MAXIMUM NUMBER OF NOWAIT MWES PER ADDRESS SP07810000
DAYS: SPECIFYING THE MINIMUM MIGRATION AGE OF A DATA SET..... 1106      07820000
DEBUG AND NODEBUG: SPECIFYING DEBUG MODE...........1106                 07830000
DEFERMOUNT: SPECIFYING DEFER MOUNTING OF TAPES..... 1107                07840000
DENSITY: SPECIFYING THE TAPE DENSITY... 1107                            07850000
DFHSMDATASETSERIALIZATION AND USERDATASETSERIALIZATION: SPECIFYING DATA 07860000
SERIALIZATION... 1107                                                   07870000
DISASTERMODE: SPECIFYING THE TAPE OPERATION MODE FOR DFSMSHSM IN DISASTE07880000
DSBACKUP: CONTROLLING THE COMMAND DATA SET BACKUP ENVIRONMENT. 1108     07890000
DSSXMMODE: SPECIFYING WHETHER DFSMSDSS WILL BE LOADED IN ITS OWN ADDRESS07900000
THE CROSS MEMORY INTERFACE, OR IN THE DFSMSHSM ADDRESS SPACE, FOR BACKUP07910000
BACKUP, DUMP, MIGRATION, AND FULL-VOLUME AND DATA SET RECOVERY.. 1111   07920000
DUMPIO: SPECIFYING THE DFSMSDSS DASD I/O BUFFERING TECHNIQUE.....1112   07930000
DUPLEX: ALLOWING DFSMSHSM TO CREATE TWO TAPES CONCURRENTLY.........1113 07940000
EMERGENCY AND NOEMERGENCY: SPECIFYING NO DATA SET MOVEMENT 1114         07950000
ERASEONSCRATCH AND NOERASEONSCRATCH: SPECIFYING TO CHECK FOR ERASURE OF 07960000
DFSMSHSM-OWNED DATA SETS1115                                            07970000
EVENTDRIVENMIGRATIONQUIESCE: SPECIFYING QUIESCE WINDOW(S) FOR INTERVAL A07980000
MIGRATION..... 1116                                                     07990000
EXITOFF: SPECIFYING INACTIVE INSTALLATION EXITS. 1116                   08000000
EXITON: SPECIFYING ACTIVE INSTALLATION EXITS......1117                  08010000
EXITS: SPECIFYING THE INSTALLATION EXITS TO BE TAKEN......1119          08020000
EXPIREDDATASETS: SPECIFYING WHETHER TO SCRATCH DATA SETS WITH EXPIRED EX08030000
EXTENDEDTTOC: SPECIFYING WHETHER TO USE EXTENDED TAPE TABLE OF CONTENTS 08040000
FASTREPLICATION: SPECIFYING FAST REPLICATION METHODS.........1120       08050000
FREQUENCY: SPECIFYING THE NUMBER OF DAYS BETWEEN BACKUP VERSIONS OF A DA08060000
INCREMENTALBACKUP: SPECIFYING WHETHER TO BACK UP ONLY CHANGED DATA SETS 08070000
INCREMENTAL VOLUME BACKUP..1122                                         08080000
INPUTTAPEALLOCATION: SPECIFYING WHETHER TO WAIT FOR THE INPUT TAPE TO BE08090000
INTERVALMIGRATION AND NOINTERVALMIGRATION: SPECIFYING WHETHER INTERVAL  08100000
MIGRATION IS PERFORMED..........1123                                    08110000
JES2 AND JES3: SPECIFYING THE JOB ENTRY SUBSYSTEM.... 1124              08120000
JOURNAL AND NOJOURNAL: SPECIFYING WHETHER TO WRITE UPDATED CONTROL DATA 08130000
IN THE JOURNAL DATA SET........... 1124                                 08140000
MAXABARSADDRESSSPACE: SPECIFYING THE MAXIMUM NUMBER OF CONCURRENT SECOND08150000
ADDRESS SPACES SUPPORTED....1125                                        08160000
MAXBACKUPTASKS: SPECIFYING THE MAXIMUM NUMBER OF CONCURRENT VOLUME BACKU08170000
MAXCOPYPOOLTASKS: SPECIFYING THE MAXIMUM NUMBER OF CONCURRENT DFSMSDSS  08180000
INVOCATIONS FOR EACH FAST REPLICATION COMMAND....... 1126               08190000
MAXDSRECOVERTASKS: SPECIFYING THE MAXIMUM NUMBER OF DATA SET RECOVERY TA08200000
DASD AND TAPE...........1127                                            08210000
MAXDSTAPERECOVERTASKS: SPECIFYING THE MAXIMUM NUMBER OF DATA SET RECOVER08220000
FROM TAPE....... 1127                                                   08230000
MAXDUMPRECOVERTASKS: SPECIFYING THE MAXIMUM NUMBER OF CONCURRENT VOLUME 08240000
RECOVERY FROM DUMP TASKS.... 1128                                       08250000
MAXDUMPTASKS: SPECIFYING THE MAXIMUM NUMBER OF CONCURRENT VOLUME DUMP TA08260000
MAXEXTENTS: SPECIFYING THE NUMBER OF EXTENTS TO CAUSE EXTENT REDUCTION..08270000
MAXINTERVALTASKS: SPECIFYING THE MAXIMUM NUMBER OF AUTOMATIC INTERVAL MI08280000
ON-DEMAND MIGRATION TASKS THAT CAN RUN CONCURRENTLY........1129         08290000
XXX                                                                     08300000
MAXMIGRATIONTASKS: SPECIFYING THE MAXIMUM NUMBER OF AUTOMATIC VOLUME SPA08310000
MANAGEMENT TASKS THAT CAN RUN CONCURRENTLY..........1130                08320000
MAXRECALLTASKS: SPECIFYING THE MAXIMUM NUMBER OF ACTIVE RECALL TASKS...108330000
MAXRECYCLETASKS: SPECIFYING THE MAXIMUM NUMBER OF ACTIVE RECYCLE TASKS..08340000
MAXSSMTASKS: SPECIFYING THE MAXIMUM NUMBER OF CONCURRENT AUTOMATIC SECON08350000
SPACE MANAGEMENT TASKS..... 1131                                        08360000
MIGDENSITY: SPECIFYING THE TAPE DENSITY WHEN ALLOCATING SCRATCH TAPES FO08370000
MIGRATEPREFIX: SPECIFYING THE PREFIX FOR THE MIGRATION COPY NAME. 1132  08380000
MIGRATIONAUTOCLOUD: ALLOW THE HOST TO EXECUTE CLOUD MIGRATION.1133      08390000
MIGRATIONCLEANUPDAYS: SPECIFYING THE NUMBER OF DAYS TO KEEP MCDS DATA SE08400000
AND STATISTICS RECORDS 1134                                             08410000
MIGRATIONLEVEL1DAYS: SPECIFYING THE INACTIVE AGE FOR DATA SETS MIGRATING08420000
VOLUMES......... 1135                                                   08430000
MIGRATEPSMEARLY: ACTIVATE THE PSM EARLIER CHECKING OPTION...........113508440000
MIGRATIONSUBTASKS: ENABLING MULTIPLE MIGRATION SUBTASKS........... 1135 08450000
MIGUNITNAME: SPECIFYING THE TYPE OF UNIT FOR ALLOCATING A SCRATCH TAPE D08460000
ML1OVERFLOW: MANAGE ML1 OVERFLOW VOLUMES..... 1137                      08470000
ML2PARTIALSNOTASSOCIATEDGOAL: SPECIFYING THE MAXIMUM NUMBER OF ALLOWED P08480000
ML2 TAPES...... 1138                                                    08490000
ML2RECYCLEPERCENT: SPECIFYING THE MAXIMUM PERCENTAGE OF VALID DATA ON A 08500000
TAPE....1138                                                            08510000
MONITOR: SPECIFYING WHICH INFORMATIONAL MESSAGES TO PRINT AT THE SYSTEM 08520000
MONITOR (BACKUPCONTROLDATASET): MONITORING THE SPACE USED IN THE BCDS...08530000
MONITOR (JOURNAL): MONITORING THE SPACE USED IN THE JOURNAL DATA SET....08540000
MONITOR (MIGRATIONCONTROLDATASET): MONITORING THE SPACE USED IN THE MCDS08550000
MONITOR (OFFLINECONTROLDATASET): MONITORING THE SPACE USED IN THE OCDS..08560000
MONITOR (SPACE AND NOSPACE): PRINTING VOLUME SPACE-USE MESSAGES...... 1108570000
MONITOR (STARTUP AND NOSTARTUP): PRINTING DFSMSHSM STARTUP INFORMATIONAL08580000
MESSAGES.......1141                                                     08590000
MONITOR (VOLUME AND NOVOLUME): PRINTING DATA SET MESSAGES DURING VOLUME 08600000
MOUNTWAITTIME: SPECIFYING THE TIME DFSMSHSM WAITS FOR A TAPE MOUNT AND O08610000
OBJECTNAMES: SPECIFYING THE COMPACTION-CONTROL QUALIFIER OF THE OBJECT D08620000
ONDEMANDMIGRATION: SPECIFYING WHETHER ON-DEMAND MIGRATION SHOULD BE PERF08630000
ODMNOTIFICATIONLIMIT: SPECIFYING AN ON-DEMAND MIGRATION NUMBER OF CONCUR08640000
QUEUED VOLUMES NOTIFICATION LIMIT.... 1144                              08650000
OPTIMUMDASDBLOCKING AND NOOPTIMUMDASDBLOCKING: SPECIFYING WHETHER       08660000
DFSMSHSM SHOULD USE ITS DEFINED OPTIMUM BLOCK SIZE.......1144           08670000
OUTPUTTAPEALLOCATION: SPECIFYING WHETHER TO WAIT FOR THE OUTPUT TAPE TO 08680000
PARTIALTAPE: SPECIFYING WHETHER TO REUSE PARTIALLY FULL TAPES...........08690000
PDA: SPECIFYING WHETHER THE PROBLEM DETERMINATION AID IS INITIATED...11408700000
PLEXNAME: SPECIFYING A NAME FOR AN HSMPLEX ........... 1147             08710000
PRIMARYSPMGMTSTART: SPECIFYING THE START AND STOP TIMES FOR AUTOMATIC PR08720000
MANAGEMENT. 1147                                                        08730000
PROFILEBACKUP AND NOPROFILEBACKUP: SPECIFYING WHETHER TO CREATE BACKUP R08740000
DISCRETE PROFILES FOR CATALOGED DATA SETS...... 1149                    08750000
PROMOTE: SPECIFYING WHETHER A HOST IS ELIGIBLE FOR PROMOTION........... 08760000
RACFIND AND NORACFIND: SPECIFYING WHETHER TO PUT RACF-INDICATION ON MIGR08770000
AND BACKUP VERSIONS. 1150                                               08780000
RECALL: SPECIFYING THE TARGET VOLUME TO RECEIVE RECALLED DATA SETS....1108790000
RECYCLEINPUTDEALLOCFREQUENCY: ALLOWING PERIODIC DEALLOCATION OF INPUT UN08800000
RECYCLE PROCESSING.....1151                                             08810000
RECYCLEOUTPUT: LIMITING THE SELECTION AND ALLOCATION OF AN OUTPUT VOLUME08820000
PROCESSING..... 1152                                                    08830000
RECYCLEPERCENT: SPECIFYING THE MAXIMUM PERCENTAGE OF VALID DATA ON A BAC08840000
RECYCLETAKEAWAYRETRY: SPECIFYING WHETHER TO AUTOMATICALLY GENERATE A NEW08850000
COMMAND FOR A TAPE.. 1154                                               08860000
RECYCLETAPEALLOCATION: SPECIFYING WHETHER TO WAIT FOR THE RECYCLE TAPE T08870000
XXXI                                                                    08880000
RECYCLETAPERESIDENCE: SPECIFYING WHICH IBM VTS TAPE VOLUMES SHOULD BE IN08890000
RECYCLE PROCESSING. 1155                                                08900000
REMOVECOMPACTNAMES: REMOVING THE COMPACTION-CONTROL QUALIFIER FOR SOURCE08910000
DATA SETS........ 1155                                                  08920000
REQUEST AND NOREQUEST: SPECIFYING WHETHER THE OPERATOR'S PERMISSION IS R08930000
SCRATCHFREQUENCY: SPECIFYING HOW LONG TO RETAIN LIST DATA SETS.....1156 08940000
SECONDARYSPMGMTDIRECTIVE: SPECIFYING SECONDARY SPACE MANAGEMENT CONTROLS08950000
PERTAINING TO CLOUD AND NON-CLOUD DATA...... 1156                       08960000
SECONDARYSPMGMTSTART: SPECIFYING THE START AND STOP TIME FOR AUTOMATIC S08970000
SPACE MANAGEMENT...1157                                                 08980000
SELECTVOLUME: SPECIFYING WHETHER DFSMSHSM SHOULD SELECT A SCRATCH TAPE V08990000
DFSMSHSM TAPE VOLUME....... 1158                                        09000000
SKIPABPRIMARY AND NOSKIPABPRIMARY: SPECIFYING WHETHER TO SKIP AUTOMATIC 09010000
OF PRIMARY VOLUMES....1160                                              09020000
SMALLDATASETPACKING AND NOSMALLDATASETPACKING: SPECIFYING WHETHER       09030000
DFSMSHSM SHOULD USE SMALL DATA SET PACKING........1160                  09040000
SMF AND NOSMF: SPECIFYING WHETHER DFSMSHSM WRITES SMF RECORDS...........09050000
SOURCENAMES: SPECIFYING THE COMPACTION-CONTROL QUALIFIER OF THE SOURCE D09060000
SPILL AND NOSPILL: SPECIFYING WHETHER DFSMSHSM DOES SPILL OR CLEANUP PRO09070000
FULL DASD DAILY BACKUP VOLUMES....... 1162                              09080000
STORAGEGROUPAFFINITY: DEFINE THE SET OF HOST NAMES THAT HAVE AFFINITY TO09090000
STORAGE GROUP CLOUD MIGRATION..........1163                             09100000
SWAP AND NOSWAP: SPECIFYING WHETHER THE DFSMSHSM ADDRESS SPACE CAN BE SW09110000
SYSOUT: DIRECTING DFSMSHSM OUTPUT...1164                                09120000
SYS1DUMP AND NOSYS1DUMP: SPECIFYING WHERE DFSMSHSM DUMPS SHOULD BE WRITT09130000
TAPEDATASETORDER: SPECIFYING ORDER FOR PROCESSING TAPE....1165          09140000
TAPEDELETION: SPECIFYING WHAT TO DO WITH TAPES THAT NO LONGER CONTAIN VA09150000
TAPEHARDWARECOMPACT AND NOTAPEHARDWARECOMPACT: SPECIFYING THE DATA FORMA09160000
USED WHEN WRITING TO A 3480X TAPE DEVICE.. 1166                         09170000
TAPEINPUTPROMPT: SPECIFYING WHETHER TO SUPPRESS INPUT TAPE MESSAGES.. 1109180000
TAPEMAXRECALLTASKS: SPECIFYING THE MAXIMUM NUMBER OF CONCURRENT TAPE REC09190000
TAPEMIGRATION: SPECIFYING THE TYPE OF MIGRATION TO TAPE..... 1168       09200000
TAPEOUTPUTPROMPT: SPECIFYING WHETHER TO SUPPRESS OUTPUT TAPE MESSAGES...09210000
TAPERECALLLIMITS: SPECIFYING LIMITS TO CONTINUOUSLY MOUNTED ML2 TAPES DU09220000
RECALLS 1171                                                            09230000
TAPESECURITY: SPECIFYING THE TYPE OF SECURITY FOR TAPE VOLUMES.......11709240000
TAPESPANSIZE: REDUCING TAPE VOLUME SPANNING........ 1173                09250000
TAPETYPE: SPECIFYING WHETHER TO USE WORM MEDIA FOR NON-ABARS FUNCTIONS..09260000
TAPEUTILIZATION: SPECIFYING THE DESIRED TAPE UTILIZATION......1175      09270000
UNITNAME: SPECIFYING THE TYPE OF UNIT FOR MOUNTING A SCRATCH TAPE DURING09280000
UNLOAD AND NOUNLOAD: SPECIFYING WHETHER TO UNLOAD MSS VIRTUAL DASD VOLUM09290000
USECYLINDERMANAGEDSPACE: SPECIFYING WHETHER TO ALLOW USE OF CYLINDER MAN09300000
SPACE FOR MIGRATION COPIES AND BACKUP VERSIONS..... 1178                09310000
USERUNITTABLE AND NOUSERUNITTABLE: SPECIFYING ESOTERIC TAPE UNIT NAMES T09320000
DFSMSHSM.... 1178                                                       09330000
VERSIONS: SPECIFYING THE MAXIMUM NUMBER OF BACKUP VERSIONS TO KEEP FOR A09340000
VOLCOUNT: SPECIFYING THE METHOD FOR DETERMINING VOLUME COUNT FOR SMS TAR09350000
ALLOCATIONS WHEN PERFORMED BY DFSMSDSS.. 1182                           09360000
VOLUMEDUMP: SPECIFYING CONCURRENT COPY OPTIONS FOR DUMP VOLUMES.........09370000
ZCOMPRESS (NONE | ALL): SPECIFYING WHETHER TO USE ZEDC SERVICES FOR DATA09380000
ZCOMPRESS: SPECIFYING WHEN COMPRESSION WITH ZEDC SHOULD BE DONE.........09390000
ZCOMPRESS (DASDBACKUP (NO | YES)) : SPECIFYING WHETHER TO USE ZEDC SERVI09400000
SETS DURING BACKUP TO DASD..1185                                        09410000
ZCOMPRESS (DASDMIGRATE (NO | YES)) : SPECIFYING WHETHER TO USE ZEDC SERV09420000
DATA SETS DURING MIGRATION TO DASD..1185                                09430000
ZCOMPRESS (TAPEBACKUP (NO | YES)) : SPECIFYING WHETHER TO USE ZEDC SERVI09440000
SETS DURING BACKUP TO TAPE....1186                                      09450000
XXXII                                                                   09460000
ZCOMPRESS (TAPEMIGRATE (NO | YES)) : SPECIFYING WHETHER TO USE ZEDC SERV09470000
DATA SETS DURING MIGRATION TO TAPE....1186                              09480000
EXAMPLES OF HOW TO CODE THE SETSYS COMMAND....1187                      09490000
CHAPTER 65. STOP COMMAND: SHUTTING DOWN DFSMSHSM....... 1197            09500000
SYNTAX OF THE STOP COMMAND......... 1197                                09510000
OPTIONAL PARAMETERS OF THE STOP COMMAND.......... 1197                  09520000
DUMP: REQUESTING A DUMP OF THE DFSMSHSM ADDRESS SPACE..1197             09530000
PROMOTE: SPECIFYING THAT A SPECIFIC HOST IN A SYSPLEX IS ELIGIBLE TO BE 09540000
HOST.... 1198                                                           09550000
EXAMPLE OF HOW TO CODE THE STOP COMMAND......... 1198                   09560000
CHAPTER 66. SWAPLOG COMMAND: SWITCHING BETWEEN THE DFSMSHSM LOG OR PDA D09570000
SYNTAX OF THE SWAPLOG COMMAND. 1199                                     09580000
OPTIONAL PARAMETERS OF THE SWAPLOG COMMAND.. 1199                       09590000
LOG: SPECIFYING TO SWAP THE LOG DATA SETS.........1199                  09600000
PDA: SPECIFYING TO SWAP THE PDA DATA SETS.......1200                    09610000
EXAMPLES OF HOW TO CODE THE SWAPLOG COMMAND........... 1200             09620000
CHAPTER 67. TAPECOPY COMMAND: MAKING COPIES OF SELECTED CARTRIDGE-TYPE T09630000
SYNTAX OF THE TAPECOPY COMMAND 1201                                     09640000
REQUIRED PARAMETERS OF THE TAPECOPY COMMAND.1202                        09650000
ALL: SPECIFYING TO COPY ALL ELIGIBLE CARTRIDGE-TYPE SINGLE-FILE TAPE VOL09660000
MIGRATIONLEVEL2: SPECIFYING TO CREATE COPIES OF ALL ELIGIBLE MIGRATION L09670000
BACKUP: SPECIFYING TO CREATE COPIES OF ALL ELIGIBLE BACKUP TAPE VOLUMES.09680000
ORIGINALVOLUMES: COPYING SPECIFIED VOLUMES......... 1202                09690000
INDATASET: SPECIFYING TO USE A DATA SET CONTAINING A VOLUME LIST.......109700000
OPTIONAL PARAMETERS OF THE TAPECOPY COMMAND..1204                       09710000
ALTERNATEUNITNAME: SPECIFYING ALTERNATE UNIT NAMES FOR A TAPE COPY......09720000
ALTERNATE3590UNITNAME: SPECIFYING 3590 ALTERNATE UNIT NAME FOR A TAPE CO09730000
ALTERNATEVOLUMES: SPECIFYING WHICH VOLUMES TO COPY....... 1205          09740000
EXPDT AND RETPD: SPECIFYING A TAPE EXPIRATION DATE OR A RETENTION PERIOD09750000
EXAMPLES OF HOW TO CODE THE TAPECOPY COMMAND.......... 1207             09760000
CHAPTER 68. TAPEREPL COMMAND: REPLACING CARTRIDGE-TYPE TAPE VOLUMES WITH09770000
VOLUMES........ 1209                                                    09780000
SYNTAX OF THE TAPEREPL COMMAND. 1209                                    09790000
REQUIRED PARAMETERS OF THE TAPEREPL COMMAND. 1209                       09800000
ALL: SPECIFYING REPLACEMENT OF ALL CARTRIDGE-TYPE SINGLE-FILE TAPE VOLUM09810000
BACKUP: SPECIFYING REPLACEMENT OF ALL CARTRIDGE-TYPE SINGLE-FILE BACKUP 09820000
INDATASET: SPECIFYING THE USE OF A DATA SET CONTAINING A VOLUME LIST 12109830000
MIGRATION: SPECIFYING REPLACEMENT OF ALL CARTRIDGE-TYPE SINGLE-FILE MIGR09840000
VOLUMES......... 1210                                                   09850000
ONLYDISASTERALTERNATES: CONVERTING DISASTER ALTERNATE VOLUMES TO ORIGINA09860000
ORIGINALVOLUMES: SPECIFYING VOLUMES TO BE REPLACED.........1211         09870000
OPTIONAL PARAMETERS OF THE TAPEREPL COMMAND.. 1211                      09880000
ALTERNATEUNITNAME: SPECIFYING AN ALTERNATE UNIT NAME FOR A TAPE REPLACEM09890000
ALTERNATEVOLUMES: SPECIFYING THE REPLACEMENT VOLUMES TO USE....1212     09900000
DISASTERALTERNATEVOLUMES: IDENTIFYING THE ALTERNATE VOLUME AS THE DISAST09910000
VOLUME........... 1212                                                  09920000
EXAMPLES OF HOW TO CODE THE TAPEREPL COMMAND........... 1212            09930000
CHAPTER 69. TRAP COMMAND: REQUESTING A DUMP WHEN A SPECIFIED ERROR OCCUR09940000
CHAPTER 70. UPDATEC COMMAND: RECOVERING THE CONTROL DATA SETS... 1217   09950000
SYNTAX OF THE UPDATEC COMMAND.. 1217                                    09960000
REQUIRED PARAMETERS OF THE UPDATEC COMMAND...1217                       09970000
XXXIII                                                                  09980000
ALL, BACKUPCONTROLDATASET, MIGRATIONCONTROLDATASET, AND                 09990000
OFFLINECONTROLDATASET: SPECIFYING WHICH CONTROL DATA SET TO UPDATE 1217 10000000
OPTIONAL PARAMETERS OF THE UPDATEC COMMAND....1218                      10010000
JOURNAL: SPECIFYING THE JOURNAL DATA SET TO USE..........1218           10020000
EXAMPLES OF HOW TO CODE THE UPDATEC COMMAND 1218                        10030000
CHAPTER 73. UPDTCDS COMMAND: UPDATING THE CONTROL DATA SETS......1225   10040000
COPYPOOL: SPECIFYING THE NAME OF THE COPY POOL....... 1225              10050000
VERSION: SPECIFYING THE VERSION...........1225                          10060000
DUMPEXPIRATION: INDICATING THAT THE COPY POOL DUMP EXPIRATION IS TO BE M10070000

./ ADD NAME=ARCGS003
SYS1.SAMPLIB(ARCGS003)                                                  00010000
REPORT TITLE : Statistics for Migration                                 00020000
**********************************************************************  00030000
* PROPRIETARY V3 STATEMENT                                           *  00040000
* LICENSED MATERIALS - PROPERTY OF IBM                               *  00050000
* 5650-ZOS                                                           *  00060000
* COPYRIGHT IBM CORP. 2008, 2016                                     *  00070000
* END PROPRIETARY V3 STATEMENT                                       *  00080000
**********************************************************************  00090000
*                                                                    *  00100000
*  Change History:                                                   *  00110000
*                                                                    *  00120000
* $P0=HSMPR,Z1A,073107,THMB: NEW REPORT                          àPRA*  00130000
* $CW=OA50697,220,060616,THI9-15: Cloud Support                  àCWA*  00140000
**********************************************************************  00150000
REPORT FOOTER:                                                          00160000
REPORT TYPE  : ARCGFSR2 DFSMShsm FSR-SMF Records                        00170000
REPORT TOOLD : ICETOOL                                                  00180000
MACROS       : Y ARCFSR2                                                00190000
MACLIB       : SYS1.MACLIB                                              00200000
INPUT DSN    : DFHSM.EXTRACT.REFORMAT                                   00210000
SKEL VAR1    : X'FF'                                                    00220000
SKEL VAR2    : DFHSM.EXTRACT                                            00230000
DATE FORMAT  : YYYYDDD                                                  00240000
CREATED      : 2007/07/31 at 17:00:00 by HSM                            00250000
LAST CHANGED : 2007/07/31 at 17:00:00 by HSM                            00260000
* Following the selected report fields (record type 1 and A)            00270000
1 FSR2DATR                                                              00280000
A  1   8 DATE                                                           00290000
1 FSR2TIMR                                                              00300000
A  2   8 TIME REQ                                                       00310000
1 FSR2TIME                                                              00320000
A  3   9 TIME COMP                                                      00330000
1 FSR2DSN                                                               00340000
A  4  44 DSN                                                            00350000
1 FSR2AGE                                                               00360000
A  5   3 AGE                                                            00370000
1 FSR2FVOL                                                              00380000
A  6   6 SOURCE                                                         00390000
1 FSR2TVOL                                                              00400000
A  7   6 TARGET                                                         00410000
1 FSR2NENT1                                                             00420000
A  8   6 £ TAPE                                                         00430000
1 FSR2BYTR                                                              00440000
A  9   7 KB READ                                                        00450000
1 FSR2BYTW                                                              00460000
A 10   8 KB WRITE                                                       00470000
1 FSR2SCNAM                                                             00480000
A 11   8 SC NAME                                                        00490000
1 FSR2MCNAM                                                             00500000
A 12   8 MC NAME                                                        00510000
1 FSR2RC                                                                00520000
A 13   8 RC (hex)                                                       00530000
* Following the selected sort fields (record type 2 and B)              00540000
2 FSR2DATR                                                              00550000
B  1 A                                                                  00560000
2 FSR2TIME                                                              00570000
B  3 A                                                                  00580000
2 FSR2DSN                                                               00590000
B  2 A                                                                  00600000
* Following the include criteria (record type 3 and C)                  00610000
3 FSR2DATR                                                              00620000
C BW AND( &TODAY-007D,&TODAY-000D                                       00630000
3 FSR2TYPE                                                              00640000
C EQ OR   X'01'                                                         00650000
3 FSR2TYPE                                                              00660000
C EQ OR   X'02'                                                         00670000
3 FSR2TYPE                                                              00680000
C EQ OR   X'03'                                                         00690000
3 FSR2TYPE                                                              00700000
C EQ )AND X'19'                                                         00710000
*                                                                       00720000

./ ADD NAME=ARCIVPST
SYS1.SAMPLIB(ARCIVPST)                                                  00010000
//HSMIVP   JOB ?JOBPARM                                                 00020000
//HSMBUILD EXEC PGM=IEBUPDTE,PARM=NEW                                   00030000
//*                                                                     00040000
//********************************************************************  00050000
//*       INSTALLATION VERIFICATION PROCEDURE SETUP                  *  00060000
//*                                                                  *  00070000
//* THIS JOB (HSMIVP) PROVIDES THE INSTALLATION VERIFICATION         *  00080000
//* PROCEDURE (IVP) FOR DFSMSHSM. THE DFSMSHSM IVP IS NOT DEPENDENT  *  00090000
//* ON ANY SMS FUNCTIONS OR CONSTRUCTS FOR ITS SUCCESSFUL COMPLETION.*  00100000
//* RUN THIS JOB AFTER REPLACING THE PARAMETER ON THE JOB CARD WITH  *  00110000
//* VALUES FOR YOUR SITE. THIS JOB CREATES A PARTITIONED DATA SET    *  00120000
//* (PDS) DFSMSHSM.IVP.CNTL ON SYSDA THAT CONTAINS THE MEMBER        *  00130000
//* HSMIVP1. EDIT HSMIVP1 AND RUN IT TO SET UP YOUR SYSTEM           *  00140000
//* FOR THE DFSMSHSM IVP.                                            *  00150000
//*                                                                  *  00160000
//* AFTER RUNNING THIS JOB, INSPECT MEMBER HSMIVP1 IN                *  00170000
//* DFSMSHSM.IVP.CNTL FOR INSTRUCTIONS ON HOW TO RUN THE IVP.        *  00180000
//********************************************************************  00190000
//*                                                                     00200000
//SYSPRINT DD  SYSOUT=*                                                 00210000
//SYSUT2   DD  UNIT=SYSDA,                                              00220000
//             DSN=DFSMSHSM.IVP.CNTL,                                   00230000
//             DISP=(NEW,CATLG),                                        00240000
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120),                    00250000
//             SPACE=(CYL,(1,1,2))                                      00260000
//SYSIN    DD  DATA,DLM='$A'                                            00270000
./ ADD NAME=HSMIVP1                                                     00280000
//HSMIVP1  JOB ?JOBPARM                                                 00290000
//*                                                                     00300000
//********************************************************************  00310000
//*           HSMIVP1 MEMBER OF DFSMSHSM.IVP.CNTL                    *  00320000
//*                                                                  *  00330000
//* MEMBER HSMIVP1 IS A PARAMETERIZED IVP FOR DFSMSHSM. RUN THIS JOB *  00340000
//* AFTER REPLACING THE FOLLOWING PARAMETERS WITH VALUES FOR YOUR    *  00350000
//* SITE.                                                            *  00360000
//*                                                                  *  00370000
//* THIS JOB CREATES A USER CATALOG (THAT YOU NAME) ON A VOLUME (THAT*  00380000
//* YOU IDENTIFY) AND ALLOCATES A MIGRATION CONTROL DATA             *  00390000
//* SET (ON A VOLUME YOU IDENTIFY). THE JOB PLACES A STARTUP         *  00400000
//* PROCEDURE NAMED DFSMSHSM INTO YOUR SYS1.PROCLIB AND CREATES THE  *  00410000
//* MEMBERS ARCCMD00, ARCSTR00, HSMIVP2, AND UCLINCHK IN THE DATA SET*  00420000
//* DFSMSHSM.IVP.CNTL.  WARNING: IF A STARTUP PROCEDURE NAMED        *  00430000
//* DFSMSHSM ALREADY EXISTS IN THE SYS1.PROCLIB DATA SET, IT WILL BE *  00440000
//* OVERWRITTEN.                                                     *  00450000
//*                                                                  *  00460000
//* AFTER RUNNING THIS JOB TO CREATE THE IVP ENVIRONMENT, ISSUE THE  *  00470000
//* 'START DFSMSHSM' COMMAND TO RUN THE DFSMSHSM IVP. REFER TO THE   *  00480000
//* "IMPLEMENTING AND CUSTOMIZING DFSMSHSM" MANUAL FOR INSTRUCTIONS  *  00490000
//* AND EXPECTED RESULTS.                                            *  00500000
//*                                                                  *  00510000
//* AFTER STARTING THE DFSMSHSM INSTALLATION VERIFICATION PROCEDURE, *  00520000
//* RUN THE UCLINCHK JOB AND CHECK THE RESULTS IN ACCORDANCE TO THE  *  00530000
//* INSTRUCTIONS CONTAINED IN THE PROGRAM DIRECTORY.                 *  00540000
//*                                                                  *  00550000
//* AFTER COMPLETING THE IVP, RUN THE JOB IN MEMBER HSMIVP2 IN THE   *  00560000
//* DFSMSHSM.IVP.CNTL DATA SET TO CLEAN UP THE SYSTEM.               *  00570000
//********************************************************************  00580000
//* PARAMETER   DESCRIPTION OF PARAMETER                             *  00590000
//*                                                                  *  00600000
//* ?UCATUNIT - UNIT TYPE TO CONTAIN USER CATALOG                    *  00610000
//* ?UCATVOL  - VOLUME SERIAL OF VOLUME TO CONTAIN USER CATALOG      *  00620000
//* ?UCATNAM  - NAME FOR USER CATALOG FOR MCDS                       *  00630000
//* ?MCATNAM  - NAME OF SYSTEM MASTER CATALOG (OR NAME/PASSWORD      *  00640000
//*             OF SYSTEM MASTER CATALOG IF PASSWORD USED)           *  00650000
//* ?JOBPARM                                                         *  00660000
//*           - JOB CONTROL CARD PARAMETERS                          *  00670000
//* ?HIQUAL   - HIGH LEVEL QUALIFIER FOR IVP DATA SETS               *  00680000
//* ?CDSUNIT  - UNIT TYPE TO CONTAIN THE MCDS                        *  00690000
//* ?CDSVOL   - VOLUME SERIAL OF VOLUME TO CONTAIN MCDS              *  00700000
//* ?JESVER   - JES VERSION, EITHER JES2 OR JES3                     *  00710000
//*                                                                  *  00720000
//********************************************************************  00730000
//*                                                                     00740000
//********************************************************************  00750000
//* THIS STEP ALLOCATES AN INTEGRATED CATALOG FACILITY (ICF) USER    *  00760000
//* CATALOG AND THE CATALOG'S ASSOCIATED ALIAS WHICH YOU SPECIFY     *  00770000
//* WITH THE "?HIQUAL" VARIABLE.                                     *  00780000
//*                                                                  *  00790000
//*   ****** INTEGRATED CATALOG FACILITY CATALOG REQUIRED *******    *  00800000
//********************************************************************  00810000
//*                                                                     00820000
//CATALOG  EXEC PGM=IDCAMS                                           *  00830000
//SYSPRINT DD SYSOUT=*                                                  00840000
//HSMCAT   DD UNIT=?UCATUNIT,DISP=SHR,VOL=SER=?UCATVOL                  00850000
//SYSIN    DD *                                                         00860000
  DEFINE UCAT(NAME(?UCATNAM) -                                          00870000
         CYLINDERS(1 1) VOLUME(?UCATVOL) -                              00880000
         FILE(HSMCAT) FREESPACE(10 10))                                 00890000
  DEFINE ALIAS(NAME(?HIQUAL) RELATE(?UCATNAM))                          00900000
/*                                                                      00910000
//********************************************************************  00920000
//* THIS STEP DEFINES THE MCDS.                                      *  00930000
//********************************************************************  00940000
//*                                                                     00950000
//IDCAMS EXEC PGM=IDCAMS                                                00960000
//*                                                                     00970000
//SYSPRINT DD SYSOUT=*                                                  00980000
//*                                                                     00990000
//HSMMCDS  DD UNIT=?CDSUNIT,VOL=SER=?CDSVOL,DISP=SHR                    01000000
//*                                                                     01010000
//SYSIN    DD *                                                         01020000
 DEFINE CLUSTER (NAME(?HIQUAL.MCDS) VOLUMES(?CDSVOL) -                  01030000
        CYLINDERS(1) FILE(HSMMCDS) -                                    01040000
        RECORDSIZE(435 2040) FREESPACE(0 0) -                           01050000
        INDEXED KEYS(44 0) SHAREOPTIONS(3 3) -                          01060000
        UNIQUE NOWRITECHECK) -                                          01070000
        DATA(NAME(?HIQUAL.MCDS.DATA) -                                  01080000
        CONTROLINTERVALSIZE(4096)) -                                    01090000
        INDEX(NAME(?HIQUAL.MCDS.INDEX) -                                01100000
        CONTROLINTERVALSIZE(2048))                                      01110000
//STARTUP  EXEC PGM=IEBGENER                                            01120000
//SYSPRINT DD SYSOUT=*                                                  01130000
//SYSUT2   DD DISP=SHR,                                                 01140000
//            DSN=SYS1.PROCLIB(DFSMSHSM)                                01150000
//SYSIN    DD DUMMY                                                     01160000
//SYSUT1   DD DATA,DLM='$B'                                             01170000
//*                                                                     01180000
//********************************************************************  01190000
//*        DFSMSHSM IVP STARTUP PROCEDURE                            *  01200000
//********************************************************************  01210000
//*                                                                     01220000
//DFSMSHSM EXEC PGM=ARCCTL,DYNAMNBR=50,REGION=6144K,TIME=1440,          01230000
//        PARM=('EMERG=NO','LOGSW=NO','CMD=00','UID=?HIQUAL',           01240000
//        'STARTUP=YES','HOST=1Y','STR=00')                             01250000
//HSMPARM  DD DSN=DFSMSHSM.IVP.CNTL,DISP=SHR                            01260000
//MSYSOUT  DD SYSOUT=A                                                  01270000
//MSYSIN   DD DUMMY                                                     01280000
//SYSPRINT DD SYSOUT=A,FREE=CLOSE                                       01290000
//SYSUDUMP DD SYSOUT=A                                                  01300000
//MIGCAT   DD DSN=?HIQUAL.MCDS,DISP=SHR                                 01310000
//ARCLOGX  DD DUMMY                                                     01320000
//ARCLOGY  DD DUMMY                                                     01330000
$B                                                                      01340000
//MAKEARC  EXEC PGM=IEBGENER                                            01350000
//SYSPRINT DD SYSOUT=A                                                  01360000
//SYSUT2   DD DISP=OLD,                                                 01370000
//            DSN=DFSMSHSM.IVP.CNTL(ARCCMD00)                           01380000
//SYSIN    DD DUMMY                                                     01390000
//SYSUT1   DD DATA,DLM='$B'                                             01400000
 /*                                                                     01410000
 /********************************************************************  01420000
 /*           DFSMSHSM STARTUP PARMLIB MEMBER FOR IVP                *  01430000
 /********************************************************************  01440000
 /*                                                                     01450000
 SETSYS ?JESVER -                                                       01460000
   SYS1DUMP -                                                           01470000
   MONITOR(STARTUP) -                                                   01480000
   NOJOURNAL -                                                          01490000
   NOSPILL                                                              01500000
 QUERY STARTUP CSALIMITS SETSYS                                         01510000
$B                                                                      01520000
//MAKEARC  EXEC PGM=IEBGENER                                            01530000
//SYSPRINT DD SYSOUT=A                                                  01540000
//SYSUT2   DD DISP=OLD,                                                 01550000
//            DSN=DFSMSHSM.IVP.CNTL(ARCSTR00)                           01560000
//SYSIN    DD DUMMY                                                     01570000
//SYSUT1   DD DATA,DLM='$B'                                             01580000
 /*                                                                     01590000
 /********************************************************************  01600000
 /*           DFSMSHSM ADDITIONAL STARTUP PARMLIB MEMBER FOR IVP     *  01610000
 /********************************************************************  01620000
 /*                                                                     01630000
 EMERG=NO,CDSQ=YES,STARTUP=YES                                          01640000
 PDA=YES,LOGSW=YES                                                      01650000
$B                                                                      01660000
//MAKEARC  EXEC PGM=IEBGENER                                            01670000
//SYSPRINT DD SYSOUT=*                                                  01680000
//SYSUT2   DD DISP=OLD,                                                 01690000
//            DSN=DFSMSHSM.IVP.CNTL(HSMIVP2)                            01700000
//SYSIN    DD DUMMY                                                     01710000
//SYSUT1   DD DATA,DLM='$B'                                             01720000
//HSMIVP2  JOB ?JOBPARM                                                 01730000
//*                                                                     01740000
//********************************************************************  01750000
//* HSMIVP2 IS A JOB TO CLEAN UP AFTER EXECUTION OF THE IVP.  THE    *  01760000
//* FIRST STEP DELETES THE MCDS.  THE SECOND STEP DELETES THE USER   *  01770000
//* CATALOG USED FOR THE MCDS.                                       *  01780000
//********************************************************************  01790000
//*                                                                     01800000
//DELMCDS  EXEC PGM=IDCAMS                                              01810000
//SYSPRINT DD  SYSOUT=*                                                 01820000
//SYSIN    DD  *                                                        01830000
  DELETE -                                                              01840000
     ?HIQUAL.MCDS -                                                     01850000
     PURGE -                                                            01860000
     CATALOG(?UCATNAM)                                                  01870000
//DELUCAT  EXEC PGM=IDCAMS                                              01880000
//SYSPRINT DD  SYSOUT=*                                                 01890000
//SYSIN    DD  *                                                        01900000
  DELETE -                                                              01910000
   ?HIQUAL -                                                            01920000
   ALIAS -                                                              01930000
   CATALOG(?MCATNAM)                                                    01940000
  DELETE -                                                              01950000
   ?UCATNAM -                                                           01960000
   PURGE -                                                              01970000
   FORCE -                                                              01980000
   USERCATALOG                                                          01990000
$B                                                                      02000000
//UCLINCHK EXEC PGM=IEBGENER                                            02010000
//SYSPRINT DD SYSOUT=A                                                  02020000
//SYSUT2   DD DISP=OLD,                                                 02030000
//            DSN=DFSMSHSM.IVP.CNTL(UCLINCHK)                           02040000
//SYSIN    DD DUMMY                                                     02050000
//SYSUT1   DD DATA,DLM='$C'                                             02060000
//UCLINCHK JOB ?JOBPARM                                                 02070000
//********************************************************************  02080000
//* THIS JOB VERIFIES THAT UCLIN WAS EXECUTED AND THAT               *  02090000
//* DFSMSHSM SUPPORT MODULES ARE CORRECTLY INSTALLED.                *  02100000
//*                                                                  *  02110000
//* EXPECT TO RECEIVE "SYSTEM ACTION AGAINST A MIGRATED DATA         *  02120000
//* SET FAILED" OR "DATA SET IS NOT MIGRATED/BACKED UP" MESSAGES,    *  02130000
//* AND A RETURN CODE OF 12 FROM IDCAMS.                             *  02140000
//*                                                                  *  02150000
//* YOU MAY ALSO RECEIVE THE FOLLOWING ERROR MESSAGES, THESE ARE     *  02160000
//* TO BE EXPECTED, BUT MAY OR MAY NOT OCCUR DEPENDING ON THE        *  02170000
//* SYSTEM ENVIRONMENT.                                              *  02180000
//*                                                                  *  02190000
//* IKJ56231I DATA SET HSM130.UCLINCHK NOT ALLOCATED,                *  02200000
//*           SYSTEM OR INSTALLATION ERROR+                          *  02210000
//* IKJ56231I DYNAMIC ALLOCATION REASON CODE IS X'000017FF'          *  02220000
//* IGD04001I UNEXPECTED CATALOG LOCATE PROCESSING ERROR -           *  02230000
//*           RETURN CODE 38 REASON CODE 4                           *  02240000
//* IDC3003I FUNCTION TERMINATED. CONDITION CODE IS 12               *  02250000
//*                                                                  *  02260000
//*                                                                  *  02270000
//*                                                                  *  02280000
//* A REQUEST FOR MOUNT VOLUME "MIGRAT" INDICATES THAT UCLIN         *  02290000
//* DID NOT RUN OR DID NOT RUN CORRECTLY. "MIGRAT" IS DFSMSHSM-OWNED *  02300000
//* AND NO MOUNT AT THIS TIME IS NECESSARY.  REFER TO PROGRAM        *  02310000
//* DIRECTORY FOR INSTRUCTIONS ON UCLIN.                             *  02320000
//*                                                                  *  02330000
//********************************************************************  02340000
//IDCAMS EXEC PGM=IDCAMS                                                02350000
//SYSPRINT DD SYSOUT=*                                                  02360000
//SYSIN    DD *                                                         02370000
 DEFINE NONVSAM(NAME(?HIQUAL.UCLINCHK) DEVT(3380) VOL(MIGRAT))          02380000
 ALLOCATE DA('?HIQUAL.UCLINCHK')                                        02390000
 DELETE ?HIQUAL.UCLINCHK NOSCRATCH                                      02400000
/*                                                                      02410000
$C                                                                      02420000
$A                                                                      02430000

./ ADD NAME=ARCSTRST
SYS1.SAMPLIB(ARCSTRST)                                                  00010000
//HSMSTPDS JOB ?JOBPARM                                                 00020000
//HSMSTEP1 EXEC PGM=IEBGENER                                            00030000
//*                                                                     00040000
//********************************************************************/ 00050000
//**PROPRIETARY V3 STATEMENT                                         */ 00060000
//**LICENSED MATERIALS - PROPERTY OF IBM                             */ 00070000
//**5650-ZOS                                                         */ 00080000
//**COPYRIGHT IBM CORP. 1985, 2017                                   */ 00090000
//**END PROPRIETARY V3 STATEMENT                                     */ 00100000
//********************************************************************/ 00110000
//* THESE SAMPLE DFSMSHSM PROGRAMS CREATE A PDS (HSM.SAMPLE.CNTL)    */ 00120000
//* THAT CONTAINS THE FOLLOWING MEMBERS:                             */ 00130000
//*                                                                  */ 00140000
//* STARTER  - THE DFSMSHSM STARTER SET                              */ 00150000
//* ARCCMD01 - SAMPLE ARCCMD MEMBER FOR ML2 TAPE PROCESSING          */ 00160000
//* ARCCMD90 - SAMPLE ADDVOL COMMANDS FOR STARTER SET                */ 00170000
//* ARCCMD91 - SAMPLE ADDVOL COMMANDS FOR ML2 TAPE PROCESSING        */ 00180000
//* HSMHELP  - HELP TEXT FOR DFSMSHSM-AUTHORIZED COMMANDS            */ 00190000
//* HSMLOG   - SAMPLE JOB TO PRINT THE LOG                           */ 00200000
//* HSMEDIT  - SAMPLE JOB TO PRINT THE EDITLOG                       */ 00210000
//* ALLOCBK1 - SAMPLE JOB TO ALLOCATE CDS BACKUP VERSION DATA SETS   */ 00220000
//* ALLOSDSP - SAMPLE JOB TO ALLOCATE AN SDSP DATA SET               */ 00230000
//* HSMPRESS - SAMPLE JOB TO REORGANIZE THE CONTROL DATA SETS        */ 00240000
//*                                                             4à01D*/ 00250000
//*                                                                  */ 00260000
//* YOU CAN ESTABLISH AN OPERATING DFSMSHSM ON A SINGLE PROCESSOR    */ 00270000
//* BY EDITING AND EXECUTING THE JOB CONTAINED IN THE MEMBER NAMED   */ 00280000
//* STARTER. REFER TO THE DFSMSHSM IMPLEMENTATION AND CUSTOMIZATION  */ 00290000
//* GUIDE - DFSMSHSM FOR INSTRUCTIONS ON USING THE DFSMSHSM STARTER  */ 00300000
//* SET.                                                             */ 00310000
//********************************************************************/ 00320000
//*                                                                     00330000
//SYSPRINT DD SYSOUT=*                                                  00340000
//SYSUT2   DD UNIT=SYSDA,                                               00350000
//            DSN=HSM.SAMPLE.CNTL(STARTER),                             00360000
//            DISP=(NEW,CATLG),                                         00370000
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120),                     00380000
//            SPACE=(CYL,(1,1,10))                                      00390000
//SYSIN    DD DUMMY                                                     00400000
//SYSUT1   DD DATA,DLM='$$'                                             00410000
//HSMALLOC JOB ?JOBPARM                                                 00420000
//*                                                                     00430000
//********************************************************************/ 00440000
//* DFSMSHSM STARTER SET                                             */ 00450000
//*                                                                  */ 00460000
//* THIS JCL STREAM ESTABLISHES AN OPERATING DFSMSHSM ENVIRONMENT    */ 00470000
//* FOR A NEW USER OF DFSMSHSM OPERATING IN AN SMS ENVIRONMENT, OR   */ 00480000
//* FOR A USER WHO WANTS TO RUN THE FUNCTIONAL VERIFICATION          */ 00490000
//* PROCEDURE (FVP) IN AN ENVIRONMENT THAT IS SEPARATE FROM THE      */ 00500000
//* PRODUCTION ENVIRONMENT.  THE FVP IS FOUND IN ARCFVPST.           */ 00510000
//*                                                                  */ 00520000
//* EDIT THIS JCL FOR YOUR PROCESSING ENVIRONMENT.                   */ 00530000
//*                                                                  */ 00540000
//* YOU CAN DECREASE IMPLEMENTATION TIME BY MAKING GLOBAL CHANGES    */ 00550000
//* TO THE FOLLOWING PARAMETERS.  YOU MAY HAVE TO MAKE OTHER CHANGES */ 00560000
//* AS IDENTIFIED IN THE COMMENTS EMBEDDED IN THE JCL.               */ 00570000
//*                                                                  */ 00580000
//* IF YOU ALLOCATED SMS-MANAGED DATA SETS ON SPECIFIC VOLUMES,      */ 00590000
//* ENSURE THAT YOU ASSOCIATE THOSE DATA SETS WITH THE GUARANTEED    */ 00600000
//* SPACE ATTRIBUTE IN THEIR STORAGE CLASS DEFINITION.               */ 00610000
//*                                                                  */ 00620000
//* WE RECOMMEND THAT YOU DEFINE ALL DFSMSHSM DATA SETS WITH THE     */ 00630000
//* GUARANTEED-SPACE ATTRIBUTE IN THEIR STORAGE CLASS DEFINITIONS.   */ 00640000
//*                                                                  */ 00650000
//* WE RECOMMENDED THAT YOU DEFINE ALL DFSMSHSM DATA SETS WITH THE   */ 00660000
//* NO-MIGRATE AND NO-BACKUP ATTRIBUTES IN THEIR MANAGEMENT CLASS    */ 00670000
//* DEFINITIONS.  YOU CAN PREVENT DFSMSHSM DATA SETS FROM MIGRATING  */ 00680000
//* OR BEING BACKED UP BY ASSIGNING THEM TO THE DBSTNDRD MANAGEMENT  */ 00690000
//* CLASS.                                                           */ 00700000
//*                                                                  */ 00710000
//* WE RECOMMEND THAT YOU DEFINE THE LOG AND JOURNAL DATA SETS WITH  */ 00720000
//* A STORAGE CLASS DEFINITION FOR LOGGING OR FOR AUDIT TRAIL DATA   */ 00730000
//* SETS BY DEFINING THEM WITH THE STORAGE CLASS DBLOG.              */ 00740000
//*                                                                  */ 00750000
//* WE RECOMMEND THAT YOU DEFINE THE DFSMSHSM CONTROL DATA SETS WITH */ 00760000
//* A STORAGE CLASS DEFINITION THAT PROVIDES FAST RESPONSE BY        */ 00770000
//* DEFINING THEM WITH THE STORAGE CLASS DBENHANC.                   */ 00780000
//*                                                                  */ 00790000
//* THE SMS CONSTRUCTS (STORAGE CLASSES, STORAGE GROUPS, MANAGEMENT  */ 00800000
//* CLASSES, AND DATA CLASSES) ARE DISCUSSED IN THE STORAGE          */ 00810000
//* ADMINISTRATION GUIDE FOR DFSMSDFP.                               */ 00820000
//********************************************************************/ 00830000
//*                                                                  */ 00840000
//* CHANGE THE FOLLOWING PARAMETERS FOR YOUR PROCESSING ENVIRONMENT. */ 00850000
//*                                                                  */ 00860000
//********************************************************************/ 00870000
//*  PARAMETER     PARAMETER DEFINITION                                 00880000
//*                                                                     00890000
//*  ?MCDSVOL   -  VOLUME SERIAL NUMBER OF THE MCDS VOLUME              00900000
//*  ?MCDSUNT   -  UNIT TYPE FOR MCDS VOLUME                            00910000
//*  ?BCDSVOL   -  VOLUME SERIAL NUMBER OF THE BCDS VOLUME              00920000
//*  ?BCDSUNT   -  UNIT TYPE FOR BCDS VOLUME                            00930000
//*  ?OCDSVOL   -  VOLUME SERIAL NUMBER OF THE OCDS VOLUME              00940000
//*  ?OCDSUNT   -  UNIT TYPE FOR OCDS VOLUME                            00950000
//*  ?CDSSIZE   -  NUMBER OF CYLINDERS TO INITIALLY ALLOCATE FOR ANY    00960000
//*                CONTROL DATA SET                                     00970000
//*  ?JRNLVOL   -  VOLUME SERIAL NUMBER OF THE JOURNAL                  00980000
//*  ?JRNLUNT   -  UNIT TYPE FOR JOURNAL VOLUME                         00990000
//*  ?LOGVOL    -  VOLUME SERIAL NUMBER OF THE LOG VOLUME               01000000
//*  ?LOGUNIT   -  UNIT TYPE FOR LOG VOLUME                             01010000
//*  ?TRACEVOL  -  VOLUME SERIAL NUMBER OF THE PROBLEM DETERMINATION    01020000
//*                AID VOLUME                                           01030000
//*  ?TRACEUNIT -  UNIT TYPE FOR THE PROBLEM DETERMINATION AID VOLUME   01040000
//*  ?UCATNAM   -  NAME OF THE USER CATALOG FOR THE DFSMSHSM DATA SETS. 01050000
//*  ?UCATVOL   -  VOLUME SERIAL NUMBER OF THE USER CATALOG VOLUME      01060000
//*  ?UCATUNT   -  UNIT TYPE FOR USER CATALOG VOLUME                    01070000
//*  ?CTLAUTH   -  THE USER ID THAT CAN ISSUE DFSMSHSM AUTH COMMANDS    01080000
//*                (YOUR CONTROL-AUTHORIZED USER ID)                    01090000
//*  ?UID       -  AUTHORIZED USER ID (1 - 7 CHARACTERS) FOR THE        01100000
//*                DFSMSHSM-STARTED PROCEDURE IN A NON-FACILITY CLASS   01110000
//*                ENVIRONMENT (SEE NOTE BELOW).  THIS IS THE           01120000
//*                HIGH-LEVEL QUALIFIER FOR DFSMSHSM DATA SETS.         01130000
//*  ?JESVER    -  THE JOB ENTRY SUBSYSTEM (JES); EITHER JES2 OR JES3   01140000
//*  ?JOBPARM   -  JOB CARD PARAMETERS                                  01150000
//*  ?SCLOGNM   -  STORAGE CLASS FOR DFSMSHSM LOG AND JOURNAL           01160000
//*  ?SCCDSNM   -  STORAGE CLASS NAME FOR DFSMSHSM CONTROL DATA SETS    01170000
//*  ?MCDFHSM   -  MANAGEMENT CLASS NAME FOR DFSMSHSM DATA SETS         01180000
//*  ?HOSTID    -  PROCESSING UNIT ID FOR THE PROBLEM DETERMINATION     01190000
//*                AID FACILITY AND FOR IDENTIFYING THE HOST TO         01200000
//*                DFSMSHSM                                             01210000
//*  ?PRIMARY   -  YES OR NO; DEFINES WHETHER OR NOT THE DFSMSHSM       01220000
//*                HOST PERFORMS AS A PRIMARY HOST                      01230000
//*  ?NEW       -  EXTENSION OF CDS NAME FOR IMPORT (HSMPRESS)          01240000
//* (NOTE: UID AUTHORIZATION IS VALID IN A NON-FACILITY CLASS           01250000
//* ENVIRONMENT ONLY, OTHERWISE, FACILITY CLASS PROFILES WILL BE        01260000
//* USED FOR AUTHORIZATION CHECKING.)                                   01270000
//*******************************************************************/  01280000
//*                                                                     01290000
//IDCAMS EXEC PGM=IDCAMS                                                01300000
//*                                                                     01310000
//*******************************************************************/  01320000
//*  ENSURE THAT DFSMSHSM CONTROL DATA SETS, THE JOURNAL, AND ANY   */  01330000
//*  CONTROL DATA SET BACKUP COPIES ARE ON DIFFERENT VOLUMES FROM   */  01340000
//*  EACH OTHER.                                                    */  01350000
//*                                                                 */  01360000
//*  GIVE USERS WRITE ACCESS TO VSAM DATA SETS BY DEFINING VSAM     */  01370000
//*  DATA SETS WITH A SHAREOPTION OF (3 3).  IT IS THE USER'S       */  01380000
//*  RESPONSIBILITY TO PROTECT THE CONTROL DATA SETS AGAINST        */  01390000
//*  UNAUTHORIZED ACCESS.                                           */  01400000
//*                                                                 */  01410000
//*******************************************************************/  01420000
//*                                                                     01430000
//HSMMCDS  DD UNIT=?MCDSUNT,VOL=SER=?MCDSVOL,DISP=SHR                   01440000
//HSMCAT   DD UNIT=?UCATUNT,DISP=SHR,VOL=SER=?UCATVOL                   01450000
//*                                                                     01460000
//*******************************************************************/  01470000
//* REMOVE THE NEXT DD STATEMENT IF YOU DO NOT INTEND TO USE BACKUP */  01480000
//* AND DUMP.                                                       */  01490000
//*******************************************************************/  01500000
//*                                                                     01510000
//HSMBCDS  DD UNIT=?BCDSUNT,VOL=SER=?BCDSVOL,DISP=SHR                   01520000
//*                                                                     01530000
//*******************************************************************/  01540000
//* REMOVE THE NEXT DD STATEMENT IF YOU DO NOT INTEND TO USE TAPE   */  01550000
//* VOLUMES FOR DAILY BACKUP VOLUMES, SPILL BACKUP VOLUMES, OR      */  01560000
//* MIGRATION LEVEL 2 VOLUMES.                                      */  01570000
//*******************************************************************/  01580000
//*                                                                     01590000
//HSMOCDS  DD UNIT=?OCDSUNT,VOL=SER=?OCDSVOL,DISP=SHR                   01600000
//*                                                                     01610000
//SYSIN    DD *                                                         01620000
 /*                                                                 */  01630000
 /*******************************************************************/  01640000
 /* THIS JOB ALLOCATES AN INTEGRATED CATALOG FACILITY (ICF) CATALOG */  01650000
 /* AND ITS ASSOCIATED ALIAS "?UID".                                */  01660000
 /*                                                                 */  01670000
 /*  ****** INTEGRATED CATALOG FACILITY CATALOG REQUIRED *******    */  01680000
 /*                                                                 */  01690000
 /* THIS JOB ALLOCATES A USER CATALOG FOR THE DFSMSHSM CONTROL DATA */  01700000
 /* SETS (CDS). SEE THE SECTION "DFSMSHSM DATA SETS" IN THE         */  01710000
 /* DFSMSHSM IMPLEMENTATION AND CUSTOMIZATION GUIDE.                */  01720000
 /*******************************************************************/  01730000
 /*                                                                 */  01740000
  DEFINE UCAT(NAME(?UCATNAM) -                                          01750000
         CYLINDERS(1 1) VOLUME(?UCATVOL) -                              01760000
         FILE(HSMCAT) FREESPACE(10 10) -                                01770000
         RECORDSIZE(4086 4086) -                                        01780000
         ICFCATALOG)                                                    01790000
  IF MAXCC = 0 THEN DO                                                  01800000
    DEFINE  ALIAS(NAME(?UID) RELATE(?UCATNAM))                          01810000
  END                                                                   01820000
 /*                                                              */     01830000
 /****************************************************************/     01840000
 /*  THIS PROCEDURE ASSUMES A SINGLE CLUSTER MCDS.  IF MORE THAN */     01850000
 /*  ONE VOLUME IS DESIRED, FOLLOW THE RULES FOR A MULTICLUSTER  */     01860000
 /*  CDS.                                                        */     01870000
 /****************************************************************/     01880000
 /*                                                              */     01890000
 IF MAXCC = 0 THEN DO                                                   01900000
   DEFINE CLUSTER (NAME(?UID.MCDS) VOLUMES(?MCDSVOL) -                  01910000
        CYLINDERS(?CDSSIZE) FILE(HSMMCDS) -                             01920000
        STORCLAS(?SCCDSNM) -                                            01930000
        MGMTCLAS(?MCDFHSM) -                                            01940000
        RECORDSIZE(435 2040) FREESPACE(0 0) -                           01950000
        INDEXED KEYS(44 0) SHAREOPTIONS(3 3) -                          01960000
        SPEED BUFFERSPACE(530432) -                                     01970000
        UNIQUE NOWRITECHECK) -                                          01980000
        DATA(NAME(?UID.MCDS.DATA) -                                     01990000
        CONTROLINTERVALSIZE(12288)) -                                   02000000
        INDEX(NAME(?UID.MCDS.INDEX) -                                   02010000
        CONTROLINTERVALSIZE(2048))                                      02020000
 END                                                                    02030000
 /*                                                              */     02040000
 /****************************************************************/     02050000
 /* REMOVE THE NEXT DEFINE COMMAND IF YOU DO NOT                 */     02060000
 /* INTEND TO USE BACKUP, DUMP OR AGGREGATE BACKUP AND RECOVERY. */     02070000
 /*                                                              */     02080000
 /* THIS PROCEDURE ASSUMES A SINGLE CLUSTER BCDS.  IF MORE THAN  */     02090000
 /* ONE VOLUME IS DESIRED, FOLLOW THE RULES FOR A MULTICLUSTER   */     02100000
 /* CDS.                                                         */     02110000
 /*                                                              */     02120000
 /* IT'S RECOMMENDED THAT YOU SHOULD SPECIFY RECORDSIZE(334 2093)*/     02130000
 /* AND CISIZE(12288) WHEN CREATING UP TO 29 BACKUP VERSIONS     */     02140000
 /* OR RECORDSIZE(334 6544) AND CISIZE(12288) IF UP TO           */     02150000
 /* 100 BACKUP VERSIONS WILL BE KEPT OR IF FAST REPLICATION IS   */     02160000
 /* BEING USED (FRBACKUP).                                       */     02170000
 /*                                                              */     02180000
 /****************************************************************/     02190000
 /*                                                              */     02200000
 IF MAXCC = 0 THEN DO                                                   02210000
   DEFINE CLUSTER (NAME(?UID.BCDS) VOLUMES(?BCDSVOL) -                  02220000
        CYLINDERS(?CDSSIZE) FILE(HSMBCDS) -                             02230000
        STORCLAS(?SCCDSNM) -                                            02240000
        MGMTCLAS(?MCDFHSM) -                                            02250000
        RECORDSIZE(334 6544) FREESPACE(0 0) -                           02260000
        INDEXED KEYS(44 0) SHAREOPTIONS(3 3) -                          02270000
        SPEED BUFFERSPACE(530432) -                                     02280000
        UNIQUE NOWRITECHECK) -                                          02290000
        DATA(NAME(?UID.BCDS.DATA) -                                     02300000
        CONTROLINTERVALSIZE(12288)) -                                   02310000
        INDEX(NAME(?UID.BCDS.INDEX) -                                   02320000
        CONTROLINTERVALSIZE(2048))                                      02330000
 END                                                                    02340000
 /*                                                                     02350000
 /****************************************************************/     02360000
 /* REMOVE THE NEXT DEFINE COMMAND IF YOU DO NOT                 */     02370000
 /* INTEND TO USE TAPES FOR DAILY BACKUP, SPILL BACKUP, OR       */     02380000
 /* MIGRATION LEVEL 2 PROCESSING.                                */     02390000
 /*                                                              */     02400000
 /*                                                              */     02410000
 /* IT IS RECOMMENDED THAT YOU SPECIFY                           */     02420000
 /*   RECORDSIZE(1800 2040) WHEN NOT USING EXTENDED TTOCS AND    */     02430000
 /*   RECORDSIZE(1080 6144) WHEN USING EXTENDED TTOCS.           */     02440000
 /*                                                              */     02450000
 /* NOTE: YOU CAN ONLY USE EXTENDED TTOCS IF ALL OF YOUR         */     02460000
 /* DFSMSHSM HOSTS ARE AT Z/OS DFSMSHSM V1R7 OR LATER.           */     02470000
 /*                                                              */     02480000
 /* THE OCDS MAY NOT EXCEED 1 VOLUME.                            */     02490000
 /****************************************************************/     02500000
 /*                                                                     02510000
 IF MAXCC = 0 THEN DO                                                   02520000
   DEFINE CLUSTER (NAME(?UID.OCDS) VOLUMES(?OCDSVOL) -                  02530000
        CYLINDERS(?CDSSIZE) FILE(HSMOCDS) -                             02540000
        STORCLAS(?SCCDSNM) -                                            02550000
        MGMTCLAS(?MCDFHSM) -                                            02560000
        RECORDSIZE(1800 2040) FREESPACE(0 0) -                          02570000
        INDEXED KEYS(44 0) SHAREOPTIONS(3 3) -                          02580000
        SPEED BUFFERSPACE(530432) -                                     02590000
        UNIQUE NOWRITECHECK) -                                          02600000
        DATA(NAME(?UID.OCDS.DATA) -                                     02610000
        CONTROLINTERVALSIZE(12288)) -                                   02620000
        INDEX(NAME(?UID.OCDS.INDEX) -                                   02630000
        CONTROLINTERVALSIZE(2048))                                      02640000
 END                                                                    02650000
//SYSPRINT DD SYSOUT=*                                                  02660000
//*                                                                     02670000
//****************************************************************/     02680000
//*  ALLOCATE AND CATALOG THE DFSMSHSM LOG, EDIT LOG, AND JOURNAL*/     02690000
//*  ON AN "SMS" VOLUME.                                         */     02700000
//*  HSMLOGX, HSMLOGY, EDITLOG MUST NOT HAVE DCB INFORMATION à02A*/     02710000
//*  SPECIFIED AS HSM WILL ASSIGN THESE WHEN THE DATA SETS   à02A*/     02720000
//*  ARE OPENED.                                             à02A*/     02730000
//****************************************************************/     02740000
//*                                                                     02750000
//LOGALC   EXEC PGM=IEFBR14                                             02760000
//HSMLOGX  DD DSN=?UID.HSMLOGX1,DISP=(,CATLG),UNIT=?LOGUNIT,            02770000
//   VOL=SER=?LOGVOL,SPACE=(CYL,(3)),STORCLAS=?SCLOGNM,                 02780000
//   MGMTCLAS=?MCDFHSM                                                  02790000
//HSMLOGY  DD DSN=?UID.HSMLOGY1,DISP=(,CATLG),UNIT=?LOGUNIT,            02800000
//   VOL=SER=?LOGVOL,SPACE=(CYL,(3)),STORCLAS=?SCLOGNM,                 02810000
//   MGMTCLAS=?MCDFHSM                                                  02820000
//EDITLOG  DD DSN=?UID.EDITLOG,DISP=(,CATLG),UNIT=?LOGUNIT,             02830000
//   VOL=SER=?LOGVOL,SPACE=(CYL,(2)),STORCLAS=?SCLOGNM,                 02840000
//   MGMTCLAS=?MCDFHSM                                                  02850000
//*                                                                     02860000
//****************************************************************/     02870000
//*  THE JOURNAL MUST NOT EXCEED 1 VOLUME, MAY NOT HAVE          */     02880000
//*  SECONDARY ALLOCATION, AND MUST BE ALLOCATED CONTIGUOUS.     */     02890000
//****************************************************************/     02900000
//*                                                                     02910000
//JOURNAL DD DSN=?UID.JRNL,DISP=(,CATLG),UNIT=?JRNLUNT,                 02920000
//   VOL=SER=?JRNLVOL,SPACE=(CYL,(5),,CONTIG),STORCLAS=?SCLOGNM,        02930000
//   MGMTCLAS=?MCDFHSM                                                  02940000
//*                                                                     02950000
//****************************************************************/     02960000
//*  ALLOCATE THE PROBLEM DETERMINATION AID (PDA) LOG ON "SMS"   */     02970000
//*  OR ON 'NONSMS' VOLUME.  USE THE JCL BELOW FOR NONSMS        */     02980000
//*  OR ADJUST THE BELOW TO MATCH THE JCL ABOVE FOR THE LOG      */     02990000
//*  BY ADDING STORCLAS AND MGMTCLASS.                           */     03000000
//*  REMOVE THE NEXT TWO DD CARDS IF YOU DO NOT PLAN TO USE PDA. */     03010000
//****************************************************************/     03020000
//*                                                                     03030000
//ARCPDOX  DD DSN=?UID.HSMPDOX,DISP=(,CATLG),VOL=SER=?TRACEVOL,         03040000
//         UNIT=?TRACEUNIT,SPACE=(CYL,(20,2))                           03050000
//ARCPDOY  DD DSN=?UID.HSMPDOY,DISP=(,CATLG),VOL=SER=?TRACEVOL,         03060000
//         UNIT=?TRACEUNIT,SPACE=(CYL,(20,2))                           03070000
//HSMPROC  EXEC PGM=IEBUPDTE,PARM=NEW                                   03080000
//SYSPRINT DD SYSOUT=*                                                  03090000
//SYSUT2   DD DSN=SYS1.PROCLIB,DISP=SHR                                 03100000
//SYSIN    DD DATA,DLM='$A'                                             03110000
./ ADD NAME=DFSMSHSM                                                    03120000
//*                                                                     03130000
//*******************************************************************/  03140000
//*                    DFSMSHSM START PROCEDURE                     */  03150000
//*                                                                 */  03160000
//* YOU CAN DUPLICATE AND RENAME THE FOLLOWING PROCEDURE FOR OTHER  */  03170000
//* PROCESSORS IN A MULTIPLE-PROCESSING-UNIT ENVIRONMENT.           */  03180000
//* ENSURE THAT YOU CHANGE THE CMD= AND HOST= KEYWORDS              */  03190000
//* ENSURE THAT YOU CHANGE THE HIGH-LEVEL QUALIFIER FOR THE         */  03200000
//* ARCLOGX AND ARCLOGY DATA SET NAMES.                             */  03210000
//* KEYWORD DEFINITIONS:                                            */  03220000
//*    CMD=00                 SPECIFY WHICH PARMLIB COMMAND MEMBER  */  03230000
//*    STR=xx                 REPLACE xx WITH LAST TWO CHARACTERS   */  03240000
//*                           OF THE SYS1.PARMLIB(ARCSTRxx)         */  03250000
//*                           MEMBER THAT YOU CREATE PRIOR TO       */  03260000
//*                           STARTING DFSMSHSM                     */  03270000
//*    EMERG=YES!NO           START HSM IN EMERGENCY MODE           */  03280000
//*    SIZE=0M                REGION SIZE FOR DFSMSHSM              */  03290000
//*    LOGSW=YES!NO           SWITCH LOGS AT STARTUP                */  03300000
//*    STARTUP=YES!NO         STARTUP INFO PRINT AT STARTUP         */  03310000
//*    PDA=YES!NO             BEGIN PDA TRACING AT STARTUP          */  03320000
//*    HOST=X                 SPECIFY HOSTID                        */  03330000
//*    PRIMARY=YES!NO         SPECIFY PRIMARY HOST                  */  03340000
//*    HOSTMODE=MAIN!AUX      INDICATE IF THIS IS A MAIN OR AUX HOST*/  03350000
//*    DDD=50                 MAX DYNAMICALLY ALLOCATED DATASETS    */  03360000
//*    RNAMEDSN=YES!NO        USE EXTENDED RESOURCE NAMES           */  03370000
//*    CDSQ=YES!NO            SERIALIZE CDSs WITH GLOBAL ENQUEUES   */  03380000
//*    CDSR=YES!NO            SERIALIZE CDSs WITH VOLUME RESERVES   */  03390000
//*    CDSSHR=YES!NO!RLS      SPECIFY CDS SHARABILITY               */  03400000
//*    RESTART=(A,B)          RESTART DFSMSHSM AFTER ABEND          */  03410000
//*    CELLS=(200,100,100,50,20)  SIZES OF CELLPOOLS                */  03420000
//*    UID=HSM                DFSMSHSM-AUTHORIZED USER ID.  ALSO    */  03430000
//*                           USED FOR HLQ OF HSM DATASETS BUT NOT  */  03440000
//*                           REQUIRED.                             */  03450000
//*******************************************************************/  03460000
//* IF ALL OF THE DFSMSHSM STARTUP PROCEDURE KEYWORDS ARE NEEDED,   */  03470000
//* TOTAL LENGTH WILL EXCEED THE 100-BYTE LIMIT, IN WHICH CASE      */  03480000
//* YOU SHOULD USE THE KEYWORD STR=XX IN PARM= TO IDENTIFY THE      */  03490000
//* PARMLIB MEMBER CONTAINING THE ADDITIONAL KEYWORDS AND PARMS.    */  03500000
//*******************************************************************/  03510000
//DFSMSHSM   PROC CMD=00,     USE PARMLIB MEMBER ARCCMD00 FOR CMDS      03520000
//           STR=00,          PARMLIB MEMBER FOR STARTUP PARMS          03530000
//           EMERG=NO,        SETS HSM INTO NON-EMERGENCY MODE          03540000
//           CDSQ=YES,        CDSs SERIALIZED WITH ENQUEUES             03550000
//           PDA=YES,         PROBLEM DETERMINATION AID                 03560000
//           SIZE=0M,         REGION SIZE FOR DFSMSHSM                  03570000
//           DDD=50,          MAX DYNAMICALLY ALLOCATED DATASETS        03580000
//           HOST=?HOSTID,    PROC.UNIT ID AND LEVEL FUNCTIONS          03590000
//           PRIMARY=?PRIMARY LEVEL FUNCTIONS                           03600000
//*******************************************************************/  03610000
//DFSMSHSM  EXEC PGM=ARCCTL,DYNAMNBR=&DDD,REGION=&SIZE,TIME=1440,       03620000
//          PARM=('EMERG=&EMERG','CMD=&CMD','CDSQ=&CDSQ',               03630000
//          'UID=?UID','PDA=&PDA','HOST=&HOST','STR=&STR',              03640000
//          'PRIMARY=&PRIMARY')                                         03650000
//*****************************************************************/    03660000
//*   HSMPARM DD must be deleted from the JCL or made into a      */    03670000
//*       a comment to use Concatenated Parmlib Support           */    03680000
//*****************************************************************/    03690000
//HSMPARM  DD DSN=SYS1.PARMLIB,DISP=SHR                                 03700000
//MSYSOUT  DD SYSOUT=A                                                  03710000
//MSYSIN   DD DUMMY                                                     03720000
//SYSPRINT DD SYSOUT=A,FREE=CLOSE                                       03730000
//SYSUDUMP DD SYSOUT=A                                                  03740000
//*                                                                     03750000
//*****************************************************************/    03760000
//* THIS PROCEDURE ASSUMES A SINGLE CLUSTER MCDS.  IF MORE THAN   */    03770000
//* ONE VOLUME IS DESIRED, FOLLOW THE RULES FOR A MULTICLUSTER    */    03780000
//* CDS.                                                          */    03790000
//*****************************************************************/    03800000
//*                                                                     03810000
//MIGCAT   DD DSN=?UID.MCDS,DISP=SHR                                    03820000
//JOURNAL  DD DSN=?UID.JRNL,DISP=SHR                                    03830000
//ARCLOGX  DD DSN=?UID.HSMLOGX1,DISP=OLD                                03840000
//ARCLOGY  DD DSN=?UID.HSMLOGY1,DISP=OLD                                03850000
//ARCPDOX  DD DSN=?UID.HSMPDOX,DISP=OLD                                 03860000
//ARCPDOY  DD DSN=?UID.HSMPDOY,DISP=OLD                                 03870000
//*                                                                     03880000
//*****************************************************************/    03890000
//* REMOVE THE NEXT DD STATEMENT IF YOU DO NOT INTEND TO USE      */    03900000
//* BACKUP AND DUMP.                                              */    03910000
//*                                                               */    03920000
//* THIS PROCEDURE ASSUMES A SINGLE CLUSTER BCDS.  IF MORE THAN   */    03930000
//* ONE VOLUME IS DESIRED, FOLLOW THE RULES FOR A MULTICLUSTER    */    03940000
//* CDS.                                                          */    03950000
//*****************************************************************/    03960000
//*                                                                     03970000
//BAKCAT   DD DSN=?UID.BCDS,DISP=SHR                                    03980000
//*                                                                     03990000
//*****************************************************************/    04000000
//* REMOVE THE NEXT DD STATEMENT IF YOU DO NOT INTEND TO USE TAPES*/    04010000
//* FOR DAILY BACKUP, SPILL BACKUP OR MIGRATION LEVEL 2           */    04020000
//* PROCESSING.                                                   */    04030000
//*                                                               */    04040000
//* THE OCDS MAY NOT EXCEED 1 VOLUME.                             */    04050000
//*****************************************************************/    04060000
//*                                                                     04070000
//OFFCAT   DD DSN=?UID.OCDS,DISP=SHR                                    04080000
./ ADD NAME=DFHSMABR                                                    04090000
//*                                                                     04100000
//*****************************************************************/    04110000
//*     ABARS SECONDARY ADDRESS SPACE STARTUP PROCEDURE           */    04120000
//*****************************************************************/    04130000
//*                                                                     04140000
//DFHSMABR PROC                                                         04150000
//DFHSMABR EXEC PGM=ARCWCTL,REGION=0M                                   04160000
//SYSUDUMP DD SYSOUT=A                                                  04170000
//MSYSIN DD DUMMY                                                       04180000
//MSYSOUT DD SYSOUT=A                                                   04190000
$A                                                                      04200000
//HSMPROC  EXEC PGM=IEBUPDTE,PARM=NEW                                   04210000
//SYSPRINT DD SYSOUT=*                                                  04220000
//SYSUT2   DD DSN=SYS1.PARMLIB,DISP=SHR                                 04230000
//SYSIN    DD DATA,DLM='$A'                                             04240000
./ ADD NAME=ARCCMD00                                                    04250000
 /*****************************************************************/    04260000
 /*              DFSMSHSM STARTUP COMMAND MEMBER                  */    04270000
 /*              WITH ONLY LEVEL 1 MIGRATION                      */    04280000
 /*****************************************************************/    04290000
 /*****************************************************************/    04300000
 /*             DFSMSHSM AUTOMATIC FUNCTIONS                      */    04310000
 /*                                                               */    04320000
 /* *********** AUTOBACKUPSTART,  AUTODUMPSTART, ******************/    04330000
 /* ********** AUTOMATIC PRIMARY SPACE MANAGEMENT, ****************/    04340000
 /* ********* AUTOMATIC SECONDARY SPACE MANAGEMENT. ***************/    04350000
 /*                                                               */    04360000
 /* THE AUTOMATIC DFSMSHSM FUNCTIONS SPECIFIED IN THE FOLLOWING   */    04370000
 /* SETSYS COMMANDS CONTAIN ZEROS FOR START, LATE START, AND      */    04380000
 /* TIMES. THUS, NO AUTOMATIC FUNCTIONS ARE ACTIVATED WHEN        */    04390000
 /* DFSMSHSM IS STARTED ON YOUR SYSTEM. TO ACTIVATE AUTOMATIC     */    04400000
 /* FUNCTIONS, CHANGES THE TIMES TO VALUES THAT ARE APPROPRIATE   */    04410000
 /* FOR YOUR SYSTEM.                                              */    04420000
 /*****************************************************************/    04430000
 /*****************************************************************/    04440000
 /*              DFSMSHSM SYSTEM SPECIFICATIONS                   */    04450000
 /*****************************************************************/    04460000
 /*                                                               */    04470000
 AUTH ?CTLAUTH               /* ESTABLISH THE USER ID THAT CAN    */ -  04480000
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.              */    04490000
                                                                        04500000
 /*****************************************************************/    04510000
 /* NOTE: BY DEFAULT, JES3 SUPPORT IS NOT ENABLED FOR DFSMShsm    */    04520000
 /* HOSTS DEFINED USING HOSTMODE=AUX. CONTACT IBM SUPPORT IF YOU  */    04530000
 /* REQUIRE JES3 SUPPORT FOR AUX DFSMShsm HOSTS. WHEN JES3 FOR    */    04540000
 /* DFSMShsm HOSTS IS ENABLED, YOU SHOULD START THE MAIN DFSMShsm */    04550000
 /* HOST BEFORE STARTING ANY AUX HOSTS AND STOP ALL AUX HOSTS     */    04560000
 /* BEFORE STOPPING THE MAIN HOST.                                */    04570000
 /*****************************************************************/    04580000
                                                                        04590000
 SETSYS ?JESVER              /* JOB ENTRY SUBSYSTEM ID.           */    04600000
                                                                        04610000
 SETSYS                      /* DO NOT REBLOCK DATA SETS DURING   */ -  04620000
   NOCONVERSION              /* RECALL OR RECOVERY.               */    04630000
                                                                        04640000
 SETSYS                      /* DO NOT ASK OPERATOR PERMISSION TO */ -  04650000
   NOREQUEST                 /* START AUTOMATIC FUNCTIONS         */    04660000
                                                                        04670000
 SETSYS                      /* DO NOT MOVE OR DELETE DATA WHEN   */ -  04680000
   NODEBUG                   /* PERFORMING AUTO FUNCTIONS.        */    04690000
                                                                        04700000
 SETSYS NOSWAP               /* RUN DFSMSHSM NONSWAPPABLE.        */    04710000
                                                                        04720000
 SETSYS                      /* DFSMSHSM USES IT OWN FACILITIES   */ -  04730000
   DFHSMDATASETSERIALIZATION /* TO SERIALIZE DATA SETS.           */    04740000
                                                                        04750000
 SETSYS                      /* DFSMSHSM USES ITS DEFINED OPTIMUM */ -  04760000
   OPTIMUMDASDBLOCKING       /* BLOCK SIZE WHEN MOVING DATA TO    */    04770000
                             /* DFSMSHSM-OWNED DASD.              */    04780000
 SETSYS                      /* DO NOT USE CMS OF ML1,ML2 AND     */ -  04790000
   USECYLINDERMANAGEDSPACE(N) /* BACKUP EAVS                      */    04800000
 /*****************************************************************/    04810000
 /*                   DFSMSHSM EXITS                              */    04820000
 /*****************************************************************/    04830000
 /*                   NONE ACTIVATED                              */    04840000
 /*****************************************************************/    04850000
 /*  DFSMSHSM LOGGING, JOURNALING, AND REPORTING OPTIONS          */    04860000
 /*****************************************************************/    04870000
 /*                                                               */    04880000
                                                                        04890000
 SETSYS                      /* WRITE CDS CHANGES TO JOURNAL      */ -  04900000
   JOURNAL(RECOVERY)         /* IMMEDIATELY.                      */    04910000
                                                                        04920000
 SETSYS                      /* WRITE DAILY STATISTICS RECORDS AND*/ -  04930000
   SMF(240)                  /* VOLUME STATISTIC RECORDS TO SMF   */    04940000
                             /* RECORD TYPE 240; WRITE FUNCTIONAL */    04950000
                             /* STATISTIC RECORDS TO TYPE 241.    */    04960000
                                                                        04970000
 SETSYS                      /* WRITE ONE COPY OF SYSOUT TO       */ -  04980000
   SYSOUT(A 1)               /* PRINTER CLASS A                   */    04990000
                                                                        05000000
 SETSYS                      /* WRITE DFSMSHSM DUMPS TO SYSTEM    */ -  05010000
   SYS1DUMP                  /* DUMP DATA SET.                    */    05020000
                                                                        05030000
 SETSYS                      /* LOG ALL POSSIBLE DFSMSHSM ACTIVITY*/ -  05040000
   ACTLOGMSGLVL(FULL)                                                   05050000
                                                                        05060000
 SETSYS                      /* WRITE ACTIVITY LOG INFORMATION TO */ -  05070000
   ACTLOGTYPE(SYSOUT)        /* THE SYSOUT CLASS SPECIFIED BY THE */    05080000
                             /* SYSOUT PARAMETER.                 */    05090000
 /*                                                               */    05100000
 /*****************************************************************/    05110000
 /*                   DFSMSHSM MONITOR OPTIONS                    */    05120000
 /*****************************************************************/    05130000
 /*                                                               */    05140000
                             /* SPECIFY WHICH INFORMATIONAL       */    05150000
                             /* MESSAGES TO SEND TO THE OPERATOR  */    05160000
                             /* CONSOLE.                          */    05170000
                                                                        05180000
 SETSYS                      /* LIST STARTUP PARAMETERS. DO NOT   */ -  05190000
   MONITOR(STARTUP NOVOLUME) /* SEND DATA SET LEVEL MESSAGES TO   */    05200000
                             /* THE SYSTEM CONSOLE.               */    05210000
                                                                        05220000
 SETSYS                      /* DO NOT PRINT SPACE USAGE MSGS.    */ -  05230000
   MONITOR(NOSPACE           /* WARN WHEN JOURNAL IS 80% FULL     */ -  05240000
         JOURNAL(80))        /*                                   */    05250000
                                                                        05260000
 /*                                                               */    05270000
 /*****************************************************************/    05280000
 /*         DFSMSHSM COMMON SERVICE AREA LIMITING OPTIONS         */    05290000
 /* THE FOLLOWING CSALIMITS PARAMETERS ARE IGNORED IF             */    05300000
 /* HOSTMODE=AUX HAS BEEN SPECIFIED AND WILL GENERATE AN ARC0103I */    05310000
 /* MESSAGE IF ISSUED.                                            */    05320000
 /*****************************************************************/    05330000
 /*                                                               */    05340000
                                                                        05350000
 SETSYS                      /* LIMIT DFSMSHSM'S USAGE OF COMMON  */ -  05360000
   CSALIMITS(MWE(4))         /* SEVICE AREA STORAGE. KEEP A       */    05370000
                             /* MAXIMUM OF 4 NOWAIT TYPE MWES PER */    05380000
                             /* ADDRESS SPACE ON THE CSA QUEUE.   */    05390000
                                                                        05400000
 SETSYS                      /* NEVER ALLOCATE MORE THEN 100K OF  */ -  05410000
   CSALIMITS(MAXIMUM(100)    /* STORAGE FOR MWES. ALLOCATE 90% OF */ -  05420000
               ACTIVE(90)    /* AVAILABLE STORAGE TO MWES WHEN    */ -  05430000
               INACTIVE(30)) /* DFSMSHSM IS ACTIVE. ALLOCATE ONLY */    05440000
                             /* 30% OF AVAILABLE STORAGE WHEN     */    05450000
                             /* DFSMSHSM IS INACTIVE.             */    05460000
 /*                                                               */    05470000
 /*****************************************************************/    05480000
 /*               DFSMSHSM TAPE HANDLING SPECIFICATIONS           */    05490000
 /*****************************************************************/    05500000
 /*                                                               */    05510000
                                                                        05520000
 SETSYS                      /* SPECIFY IF EXTENDED TTOCS         */ -  05530000
   EXTENDEDTTOC(N)           /* ARE IN USE                        */    05540000
                                                                        05550000
 SETSYS                      /* USE IMPROVED DATA RECORDING       */ -  05560000
   TAPEHARDWARECOMPACT       /* CAPABILITY WHEN 3480X OR NEWER    */    05570000
                             /* THE OUTPUT DEVICE.                */    05580000
                                                                        05590000
 SETSYS                      /* REUSE TAPES THAT ARE PARTIALLY    */ -  05600000
   PARTIALTAPE(              /* FULL. DO NOT MARK THEM AS FULL.   */ -  05610000
    BACKUP(REUSE) -                                                     05620000
    MIGRATION(REUSE))                                                   05630000
                                                                        05640000
 SETSYS                         /* DO NOT SUSPEND SYSTEM ACTIVITY */ -  05650000
   INPUTTAPEALLOCATION(NOWAIT)  /* (WAIT) WHILE INPUT, OUTPUT, OR */ -  05660000
   OUTPUTTAPEALLOCATION(NOWAIT) /* RECYCLE TAPES ARE BEING        */ -  05670000
   RECYCLETAPEALLOCATION(NOWAIT) /* ALLOCATED.                    */    05680000
                                                                        05690000
 SETSYS                      /* SCRATCH TAPE SELECTION AT TAPE END*/ -  05700000
   SELECTVOLUME(             /* OF VOLUME (EOV) IF FROM THE GLOBAL*/ -  05710000
   BACKUP(SCRATCH)           /* IS FROM THE GLOBAL SCRATCH POOL.  */ -  05720000
   MIGRATION(SCRATCH) -                                                 05730000
   DUMP(SCRATCH))                                                       05740000
                                                                        05750000
 SETSYS                      /* INFORM THE STORAGE ADMINISTRATOR  */ -  05760000
   RECYCLEPERCENT(20)        /* THAT A BACKUP OR MIGRATION TAPE   */    05770000
                             /* SHOULD BE RECYCLED WHEN THE AMOUNT*/    05780000
                             /* OF TAPE THAT IS OCCUPIED BY VALID */    05790000
                             /* DATA IS 20% OR LESS.              */    05800000
                                                                        05810000
 /*****************************************************************/    05820000
 /*  IF USERUNITTABLE IS SPECIFIED, IT SHOULD BE CODED PRIOR TO   */    05830000
 /*  ASSIGNMENT OF ANY OTHER UNIT STATEMENT.                      */    05840000
 /*****************************************************************/    05850000
                                                                        05860000
 SETSYS                      /* NO ESOTERIC TAPE DEVICE NAMES ARE */ -  05870000
   NOUSERUNITTABLE           /* DEFINED TO DFSMSHSM.              */    05880000
                                                                        05890000
 SETSYS                      /* UTILIZE 97% OF TAPE CARTRIDGE     */ -  05900000
   TAPEUTILIZATION(                                                  -  05910000
    UNITTYPE(3590-1) PERCENTFUL(97))                                    05920000
                                                                        05930000
 SETSYS                      /* THE AMOUNT OF SPACE THAT MAY NOT  */ -  05940000
   TAPESPANSIZE(100)         /* BE UTILIZED AT THE LOGICAL END OF */    05950000
                             /* A TAPE CARTRIDGE.                 */    05960000
                                                                        05970000
 SETSYS                      /* RETURN TAPES THAT NO LONGER       */ -  05980000
   TAPEDELETION(             /* CONTAIN VALID DATA TO THE         */ -  05990000
    BACKUP(SCRATCHTAPE)      /* GLOBAL SCRATCH POOL.              */ -  06000000
    MIGRATION(SCRATCHTAPE) -                                            06010000
    DUMP(SCRATCHTAPE))                                                  06020000
                                                                        06030000
 SETSYS                      /* WAIT TEN MINUTES BEFORE REISSUING */ -  06040000
   MOUNTWAITTIME(10)         /* ADDITIONAL MESSAGES TO TAPE       */    06050000
                             /* OPERATORS FOR TAPE MOUNTS.        */    06060000
                                                                        06070000
 SETSYS                      /* DIREST DFSMSHSM TO INITIALLY      */ -  06080000
   UNITNAME(3590-1)          /* SPECIFY A 3590-1 DEVICE FOR       */    06090000
                             /* BACKUP OR DUMP SCRATCH TAPES.     */    06100000
                                                                        06110000
 SETSYS                      /* TAPE OPERATOR MESSAGES            */ -  06120000
   TAPEINPUTPROMPT(MIGRATIONTAPES(YES))                                 06130000
                                                                        06140000
 SETSYS                      /* TAPE OPERATOR MESSAGES            */ -  06150000
   TAPEINPUTPROMPT(BACKUPTAPES(YES))                                    06160000
                                                                        06170000
 SETSYS                      /* TAPE OPERATOR MESSAGES            */ -  06180000
   TAPEINPUTPROMPT(DUMPTAPES(YES))                                      06190000
                                                                        06200000
 SETSYS                      /* TURN ON TAPE DUPLEXING FOR BACKUP */ -  06210000
   DUPLEX(                   /* AND MIGRATION. DURING MIGRATION   */ -  06220000
    BACKUP(                  /* AND BACKUP DUPLEXING IF ERRORS ARE*/ -  06230000
     Y ERRORALTERNATE(       /* ENCOUNTERED ON THE ALTERNATE TAPE */ -  06240000
      CONTINUE(TAPECOPY)))   /* THEN PROCESSING OF THE ORIGINAL   */ -  06250000
    MIGRATION(               /* WILL CONTINUE. TAPECOPY IS        */ -  06260000
     Y ERRORALTERNATE(       /* IMMEDIATLY ATTEMPTED.             */ -  06270000
      CONTINUE(TAPECOPY))))                                             06280000
                                                                        06290000
                             /* NUMBER OF ML2 PARTIALS LEFT AFTER */    06300000
 SETSYS                      /* RECYCLE                           */ -  06310000
   ML2PARTIALSNOTASSOCIATEDGOAL(10)                                     06320000
                                                                        06330000
 /*                                                               */    06340000
 /*****************************************************************/    06350000
 /*             DFSMSHSM CONTROL DATA SET BACKUP PARAMETERS       */    06360000
 /*****************************************************************/    06370000
 /*                                                               */    06380000
                                                                        06390000
 SETSYS                      /* MAINTAIN FOUR BACKUP VERSIONS     */ -  06400000
   CDSVERSIONBACKUP(         /* OF THE CONTROL DATA SETS. BACK    */ -  06410000
      BACKUPCOPIES(4)        /* UP THE CONTROL DATA SETS TO       */ -  06420000
      BACKUPDEVICECATEGORY(  /* 3590-1 DEVICES IN PARALLEL USING  */ -  06430000
        TAPE(UNITNAME(3590-1) /* USING DSS AS THE DATAMOVER       */ -  06440000
        PARALLEL))  -                                                   06450000
      DATAMOVER(DSS))                                                   06460000
                                                                        06470000
 /*                                                               */    06480000
 /*****************************************************************/    06490000
 /*                DFSMSHSM RACF SPECIFICATIONS                   */    06500000
 /*****************************************************************/    06510000
 /*                                                               */    06520000
                                                                        06530000
 SETSYS                      /* DO NOT PUT RACF-INDICATION        */ -  06540000
   NORACFIND                 /* ON BACKUP AND MIGRATION           */    06550000
                             /* COPIES OF DATA SETS.              */    06560000
                                                                        06570000
 SETSYS                      /* USE RACF TO PROVIDE TAPE          */ -  06580000
   TAPESECURITY(RACF)        /* SECURITY.                         */    06590000
                                                                        06600000
 SETSYS                      /* DO NOT ALLOW ERASE-ON-SCRATCH     */ -  06610000
   NOERASEONSCRATCH          /* ON ANY DFSMSHSM BACKUP            */    06620000
                             /* VERSIONS AND MIGRATION COPIES     */    06630000
                                                                        06640000
 SETSYS                      /* BACKUP DISCRETE RACF PROFILES     */ -  06650000
   PROFILEBACKUP                                                        06660000
                                                                        06670000
 /*                                                               */    06680000
 /*****************************************************************/    06690000
 /*                DFSMSHSM COMPACTION OPTIONS                    */    06700000
 /*****************************************************************/    06710000
 /*                                                               */    06720000
                                                                        06730000
 SETSYS                      /* COMPACT DATA SETS THAT MIGRATE TO */ -  06740000
   COMPACT(DASDMIGRATE)      /* DASD.                             */    06750000
                                                                        06760000
 SETSYS                      /* DO NOT COMPACT DATA UNLESS A      */ -  06770000
     COMPACTPERCENT(20)      /* SAVINGS OF 20% OR MORE CAN BE     */    06780000
                             /* GAINED.                           */    06790000
                                                                        06800000
 SETSYS -                                                               06810000
   OBJECTNAMES(OBJ,OBJECT,LOAD,LOADLIB,LOADMODS,LINKLIB) -              06820000
   SOURCENAMES(ASM,COBOL,FORT,PLI,SOURCE,SRC,SRCLIB,SRCE,CNTL,JCL)      06830000
                                                                        06840000
 /*                                                               */    06850000
 /*****************************************************************/    06860000
 /*              DFSMSHSM MIGRATION PARAMETERS                    */    06870000
 /*****************************************************************/    06880000
 /*                                                               */    06890000
                                                                        06900000
 SETSYS                      /* DO NOT ALLOW DFSMSHSM TO MIGRATE  */ -  06910000
   TAPEMIGRATION(NONE)       /* DATA SETS TO LEVEL 2 TAPE VOLUMES.*/    06920000
                                                                        06930000
 SETSYS                      /* SPECIFY PROCESSING WINDOW FOR     */ -  06940000
   PRIMARYSPMGMTSTART        /* PRIMARY SPACE MANAGEMENT (LEVEL 0 */ -  06950000
   (0000 0000)               /* TO LEVEL 1 MIGRATION              */    06960000
                                                                        06970000
 DEFINE                      /* RUN PRIMARY SPACE MGMT EVERY      */ -  06980000
   PRIMARYSPMGMTCYCLE        /* DAY, STARTING MARCH 02, 1998      */ -  06990000
   (YYYYYYY -                                                           07000000
   CYCLESTARTDATE(1998/03/02))                                          07010000
                                                                        07020000
 SETSYS                      /* A DATA SET THAT HAS NOT BEEN      */ -  07030000
   DAYS(10)                  /* REFERRED TO (OPENED) FOR 10 DAYS  */    07040000
                             /* IS ELIGIBLE FOR MIGRATION         */    07050000
                                                                        07060000
 SETSYS                      /* SPECIFY A HIGH-LEVEL QUALIFIER    */ -  07070000
   MIGRATEPREFIX(?UID)       /* WITH WHICH DFSMSHSM RENAMES       */    07080000
                             /* MIGRATED DATA SETS.               */    07090000
                                                                        07100000
 SETSYS                      /* DO NOT PERFORM INTERVAL MIGRATION */ -  07110000
   NOINTERVALMIGRATION       /* THROUGHOUT THE DAY.               */    07120000
                                                                        07130000
 SETSYS                      /* PERFORM ON-DEMAND MIGRATION ON    */ -  07140000
   ONDEMANDMIGRATION(Y)      /* SMS VOLUMES IN STORAGE GROUPS     */    07150000
                             /* WITH THE ATTRIBUTE AUTOMIGRATE=Y  */    07160000
                                                                        07170000
 SETSYS                      /* SPECIFY NOTIFICATION LIMIT FOR    */ -  07180000
   ODMNOTIFICATIONLIMIT(250) /* ON-DEMAND MIGRATION (250)         */    07190000
                                                                        07200000
 SETSYS                       /* SPECIFY PROCESSING WINDOW FOR    */ -  07210000
   SECONDARYSPMGMTSTART(0000) /* SECONDARY SPACE MANAGEMENT       */    07220000
                              /* (LEVEL 1 TO LEVEL 2 MIGRATION)   */    07230000
                                                                        07240000
 DEFINE                      /* RUN SECONDARY SPACE MANAGEMENT    */ -  07250000
   SECONDARYSPMGMTCYCLE      /* EVERY DAY,                        */ -  07260000
   (YYYYYYY                  /* STARTING MARCH 02, 1998.          */ -  07270000
   CYCLESTARTDATE(1998/03/02))                                          07280000
                                                                        07290000
 SETSYS                      /* KEEP MCDS RECORDS FOR RECALLED    */ -  07300000
   MIGRATIONCLEANUPDAYS(10 30 3)  /* DATA SETS FOR 10 DAYS. KEEP  */    07310000
                             /* VOLUME OR DAILY STATISTICS RECORDS*/    07320000
                             /* FOR 30 DAYS. KEEP RECORDS TO      */    07330000
                             /* RECONNECTABLE DATA SETS 3 DAYS    */    07340000
                             /* BEYOND EARLIEST ELIGIBILITY.      */    07350000
                                                                        07360000
 SETSYS                      /* MIGRATE DATA SETS FROM LEVEL 1    */ -  07370000
   MIGRATIONLEVEL1DAYS(45)   /* VOLUMES TO LEVEL 2 VOLUMES IF THE */    07380000
                             /* DATA SETS HAVE NOT BEEN REFERRED  */    07390000
                             /* TO FOR 45 DAYS.                   */    07400000
                                                                        07410000
 SETSYS                      /* DATA SET EXTENT REDUCTION         */ -  07420000
   MAXEXTENTS(10)            /* OCCURS WHEN EXTENTS REACH 10.     */    07430000
                                                                        07440000
 SETSYS                      /* LIMIT THE NUMBER OF CONCURRENT    */ -  07450000
   MAXRECALLTASKS(8)         /* DFSMSHSM RECALL TASKS TO EIGHT.   */    07460000
                                                                        07470000
                                                                        07480000
 SETSYS                      /* DIRECT DFSMSHSM TO RECALL DATA    */ -  07490000
   RECALL(PRIVATEVOLUME(LIKE))/* SETS TO ONLINE VOLUMES WITH THE  */    07500000
                             /* USE ATTRIBUTE OF PUBLIC, STORAGE, */    07510000
                             /* OR PRIVATE AND WITH LIKE          */    07520000
                             /* CHARACTERISTICS.                  */    07530000
                                                                        07540000
 SETSYS                      /* RETAIN LIST DATA SETS FOR 7 DAYS. */ -  07550000
   SCRATCHFREQUENCY(7)       /* DO NOT SCRATCH EXPIRED DATA SETS. */ -  07560000
   EXPIREDDATASETS(NOSCRATCH)                                           07570000
                                                                        07580000
 SETSYS                      /* DO NOT MIGRATE SMALL DATA SETS AS */ -  07590000
   NOSMALLDATASETPACKING     /* RECORDS TO SMALL DATA SET PACKING */    07600000
                             /* (SDSP) DATA SETS.                 */    07610000
                                                                        07620000
 SETSYS                      /* LIMIT THE NUMBER OF CONCURRENT    */ -  07630000
   MAXMIGRATIONTASKS(3)      /* AUTOMATIC VOLUME MIGRATION TASKS  */    07640000
                             /* TO THREE.                         */    07650000
                                                                        07660000
 SETSYS                      /* LIMIT THE NUMBER OF CONCURRENT    */ -  07670000
   MAXSSMTASKS               /* AUTOMATIC SECONDARY SPACE         */ -  07680000
     (CLEANUP(2)             /* MANAGEMENT CLEANUP TASKS TO TWO   */ -  07690000
      TAPEMOVEMENT(1)        /* AND TAPEMOVEMENT TASKS TO ONE     */ -  07700000
      EMPTYCONTAINERDELETION(1)) /* NUMBER OF CLOUD STORAGE       */ -  07710000
                                 /* CONTAINERS PROCESSING TASKS.  */    07720000
                                                                        07730000
 SETSYS                      /* ACTIVATE THE NEW PSM EARLIER      */ -  07740000
   MIGRATEPSMEARLY(YES)      /* CHECKING OPTION.                  */    07750000
                                                                        07760000
 SETSYS                      /* CLOUD MIGRATION DURING            */ -  07770000
   MIGRATIONAUTOCLOUD        /* AUTOMATIC MIGRATION PARAMETERS    */ -  07780000
   (NOCLOUD                  /* NO CLOUD MIGRATION                */ -  07790000
    SELECTIONTHRESHOLD(NNN)) /* MAXIMUM PERCENTAGE OF DATA SETS   */ -  07800000
                             /* ON SOURCE VOLUME ELIGIBLE FOR     */ -  07810000
                             /* CLOUD MIGRATION WHEN CEC THREAD   */ -  07820000
                             /* IS RESERVED ON DATA SET LEVEL.    */    07830000
                                                                        07840000
 SETSYS                      /* CREATE A SET OF HOSTS THAT HAVE   */ -  07850000
   STORAGEGROUPAFFINITY      /* AFFINITY TO PROCESS A STORAGE     */ -  07860000
   (SYSTEM1,SYSTEM2,..)      /* GROUP.                            */    07870000
                                                                        07880000
 /*                                                               */    07890000
 /*****************************************************************/    07900000
 /*                DFSMSHSM BACKUP PARAMETERS                     */    07910000
 /*****************************************************************/    07920000
 /*                                                               */    07930000
                                                                        07940000
 ONLYIF                      /* THE FOLLOWING DEFINE COMMAND WILL */ -  07950000
   HSMHOST(?HOSTID)          /* EXECUTE ONLY IF THE ACTIVE HOST ID*/ -  07960000
                             /* MATCHES THE HOST SPECIFIED.       */    07970000
                                                                     -  07980000
 DEFINE BACKUP(Y 1           /* DIRECT DFSMSHSM TO BACKUP ELIGIBLE*/ -  07990000
   CYCLESTARTDATE(1998/03/02)) /* DATA SETS DAILY (A 1 DAY CYCLE) */    08000000
                             /* TO A SINGLE BACKUP VOLUME,STARTING*/    08010000
                             /* MARCH 02, 1998.                   */    08020000
                                                                        08030000
 SETSYS DSBACKUP(DASDSELECTIONSIZE(3000 250)  DASD(TASKS(2))         -  08040000
   TAPE(TASKS(2) DEMOUNTDELAY(MINUTES(60)  MAXIDLETASKS(0))))           08050000
                             /* BALANCE THE WORKLOAD BETWEEN TAPE */    08060000
                             /* AND DASD FOR WAIT TYPE BACKDS     */    08070000
                             /* COMMANDS. LIMIT THE NUMBER OF DATA*/    08080000
                             /* SET BACKUP TAPE AND DASD TASKS.   */    08090000
                             /* LIMIT THE NUMBER AND LENGTH OF    */    08100000
                             /* TIME A TAPE TASK CAN REMAIN IDLE  */    08110000
                             /* BEFORE BEING DEMOUNTED.           */    08120000
                                                                        08130000
 SETSYS                      /* ACTIVATE THE BACKUP AND DUMP      */ -  08140000
   BACKUP                    /* FUNCTION OF DFSMSHSM              */    08150000
                                                                        08160000
 ONLYIF                      /* THE FOLLOWING SETSYS COMMAND WILL */ -  08170000
   HSMHOST(?HOSTID)          /* EXECUTE ONLY IF THE ACTIVE HOST ID*/ -  08180000
                             /* MATCHES THE HOST SPECIFIED.       */    08190000
                                                                        08200000
 SETSYS -                                                               08210000
   AUTOBACKUPSTART(0000 0000 0000)                                      08220000
                             /* SPECIFY THE TIME FOR AUTOMATIC    */    08230000
                             /* BACKUP TO BEGIN, THE LATEST START */    08240000
                             /* TIME THAT AUTOMATIC BACKUP CAN    */    08250000
                             /* BEGIN, AND THE QUIESCE TIME FOR   */    08260000
                             /* AUTOMATIC BACKUP. NO AUTOMATIC    */    08270000
                             /* BACKUP OCCURS UNTIL THESE TIMES   */    08280000
                             /* ARE SPECIFIED.                    */    08290000
                                                                        08300000
 SETSYS                      /* SPECIFY A HIGH-LEVEL QUALIFIER    */ -  08310000
   BACKUPPREFIX(?UID)        /* WITH WHICH DFSMSHSM RENAMES BACKED*/    08320000
                             /* UP DATA SETS                      */    08330000
                                                                        08340000
 SETSYS                      /* KEEP ONE VERSION OF EACH BACKED UP*/ -  08350000
   VERSIONS(1)               /* DATA SET.                         */ -  08360000
   FREQUENCY(0)                                                         08370000
                                                                        08380000
 SETSYS                      /* LIMIT THE NUMBER OF CONCURRENT    */ -  08390000
   MAXBACKUPTASKS(3)         /* BACKUP TASKS TO THREE, BACK UP ALL*/ -  08400000
   NOSKIPABPRIMARY           /* DFSMSHSM-MANAGED VOLUMES THAT HAVE*/    08410000
                             /* THE AUTO BACKUP ATTRIBUTE.        */    08420000
                                                                        08430000
 SETSYS                      /* LIMIT THE NUMBER OF CONCURRENT    */ -  08440000
   MAXDSRECOVERTASKS(3)      /* DFSMSHSM DATA SET RECOVER TASKS   */    08450000
                             /* TO THREE                          */    08460000
                                                                        08470000
 SETSYS                      /* DURING DAILY BACKUP, MOVE         */ -  08480000
   SPILL                     /* DATA SETS FROM FULL DAILY         */    08490000
                             /* DASD VOLUMES TO SPILL VOLUMES.    */    08500000
                                                                        08510000
 SETSYS                      /* MAKE INITIAL BACKUP COPIES OF DATA*/ -  08520000
   INCREMENTALBACKUP(ORIGINAL) /* SETS DESPITE THE SETTING OF THE */    08530000
                             /* CHANGE BIT.                       */    08540000
                                                                        08550000
 SETSYS                      /* CREATE DEFAULT VSAM COMPONENT     */ -  08560000
    DSBACKUP                 /* NAMES WHEN PROCESSING AN (H)BACKDS*/ -  08570000
    (GENVSAMCOMPNAMES(YES))  /* COMMAND AND THE DATA SET BEING    */    08580000
                             /* BACKED UP IS VSAM AND THE NEWNAME */    08590000
                             /* DATA SET IS UNCATALOGED OR        */    08600000
                             /* MIGRATED                          */    08610000
                                                                        08620000
 /*                                                               */    08630000
 /*****************************************************************/    08640000
 /*            DFSMSHSM FULL VOLUME DUMP PARAMETERS               */    08650000
 /*****************************************************************/    08660000
 /*                                                               */    08670000
                                                                        08680000
 ONLYIF                      /* THE DEFINE COMMAND WILL EXECUTE IF*/ -  08690000
   HSMHOST(?HOSTID)          /* THE ACTIVE HOST ID = ?HOSTID      */    08700000
 DEFINE -                                                               08710000
   DUMPCYCLE(NNNNNNY         /* 7-DAY DUMP CYCLE WITH DUMP DONE   */ -  08720000
    CYCLESTARTDATE(1998/03/02)) /* ONLY ON THE SEVENTH DAY,       */    08730000
                             /* STARTING ON MONDAY MARCH 02, 1998,*/    08740000
                             /* SO DUMPS OCCUR ON SUNDAY.         */    08750000
                                                                        08760000
 DEFINE DUMPCLASS(SUNDAY DAY(7) -                                       08770000
   RETPD(27) AUTOREUSE NORESET  -                                       08780000
   DATASETRESTORE VTOCCOPIES(4))                                        08790000
                             /* DEFINE A DUMP CLASS NAMED SUNDAY  */    08800000
                             /* THAT IS AUTOMATICALLY DUMPED ON   */    08810000
                             /* THE SEVENTH DAY OF THE CYCLE.     */    08820000
                             /* EACH DUMP COPY IS HELD FOR 27 DAYS*/    08830000
                             /* AND THE TAPE IS REUSED WHEN IT IS */    08840000
                             /* SCRATCHED. DO NOT RESET DATA SET  */    08850000
                             /* CHANGE BITS. ALLOW TSO USERS TO   */    08860000
                             /* RESTORE DATA SETS FROM DUMP TAPE. */    08870000
                             /* AT MOST, KEEP FOUR VTOC COPY DUMP */    08880000
                             /* DATA SETS FOR EACH VOLUME.        */    08890000
                                                                        08900000
 DEFINE DUMPCLASS(QUARTERS   /* DEFINE A DUMP CLASS NAMED QUARTERS*/ -  08910000
   FREQUENCY(90) RETPD(356)  /* THAT IS AUTOMATICALLY DUMPED EVERY*/ -  08920000
   NOAUTOREUSE               /* THREE MONTHS AND IS HELD FOR ONE  */ -  08930000
   NODATASETRESTORE NORESET  /* WEEK LESS THEN A YEAR. USE IS FOR */ -  08940000
   DISPOSITION('OFF-SITE')   /* ONLY FULL RESTORES. HOLD THE TAPE */ -  08950000
   VTOCCOPIES(0))            /* OFF-SITE AND KEEP NO VTOC COPIES  */    08960000
                             /* FOR THIS CLASS.                   */    08970000
                                                                        08980000
 SETSYS -                                                               08990000
   AUTODUMPSTART(0000 0000 0000)                                        09000000
                             /* SPECIFY THE TIME FOR AUTOMATIC    */    09010000
                             /* DUMP TO BEGIN, THE LATEST START   */    09020000
                             /* THAT AUTOMATIC DUMP CAN BEGIN,    */    09030000
                             /* AND THE QUIESCE TIME FOR AUTOMATIC*/    09040000
                             /* DUMP. NO AUTOMATIC DUMP OCCURS    */    09050000
                             /* UNTIL THESE TIMES ARE SPECIFIED.  */    09060000
                                                                        09070000
 SETSYS                      /* BUFFER FIVE TRACKS WHEN PERFORMING*/ -  09080000
   DUMPIO(3,2)               /* A DUMP. BUFFER TWO TRACKS DURING  */    09090000
                             /* DATA MOVEMENT.                    */    09100000
                                                                        09110000
 SETSYS                      /* LIMIT THE NUMBER OF CONCURRENT    */ -  09120000
   MAXDUMPTASKS(3)           /* DUMP TASK TO THREE.               */    09130000
                                                                        09140000
/*                                                                */    09150000
/******************************************************************/    09160000
/*      DFSMSHSM AGGREGATE BACKUP AND RECOVER PARAMETERS          */    09170000
 /* THE FOLLOWING ABARS PARAMETERS ARE IGNORED IF HOSTMODE=AUX    */    09180000
 /* HAS BEEN SPECIFIED AND WILL GENERATE AN ARC0103I MESSAGE IF   */    09190000
 /* ISSUED.                                                       */    09200000
 /*****************************************************************/    09210000
/*                                                                */    09220000
                                                                        09230000
SETSYS                       /* RECOVER DATA SET AGGREGATES TO    */ -  09240000
  ARECOVERUNITNAME(3590-1)   /* 3590-1 TAPE DEVICES.              */    09250000
                                                                        09260000
SETSYS                       /* START ONLY ONE SECONDARY ADDRESS  */ -  09270000
  MAXABARSADDRESSSPACE(1)    /* SPACE FOR BACKING UP AND          */    09280000
                             /* RECOVERING AGGREGATED DATA SETS   */    09290000
                                                                        09300000
SETSYS                       /* START THE SECONDARY ADDRESS       */ -  09310000
  ABARSPROCNAME(DFHSMABR)    /* SPACE WITH THE STARTUP PROCEDURE  */    09320000
                             /* NAMED DFHSMABR.                   */    09330000
                                                                        09340000
SETSYS                       /* WRITE THE ABARS ACTIVITY LOG TO   */ -  09350000
  ABARSACTLOGTYPE(DASD)      /* DASD                              */    09360000
                                                                        09370000
SETSYS                       /* LOG ALL ABARS MESSAGES            */ -  09380000
  ABARSACTLOGMSGLVL(FULL)                                               09390000
                                                                        09400000
SETSYS                       /* RECOVER ML2 DATA SETS TO TAPE.    */ -  09410000
  ARECOVERML2UNIT(3590-1)                                               09420000
                                                                        09430000
SETSYS                       /* USE 90% OF THE AVAILABLE TAPE FOR */ -  09440000
  ARECOVERPERCENTUTILIZED(090) /* ARECOVERY TAPES.                */    09450000
                                                                        09460000
SETSYS                       /* BACKUP AGGREGATES TO 3590-1       */ -  09470000
  ABARSUNITNAME(3590-1)      /* DEVICES.                                09480000
                                                                        09490000
SETSYS                       /* BACKUP ABARS DATA SETS WITH TWO   */ -  09500000
  ABARSBUFFERS(2)            /* DATA MOVEMENT BUFFERS.            */    09510000
                                                                        09520000
SETSYS                       /* SPECIFY ABARS TO STACK THE        */ -  09530000
  ABARSTAPES(STACK)          /* ABACKUP OUTPUT ONTO A MINIMUM     */    09540000
                             /* NUMBER OF TAPE VOLUMES            */    09550000
                                                                        09560000
SETSYS                       /* ABARS ACTIVITY LOG WILL NOT BE    */ -  09570000
  ABARSDELETEACTIVITY(N)     /* AUTOMATICALLY DELETED DURING      */    09580000
                             /* ABARS PROCESSING                  */    09590000
                                                                        09600000
SETSYS                       /* SET PERFORMANCE OF BACKING UP     */ -  09610000
  ABARSOPTIMIZE(3)           /* LEVEL 0 DASD DATASETS             */    09620000
                                                                        09630000
SETSYS                       /* TARGET DATASET IS TO BE ASSIGNED  */ -  09640000
  ARECOVERTGTGDS(SOURCE)     /* SOURCE STATUS                     */    09650000
                                                                        09660000
SETSYS                       /* ALLOWS RECOVERY OF A LEVEL 0      */ -  09670000
  ABARSVOLCOUNT(ANY)         /* DASD DATA SET UP TO 59 VOLUMES    */    09680000
 /*                                                               */    09690000
 /*****************************************************************/    09700000
 /*            DFSMSHSM HSMPLEX/SYSPLEX PARAMETERS                */    09710000
 /*****************************************************************/    09720000
 /*                                                               */    09730000
                                                                        09740000
SETSYS                       /* SPECIFY THE SUFFIX FOR THE        */ -  09750000
  PLEXNAME(PLEX0)            /* HSMPLEX IN A MULTI-HSMPLEX        */    09760000
                             /* ENVIRONMENT   ARC(SUFFIX)         */    09770000
                                                                        09780000
SETSYS                       /* SPECIFY HOST NOT TO TAKE OVER     */ -  09790000
  PROMOTE(PRIMARYHOST(NO)    /* PRIMARY OR SSM RESPONSIBILITIES   */ -  09800000
  SSM(NO))                                                              09810000
                                                                        09820000
 /*                                                               */    09830000
 /*****************************************************************/    09840000
 /* SEE MEMBER ARCCMD90 IN HSM.SAMPLE.CNTL FOR AN EXAMPLE OF THE  */    09850000
 /* ADDVOL COMMAND TO BE USED IN CONJUNCTION WITH THIS COMMAND    */    09860000
 /* STREAM.                                                       */    09870000
 /*****************************************************************/    09880000
$A                                                                      09890000
//HSMPROC  EXEC PGM=IEBUPDTE,PARM=NEW                                   09900000
//SYSPRINT DD SYSOUT=*                                                  09910000
//SYSUT2   DD DSN=SYS1.PARMLIB,DISP=SHR                                 09920000
//SYSIN    DD DATA,DLM='$A'                                             09930000
./ ADD NAME=ARCSTR00                                                    09940000
 /*****************************************************************/    09950000
 /*              DFSMSHSM ADDITIONAL STARTUP COMMAND MEMBER       */    09960000
 /*****************************************************************/    09970000
$A                                                                      09980000
$$                                                                      09990000
//HSMSTEP2 EXEC PGM=IEBUPDTE,PARM=NEW                                   10000000
//SYSPRINT DD SYSOUT=*                                                  10010000
//SYSUT2   DD DSN=HSM.SAMPLE.CNTL,                                      10020000
//            DISP=OLD                                                  10030000
//SYSIN    DD DATA,DLM='$$'                                             10040000
./ ADD NAME=ARCCMD90                                                    10050000
 /*                                                               */    10060000
 /*****************************************************************/    10070000
 /* THE FOLLOWING COMMANDS ARE AN EXAMPLE OF ADDVOL COMMANDS      */    10080000
 /* USED IN CONJUNCTION WITH THE ARCCMD00 COMPONENT OF THE        */    10090000
 /* STARTER SET.  THEY CAN BE COMPLETED BY ADDING VOLUME SERIAL   */    10100000
 /* NUMBERS AND UNIT TYPES IN THE SPACES PROVIDED.  THIS COMMAND  */    10110000
 /* STREAM CAN THEN BE APPENDED TO ARCCMD00.                      */    10120000
 /*                                                               */    10130000
 /* ADDVOL COMMANDS FOR PRIMARY AND MIGRATION LEVEL 1 VOLUMES     */    10140000
 /* MUST BE INCLUDED IN THE ARCCMD__ PARMLIB MEMBER FOR YOUR      */    10150000
 /* SYSTEM.  INDEED, THEY MUST BE IN THE ARCCMD__ WHEN RUNNING    */    10160000
 /* WITH JES3.                                                    */    10170000
 /*                                                               */    10180000
 /*****************************************************************/    10190000
 /*                                                               */    10200000
 ADDVOL ______               /* ADD A VOLUME (PROVIDE SERIAL) */ -      10210000
        UNIT(______)         /* WITH UNIT TYPE (PROVIDE TYPE) */ -      10220000
        PRIMARY              /* AS A PRIMARY VOLUME THAT IS A */ -      10230000
        (AUTOMIGRATION       /* CANDIDATE FOR AUTOMIGRATION.  */ -      10240000
         MIGRATE(7)          /* MIGRATE DATA SETS AFTER 7 DAYS*/ -      10250000
         AUTOBACKUP          /* CANDIDATE FOR AUTOBACKUP.     */ -      10260000
         BACKUPDEVICECATEGORY(TAPE) /* BACKED UP TO TAPE.     */ -      10270000
         AUTORECALL          /* DATA SETS CAN BE RECALLED TO  */ -      10280000
                             /* THIS VOLUME.                  */ -      10290000
         AUTODUMP(SUNDAY))   /* DUMP FULL VOLUME AS SPECIFIED */ -      10300000
                             /* BY THE SUNDAY DUMP CLASS.     */ -      10310000
        THRESHOLD(100 0)     /* NO INTERVAL MIGRATION         */        10320000
 ADDVOL ______               /* ADD A VOLUME (PROVIDE SERIAL) */ -      10330000
        UNIT(______)         /* WITH UNIT TYPE (PROVIDE TYPE) */ -      10340000
        MIGRATION            /* AS A MIGRATION LEVEL 1 VOLUME */ -      10350000
        (MIGRATIONLEVEL1     /* WITH NO SMALL DATA SET        */ -      10360000
         NOSMALLDATASETPACKING) /* PACKING AVAILABLE.         */ -      10370000
        THRESHOLD(100)       /* NO THRESHOLD PROCESSING.      */        10380000
/*                                                               */     10390000
/*****************************************************************/     10400000
/* YOU MAY REMOVE ADDVOL COMMANDS FOR VOLUMES OTHER THAN PRIMARY */     10410000
/* AND MIGRATION LEVEL 1 VOLUMES FROM ARCCMD__ IF YOU WANT TO    */     10420000
/* SAVE TIME DURING DFSMSHSM STARTUP.  THOSE ADDVOL COMMANDS ARE */     10430000
/* STORED IN THE CONTROL DATA SETS WHEN DFSMSHSM IS STARTED.     */     10440000
/*****************************************************************/     10450000
/*                                                               */     10460000
ADDVOL ______               /* ADD A VOLUME (PROVIDE SERIAL)  */ -      10470000
       UNIT(______)         /* WITH UNIT TYPE (PROVIDE TYPE)  */ -      10480000
       BACKUP               /* AS A DAILY BACKUP VOLUME FOR   */ -      10490000
       (DAILY)              /* AUTOMATIC BACKUP.              */ -      10500000
       THRESH(97)           /* SPILL CONTENTS UNTIL THIS      */ -      10510000
                            /* VOLUME IS 97% FULL.            */        10520000
                                                                        10530000
ADDVOL ______               /* ADD A VOLUME (PROVIDE SERIAL)  */ -      10540000
       UNIT(______)         /* WITH UNIT TYPE (PROVIDE TYPE)  */ -      10550000
       BACKUP               /* AS A SPILL BACKUP VOLUME THAT  */ -      10560000
       (SPILL)              /* IS CONSIDERED FULL AND         */ -      10570000
       THRESH(97)           /* UNUSABLE WHEN 97% FULL.        */        10580000
                                                                        10590000
ADDVOL ______               /* ADD A VOLUME (PROVIDE SERIAL)  */ -      10600000
       UNIT(______)         /* THAT IS A TAPE USED AS         */ -      10610000
       BACKUP(DAILY)        /* A DAILY BACKUP VOLUME.         */        10620000
                                                                        10630000
ADDVOL ______               /* ADD A VOLUME (PROVIDE SERIAL)  */ -      10640000
       DUMP                 /* USED FOR FULL VOLUME           */ -      10650000
       (DUMPCLASS(SUNDAY))  /* DUMP FOR SUNDAY CLASS.         */ -      10660000
       UNIT(______)         /* DUMPS MUST GO TO TAPE.         */        10670000
 /*                                                           */        10680000
./ ADD NAME=ARCCMD01                                                    10690000
 /****************************************************************/     10700000
 /*  DFSMSHSM STARTUP COMMAND MEMBER FOR LEVEL 2 TAPE MIGRATION  */     10710000
 /*                                                              */     10720000
 /*  APPEND THIS COMMAND STREAM TO ARCCMD00 TO PROVIDE LEVEL 2   */     10730000
 /*  TAPE MIGRATION                                              */     10740000
 /****************************************************************/     10750000
 /****************************************************************/     10760000
 /*          DFSMSHSM LEVEL 2 TAPE MIGRATION PARAMETERS          */     10770000
 /****************************************************************/     10780000
 /*                                                              */     10790000
                                                                        10800000
 SETSYS -                                                               10810000
   TAPEMIGRATION(ML2TAPE)    /* MIGRATE TO LEVEL 2 TAPE.         */     10820000
                                                                        10830000
 SETSYS -                                                               10840000
   MIGUNITNAME(3590-1)       /* START WITH 3590-1 ML2 TAPE       */     10850000
                             /* UNIT.                            */     10860000
 SETSYS -                                                               10870000
   ML2RECYCLEPERCENT(20)     /* LOG MESSAGE WHEN VALID DATA      */     10880000
                             /* ON AN ML2 TAPE FALLS BELOW       */     10890000
                             /* 20%.                             */     10900000
 SETSYS -                                                               10910000
   TAPEMAXRECALLTASKS(1)     /* ONE TAPE RECALL TASK AT A TIME   */     10920000
                                                                        10930000
 /*                                                              */     10940000
 /****************************************************************/     10950000
 /* SEE MEMBER ARCCMD91 IN HSM.SAMPLE.CNTL FOR AN EXAMPLE        */     10960000
 /* OF ADDVOL COMMANDS TO BE USED IN CONJUNCTION WITH LEVEL      */     10970000
 /* 2 TAPE MIGRATION.                                            */     10980000
 /****************************************************************/     10990000
 /*                                                              */     11000000
./ ADD NAME=ARCCMD91                                                    11010000
 /*                                                              */     11020000
 /****************************************************************/     11030000
 /* THE FOLLOWING EXAMPLE ADDVOL COMMANDS CAN BE USED WITH THE   */     11040000
 /* ARCCD00 MEMBER OF THE STARTER SET TO IDENTIFY LEVEL 2 TAPE   */     11050000
 /* MIGRATION VOLUMES.  AFTER YOU HAVE ADDED A VOLUME SERIAL     */     11060000
 /* NUMBER AND A UNIT TYPE IN THE SPACE PROVIDED, APPEND THIS    */     11070000
 /* COMMAND STREAM TO YOUR ARCCMD00 MEMBER.                      */     11080000
 /*                                                              */     11090000
 /****************************************************************/     11100000
 /*                                                              */     11110000
 ADDVOL ______               /* ADD A VOLUME (PROVIDE SERIAL)    */ -   11120000
        MIGRATION            /* AS A MIGRATION LEVEL 2 TAPE      */ -   11130000
         (MIGRATIONLEVEL2)   /* VOLUME.                          */ -   11140000
        UNIT(______)         /* PROVIDE PROPER UNIT TYPE.        */     11150000
 /*                                                              */     11160000
./ ADD NAME=HSMHELP                                                     11170000
)F Function:                                                            11180000
             The HSENDCMD command is used by authorized TSO users       11190000
             to communicate with the DFSMShsm functions.                11200000
)X SYNTAX:                                                              11210000
             HSENDCMD(WAIT ! NOWAIT) command                            11220000
                                                                        11230000
REQUIRED  -  command - You must enter a command.                        11240000
DEFAULTS  -  none                                                       11250000
ALIAS     -  none                                                       11260000
                                                                        11270000
)O OPERANDS:                                                            11280000
            'command' - specifies the DFSMShsm operator command.        11290000
DEFAULTS  -  none                                                       11300000
                                                                        11310000
The following is a list of all DFSMShsm commands except                 11320000
the user commands:                                                      11330000
                                                                        11340000
ABACKUP - Back up aggregated date sets                                  11350000
ADDVOL - Add or change the volumes to be controlled by DFSMShsm         11360000
ALTERDS - Change the backup specifications for a data set               11370000
ARECOVER - Recover aggregated date sets                                 11380000
AUDIT - Audit DFSMShsm                                                  11390000
AUTH - Authorize a TSO user for DFSMShsm commands                       11400000
BACKDS - Create a backup version of a data set                          11410000
BACKVOL - Create a backup version of all data sets on a volume or       11420000
          or on CDS                                                     11430000
BDELETE - Delete a backup version of a data set                         11440000
CANCEL - Cancel a queued DFSMShsm request                               11450000
DEFINE - Define control structures to DFSMShsm                          11460000
DELETE - Delete a data set that has been migrated                       11470000
DELVOL - Remove a volume from DFSMShsm control                          11480000
DISPLAY - Display DFSMShsm storage locations                            11490000
EXPIREBV - Delete unwanted backup versions of data sets                 11500000
FIXCDS - Repair a DFSMShsm control data set                             11510000
FRBACKUP - Create a fast replication backup of a copy pool              11520000
FRDELETE - Delete a backup version of a copy pool                       11530000
FREEVOL - Move migrated data sets from migration volumes,               11540000
          and backup data sets from backup volumes                      11550000
FRRECOV - Re-create a volume or copy pool from a backup version         11560000
HOLD - Suspend a DFSMShsm function                                      11570000
LIST - List information from the DFSMShsm control data sets             11580000
LOG - Enter data into the DFSMShsm Log                                  11590000
MIGRATE - Space manage a specific volume or migrate a data set          11600000
PATCH - Modify DFSMShsm storage locations                               11610000
QUERY - List the status of DFSMShsm parameters, statistics, requests    11620000
RECALL - Recall a data set                                              11630000
RECOVER - Re-create a data set or a volume from a backup version        11640000
RECYCLE - Move valid backup or migration copies from one tape           11650000
          to another                                                    11660000
RELEASE - Resume a DFSMShsm function                                    11670000
REPORT - Request reports based on DFSMShsm statistics                   11680000
SETMIG - Change the eligibility for migration of data sets              11690000
SETSYS - Define or change the DFSMShsm installation parameters          11700000
STOP - Stop the DFSMShsm system task                                    11710000
SWAPLOG - Switch the DFSMShsm log data sets                             11720000
TAPECOPY - Copy a DFSMShsm-owned migration or backup tape volume        11730000
           to an alternate volume                                       11740000
TAPEREPL - Replace a DFSMShsm-owned migration or backup tape volume     11750000
           with an alternate volume                                     11760000
TRAP - Request a dump when a specified error occurs                     11770000
UPDATEC - Apply the DFSMShsm journal to recover a control data set      11780000
The following list shows specific information about each command.       11790000
You could request the same information by typing HELP HSMHELP           11800000
OPERANDS(command).                                                      11810000
                                                                        11820000
))ABACKUP  agname                                                       11830000
           UNIT(unittype)                                               11840000
           EXECUTE ! VERIFY                                             11850000
           MOVE                                                         11860000
           FILTEROUTPUTDATASET(dsname)                                  11870000
           PROCESSONLY(LEVEL0 ! MIGRATIONLEVEL1 ! MIGRATIONLEVEL2 !     11880000
                       USERTAPE)                                        11890000
           STACK ! NOSTACK                                              11900000
           OPTIMIZE(1!2!3!4)                                            11910000
           SKIP(PPRC ! XRC ! NOPPRC ! NOXRC)                            11920000
           LIST(SKIPPED)                                                11930000
))ADDVOL   volser                                                       11940000
           BACKUP ! DUMP ! MIGRATION ! PRIMARY                          11950000
           UNIT(unittype)                                               11960000
               (AUTOBACKUP ! NOAUTOBACKUP)                              11970000
               (AUTODUMP(class,(class,class,class,class))!NOAUTODUMP)   11980000
               (AUTOMIGRATION ! NOAUTOMIGRATION)                        11990000
               (AUTORECALL ! NOAUTORECALL)                              12000000
               (BACKUPDEVICECATEGORY(TAPE ! DASD ! NONE))               12010000
               (DAILY(day) ! SPILL)                                     12020000
               (DELETEBYAGE(days) ! DELETEIFBACKEDUP(days) !            12030000
               MIGRATE(days))                                           12040000
               DENSITY(2!3!4)                                           12050000
               (DRAIN ! NODRAIN)                                        12060000
               (OVERFLOW ! NOOVERFLOW)                                  12070000
                                                                        12080000
               (DUMPCLASS(class))                                       12090000
               (MIGRATIONLEVEL1 ! MIGRATIONLEVEL2)                      12100000
               (SMALLDATASETPACKING ! NOSMALLDATASETPACKING)            12110000
               THRESHOLD(thresh1(thresh2))                              12120000
               TRACKMANAGEDTHRESHOLD(thresh1 thresh2)                   12130000
                                                                        12140000
))ALTERDS  (dsname...)                                                  12150000
                FREQUENCY(days) ! SYSFREQUENCY                          12160000
                VERSIONS(limit) ! SYSVERSIONS                           12170000
                                                                        12180000
))ARECOVER DATASETNAME(controlfiledsname) !                             12190000
               STACK ! NOSTACK                                          12200000
               VOLUMES(volser1 ... volsern) ! XMIT                      12210000
                   UNIT(unittype)                                       12220000
           AGGREGATE(agname)                                            12230000
               DATE(yyyy/mm/dd) ! VERSION(nnnn)                         12240000
           EXECUTE ! VERIFY ! PREPARE                                   12250000
               ACTVITY                                                  12260000
               DATASETCONFLICT                                          12270000
                (RENAMESOURCE(level) !                                  12280000
                 RENAMETARGET(level) !                                  12290000
                 BYPASS ! REPLACE)                                      12300000
               INSTRUCTION                                              12310000
               MENTITY(modeldsn)                                        12320000
               MIGRATEDDATA(ML1 ! ML2 ! SOURCELEVEL)                    12330000
               NOBACKUPMIGRATED                                         12340000
               ONLYDATASET                                              12350000
                (NAME(dsname) !                                         12360000
                 LISTOFNAMES(listdsname))                               12370000
               PERCENTUTILIZED(percent)                                 12380000
               RECOVERNEWNAMEALL(level)!                                12390000
                RECOVERNEWNAMELEVEL(olevel1,nlevel1, ...,)              12400000
               TARGETUNIT(unittype)                                     12410000
               TGTGDS(SOURCE ! ACTIVITY ! DEFERRED ! ROLLEDOFF)         12420000
               VOLCOUNT(ANY ! NONE)                                     12430000
                                                                        12440000
))AUDIT -  Command Variations:                                          12450000
                                                                        12460000
  AUDIT    ABARCONTROLS ! ABARSCONTROLS(agname)                         12470000
                                                                        12480000
  AUDIT    ALL                                                          12490000
                FIX ! NOFIX                                             12500000
                OUTDATASET(dsname) ! SYSOUT(class)                      12510000
                REPORT(ALL ! ERRORS)                                    12520000
                SERIALIZATION(CONTINUOUS)                               12530000
                                                                        12540000
  AUDIT    BACKUPTYPE(DAILY(day) ! SPILL ! ALL)                         12550000
                FIX ! NOFIX                                             12560000
                OUTDATASET(dsname) ! SYSOUT(class)                      12570000
                REPORT(ALL ! ERRORS)                                    12580000
                SERIALIZATION(CONTINUOUS)                               12590000
                                                                        12600000
  AUDIT    BACKUPCONTROLDATASET ! MIGRATIONCONTROLDATASET !             12610000
            OFFLINECONTROLDATASET(DAILY(day) ! ML2 ! SPILL ! ALL)       12620000
                FIX ! NOFIX                                             12630000
                OUTDATASET(dsname) ! SYSOUT(class) ! TERMINAL           12640000
                REPORT(ALL ! ERRORS)                                    12650000
                SERIALIZATION(CONTINUOUS)                               12660000
                                                                        12670000
  AUDIT    BACKUPVOLUMES(volser ...)                                    12680000
                FIX ! NOFIX                                             12690000
                OUTDATASET(dsname) ! SYSOUT(class) ! TERMINAL           12700000
                REPORT(ALL ! ERRORS)                                    12710000
                SERIALIZATION(CONTINUOUS)                               12720000
                                                                        12730000
  AUDIT    COMMONQUEUE(RECALL)                                          12740000
                FIX ! NOFIX                                             12750000
                                                                        12760000
  AUDIT    COPYPOOLCONTROLS                                             12770000
             (cpname)                                                   12780000
                                                                        12790000
  AUDIT    DATASETCONTROLS(MIGRATION ! BACKUP)                          12800000
                DATASETNAMES(dsname ...) ! LEVELS(qualifier ...) !      12810000
                RESUME                                                  12820000
                FIX ! NOFIX                                             12830000
                OUTDATASET(dsname) ! SYSOUT(class)                      12840000
                REPORT(ERRORS)                                          12850000
                SERIALIZATION(DYNAMIC ! CONTINUOUS)                     12860000
                                                                        12870000
  AUDIT    DATASETNAMES(dsname ...)                                     12880000
                FIX ! NOFIX                                             12890000
                OUTDATASET(dsname) ! SYSOUT(class) ! TERMINAL           12900000
                REPORT(ALL)                                             12910000
                SERIALIZATION(CONTINUOUS)                               12920000
                                                                        12930000
  AUDIT    DIRECTORYCONTROLS VOLUMES(volser)                            12940000
                FIX ! NOFIX                                             12950000
                OUTDATASET(dsname) ! SYSOUT(class)                      12960000
                REPORT(ERRORS)                                          12970000
                SERIALIZATION(DYNAMIC ! CONTINUOUS)                     12980000
                                                                        12990000
  AUDIT    LEVELS(qualifier ...)                                        13000000
                FIX ! NOFIX                                             13010000
                OUTDATASET(dsname) ! SYSOUT(class) ! TERMINAL           13020000
                REPORT(ALL ! ERRORS)                                    13030000
                SERIALIZATION(CONTINUOUS)                               13040000
                                                                        13050000
  AUDIT    MASTERCATALOG ! USERCATALOG(catname)                         13060000
                NOFIX                                                   13070000
                OUTDATASET(dsname) ! SYSOUT(class) ! TERMINAL           13080000
                REPORT(ALL ! ERRORS)                                    13090000
                SERIALIZATION(CONTINUOUS)                               13100000
                                                                        13110000
  AUDIT    MEDIACONTROLS(SMALLDATASETPACKING ! CLOUD(cldname))          13120000
           VOLUMES(volser)                                              13130000
                FIX ! NOFIX                                             13140000
                OUTDATASET(dsname) ! SYSOUT(class)                      13150000
                REPORT(ERRORS)                                          13160000
                SERIALIZATION(DYNAMIC ! CONTINUOUS)                     13170000
                                                                        13180000
  AUDIT    VOLUMES(volser ...)                                          13190000
                FIX ! NOFIX                                             13200000
                OUTDATASET(dsname) ! SYSOUT(class) ! TERMINAL           13210000
                REPORT(ALL ! ERRORS)                                    13220000
                SERIALIZATION(CONTINUOUS)                               13230000
                                                                        13240000
  AUDIT    VOLUMECONTROLS(BACKUP)                                       13250000
                VOLUMES(volser ...) ! BACKUPTYPE(DAILY(day)) !          13260000
                SPILL ! ALL                                             13270000
                FIX ! NOFIX                                             13280000
                OUTDATASET(dsname) ! SYSOUT(class)                      13290000
                REPORT(ERRORS)                                          13300000
                SERIALIZATION(DYNAMIC ! CONTINUOUS)                     13310000
                                                                        13320000
  AUDIT    VOLUMECONTROLS(MIGRATION ! RECOVERABLE)                      13330000
                VOLUMES(volser ...)                                     13340000
                FIX ! NOFIX                                             13350000
                OUTDATASET(dsname) ! SYSOUT(class)                      13360000
                REPORT(ERRORS)                                          13370000
                SERIALIZATION(DYNAMIC ! CONTINUOUS)                     13380000
                                                                        13390000
))AUTH     userid                                                       13400000
           DATABASEAUTHORITY(USER ! CONTROL) ! REVOKE                   13410000
                                                                        13420000
))BACKDS   dsname                                                       13430000
                NEWNAME(newdatasetname)                                 13440000
                  DATE(yyyy/mm/dd)                                      13450000
                    TIME(hhmmss)                                        13460000
                  SPHERE(YES ! NO)                                      13470000
                  GENVSAMCOMPNAMES(YES ! NO)                            13480000
                UNIT(unittype) VOLUME(volser)                           13490000
                TARGET(DASD ! TAPE)                                     13500000
                CC(PREFERRED ! STANDARD ! REQUIRED !                    13510000
                   VIRTUALPREFERRED ! VIRTUALREQUIRED !                 13520000
                   CACHEPREFERRED ! CACHEREQUIRED                       13530000
                     PHYSICALEND ! LOGICALEND)                          13540000
                RETAINDAYS(days)                                        13550000
                RECURSE(NOCROSSMOUNTS ! CROSSMOUNTS)                    13560000
                                                                        13570000
))BACKVOL  PRIMARY ! VOLUMES(volser...) ! STORAGEGROUP(sgname ...) !    13580000
                CONTROLDATASETS(                                        13590000
                     DATAMOVER(HSM ! DSS)                               13600000
                     BACKUPDEVICECATEGORY                               13610000
                          (DASD ! TAPE(PARALLEL ! NOPARALLEL)) !        13620000
                     NULLJOURNALONLY)                                   13630000
                FREQUENCY(days)                                         13640000
                INCREMENTAL ! TOTAL                                     13650000
                DUMP(DUMPCLASS(class,class,class,class,class)           13660000
                RETENTIONPERIOD(days ! * ! NOLIMIT ...)                 13670000
                STACK(nn ! * ...) )                                     13680000
                TERMINAL                                                13690000
                UNIT(unittype)                                          13700000
                                                                        13710000
))BDELETE  (dsname...)  ALL ! VERSIONS(bvn ...) !                       13720000
                        DATE(yyyy/mm/dd) TIME(hhmmss)                   13730000
                FROMVOLUME(volser)                                      13740000
                                                                        13750000
))CANCEL        DATASETNAME(dsn) ! REQUEST(num) ! USERID(userid)        13760000
                                                                        13770000
))DEFINE        ARPOOL(agname ! ALL                                     13780000
                              ! ML1VOLS(* ! volser ... volsern)         13790000
                              ! L0VOLS(* ! volser ... volsern))         13800000
                BACKUP(cycle(bvol) CYCLESTARTDATE(yyyy/mm/dd))          13810000
                DUMPCLASS((class)                                       13820000
                AUTOREUSE ! NOAUTOREUSE                                 13830000
                DATASETRESTORE ! NODATASETRESTORE                       13840000
                DAY(day)                                                13850000
                DISABLE                                                 13860000
                DISPOSITION('disposition')                              13870000
                FREQUENCY(days)                                         13880000
                RESET ! NORESET                                         13890000
                RETENTIONPERIOD(days ! NOLIMIT                          13900000
                STACK(number)                                           13910000
                SWITCHTAPES(DSBACKUP(TIME(hhmm) ! AUTOBACKUPEND         13920000
                                     PARTIALTAPE(REUSE !                13930000
                                                 MARKFULL !             13940000
                                                 SETSYS)))              13950000
                                                                        13960000
                TAPEEXPIRATIONDATE(yyyyddd)                             13970000
                UNIT(unittype)                                          13980000
                VTOCCOPIES(copies)                                      13990000
                ZCOMPRESS(YES ! NO))                                    14000000
                DUMPCYCLE(cycle CYCLESTARTDATE(yyyy/mm/dd))             14010000
                MIGRATIONCLEANUPCYCLE(cycle(CYCLESTARTDATE(yyyy/mm/dd)))14020000
                MIGRATIONLEVEL2(KEYS(key ...) VOLUMES(volser...))       14030000
                POOL(poolid VOLUMES(volser))                            14040000
                PRIMARYSPMGMTCYCLE(cycle CYCLESTARTDATE(yyyy/mm/dd))    14050000
                SECONDARYSPMGMTCYCLE(cycle CYCLESTARTDATE(yyyy/mm/dd))  14060000
                SWITCHTAPES(DSBACKUP(TIME(hhmm) ! AUTOBACKUPEND         14070000
                                     PARTIALTAPE(REUSE !                14080000
                                                 MARKFULL !             14090000
                                                 SETSYS)))              14100000
                VOLUMEPOOL(poolid VOLUMES(volser))                      14110000
                                                                        14120000
))DELETE   dsn                                                          14130000
                PURGE                                                   14140000
                                                                        14150000
))DELVOL   volser                                                       14160000
           BACKUP ! DUMP ! MIGRATION ! PRIMARY                          14170000
               (PURGE ! REASSIGN ! UNASSIGN ! MARKFULL                  14180000
               LASTCOPY                                                 14190000
               COPYPOOLCOPY)                                            14200000
                                                                        14210000
))DISPLAY  (address (:address)...)                                      14220000
           LENGTHS(bytes...)                                            14230000
           LOGONLY                                                      14240000
           OUTDATASET(dsname)                                           14250000
           VOLSER(volser)                                               14260000
                                                                        14270000
))EXPIREBV DISPLAY ! EXECUTE                                            14280000
                ABARVERSIONS                                            14290000
                ABARVERSIONS(AGNAME(agname))                            14300000
                RETAINVERSIONS(n)                                       14310000
                NONSMSVERSIONS(DELETEIFBACKEDUP(days)                   14320000
                CATALOGEDDATA(days)                                     14330000
                UNCATALOGEDDATA(days))                                  14340000
                STARTKEY(lowkey) ! RESUME                               14350000
                ENDKEY(highkey)                                         14360000
                OUTDATASET(dsname) ! SYSOUT(class)                      14370000
                                                                        14380000
))FIXCDS   type                                                         14390000
           key                                                          14400000
            ADDMIGRATEDDATASET(volser) ! ASSIGNEDBIT(ON ! OFF) !        14410000
            CREATE(offset data) ! DELETE ! DISPLAY(offset) !            14420000
            EXPAND(bytes) ! NEWKEY(keyname) !                           14430000
            VERIFY(offset data ! BITS(bits))!                           14440000
            PATCH(offset data ! BIT(bits))                              14450000
            ENTRY(volser dsname)                                        14460000
            LENGTH(bytes)                                               14470000
            LOGONLY                                                     14480000
            OUTDATASET(dsname)                                          14490000
            REFRESH(ON!OFF)                                             14500000
                                                                        14510000
))FREEVOL MIGRATIONVOLUME(volser)                                       14520000
            AGE(days)                                                   14530000
            TARGETLEVEL(MIGRATIONLEVEL1 ! MIGRATIONLEVEL2(TAPE!DASD))   14540000
          BACKUPVOLUME(volser)                                          14550000
            AGE(days)                                                   14560000
            TARGETLEVEL(SPILL (TAPE ! DASD))                            14570000
            RETAINNEWESTVERSION                                         14580000
                                                                        14590000
))FRBACKUP COPYPOOL(cpname)                                             14600000
             EXECUTE                                                    14610000
               TOKEN(token)                                             14620000
               NOVTOCENQ                                                14630000
               FORCE                                                    14640000
               DUMP                                                     14650000
                 RETURNCONTROL(DUMPEND ! FASTREPLICATIONEND)            14660000
                 DUMPCLASS(dclass1,...,dclass5)                         14670000
             PREPARE                                                    14680000
               FORCE                                                    14690000
             WITHDRAW                                                   14700000
             DUMPONLY(                                                  14710000
               TOKEN(token) ! VERSION(vernum) ! DATE(yyyy/mm/dd) !      14720000
               GENERATION(gennum))                                      14730000
               DUMPCLASS(dclass1,...,dclass5)                           14740000
                                                                        14750000
))FRDELETE COPYPOOL(cpname)                                             14760000
             VERSIONS(ver,...) ! TOKEN(token) ! ALL                     14770000
             BOTH ! DASDONLY ! DUMPONLY(DUMPCLASS(dclass1,...,dclass5)) 14780000
                                                                        14790000
))FRRECOV  TOVOLUME(volser)                                             14800000
             FROMCOPYPOOL(cpname)                                       14810000
             FROMDASD !                                                 14820000
             FROMDUMP(                                                  14830000
               DUMPCLASS(dclass) ! DUMPVOLUME(dvol)                     14840000
               APPLYINCREMENTAL)                                        14850000
           COPYPOOL(cpname)                                             14860000
             VERIFY(Y!N)                                                14870000
             FROMDASD !                                                 14880000
             FROMDUMP(                                                  14890000
               DUMPCLASS(dclass)                                        14900000
               PARTIALOK                                                14910000
               RESUME(YES ! NO))                                        14920000
           DSNAME(dsname) REPLACE                                       14930000
             FROMDASD !                                                 14940000
             FROMDUMP(                                                  14950000
               DUMPCLASS(dclass) ! DUMPVOLUME(dvol))                    14960000
             FASTREPLICATION(PREFERRED ! REQUIRED ! NONE)               14970000
             FROMCOPYPOOL(cpname)                                       14980000
             NOCOPYPOOLBACKUP(RC4 ! RC8)                                14990000
           GENERATION(gennum) ! VERSION(vernum) !                       15000000
           DATE(yyyy/mm/dd) ! TOKEN(token)                              15010000
                                                                        15020000
                                                                        15030000
))HOLD          ABACKUP(agname)                                         15040000
                ALL                                                     15050000
                ARECOVER                                                15060000
                  AGGREGATE(agname) ! DATASETNAME(controlfiledsn)       15070000
                AUDIT                                                   15080000
                AUTOMIGRATION                                           15090000
                BACKUP(AUTO                                             15100000
                       DSCOMMAND(                                       15110000
                                 DASD !                                 15120000
                                 TAPE !                                 15130000
                                 SWITCHTAPES))                          15140000
                COMMONQUEUE(                                            15150000
                  RECALL(                                               15160000
                         SELECTION ! PLACEMENT))                        15170000
                DUMP(AUTO ! FASTREPLICATIONBACKUP)                      15180000
                ENDOFDATASET ! ENDOFVOLUME                              15190000
                EXPIREBV                                                15200000
                FRBACKUP                                                15210000
                FRRECOV(                                                15220000
                 DATASET ! TAPE))                                       15230000
                LIST                                                    15240000
                LOG                                                     15250000
                MIGRATION(AUTO)                                         15260000
                RECALL(TAPE(TSO))                                       15270000
                RECOVER(TAPEDATASET)                                    15280000
                RECYCLE                                                 15290000
                REPORT                                                  15300000
                TAPECOPY                                                15310000
                TAPEREPL                                                15320000
                                                                        15330000
))HSENDCMD command                                                      15340000
                WAIT ! NOWAIT                                           15350000
                                                                        15360000
If you are working from the DFSMShsm panel and your command             15370000
fits on the COMMAND === line of the panel, then simply type             15380000
TSO HSENDCMD ---command---                                              15390000
If you need space for a multiline command, then split the               15400000
screen and select 'OPTION 6'.                                           15410000
Type in the multiline command.                                          15420000
After the command has been processed, return to the DFSMShsm panel.     15430000
                                                                        15440000
))LIST  -  Command Variations :                                         15450000
                                                                        15460000
  LIST     AGGREGATE(agname)                                            15470000
           AGGREGATE(*)                                                 15480000
             DATE(yyy/mm/dd)                                            15490000
             VERSION(nnnn)                                              15500000
                                                                        15510000
  LIST     BACKUPVOLUME(volser)                                         15520000
           OUTDATASET(dsname) ! SYSOUT(class) ! TERMINAL                15530000
           SELECT(EMPTY)                                                15540000
                                                                        15550000
  LIST     CLOUD(cloudname)                                             15560000
              CONTAINER(container_name)                                 15570000
                 PREFIX(prefix_name)                                    15580000
              OUTDATASET(dsname) ! SYSOUT(class) ! TERMINAL             15590000
                                                                        15600000
  LIST     COPYPOOL                                                     15610000
             (cpname)                                                   15620000
             FASTREPLICATIONVOLS ! NOVOLS ! DUMPVOLS !                  15630000
             ALLOVLS(                                                   15640000
               GENERATION(gennum) ! ALLVERS ! TOKEN(token))             15650000
             SELECT(                                                    15660000
               FASTREPLICATIONSTATE(RECOVERABLE ! DUMPONLY !            15670000
                                    FAILED ! NONE) !                    15680000
               DUMPSTATE(ALLCOMPLETE ! REQUIREDCOMPLETE !               15690000
                         PARTIAL ! NONE))                               15700000
           COPYPOOLBACKUPSTORAGEGROUP(cpbsgname)                        15710000
                                                                        15720000
  LIST     DATASETNAME(dsname) ! LEVEL(qualifier)                       15730000
                BACKUPCONTROLDATASET! MIGRATIONCONTROLDATASET ! BOTH    15740000
                INCLUDEPRIMARY                                          15750000
                OUTDATASET(dsname) ! SYSOUT(class) ! TERMINAL           15760000
                SELECT(AGE(mindays) maxdays) ! CLOUD !                  15770000
                MIGRATIONLEVEL1 !                                       15780000
                MIGRATIONLEVEL2 ! VOLUME(volser) !                      15790000
                RETAINDAYS ! ACTIVE !                                   15800000
                SMALLDATASETPACKING ! NOSMALLDATASETPACKING !           15810000
                VSAM !                                                  15820000
                EMPTY)       /* List empty migrated data sets */        15830000
                SUMMARY                                                 15840000
                                                                        15850000
  LIST     DUMPCLASS(class)                                             15860000
                BACKUPCONTROLDATASET                                    15870000
                OUTDATASET(dsname) ! SYSOUT(class) ! TERMINAL           15880000
                                                                        15890000
  LIST     DUMPVOLUME(volser)                                           15900000
                BACKUPCONTROLDATASET                                    15910000
                DUMPCONTENTS(volser)                                    15920000
                SELECT(AVAILABLE UNAVAILABLE EXPIRED UNEXPIRED          15930000
                LIB NOLIB NORETENTIONLIMIT DUMPCLASS(class))            15940000
                OUTDATASET(dsname) ! SYSOUT(class) ! TERMINAL           15950000
                                                                        15960000
  LIST     HOST(hostid)                                                 15970000
                RESET                                                   15980000
                OUTDATASET(dsname) ! SYSOUT(class) ! TERMINAL           15990000
                                                                        16000000
  LIST     MIGRATIONVOLUME !                                            16010000
           MIGRATIONLEVEL1 SELECT(OVERFLOW ! NOOVERFLOW) !              16020000
           MIGRATIONLEVEL2(DASD ! TAPE) ! VOLUME(volser)                16030000
                BACKUPCONTROLDATASET ! MIGRATIONCONTROLDATASET ! BOTH   16040000
                ALLDUMPS                                                16050000
                OUTDATASET(dsname) ! SYSOUT(class) ! TERMINAL           16060000
                SELECT(EMPTY)                                           16070000
                                                                        16080000
  LIST     PRIMARYVOLUME(volser)                                        16090000
                ALLDUMPS ! BACKUPCONTENTS(nn)                           16100000
                BACKUPCONTROLDATASET ! MIGRATIONCONTROLDATASET! BOTH    16110000
                OUTDATASET(dsname) ! SYSOUT(class) ! TERMINAL           16120000
                SELECT(MULTIPLEVOLUME VSAM)                             16130000
                                                                        16140000
  LIST    TAPETABLEOFCONTENTS                                           16150000
                OUTDATASETNAME(dsname) ! SYSOUT(class) ! TERMINAL       16160000
                BACKUPCONTROLDATASET ! MIGRATIONCONTROLDATASET ! BOTH   16170000
                SELECT(                                                 16180000
                 MIGRATIONLEVEL2 ! BACKUP ! BOTH                        16190000
                 NOALTERNATEVOLUME ! ALTERNATEVOLUME ! FAILEDRECYCLE !  16200000
                 FAILEDCREATE ! EXCESSIVEVOLUMES ! RECALLTAKEAWAY !     16210000
                 DISASTERALTERNATEVOLUMES                               16220000
                 EMPTY ! FULL ! NOTFULL ! ASSOCIATED ! NOTASSOCIATED    16230000
                 ERRORALTERNATE !                                       16240000
                 CONNECTED(volser) ! NOTCONNECTED                       16250000
                 LIB(ALTERNATE) ! NOLIB(ALTERNATE) )                    16260000
                                                                        16270000
  LIST    TAPETABLEOFCONTENTS(volser)                                   16280000
               OUTDATASET(dsname) ! SYSOUT(class) ! TERMINAL            16290000
               BACKUPCONTROLDATASET ! MIGRATIONCONTROLDATASET ! BOTH    16300000
               NODATASETINFORMATION ! DATASETINFORMATION                16310000
                                                                        16320000
  LIST     USER(userid)                                                 16330000
               OUTDATASET(dsname) ! SYSOUT(class) ! TERMINAL            16340000
                                                                        16350000
))LOG      data                                                         16360000
                                                                        16370000
))MIGRATE  DATASETNAME(dsname) ! MIGRATIONLEVEL1 ! PRIMARY !            16380000
           STORAGEGROUP(sgn1,sgn2,...) !                                16390000
           VOLUME(volser1 MIGRATE(days)                                 16400000
           DELETEBYAGE(days) ! DELETEIFBACKEDUP(days)! MIGRATE(days))   16410000
             BOTH                                                       16420000
             CLOUD(cloud_name)                                          16430000
                CONVERT(volser2 unittype2)                              16440000
                DAYS(days)                                              16450000
                MIGRATIONLEVEL1                                         16460000
                MIGRATIONLEVEL2                                         16470000
             MIGRATIONONLY                                              16480000
             MOVE                                                       16490000
                TERMINAL                                                16500000
             TRANSITION(MANAGEMENTCLASS(mc1) STORAGECLASS(sc1)          16510000
                        STORAGEGROUP(sg1,...sg15))                      16520000
             TRANSITIONONLY(MANAGEMENTCLASS(mc1)                        16530000
                        STORAGECLASS(sc1) STORAGEGROUP(sg1,...sg15))    16540000
                UNIT(unittype)                                          16550000
                                                                        16560000
))PATCH    address                                                      16570000
           data ! BITS(bits)                                            16580000
                OUTDATASET(dsname)                                      16590000
                VERIFY(address data ! BITS(bits))                       16600000
                VOLSER(volser)                                          16610000
                                                                        16620000
))QUERY         ABARS                                                   16630000
                ACTIVE                                                  16640000
                ARPOOL(agname)                                          16650000
                AUTOPROGRESS                                            16660000
                BACKUP(ALL ! DAILY(day) ! SPILL ! UNASSIGNED)           16670000
                CDSVERSIONBACKUP                                        16680000
                COMMONQUEUE(RECALL)                                     16690000
                CONTROLDATASETS                                         16700000
                COPYPOOL(cpname)                                        16710000
                CSALIMITS                                               16720000
                DATASETNAME(dsname) ! REQUEST(reqnum) ! USER(userid)    16730000
                MIGRATIONLEVEL2                                         16740000
                POOL                                                    16750000
                RETAIN                                                  16760000
                SECURITY                                                16770000
                SETSYS                                                  16780000
                SPACE(volser ...)                                       16790000
                STARTUP                                                 16800000
                STATISTICS                                              16810000
                TRAPS                                                   16820000
                VOLUMEPOOL                                              16830000
                WAITING                                                 16840000
                                                                        16850000
))RECALL   dsname                                                       16860000
                DAOPTION(SAMETRK ! RELTRK ! RELBLK)                     16870000
                DFDSSOPTION(RETRY ! VOLCOUNT(N(nn) ! ANY) !             16880000
                    RETRY VOLCOUNT(N(nn) ! ANY))                        16890000
                FORCENONSMS                                             16900000
                UNIT(unittype)                                          16910000
                VOLUME(volser)                                          16920000
                                                                        16930000
))RECOVER  dsname                                                       16940000
                DAOPTION(SAMETRK ! RELTRK ! RELBLK)                     16950000
                DATE(date) ! DATE(date) TIME(time) !                    16960000
                    GENERATION(gennum) ! VERSION(vernum)                16970000
                DFDSSOPTION(RETRY ! VOLCOUNT(N(nn) ! ANY) !             16980000
                    RETRY VOLCOUNT(N(nn) ! ANY))                        16990000
                FORCENONSMS                                             17000000
                FROMDUMP(DUMPCLASS(class) ! DUMPVOLUME(volser)          17010000
                         SOURCEVOLUME(volser))                          17020000
                FROMVOLUME(volser)                                      17030000
                NEWNAME(newdsname)                                      17040000
                REPLACE                                                 17050000
                TOVOLUME(volser)                                        17060000
                UNIT(unittype)                                          17070000
                RECURSE(NOCROSSMOUNTS ! CROSSMOUNTS)                    17080000
))RECOVER  *                                                            17090000
                TOVOLUME(volser)                                        17100000
                UNIT(unittype)                                          17110000
                     DATE(date)                                         17120000
                     FROMDUMP(DUMPCLASS(class) ! DUMPVOLUME(volser) !   17130000
                              DUMPGENERATION(dgennum) APPLYINCREMENTAL) 17140000
                     TARGETVOLUME(volser)                               17150000
                                                                        17160000
                     TERMINAL                                           17170000
                                                                        17180000
))RECYCLE  ALL ! BACKUP ! DAILY(day) ! ML2 ! SPILL ! VOLUME(volser)     17190000
           CHECKFIRST(Y ! N)                                            17200000
           DISPLAY ! EXECUTE ! VERIFY                                   17210000
                OUTDATASET(dsname)                                      17220000
                TAPELIST( PULLSIZE(size) TOTAL(count) PREFIX(prefix) !  17230000
                                                      FULLDSNAME(dsn))  17240000
                FORCE                                                   17250000
                PERCENTVALID(pct)                                       17260000
                LIMIT(netfreed)                                         17270000
                                                                        17280000
))RELEASE       ABACKUP(agname)                                         17290000
                ALL                                                     17300000
                ARECOVER AGGREGATE(agname)!DATASETNAME(controlfiledsn)  17310000
                AUDIT                                                   17320000
                AUTOMIGRATION                                           17330000
                BACKUP(AUTO                                             17340000
                       DSCOMMAND(                                       17350000
                                 DASD !                                 17360000
                                 TAPE))                                 17370000
                COMMONQUEUE(                                            17380000
                  RECALL(                                               17390000
                         SELECTION ! PLACEMENT))                        17400000
                DUMP(AUTO ! FASTREPLICATIONBACKUP)                      17410000
                EXPIREBV                                                17420000
                FRBACKUP                                                17430000
                FRRECOV(                                                17440000
                 DATASET ! TAPE)                                        17450000
                HARDCOPY                                                17460000
                LIST                                                    17470000
                LOG                                                     17480000
                MIGRATION(AUTO)                                         17490000
                RECALL(                                                 17500000
                       DASD !                                           17510000
                       TAPE                                             17520000
                           (TSO))                                       17530000
                RECOVER(TAPEDATASET)                                    17540000
                RECYCLE                                                 17550000
                REPORT                                                  17560000
                TAPECOPY                                                17570000
                TAPEREPL                                                17580000
                                                                        17590000
))REPORT  DAILY                                                         17600000
          DELETE                                                        17610000
          FROMDATE(date)                                                17620000
          OUTDATASET(dsname) ! SYSOUT(class)                            17630000
          NOFUNCTION ! FUNCTION                                         17640000
          (BACKUP ! DELETE ! MIGRATION(FROMANY ! FROMMIGRATIONLEVEL1 !  17650000
                                       FROMPRIMARY)                     17660000
                                      (TOANY ! TOMIGRATIONLEVEL1 !      17670000
                                       TOMIGRATIONLEVEL2) !             17680000
          RECALL(FROMANY ! FROMMIGRATIONLEVEL1 ! FROMMIGRATIONLEVEL2)!  17690000
          RECOVER ! RECYCLE(BACKUP ! MIGRATION ! ALL) ! SPILL))         17700000
          SUMMARY                                                       17710000
          TODATE(date)                                                  17720000
          VOLUMES(volser ...)                                           17730000
                                                                        17740000
))SETMIG   DATASETNAME(dsname) ! LEVEL(qualifier) ! VOLUME(volser)      17750000
                COMMANDMIGRATION ! MIGRATION ! NOMIGRATION              17760000
                                                                        17770000
))SETSYS        ABARSPROCNAME(abarsprocname)                            17780000
                ABARSACTLOGTYPE(SYSOUT(class) ! DASD)                   17790000
                ABARSACTLOGMSGLVL(FULL ! REDUCED)                       17800000
                ABARSBUFFERS(n)                                         17810000
                ABARSDELETEACTIVITY(Y ! N)                              17820000
                ABARSKIP(PPRC ! XRC ! NOPPRC ! NOXRC)                   17830000
                ABARSOPTIMIZE(1!2!3!4)                                  17840000
                ABARSPROCNAME(name)                                     17850000
                ABARSTAPES(STACK ! NOSTACK)                             17860000
                ABARSUNITNAME(unittype)                                 17870000
                ABARSVOLCOUNT(NONE ! ANY)                               17880000
                ACCEPTPSCBUSERID ! NOACCEPTPSCBUSERID                   17890000
                ACTLOGMSGLVL(FULL ! EXCEPTIONONLY ! REDUCED)            17900000
                ACTLOGTYPE(SYSOUT(class) ! DASD)                        17910000
                ARECOVERPERCENTUTILIZED(percent)                        17920000
                ARECOVERREPLACE ! NOARECOVERREPLACE                     17930000
                ARECOVERTGTGDS(SOURCE!ACTIVITY!DEFERRED!ROLLEDOFF)      17940000
                ARECOVERUNITNAME(unittype)                              17950000
                ARECOVERML2UNIT(unittype)                               17960000
                AUTOBACKUPSTART(hhmm1(hhmm2(hhmm3)))                    17970000
                AUTODUMPSTART(hhmm1(hhmm2(hhmm3)))                      17980000
                AUTOMIGRATIONSTART(hhmm1(hhmm2(hhmm3)))                 17990000
                BACKUP( ANY ! DASD ! TAPE(unittype)) ! NOBACKUP         18000000
                BACKUPPREFIX(prefix)                                    18010000
                CDSVERSIONBACKUP                                        18020000
                     (BACKUPCOPIES(backupcopies)                        18030000
                     DATAMOVER(HSM ! DSS)                               18040000
                     BACKUPDEVICECATEGORY(DASD !                        18050000
                              TAPE                                      18060000
                              (PARALLEL ! NOPARALLEL                    18070000
                              DENSITY(density)                          18080000
                              EXPIRATIONDATE(expirationdate) !          18090000
                              RETENTIONPERIOD(retentionperiod))         18100000
                              UNITNAME(unittype)))                      18110000
                     BCDSBACKUPDSN(dsname)                              18120000
                     JRNLBACKUPDSN(dsname)                              18130000
                     MCDSBACKUPDSN(dsname)                              18140000
                     OCDSBACKUPDSN(dsname))                             18150000
                COMMONQUEUE(RECALL                                      18160000
                     (CONNECT(base_name) ! DISCONNECT)                  18170000
                COMPACT((ALL ! NONE) ! (DASDBACKUP ! NODASDBACKUP)      18180000
                        (DASDMIGRATE ! NODASDMIGRATE)                   18190000
                        (TAPEBACKUP ! NOTAPEBACKUP)                     18200000
                        (TAPEMIGRATE ! NOTAPEMIGRATE))                  18210000
                                                                        18220000
                COMPACTPERCENT(pct)                                     18230000
                                                                        18240000
                CONVERSION((REBLOCKBASE ! REBLOCKTOANY !                18250000
                           REBLOCKTOUNLIKE) ! NOCONVERSION)             18260000
                                                                        18270000
                CLASSTRANSITIONS(EVENTDRIVENMIGRATION(Y ! N)            18280000
                                 SERIALIZATIONEXIT(Y ! N))              18290000
                                                                        18300000
                CSALIMITS(ACTIVE(percent 1)                             18310000
                          INACTIVE(percent 2)                           18320000
                          MAXIMUM(Kbytes)                               18330000
                          MWE(£mwes)) ! NOCSALIMITS                     18340000
                                                                        18350000
                DAYS(days)                                              18360000
                DEBUG ! NODEBUG                                         18370000
                DEFERMOUNT!NODEFERMOUNT                                 18380000
                DENSITY(2 ! 3 ! 4)                                      18390000
                DFHSMDATASETSERIALIZATION ! USERDATASETSERIALIZATION    18400000
                DISASTERMODE(Y!N)                                       18410000
                                                                        18420000
                DSBACKUP(DASDSELECTIONSIZE(maximum standard)            18430000
                         DASD(TASKS(nn))                                18440000
                         TAPE(TASKS(nn)                                 18450000
                              DEMOUNTDELAY(MINUTES(minutes)             18460000
                                           MAXIDLETASKS(drives))))      18470000
                                                                        18480000
                DSSXMMODE(Y ! N) !                                      18490000
                  (BACKUP(Y ! N)  CDSBACKUP(Y ! N)  DUMP(Y ! N)         18500000
                   MIGRATION(Y ! N)  RECOVERY(Y ! N))                   18510000
                DUMPIO(1 ! 2 ! 3 ! 4, 1 ! 2 ! 3 ! 4)                    18520000
                DUPLEX(                                                 18530000
                 BACKUP(Y ERRORALTERNATE(CONTINUE(TAPECOPY ! RECYCLE))! 18540000
                        N) !                                            18550000
                 MIGRATION(Y ERRORALTERNATE(CONTINUE(TAPECOPY !         18560000
                             RECYCLE) ! MARKFULL)! N) !                 18570000
                 BACKUP(Y ERRORALTERNATE(CONTINUE(TAPECOPY ! RECYCLE))! 18580000
                        N)                                              18590000
                 MIGRATION(Y ERRORALTERNATE(CONTINUE(TAPECOPY !         18600000
                             RECYCLE) ! MARKFULL)! N))                  18610000
                EMERGENCY ! NOEMERGENCY                                 18620000
                ERASEONSCRATCH ! NOERASEONSCRATCH                       18630000
                EXITOFF(modname, modname, ...)                          18640000
                EXITON(modname, modname, ...)                           18650000
                EXITS(abcdefghi)                                        18660000
                EXPIREDDATASETS(SCRATCH ! NOSCRATCH)                    18670000
                EXPORTESDS(CIMODE ! RECORDMODE)                         18680000
                EXTENDEDTTOC(Y ! N)                                     18690000
                FASTREPLICATION(DATASETRECOVERY(PREFERRED !             18700000
                                REQUIRED ! NONE)                        18710000
                                FCRELATION(EXTENT ! FULL)               18720000
                                VOLUMEPAIRMESSAGES(YES ! NO)            18730000
                                MESSAGEDATASET(YES ! NO HLQ(hlq))       18740000
                FREQUENCY(days)                                         18750000
                INCREMENTALBACKUP(CHANGEDONLY ! ORIGINAL)               18760000
                INPUTTAPEALLOCATION(WAIT ! NOWAIT)                      18770000
                INTERVALMIGRATION ! NOINTERVALMIGRATION                 18780000
                JES2 ! JES3                                             18790000
                JOURNAL(RECOVERY ! SPEED) ! NOJOURNAL                   18800000
                MAXABARSADDRESSSPACE(number)                            18810000
                MAXBACKUPTASKS(tasks)                                   18820000
                MAXCOPYPOOLTASKS(                                       18830000
                   FRBACKUP(nn) FRRECOV(nn) DSS(nn))                    18840000
                MAXDSRECOVERTASKS(tasks)                                18850000
                MAXDSTAPERECOVERTASKS(tasks)                            18860000
                MAXDUMPTASKS(tasks)                                     18870000
                MAXDUMPRECOVERTASKS(tasks)                              18880000
                MAXEXTENTS(extents)                                     18890000
                MAXINTERVALTASKS(nn)                                    18900000
                MAXMIGRATIONTASKS(nn)                                   18910000
                MAXRECALLTASKS(tasks)                                   18920000
                MAXSSMTASKS(CLEANUP(nn) TAPEMOVEMENT(mm))               18930000
                MIGDENSITY(2 ! 3 ! 4)                                   18940000
                MIGRATEPREFIX(prefix)                                   18950000
                MIGRATIONCLEANUPDAYS(recalldays statdays reconnectdays) 18960000
                MIGRATIONLEVEL1DAYS(days)                               18970000
                MIGUNITNAME(unittype)                                   18980000
                ML1OVERFLOW(DATASETSIZE(dssize) THRESHOLD(threshold))   18990000
                ML2PARTIALSNOTASSOCIATEDGOAL(nnn ! NOLIMIT)             19000000
                ML2RECYCLEPERCENT(pct)                                  19010000
                MONITOR(BACKUPCONTROLDATASET(thresh)                    19020000
                        JOURNAL(thresh)                                 19030000
                        MIGRATIONCONTROLDATASET(thresh)                 19040000
                        OFFLINECONTROLDATASET(thresh)                   19050000
                        SPACE ! NOSPACE                                 19060000
                        STARTUP ! NOSTARTUP                             19070000
                        VOLUME ! NOVOLUME)                              19080000
                MOUNTWAITTIME(minutes)                                  19090000
                OBJECTNAMES(name1,name2,...)                            19100000
                ODMNOTIFICATIONLIMIT(limit)                             19110000
                ONDEMANDMIGRATION(Y ! N)                                19120000
                OPTIMUMDASDBLOCKING ! NOOPTIMUMDASDBLOCKING             19130000
                OUTPUTTAPEALLOCATION(WAIT ! NOWAIT)                     19140000
                PARTIALTAPE(MARKFULL ! REUSE !                          19150000
                     MIGRATION(MARKFULL ! REUSE)                        19160000
                     BACKUP(MARKFULL ! REUSE))                          19170000
                PDA(NONE ! ON ! OFF)                                    19180000
                PLEXNAME(plexname)                                      19190000
                PRIMARYSPMGMTSTART(hhmm1 (hhmm2))                       19200000
                PROFILEBACKUP ! NOPROFILEBACKUP                         19210000
                PROMOTE(PRIMARYHOST(YES ! NO) SSM(YES ! NO))            19220000
                RACFIND ! NORACFIND                                     19230000
                RECALL(ANYSTORAGEVOLUME(LIKE ! UNLIKE) !                19240000
                       PRIVATEVOLUME(LIKE ! UNLIKE))                    19250000
                RECYCLEOUTPUT(BACKUP(unittype) MIGRATION(unittype))     19260000
                RECYCLEPERCENT(pct)                                     19270000
                RECYCLETAKEAWAYRETRY(YES MAXRETRYATTEMPTS(nn)           19280000
                                         DELAY(mmmm) ! NO )             19290000
                RECYCLETAPEALLOCATION(WAIT ! NOWAIT)                    19300000
                REMOVECOMPACTNAMES(name1,name2,...)                     19310000
                REQUEST ! NOREQUEST                                     19320000
                SCRATCHFREQUENCY(days)                                  19330000
                SECONDARYSPMGMTSTART(hhmm1 (hhmm2))                     19340000
                SELECTVOLUME(SCRATCH ! SPECIFIC !                       19350000
                   MIGRATION(SCRATCH ! SPECIFIC) !                      19360000
                   BACKUP(SCRATCH ! SPECIFIC) !                         19370000
                   DUMP(SCRATCH ! SPECIFIC) )                           19380000
                SKIPABPRIMARY ! NOSKIPABPRIMARY                         19390000
                SMALLDATASETPACKING(tracks ! KB(kilobytes)) !           19400000
                NOSMALLDATASETPACKING                                   19410000
                SMF(smfid) ! NOSMF                                      19420000
                SOURCENAMES(name1,name2,...)                            19430000
                SPILL(ANY ! DASD ! TAPE(unittype)) ! NOSPILL            19440000
                SWAP ! NOSWAP                                           19450000
                SYSOUT(class(copies forms))                             19460000
                SYS1DUMP ! NOSYS1DUMP                                   19470000
                TAPEDELETION(SCRATCHTAPE ! HSMTAPE !                    19480000
                     MIGRATION(SCRATCHTAPE ! HSMTAPE)                   19490000
                     BACKUP(SCRATCHTAPE ! HSMTAPE)                      19500000
                     DUMP(SCRATCHTAPE ! HSMTAPE))                       19510000
                TAPEFORMAT(SINGLEFILE)                                  19520000
                TAPEHARDWARECOMPACT ! NOTAPEHARDWARECOMPACT             19530000
                TAPEINPUTPROMPT(MIGRATIONTAPES(YES ! NO)                19540000
                               BACKUPTAPES(YES ! NO)                    19550000
                               DUMPTAPES(YES ! NO))                     19560000
                TAPEMAXRECALLTASKS(tasks)                               19570000
                TAPEMIGRATION(DIRECT(TAPE(ANY ! unittype)) !            19580000
                               ML2TAPE(TAPE(ANY ! unittype)) !          19590000
                               NONE(ROUTETOTAPE(ANY ! unittype))        19600000
                               RECONNECT(NONE !                         19610000
                                         ALL !                          19620000
                                         ML2DIRECTEDONLY))              19630000
                                                                        19640000
                TAPEOUTPUTPROMPT(TAPECOPY(YES!NO))                      19650000
                TAPESECURITY((EXPIRATION ! EXPIRATIONINCLUDE)           19660000
                               PASSWORD (RACF ! RACFINCLUDE))           19670000
                TAPESPANSIZE(nnn)                                       19680000
                TAPEUTILIZATION                                         19690000
                  (UNITTYPE(unittype) PERCENTFULL(pct ! NOLIMIT) !      19700000
                  (LIBRARYBACKUP PERCENTFULL(pct ! NOLIMIT) )    !      19710000
                  (LIBRARYMIGRATION PERCENTFULL(pct ! NOLIMIT) )        19720000
                                                                        19730000
                UNITNAME(unittype)                                      19740000
                UNLOAD ! NOUNLOAD                                       19750000
                USERUNITTABLE(ES1,ES1OUT : ES2IN,ES3 : ES3) !           19760000
                NOUSERUNITTABLE                                         19770000
                VERSIONS(limit)                                         19780000
                VOLCOUNT(NONE ! ANY)                                    19790000
                VOLUMEDUMP(NOCC ! STANDARD !                            19800000
                           CC ! PREFERRED !REQUIRED !                   19810000
                           VIRTUALPREFERRED ! VIRTUALREQUIRED !         19820000
                           CACHEPREFERRED ! CACHEREQUIRED)              19830000
                USECYLINDERMANAGEDSPACE(Y!N)                            19840000
                ZCOMPRESS(ALL ! NONE !                                  19850000
                          DASDBACKUP(YES ! NO)                          19860000
                          TAPEBACKUP(YES ! NO)                          19870000
                          DASDMIGRATE(YES ! NO)                         19880000
                          TAPEMIGRATE(YES ! NO))                        19890000
                                                                        19900000
))STOP          DUMP PROMOTE                                            19910000
                                                                        19920000
))SWAPLOG                                                               19930000
                                                                        19940000
))TAPECOPY ALL ! MIGRATIONLEVEL2 ! BACKUP !                             19950000
           ORIGINALVOLUMES(ovol1,ovol2,...ovoln) ! INDATASET(dsname)    19960000
                ALTERNATEVOLUMES(avol1,avol2...avoln)                   19970000
                EXPDT((cc)yyddd) ! RETPD(nnnn)                          19980000
                ALTERNATEUNITNAME(unittype1,unittype2) !                19990000
                ALTERNATE3590UNITNAME(unittype1,unittype2) !            20000000
                ALTERNATEUNITNAME(unittype1,unittype2)                  20010000
                     ALTERNATE3590UNITNAME(unittype1,unittype2)         20020000
                                                                        20030000
 ))TAPEREPL ALL ! BACKUP !                                              20040000
            INDATASET(volrepl.list.dsname) !                            20050000
            MIGRATION !                                                 20060000
            ONLYDISASTERALTERNATES(                                     20070000
                                   RESET) !                             20080000
            ORIGINALVOLUMES(ovol1,ovol2,...ovoln)                       20090000
                 ALTERNATEUNITNAME(unittype)                            20100000
                 ALTERNATEVOLUMES(avol1,avol2...avoln)                  20110000
                 DISASTERALTERNATEVOLUMES                               20120000
                                                                        20130000
))TRAP     ALL ! module                                                 20140000
                error code                                              20150000
                ABEND(ALWAYS ! NEVER ! ONCE) !                          20160000
                LOG ! OFF !                                             20170000
                SNAP(ALWAYS ! NEVER ! ONCE)                             20180000
                                                                        20190000
))UPDATEC  ALL ! BACKUPCONTROLDATASET ! MIGRATIONCONTROLDATASET !       20200000
           OFFLINECONTROLDATASET                                        20210000
                JOURNAL(dsname)                                         20220000
./ ADD NAME=HSMLOG                                                      20230000
//HSMLOG   JOB ?JOBPARM                                                 20240000
//*                                                                     20250000
//****************************************************************/     20260000
//*         THIS SAMPLE JOB PRINTS THE DFSMSHSM LOG              */     20270000
//*                                                              */     20280000
//* REPLACE THE ?UID VARIABLE IN THE FOLLOWING SAMPLE JOB WITH   */     20290000
//* THE NAME OF THE DFSMSHSM -AUTHORIZED USERID (1 TO 7 CHARS).  */     20300000
//*                                                              */     20310000
//* (NOTE: UID AUTHORIZATION IS VALID IN A NON-FACILITY CLASS    */     20320000
//* ENVIRONMENT ONLY, OTHERWISE, FACILITY CLASS PROFILES         */     20330000
//* WILL BE USED FOR AUTHORIZATION CHECKING.)                    */     20340000
//****************************************************************/     20350000
//*                                                                     20360000
//PRINTLOG EXEC PGM=ARCPRLOG                                            20370000
//ARCPRINT DD SYSOUT=*                                                  20380000
//ARCLOG DD DSN=?UID.HSMLOGY1,DISP=OLD                                  20390000
//ARCEDIT DD DSN=?UID.EDITLOG,DISP=OLD                                  20400000
//*                                                                     20410000
//EMPTYLOG EXEC PGM=IEBGENER                                            20420000
//SYSPRINT DD SYSOUT=*                                                  20430000
//SYSIN DD DUMMY                                                        20440000
//SYSUT2 DD DSN=?UID.HSMLOGY1,DISP=OLD                                  20450000
//SYSUT1 DD DUMMY,DCB=(?UID.HSMLOGY1)                                   20460000
/*                                                                      20470000
./ ADD NAME=HSMEDIT                                                     20480000
//EDITLOG  JOB ?JOBPARM                                                 20490000
//*                                                                     20500000
//****************************************************************/     20510000
//*           THIS JOB PRINTS THE EDIT-LOG DATA SET              */     20520000
//*                                                              */     20530000
//* REPLACE THE FOLLOWING ?UID VARIABLE WITH THE NAME OF THE     */     20540000
//* DFSMSHSM-AUTHORIZED USER (1 TO 7 CHARS).                     */     20550000
//* (NOTE: UID AUTHORIZATION IS VALID IN A NON-FACILITY CLASS    */     20560000
//* ENVIRONMENT ONLY, OTHERWISE, FACILITY CLASS PROFILES WILL BE */     20570000
//* USED FOR AUTHORIZATION CHECKING.)                            */     20580000
//****************************************************************/     20590000
//*                                                                     20600000
//EDITLOG EXEC PGM=ARCPEDIT                                             20610000
//ARCPRINT DD SYSOUT=*                                                  20620000
//ARCLOG DD DSN=?UID.EDITLOG,DISP=SHR                                   20630000
/*                                                                      20640000
./ ADD NAME=ALLOCBK1                                                    20650000
//ALLOCBK1 JOB ?JOBPARM                                                 20660000
//ALLOCBK EXEC PGM=IEFBR14                                              20670000
//*                                                                     20680000
//*****************************************************************/    20690000
//*    THIS SAMPLE JOB ALLOCATES AND CATALOGS THE CONTROL DATA SET*/    20700000
//*    BACKUP VERSION DATA SETS ON DASD VOLUMES.                  */    20710000
//*                                                               */    20720000
//*    ENSURE THAT BACKUP VERSION DATA SETS ARE PLACED ON VOLUMES */    20730000
//*    THAT ARE DIFFERENT FROM THE VOLUMES THAT THE CONTROL DATA  */    20740000
//*    SETS ARE ON.                                               */    20750000
//*                                                               */    20760000
//*    THIS SAMPLE JOB ALLOCATES FOUR BACKUP COPIES (THE DEFAULT) */    20770000
//*    FOR EACH CONTROL DATA SET.  IF YOU SPECIFY A DIFFERENT     */    20780000
//*    NUMBER OF BACKUP VERSIONS, ENSURE THAT YOU ALLOCATE A      */    20790000
//*    BACKUP COPY FOR EACH OF THE BACKUP VERSIONS YOU SPECIFY.   */    20800000
//*****************************************************************/    20810000
//*                                                               */    20820000
//*    EDIT THIS JCL TO REPLACE THE PARAMETERS DESCRIBED BELOW.   */    20830000
//*                                                               */    20840000
//*****************************************************************/    20850000
//*  PARAMETER PARAMETER DEFINITION                                     20860000
//*                                                                     20870000
//*  ?BKUNIT1   -  UNIT TYPE OF VOLUME TO CONTAIN THE FIRST CDS         20880000
//*                BACKUP VERSION.                                      20890000
//*  ?BKUNIT2   -  UNIT TYPE OF VOLUME TO CONTAIN THE SECOND CDS        20900000
//*                BACKUP VERSION.                                      20910000
//*  ?BKUNIT3   -  UNIT TYPE OF VOLUME TO CONTAIN THE THIRD CDS         20920000
//*                BACKUP VERSION.                                      20930000
//*  ?BKUNIT4   -  UNIT TYPE OF VOLUME TO CONTAIN THE FOURTH CDS        20940000
//*                BACKUP VERSION.                                      20950000
//*  ?BKVOL1    -  VOLUME SERIAL OF VOLUME TO CONTAIN THE FIRST CDS     20960000
//*                BACKUP VERSION.                                      20970000
//*  ?BKVOL2    -  VOLUME SERIAL OF VOLUME TO CONTAIN THE SECOND CDS    20980000
//*                BACKUP VERSION.                                      20990000
//*  ?BKVOL3    -  VOLUME SERIAL OF VOLUME TO CONTAIN THE THIRD CDS     21000000
//*                BACKUP VERSION.                                      21010000
//*  ?BKVOL4    -  VOLUME SERIAL OF VOLUME TO CONTAIN THE FOURTH CDS    21020000
//*                BACKUP VERSION.                                      21030000
//*  ?SCBVOL1   -  STORAGE CLASS NAME FOR BACKUP VERSIONS               21040000
//*  ?MCDFHSM   -  MANAGEMENT CLASS NAME OF THE HSM CONSTRUCT           21050000
//*                                                                     21060000
//*  ?CDSSIZE   -  NUMBER OF CYLINDERS ALLOCATED TO CDS BACKUP          21070000
//*                VERSIONS.                                            21080000
//*  ?JNLSIZE   -  NUMBER OF CYLINDERS ALLOCATED TO JOURNAL DATA        21090000
//*                SETS.                                                21100000
//*  ?UID       -  AUTHORIZED USER ID (1 TO 7 CHARS) FOR THE HSM-       21110000
//*                STARTED PROCEDURE. THIS WILL BE USED AS THE          21120000
//*                HIGH-LEVEL QUALIFIER OF HSM DATA SETS.               21130000
//* (NOTE: UID AUTHORIZATION IS VALID IN A NON-FACILITY CLASS    */     21140000
//* ENVIRONMENT ONLY, OTHERWISE, FACILITY CLASS PROFILES WILL BE */     21150000
//* USED FOR AUTHORIZATION CHECKING.)                            */     21160000
//*****************************************************************/    21170000
//*                                                                     21180000
//******************************************************************/   21190000
//* THIS PROCEDURE ASSUMES A SINGLE CLUSTER MCDS.  IF MORE THAN    */   21200000
//* ONE VOLUME IS DESIRED, FOLLOW THE RULES FOR A MULTICLUSTER     */   21210000
//* CDS.                                                           */   21220000
//******************************************************************/   21230000
//*                                                                     21240000
//MCDSV1 DD DSN=?UID.MCDS.BACKUP.V0000001,DISP=(,CATLG),UNIT=?BKUNIT1,  21250000
//   VOL=SER=?BKVOL1,SPACE=(CYL,(?CDSSIZE,5)),STORCLAS=?SCBVOL1,        21260000
//   MGMTCLAS=?MCDFHSM                                                  21270000
//MCDSV2 DD DSN=?UID.MCDS.BACKUP.V0000002,DISP=(,CATLG),UNIT=?BKUNIT2,  21280000
//   VOL=SER=?BKVOL2,SPACE=(CYL,(?CDSSIZE,5)),STORCLAS=?SCBVOL1,        21290000
//   MGMTCLAS=?MCDFHSM                                                  21300000
//MCDSV3 DD DSN=?UID.MCDS.BACKUP.V0000003,DISP=(,CATLG),UNIT=?BKUNIT3,  21310000
//   VOL=SER=?BKVOL3,SPACE=(CYL,(?CDSSIZE,5)),STORCLAS=?SCBVOL1,        21320000
//   MGMTCLAS=?MCDFHSM                                                  21330000
//MCDSV4 DD DSN=?UID.MCDS.BACKUP.V0000004,DISP=(,CATLG),UNIT=?BKUNIT4,  21340000
//   VOL=SER=?BKVOL4,SPACE=(CYL,(?CDSSIZE,5)),STORCLAS=?SCBVOL1,        21350000
//   MGMTCLAS=?MCDFHSM                                                  21360000
//*                                                                     21370000
//******************************************************************/   21380000
//* REMOVE THE NEXT FOUR DD STATEMENTS IF YOU DO NOT INTEND TO USE */   21390000
//* BACKUP AND DUMP                                                */   21400000
//*                                                                */   21410000
//* THIS PROCEDURE ASSUMES A SINGLE CLUSTER BCDS.  IF MORE THAN    */   21420000
//* ONE VOLUME IS DESIRED, FOLLOW THE RULES FOR A MULTICLUSTER     */   21430000
//* CDS.                                                           */   21440000
//******************************************************************/   21450000
//*                                                                     21460000
//BCDSV1 DD DSN=?UID.BCDS.BACKUP.V0000001,DISP=(,CATLG),UNIT=?BKUNIT1,  21470000
//   VOL=SER=?BKVOL1,SPACE=(CYL,(?CDSSIZE,5)),STORCLAS=?SCBVOL1,        21480000
//   MGMTCLAS=?MCDFHSM                                                  21490000
//BCDSV2 DD DSN=?UID.BCDS.BACKUP.V0000002,DISP=(,CATLG),UNIT=?BKUNIT2,  21500000
//   VOL=SER=?BKVOL2,SPACE=(CYL,(?CDSSIZE,5)),STORCLAS=?SCBVOL1,        21510000
//   MGMTCLAS=?MCDFHSM                                                  21520000
//BCDSV3 DD DSN=?UID.BCDS.BACKUP.V0000003,DISP=(,CATLG),UNIT=?BKUNIT3,  21530000
//   VOL=SER=?BKVOL3,SPACE=(CYL,(?CDSSIZE,5)),STORCLAS=?SCBVOL1,        21540000
//   MGMTCLAS=?MCDFHSM                                                  21550000
//BCDSV4 DD DSN=?UID.BCDS.BACKUP.V0000004,DISP=(,CATLG),UNIT=?BKUNIT4,  21560000
//   VOL=SER=?BKVOL4,SPACE=(CYL,(?CDSSIZE,5)),STORCLAS=?SCBVOL1,        21570000
//   MGMTCLAS=?MCDFHSM                                                  21580000
//*                                                                     21590000
//******************************************************************/   21600000
//* REMOVE THE NEXT FOUR DD STATEMENTS IF YOU DO NOT INTEND TO USE */   21610000
//* TAPE VOLUMES FOR DAILY BACKUP VOLUMES, SPILL BACKUP VOLUMES,   */   21620000
//* OR MIGRATION LEVEL 2 VOLUMES.                                  */   21630000
//*                                                                */   21640000
//* THE OCDS MAY NOT EXCEED 1 VOLUME.                              */   21650000
//******************************************************************/   21660000
//*                                                                     21670000
//OCDSV1 DD DSN=?UID.OCDS.BACKUP.V0000001,DISP=(,CATLG),UNIT=?BKUNIT1,  21680000
//   VOL=SER=?BKVOL1,SPACE=(CYL,(?CDSSIZE,5)),STORCLAS=?SCBVOL1,        21690000
//   MGMTCLAS=?MCDFHSM                                                  21700000
//OCDSV2 DD DSN=?UID.OCDS.BACKUP.V0000002,DISP=(,CATLG),UNIT=?BKUNIT2,  21710000
//   VOL=SER=?BKVOL2,SPACE=(CYL,(?CDSSIZE,5)),STORCLAS=?SCBVOL1,        21720000
//   MGMTCLAS=?MCDFHSM                                                  21730000
//OCDSV3 DD DSN=?UID.OCDS.BACKUP.V0000003,DISP=(,CATLG),UNIT=?BKUNIT3,  21740000
//   VOL=SER=?BKVOL3,SPACE=(CYL,(?CDSSIZE,5)),STORCLAS=?SCBVOL1,        21750000
//   MGMTCLAS=?MCDFHSM                                                  21760000
//OCDSV4 DD DSN=?UID.OCDS.BACKUP.V0000004,DISP=(,CATLG),UNIT=?BKUNIT4,  21770000
//   VOL=SER=?BKVOL4,SPACE=(CYL,(?CDSSIZE,5)),STORCLAS=?SCBVOL1,        21780000
//   MGMTCLAS=?MCDFHSM                                                  21790000
//*                                                                     21800000
//JRNLV1 DD DSN=?UID.JRNL.BACKUP.V0000001,DISP=(,CATLG),UNIT=?BKUNIT1,  21810000
//   VOL=SER=?BKVOL1,SPACE=(CYL,(?JNLSIZE,5)),STORCLAS=?SCBVOL1,        21820000
//   MGMTCLAS=?MCDFHSM                                                  21830000
//JRNLV2 DD DSN=?UID.JRNL.BACKUP.V0000002,DISP=(,CATLG),UNIT=?BKUNIT2,  21840000
//   VOL=SER=?BKVOL2,SPACE=(CYL,(?JNLSIZE,5)),STORCLAS=?SCBVOL1,        21850000
//   MGMTCLAS=?MCDFHSM                                                  21860000
//JRNLV3 DD DSN=?UID.JRNL.BACKUP.V0000003,DISP=(,CATLG),UNIT=?BKUNIT3,  21870000
//   VOL=SER=?BKVOL3,SPACE=(CYL,(?JNLSIZE,5)),STORCLAS=?SCBVOL1,        21880000
//   MGMTCLAS=?MCDFHSM                                                  21890000
//JRNLV4 DD DSN=?UID.JRNL.BACKUP.V0000004,DISP=(,CATLG),UNIT=?BKUNIT4,  21900000
//   VOL=SER=?BKVOL4,SPACE=(CYL,(?JNLSIZE,5)),STORCLAS=?SCBVOL1,        21910000
//   MGMTCLAS=?MCDFHSM                                                  21920000
./ ADD NAME=ALLOSDSP                                                    21930000
//ALLOSDSP JOB ?JOBPARM                                                 21940000
//*                                                                     21950000
//*****************************************************************/    21960000
//*   THIS SAMPLE JOB DEFINES AND INITIALIZES A SMALL-DATA-SET-   */    21970000
//*   PACKING DATA SET ON A MIGRATION LEVEL 1 VOLUME.             */    21980000
//*                                                               */    21990000
//*   THE DATA SET NAME IS REQUIRED TO BE ?UID.SMALLDS.V?SDSPVOL  */    22000000
//*   WHERE ?UID IS THE AUTHORIZED DFSMSHSM USER ID AND WHERE     */    22010000
//*   ?SDSPVOL IS THE VOLUME SERIAL NUMBER OF A MIGRATION LEVEL 1 */    22020000
//*   VOLUME.                                                     */    22030000
//*                                                               */    22040000
//* (NOTE: UID AUTHORIZATION IS VALID IN A NON-FACILITY CLASS    *//    22050000
//* ENVIRONMENT ONLY, OTHERWISE, FACILITY CLASS PROFILES WILL BE *//    22060000
//* USED FOR AUTHORIZATION CHECKING.)                            *//    22070000
//*                                                               */    22080000
//*                                                               */    22090000
//*   AFTER YOU ALLOCATE THE SMALL-DATA-SET-PACKING DATA SET ON A */    22100000
//*   MIGRATION LEVEL 1 VOLUME, YOU MUST SPECIFY THE              */    22110000
//*   SMALLDATASETPACKING PARAMETER ON THE SETSYS COMMAND IN THE  */    22120000
//*   ARCCMD__ PARMLIB MEMBER AND ON THE ADDVOL COMMAND FOR THE   */    22130000
//*   VOLUME THAT CONTAINS THE SMALL-DATA-SET-PACKING DATA SET.   */    22140000
//*                                                               */    22150000
//*   CHANGE THE PARAMETERS LISTED BELOW TO VALID VALUES FOR YOUR */    22160000
//*   SYSTEM.                                                     */    22170000
//*****************************************************************/    22180000
//*  PARAMETER  -  PARAMETER DESCRIPTION                                22190000
//*                                                                     22200000
//*  ?SDSPCIS   -  CONTROL INTERVAL SIZE VALUE FOR THE DATA COMPONENT   22210000
//*                OF THE SDSP DATA SET. IF THE SDSP UNIT TYPE IS       22220000
//*                3350, REPLACE ?SDSPCIS WITH 16384.  IF THE SDSP      22230000
//*                UNIT TYPE IS 3380, REPLACE WITH 20480.               22240000
//*                IF THE SDSP UNIT TYPE IS 3390, REPLACE WITH 26624.   22250000
//*  ?SDSPUNT   -  UNIT TYPE FOR MIGRATION LEVEL 1 VOLUME TO            22260000
//*                CONTAIN SMALL-DATA-SET-PACKING DATA SET.             22270000
//*  ?SDSPVOL   -  VOLUME SERIAL OF THE MIGRATION LEVEL 1 VOLUME        22280000
//*                TO CONTAIN SMALL-DATA-SET-PACKING DATA SET.          22290000
//*  ?UID       -  AUTHORIZED USER ID (1 TO 7 CHARS) FOR THE DFSMShsm   22300000
//*                START PROCEDURE, IN A NON FACILITY CLASS ENVIRONMENT.22310000
//*                USED AS THE HIGH-LEVEL QUALIFIER OF DFSMSHSM         22320000
//*                DATA SETS.                                           22330000
//*                                                                     22340000
//* NOTE:         ENSURE THAT THE SMALL-DATA-SET-PACKING DATA SET       22350000
//*               IS NOT ALLOCATED ON AN SMS VOLUME. THE DATA SET       22360000
//*               SHOULD BE DEFINED IN A STORAGE CLASS FILTER TO        22370000
//*               EXCLUDE IT FROM AN SMS VOLUME AS THE OTHER DFSMShsm   22380000
//*               DATA SETS ARE.                                        22390000
//*****************************************************************/    22400000
//*****************************************************************/    22410000
//* CREATE A ONE-RECORD, SEQUENTIAL DATA SET TO BE USED LATER TO  */    22420000
//* PRIME VSAM CLUSTERS DEFINED FOR DFSMSHSM.                     */    22430000
//*****************************************************************/    22440000
//*                                                                     22450000
//IEBDG    EXEC PGM=IEBDG                                               22460000
//SYSPRINT DD SYSOUT=*                                                  22470000
//PRIMER   DD DSN=?UID.SDSP.PRIMER,DISP=(NEW,CATLG),UNIT=SYSDA,         22480000
// DCB=(RECFM=F,LRECL=200,BLKSIZE=200),SPACE=(TRK,(1))                  22490000
//SYSIN    DD *                                                         22500000
 DSD OUTPUT=(PRIMER)                                                    22510000
 FD NAME=A,LENGTH=44,STARTLOC=1,PICTURE=44,                            X22520000
   'Z9999999999999999999999999999999999999999999'                       22530000
 CREATE NAME=A                                                          22540000
 END                                                                    22550000
//STEP1 EXEC PGM=IDCAMS,REGION=512K                                     22560000
//SYSPRINT DD SYSOUT=*                                                  22570000
//INPRIMER DD DSN=?UID.SDSP.PRIMER,DISP=(OLD,DELETE)                    22580000
//SDSP1 DD UNIT=?SDSPUNT,VOL=SER=?SDSPVOL,DISP=SHR                      22590000
//SYSIN DD *                                                            22600000
 DEFINE CLUSTER (NAME(?UID.SMALLDS.V?SDSPVOL) VOLUMES(?SDSPVOL) -       22610000
        CYLINDERS(5 0) FILE(SDSP1) -                                    22620000
        RECORDSIZE(2093 2093) FREESPACE(0 0) -                          22630000
        INDEXED KEYS(45 0) -                                            22640000
        SPEED BUFFERSPACE(530432) -                                     22650000
        UNIQUE NOWRITECHECK) -                                          22660000
        DATA -                                                          22670000
        (CONTROLINTERVALSIZE(?SDSPCIS)) -                               22680000
        INDEX -                                                         22690000
        (CONTROLINTERVALSIZE(1024))                                     22700000
 REPRO ODS('?UID.SMALLDS.V?SDSPVOL') INFILE(INPRIMER)                   22710000
./ ADD NAME=HSMPRESS                                                    22720000
//COMPRESS JOB ?JOBPARM                                                 22730000
//*                                                                     22740000
//****************************************************************/     22750000
//*  THIS SAMPLE JOB IS TO COMPRESS THE CONTROL DATA SETS.       */     22760000
//*                                                              */     22770000
//*  NOTE:  BEFORE RUNNING THIS JOB, YOU MUST SHUT DOWN ALL      */     22780000
//*         INSTANCES OF DFSMSHSM THAT SHARE THE CDS'S.          */     22790000
//*                                                              */     22800000
//* REPLACE THE ?UID VARIABLE WITH THE NAME OF THE DFSMSHSM-     */     22810000
//* AUTHORIZED USER ID (1 TO 7 CHARACTERS).                      */     22820000
//*                                                              */     22830000
//* (NOTE: UID AUTHORIZATION IS VALID IN A NON-FACILITY CLASS    */     22840000
//* ENVIRONMENT ONLY, OTHERWISE, FACILITY CLASS PROFILES WILL BE */     22850000
//* USED FOR AUTHORIZATION CHECKING.)                            */     22860000
//*                                                              */     22870000
//* REPLACE THE ?NEW VARIABLE WITH AN EXTENSION NAME FOR THE     */     22880000
//* NEW CDS BEING CREATED FROM THE IMPORT.  BECAUSE OF THE NAME  */     22890000
//* CHANGE MADE TO THE CDS, MAKE SURE TO UPDATE THE ASSOCIATED   */     22900000
//* PROCLIB MEMBER WITH THE NEW CDS NAME(S).                     */     22910000
//*                                                              */     22920000
//* IF YOU WISH TO ENLARGE THE CDS, PREALLOCATE A LARGER DATA    */     22930000
//* SET WITH THE NEW SIZE (EITHER A NEW DATA SET, OR DELETE THE  */     22940000
//* OLD DATA SET AND REALLOCATE WITH SAME NAME) THEN IMPORT.     */     22950000
//* AGAIN, IF A NEW NAME IS USED, BE SURE TO UPDATE THE          */     22960000
//* ASSOCIATED PROCLIB MEMBER WITH THE NEW CDS NAME(S).          */     22970000
//*                                                              */     22980000
//* THIS PROCEDURE ASSUMES THAT THE MCDS AND BCDS ARE SINGLE     */     22990000
//* CLUSTER CDS'S.                                               */     23000000
//*                                                              */     23010000
//* Note: xCDS'S DD STMTS WITH DISP=OLD WILL KEEP OTHER JOBS     */     23020000
//*  FROM ACCESSING THE CDS'S DURING THE EXPORT/IMPORT PROCESS.  */     23030000
//****************************************************************/     23040000
//*                                                                     23050000
//ALLOCATE EXEC PGM=IEFBR14                                             23060000
//EXPMCDS DD DSN=?UID.EXPORT.MCDS,DISP=(,CATLG),                        23070000
// UNIT=SYSDA,SPACE=(CYL,(20,2))                                        23080000
//EXPBCDS DD DSN=?UID.EXPORT.BCDS,DISP=(,CATLG),                        23090000
// UNIT=SYSDA,SPACE=(CYL,(20,2))                                        23100000
//EXPOCDS DD DSN=?UID.EXPORT.OCDS,DISP=(,CATLG),                        23110000
// UNIT=SYSDA,SPACE=(CYL,(20,2))                                        23120000
//*                                                                     23130000
//IDCAMS EXEC PGM=IDCAMS,REGION=512K                                    23140000
//MCDS DD DSN=?UID.MCDS,DISP=OLD                                        23150000
//BCDS DD DSN=?UID.BCDS,DISP=OLD                                        23160000
//OCDS DD DSN=?UID.OCDS,DISP=OLD                                        23170000
//SYSPRINT DD SYSOUT=*                                                  23180000
//SYSIN DD *                                                            23190000
 LISTCAT ENT(?UID.MCDS ?UID.BCDS ?UID.OCDS) ALL                         23200000
 EXAMINE NAME(?UID.MCDS) INDEXTEST                                      23210000
 IF LASTCC = 0 THEN -                                                   23220000
        EXPORT ?UID.MCDS ODS(?UID.EXPORT.MCDS) TEMPORARY                23230000
 IF LASTCC = 0 THEN -                                                   23240000
        IMPORT IDS(?UID.EXPORT.MCDS) ODS(?UID.MCDS.?NEW) -              23250000
        OBJECTS -                                                       23260000
         ((?UID.MCDS -                                                  23270000
         NEWNAME(?UID.MCDS.?NEW)) -                                     23280000
          (?UID.MCDS.DATA -                                             23290000
           NEWNAME(?UID.MCDS.?NEW.DATA)) -                              23300000
          (?UID.MCDS.INDEX -                                            23310000
           NEWNAME(?UID.MCDS.?NEW.INDEX))) -                            23320000
        CATALOG(?UCATNAM)                                               23330000
 IF MAXCC = 0 THEN -                                                    23340000
        DELETE ?UID.EXPORT.MCDS NONVSAM                                 23350000
 EXAMINE NAME(?UID.BCDS) INDEXTEST                                      23360000
 IF LASTCC = 0 THEN -                                                   23370000
        EXPORT ?UID.BCDS ODS(?UID.EXPORT.BCDS) TEMPORARY                23380000
 IF LASTCC = 0 THEN -                                                   23390000
        IMPORT IDS(?UID.EXPORT.BCDS) ODS(?UID.BCDS.?NEW) -              23400000
        OBJECTS -                                                       23410000
         ((?UID.BCDS -                                                  23420000
         NEWNAME(?UID.BCDS.?NEW)) -                                     23430000
          (?UID.BCDS.DATA -                                             23440000
           NEWNAME(?UID.BCDS.?NEW.DATA)) -                              23450000
          (?UID.BCDS.INDEX -                                            23460000
           NEWNAME(?UID.BCDS.?NEW.INDEX))) -                            23470000
        CATALOG(?UCATNAM)                                               23480000
 IF MAXCC = 0 THEN -                                                    23490000
        DELETE ?UID.EXPORT.BCDS NONVSAM                                 23500000
 EXAMINE NAME(?UID.OCDS) INDEXTEST                                      23510000
 IF LASTCC = 0 THEN -                                                   23520000
        EXPORT ?UID.OCDS ODS(?UID.EXPORT.OCDS) TEMPORARY                23530000
 IF LASTCC = 0 THEN -                                                   23540000
        IMPORT IDS(?UID.EXPORT.OCDS) ODS(?UID.OCDS.?NEW) -              23550000
        OBJECTS -                                                       23560000
         ((?UID.OCDS -                                                  23570000
         NEWNAME(?UID.OCDS.?NEW)) -                                     23580000
          (?UID.OCDS.DATA -                                             23590000
           NEWNAME(?UID.OCDS.?NEW.DATA)) -                              23600000
          (?UID.OCDS.INDEX -                                            23610000
           NEWNAME(?UID.OCDS.?NEW.INDEX))) -                            23620000
        CATALOG(?UCATNAM)                                               23630000
 IF MAXCC = 0 THEN -                                                    23640000
        DELETE ?UID.EXPORT.OCDS NONVSAM                                 23650000
 LISTCAT ENT(?UID.MCDS.NEW ?UID.BCDS.NEW ?UID.OCDS.NEW) ALL             23660000
/*                                                                      23670000
$$                                                                      23680000

./ ADD NAME=ARCTOOLS
//HSMTOOLS JOB  ?JOBPARM
//HSMSTEP1 EXEC PGM=IEBGENER
//*
//********************************************************************
//* THESE ARE THE SAMPLE PROGRAMS FOR DFSMShsm.  THIS JOB            *
//* CREATES A PDS NAMED HSM.SAMPLE.TOOL CONTAINING THE FOLLOWING     *
//* PROGRAMS:                                                        *
//*                                                                  *
//* DCOLREXX - SAMPLE REXX EXEC TO SCAN DFHSM DCOLLECT DATA          *
//*            (originally in ARCUTILP mapping macro comment area)   *
//* SPLITCDS - ALLOCATES DATA SETS NECESSARY TO ANALYZE THE      à01C*
//*            MCDS/BCDS AND INVOKES SPLITER TO DO THE ANALYSIS  à01C*
//* SPLITER  - SAMPLE REXX EXEC FOR KEYRANGES TO SPLIT MCDS/BCDS     *
//*                                                             1à03D*
//* PREMERGE - SAMPLE JCL TO ASSIST IN PLANNING OF A CDS MERGE   à05A*
//* HALTER   - REXX program to ALTER the Management Class and    à02A*
//*            Storage Class of a Migrated Data Set.             à02A*
//* GENMASK  - REXX program to convert a list of data set masks  àZJA*
//*            to an assembler subprogram that can be included   àZJA*
//*            in dataset-related installation exits.            àZJA*
//* QUERYSET - REXX program to issue QUERY SETSYS from extended  àZJA*
//*            console with CART support.  Results are returned  àZJA*
//*            in variables that can then be processed.          àZJA*
//* SCANBLOG - REXX program to scan a week of backup activity    àZJA*
//*            logs and provide summary results                  àZJA*
//* SCANMLOG - REXX program to scan a week of migration activity àZJA*
//*            logs and provide summary results                  àZJA*
//* SCANFSR  - REXX program to scan FSR data in SMF and provide  àZJA*
//*            summary results                                   àZJA*
//* FSRSTAT  - REXX program to scan FSR data in SMF and provide  à06A*
//*            statistical results                               à06A*
//* FINDKRDS - Sample REXX exec that will read the MCDS and      à08A*
//*            identify all migrated VSAM keyrange data sets.    à08A*
//* BCDSKEYR - Sample JCL to identify VSAM key range data sets   à09A*
//*            that were backed up using HSM as the data mover.  à09A*
//*                                                                  *
//* THE FOLLOWING REXX EXECS ARE PART OF THE ABARS UTILITIES         *
//* PACKAGE.                                                     à04A*
//*                                                                  *
//* ABARPOST - DRIVER EXEC FOR ABARPOST FUNCTION                 à04A*
//* ARAUDIT  - CALL DR10 TO SETUP GLOBAL PARAMETERS              à04A*
//* ARECPROC - DRIVER EXEC FOR ARECPROC FUNCTION                 à04A*
//* ARECSNGL - PROVIDES SINGLE DATA SET RESTORE FUNCTION         à04A*
//* DRAUDIT  - CREATES AUDIT SUMMARY REPORT                      à04A*
//* DRBACKUP - DRIVER EXEC FOR DRBACKUP FUNCTION                 à04A*
//* DRSCAN   - DRIVER EXEC FOR DRSCAN FUNCTION                   à04A*
//* DRSEO    - SIMILAR TO DRSCAN BUT LISTS CANDIDATE FOR EXCLUDE à04A*
//* DR10     - ABARS UTILITIES GLOBAL VARIABLES                  à04A*
//* DR11     - PERFORMS EDITS ON PARMS PASSED TO DRBACKUP        à04A*
//* DR12     - READS DCOLLECT DATA FOR AGGREGATE STRUCTURE       à04A*
//* DR13     - COPIES INPUT DATA SET TO SELECTION DATA SET       à04A*
//* DR14     - GET ACTIVITY LOG NAME FOR AGGREGATE               à04A*
//* DR14AM   - DR14 WHEN USING AUTOMATE FUNCTION                 à04A*
//* DR14NV   - DR14 WHEN USING NETVIEW FUNCTION                  à04A*
//* DR15     - CREATE REVISED INPUT                              à04A*
//* DR151    - CALLED BY DR15                                    à04A*
//* DR152    - CALLED BY DR15                                    à04A*
//* DR16     - PREVENTS ABACKUP FROM ATTEMPTING EXECUTION        à04A*
//* DR21     - PARSES THE ABARS ACTIVITY LOG                     à04A*
//* DR211    - CALLED BY DR21                                    à04A*
//* DR22     - WRITES REPORT TO LOG DDNAME                       à04A*
//* DR31     - READ, PARSE, CREATE, AND EXECUTE ARECOVER CMD     à04A*
//* DR32     - READS THE ARECOVER LOG AND TRACKS ARECOVERS       à04A*
//* DR41     - CREATES AUDIT DETAIL REPORT                       à04A*
//* DR51     - READ ACTIVITY LOG AND LIST DATA SET INFORMATION   à04A*
//* DR61     - REPORT OF DATASET LOCATION FOR AGGREGATE          à04A*
//* DR70     - ARECSNGL PARMS VALIDATION                         à04A*
//* DR71     - SETUP RESTART DATASET FOR AGGREGATE RESTORE       à04A*
//* DR711    - DFSMS/HSM PREFIX                                  à04A*
//* DR72     - CREATE ARECOVER COMMAND FOR RESTART               à04A*
//*                                                                  *
//* FOLLOWING ARE FIELDS IDENTIFIED THAT MUST BE CHANGED TO EXECUTE  *
//* THIS BATCH JOB:                                              à01C*
//*                                                                  *
//* ?JOBPARM  - JOB CARD WITH APPROPRIATE INFORMATION FOR YOUR       *
//*             INSTALLATION.                                    à01C*
//********************************************************************
//* $42=OW04515,120,042194,THP5: NEW MEMBER: HALTER              à42A*
//* $03=OW06826,120,091494,THP6: REMOVE SPLITDOC (SUPPLEMENTAL       *
//*                              DOCUMENTATION FOR SPLIT MCDS/BCDS). *
//*                                                              à03A*
//* $04=OW15346,130,083095,THB7: ADD ABARS UTILITIES AND FIX         *
//*                              PROBLEM IN SPLITTER                 *
//* $WI=HSMWI,140,082096,THP5: HALTER updated to use IDCAMS      àWIA*
//*                            ALTER STORCLAS MGMTCLAS directly  àWIA*
//* $RI=HSMRI,140,090296,THWG: CHANGE FORMAT OF SPLITCDS OUTPUT  àRIA*
//* $ZJ-HSMZJ,150,100598,THP5: ADD NEW EXECS                     àZJA*
//* $05=OW37110,140,052099,THLC: ADD PREMERGE JOB                à05A*
//* $06=OW38584,160,052199,THP5: INCREASE SPLITCDS TEMP TO 6552  à06A*
//*                              LRECL (6544+8 RDW)              à06A*
//* $07=OW41372,150,112999,THP6: Apar OW41372, SPLIITER exec change  *
//*                              to correct problem associated with  *
//*                              changing CDS key ranges or number   *
//*                              of clusters in CDS's.           à07A*
//* $ZL=HSMZL,130,061901,THGS: K170713 - Update comments.        àZLA*
//* $08=OW49809,160,060501,THA5: Find migrated VSAM keyrange     à08A*
//*                              datasets with FINDKRDS.         à08A*
//* $09=OW57104,130,011402,THP6: Apar OW57104, fix bug in KEYRNGID   *
//*                              exec regarding data mover check.    *
//*                              Also, added new member BCDSKEYR.    *
//*                              It is can be used to indicate VSAM  *
//*                              key range data sets that were backed*
//*                              up by HSM.                      à09A*
//* $FQ=HSMFQ,190,072606,THI9-16: FSR Improvements               àFQA*
//* $ZR=HSMZR,1A0,021507,THI9-15: K1A0324, Update comments       àZRA*
//* $ZR=HSMZR,1A0,092807,THMV:    K1A1549 SPLITER EXEC           àZRA*
//* $ZR=HSMZR,1A0,101507,THMV:    K1A1619, Update comments       àZRA*
//* $FV=HSMFV,D10,090810,THMB:    KFI0650 message update         àFVA*
//* $EY=HSMEY,230,022516,THJC:    Access Method Encryption       àEYA*
//* $FY=HSMFY,230,012317,THJC: ZFS Enhancements                  àFYA*/
//* $EX=OA52810,230,100917,THAM:  ENCRYPTION INFO IN CDS RECORDS àEXA*
//* $SZ=HSMSZ,240,091418,THAM: SPLITER Tool Enhancement          àSZA*
//*                            RTC 240571                        àSZA*
//* $10=OA54965,240,122017,THI9-6: VSAMDB support                à10A*
//* $C8=OA59466,240,040120,THL9: TCT Compression Support         àC8A*
//********************************************************************
//*
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD UNIT=SYSDA,
//            DSN=HSM.SAMPLE.TOOL(DCOLREXX),
//            DISP=(NEW,CATLG),
//            DCB=(RECFM=FB,LRECL=80),
//            SPACE=(CYL,(3,1,20))
//SYSIN    DD DUMMY
//SYSUT1   DD DATA,DLM='$$'
        /***********************************************************/
        /* HERE IS AN EXAMPLE TSO/E REXX EXEC THAT READS RECORDS   */
        /* PRODUCED BY DCOLLECT AND CREATES A SIMPLE REPORT.       */
        /*                                                         */
        /* THERE ARE MANY MEANS OF PROCESSING THIS DATA, REXX IS   */
        /* JUST ONE OF THEM.                                       */
        /*                                                         */
        /* FOR MORE EXAMPLES OF REPORTS THAT CAN BE CREATED FROM   */
        /* THESE RECORDS, SEE THE FOLLOWING PUBLICATIONS:          */
        /*                                                         */
        /* DFSMS ACCESS METHOD SERVICES FOR CATALOGS (SC26 - 7326) */
        /*                                                     àZLC*/
        /*                                                         */
        /* NOTE: THE REXX LANGUAGE IS A GENERAL-USE PROGRAMMING    */
        /*       INTERFACE.                                        */
        /***********************************************************/

        /***********************************************************/
        /* OPEN THE INPUT FILE (CONTAINING DCOLLECT RECORDS)       */
        /***********************************************************/
         INNAME = "TC37378.NOV17.DATA"
         "ALLOC F(INFILE) DA("INNAME") SHR"
         IF RC^= 0 THEN DO
            SAY  'ALLOCATION OF ('INNAME') FAILED'
            EXIT 8
            END

        /***********************************************************/
        /* OPEN THE OUTPUT FILE (CONTAINING YOUR REPORT)           */
        /***********************************************************/
         OUTNAME = "TC37378.NOV17.REPORT"
         "ALLOC F(OUTFILE) DA("OUTNAME")"
         IF RC^= 0 THEN DO
            SAY  'ALLOCATION OF ('OUTNAME') FAILED'
            EXIT 12
            END

        /***********************************************************/
        /* PROCESS EACH RECORD UNTIL END-OF-FILE REACHED           */
        /***********************************************************/
         EOF = 'NO'
         DO WHILE EOF='NO'
           "EXECIO 1 DISKR INFILE"
           IF RC^= 0 THEN
              EOF = 'YES'
           ELSE DO
              PARSE PULL RECORD
        /***********************************************************/
        /* DETERMINE THE RECORD TYPE (M,B,C,T)                     */
        /***********************************************************/
              DCURCTYP=SUBSTR(RECORD,5,2)
                 SELECT
        /***********************************************************/
        /* PROCESS MIGRATED DATA SET INFORMATION RECORD            */
        /***********************************************************/
                 WHEN(DCURCTYP='M ') THEN DO
                                     CALL UMRECORD
                                     CALL DISPLAYUM
                                     END
        /***********************************************************/
        /* PROCESS BACKUP VERSION INFORMATION RECORD               */
        /***********************************************************/
                 WHEN(DCURCTYP='B ') THEN DO
                                     CALL UBRECORD
                                     CALL DISPLAYUB
                                     END
        /***********************************************************/
        /* PROCESS DASD CAPACITY PLANNING RECORD                   */
        /***********************************************************/
                 WHEN(DCURCTYP='C ') THEN DO
                                     CALL UCRECORD
                                     CALL DISPLAYUC
                                     END
        /***********************************************************/
        /* PROCESS TAPE CAPACITY PLANNING RECORD                   */
        /***********************************************************/
                 WHEN(DCURCTYP='T ') THEN DO
                                     CALL UTRECORD
                                     CALL DISPLAYUT
                                     END
        /***********************************************************/
        /* DO NOT PROCESS OTHER RECORD TYPES                       */
        /***********************************************************/
                 OTHERWISE SAY "UNKNOWN RECORD TYPE="DCURCTYP
                 END
              END
         END
         "FREEALL"
         EXIT
        /***********************************************************/
        /* PROCESS MIGRATED DATA SET INFORMATION RECORD -          */
        /*   CONVERT THE RECORD INTO INDIVIDUAL FIELD VARIABLES.   */
        /***********************************************************/
         UMRECORD:
               UMDSNAM = SUBSTR(RECORD,25,44)
               UMFLAG1 = BITSTR(SUBSTR(RECORD,69,1))
               UMLEVEL = SUBSTR(UMFLAG1,1,2)
               UMCHIND = SUBSTR(UMFLAG1,3,1)
               UMSDSP = SUBSTR(UMFLAG1,4,1)                 /* àEYA*/
               UMDEVCL = SUBSTR(RECORD,70,1)
               UMDSORG = C2X(SUBSTR(RECORD,71,2))
               UMDSIZE = C2D(SUBSTR(RECORD,73,4))
               UMTIME  = C2X(SUBSTR(RECORD,77,4))
               UMDATE = C2X(SUBSTR(RECORD,81,4))
               UMDATCL = SUBSTR(RECORD,87,30)
               UMSTGCL = SUBSTR(RECORD,119,30)
               UMMGTCL = SUBSTR(RECORD,151,30)
               UMRECRD = C2X(SUBSTR(RECORD,181,1))
               UMRECOR = C2X(SUBSTR(RECORD,182,1))
               UMBKLNG = C2D(SUBSTR(RECORD,183,2))
               UMFLAG2 = BITSTR(SUBSTR(RECORD,185,1))
               UMRACFD = SUBSTR(UMFLAG2,1,1)
               UMGDS   = SUBSTR(UMFLAG2,2,1)
               UMREBLK = SUBSTR(UMFLAG2,3,1)
               UMPDSE  = SUBSTR(UMFLAG2,4,1)
               UMSMSM  = SUBSTR(UMFLAG2,5,1)
               UMCOMPR  = SUBSTR(UMFLAG2,6,1)               /* àEYA*/
               UMLFS  = SUBSTR(UMFLAG2,7,1)                 /* àEYA*/
               UMENCRP  = SUBSTR(UMFLAG2,8,1)               /* àEYA*/
               UMPDSEV = C2D(SUBSTR(RECORD,186,1))          /* àEYA*/
               UMNMIG  = C2D(SUBSTR(RECORD,187,2))
               UMALLSP = C2D(SUBSTR(RECORD,189,4))
               UMUSESP = C2D(SUBSTR(RECORD,193,4))
               UMRECSP = C2D(SUBSTR(RECORD,197,4))
               UMCREDT = C2X(SUBSTR(RECORD,201,4))
               UMEXPDT = C2X(SUBSTR(RECORD,205,4))
               UMLBKDT = C2X(SUBSTR(RECORD,209,8))
               UMLRFDT = C2X(SUBSTR(RECORD,217,4))
               UM_USER_DATASIZE = C2D(SUBSTR(RECORD,221,4)) /* àEYA*/
               UM_COMP_DATASIZE = C2D(SUBSTR(RECORD,225,4)) /* àEYA*/
               UMFRVOL = SUBSTR(RECORD,229,6)               /* àEYA*/
               UMLRECL  = C2X(SUBSTR(RECORD,235,4))         /* àEYA*/
               UMFLAG3  = BITSTR(SUBSTR(RECORD,239,1))      /* àEYA*/
               UMEMPTY = SUBSTR(UMFLAG3,1,1)                /* àEYA*/
               UM_CA_RECLAIM_ELIG = SUBSTR(UMFLAG3,2,1)     /* àEYA*/
               UMZFS = SUBSTR(UMFLAG3,3,1)                  /* àFYA*/
               UMENCRDP = SUBSTR(UMFLAG3,4,1)               /* àEXA*/
               UM_BSON = SUBSTR(UMFLAG3,5,1)                /* à10A*/
               UM_JSON = SUBSTR(UMFLAG3,6,1)                /* à10A*/
               UM_CLD_COMP = SUBSTR(UMFLAG3,7,1)            /* àC8A*/
               UM_CLD_ENCRYPT = SUBSTR(UMFLAG3,8,1)         /* àC8A*/
               UMFLAG4   = BITSTR(SUBSTR(RECORD,240,1))     /* àEYA*/
               UMALLSP_FMB =  SUBSTR(UMFLAG4,1,1)           /* àEYA*/
               UMUSESP_FMB = SUBSTR(UMFLAG4,2,1)            /* àEYA*/
               UMRECSP_FMB = SUBSTR(UMFLAG4,3,1)            /* àEYA*/
               UMDSIZE_FMB = SUBSTR(UMFLAG4,4,1)            /* àEYA*/
               UM_FMB = SUBSTR(UMFLAG4,5,1)                 /* àEYA*/
               UM_CLD_COMP_PERCENT=C2D(SUBSTR(RECORD,321,1)) /*
                                                               àC8A*/
               UMENCRPT = C2X(SUBSTR(RECORD,353,2))         /* àEXA*/
               UMENCRPL = SUBSTR(RECORD,355,64)             /* àEXA*/
               UMENCRPR = SUBSTR(RECORD,419,30)             /* àEXA*/
         RETURN
        /***********************************************************/
        /* PROCESS MIGRATED DATA SET INFORMATION RECORD -          */
        /*   WRITE THE FORMATTED FIELDS TO YOUR REPORT             */
        /***********************************************************/
         DISPLAYUM:
         PUSH "M:DSN="UMDSNAM "MIGLEVEL="UMLEVEL "CHANGED="UMCHIND
         "EXECIO 1  DISKW OUTFILE"
         RETURN
        /***********************************************************/
        /* PROCESS BACKUP VERSION INFORMATION RECORD               */
        /*   CONVERT THE RECORD INTO INDIVIDUAL FIELD VARIABLES.   */
        /***********************************************************/
         UBRECORD:
               UBDSNAM = SUBSTR(RECORD,25,44)
               UBFLAG1 = BITSTR(SUBSTR(RECORD,69,1))
               UBINCAT = SUBSTR(UBFLAG1,1,1)                /* àEYA*/
               UBNOENQ = SUBSTR(UBFLAG1,2,1)                /* àEYA*/
               UBBWO = SUBSTR(UBFLAG1,3,1)                  /* àEYA*/
               UBNQN1 = SUBSTR(UBFLAG1,4,1)                 /* àEYA*/
               UBNQN2 = SUBSTR(UBFLAG1,5,1)                 /* àEYA*/
               UBDEVCL = SUBSTR(RECORD,70,1)
               UBDSORG = C2X(SUBSTR(RECORD,71,2))
               UBDSIZE = C2D(SUBSTR(RECORD,73,4))
               UBTIME  = C2X(SUBSTR(RECORD,77,4))
               UBDATE = C2X(SUBSTR(RECORD,81,4))
               UBDATCL = SUBSTR(RECORD,87,30)
               UBSTGCL = SUBSTR(RECORD,119,30)
               UBMGTCL = SUBSTR(RECORD,151,30)
               UBRECRD = C2X(SUBSTR(RECORD,181,1))
               UBRECOR = C2X(SUBSTR(RECORD,182,1))
               UBBKLNG = C2D(SUBSTR(RECORD,183,2))
               UBFLAG2 = BITSTR(SUBSTR(RECORD,185,1))
               UBRACFD = SUBSTR(UBFLAG2,1,1)
               UBGDS   = SUBSTR(UBFLAG2,2,1)
               UBREBLK = SUBSTR(UBFLAG2,3,1)
               UBPDSE  = SUBSTR(UBFLAG2,4,1)
               UBSMSM  = SUBSTR(UBFLAG2,5,1)
               UBCOMPR = SUBSTR(UBFLAG2,6,1)                /* àEYA*/
               UBLFS = SUBSTR(UBFLAG2,7,1)                  /* àEYA*/
               UBNEWNAME = SUBSTR(UBFLAG2,8,1)              /* àEYA*/
               UBFLAG3 = BITSTR(SUBSTR(RECORD,186,1))       /* àEYA*/
               UBNOSPHERE = SUBSTR(UBFLAG3,1,1)             /* àEYA*/
               UBGVCN = SUBSTR(UBFLAG3,2,1)                 /* àEYA*/
               UBF_RETAIN_SPCD = SUBSTR(UBFLAG3,3,1)        /* àEYA*/
               UBF_NEVER_EXP = SUBSTR(UBFLAG3,4,1)          /* àEYA*/
               UBENCRP = SUBSTR(UBFLAG3,5,1)                /* àEYA*/
               UBZFS = SUBSTR(UBFLAG3,6,1)                  /* àFYA*/
               UBENCRDP = SUBSTR(UBFLAG3,7,1)               /* àEXA*/
               UB_RETAINDAYS = C2D(SUBSTR(RECORD,187,2))    /* àEYA*/
               UBALLSP = C2D(SUBSTR(RECORD,189,4))
               UBUSESP = C2D(SUBSTR(RECORD,193,4))
               UBRECSP = C2D(SUBSTR(RECORD,197,4))
               UB_USER_DATASIZE = C2D(SUBSTR(RECORD,201,4)) /* àEYA*/
               UB_COMP_DATASIZE = C2D(SUBSTR(RECORD,205,4)) /* àEYA*/
               UBFRVOL = SUBSTR(RECORD,209,6)               /* àEYA*/
               UBFLAG4   = BITSTR(SUBSTR(RECORD,215,1))     /* àEYA*/
               UBALLSP_FMB =  SUBSTR(UMFLAG4,1,1)           /* àEYA*/
               UBUSESP_FMB = SUBSTR(UMFLAG4,2,1)            /* àEYA*/
               UBRECSP_FMB = SUBSTR(UMFLAG4,3,1)            /* àEYA*/
               UBDSIZE_FMB = SUBSTR(UMFLAG4,4,1)            /* àEYA*/
               UB_FMB = SUBSTR(UMFLAG4,5,1)                 /* àEYA*/
               UB_BSON = SUBSTR(UBFLAG4,6,1)                /* à10A*/
               UB_JSON = SUBSTR(UBFLAG4,7,1)                /* à10A*/
               UBPDSEV = C2D(SUBSTR(RECORD,216,1))          /* àEYA*/
               UBENCRPT = C2X(SUBSTR(RECORD,229,2))         /* àEXA*/
               UBENCRPL = SUBSTR(RECORD,231,64)             /* àEXA*/
               UBENCRPR = SUBSTR(RECORD,295,30)             /* àEXA*/
         RETURN
        /***********************************************************/
        /* PROCESS BACKUP VERSION INFORMATION RECORD               */
        /*   WRITE THE FORMATTED FIELDS TO YOUR REPORT             */
        /***********************************************************/
         DISPLAYUB:
         PUSH "B:DSN="UBDSNAM "SMS MGMTCLASS="UBMGTCL
         "EXECIO  1 DISKW OUTFILE"
         RETURN
        /***********************************************************/
        /* PROCESS DASD CAPACITY PLANNING RECORD                   */
        /*   CONVERT THE RECORD INTO INDIVIDUAL FIELD VARIABLES.   */
        /***********************************************************/
         UCRECORD:
               UCVOLSR = SUBSTR(RECORD,25,6)
               UCCOLDT = C2X(SUBSTR(RECORD,31,4))
               UCFLAG1 = BITSTR(SUBSTR(RECORD,35,1))
               UCLEVEL = SUBSTR(UCFLAG1,1,2)
               UCTOTAL = C2D(SUBSTR(RECORD,37,4))
               UCTGOCC = C2D(SUBSTR(RECORD,41,1))
               UCTROCC = C2D(SUBSTR(RECORD,42,1))
               UCBFOCC = C2D(SUBSTR(RECORD,43,1))
               UCAFOCC = C2D(SUBSTR(RECORD,44,1))
               UCNOMIG = C2D(SUBSTR(RECORD,45,1))
               UCNINTV = C2D(SUBSTR(RECORD,46,1))
               UCINTVM = C2D(SUBSTR(RECORD,47,1))
         RETURN
         DISPLAYUC:
         PUSH "C:VOLSER="UCVOLSR "MIGLEVEL="UCLEVEL "DATE="UCCOLDT
         "EXECIO  1 DISKW OUTFILE"
         RETURN
        /***********************************************************/
        /* PROCESS TAPE CAPACITY PLANNING RECORD                   */
        /*   CONVERT THE RECORD INTO INDIVIDUAL FIELD VARIABLES.   */
        /***********************************************************/
         UTRECORD:
               UTSTYPE = SUBSTR(RECORD,25,1)
               UTFULL  = C2D(SUBSTR(RECORD,29,4))
               UTPART  = C2D(SUBSTR(RECORD,33,4))
               UTEMPTY = C2D(SUBSTR(RECORD,37,4))
         RETURN
        /***********************************************************/
        /* PROCESS TAPE CAPACITY PLANNING RECORD                   */
        /*   WRITE THE FORMATTED FIELDS TO YOUR REPORT             */
        /***********************************************************/
         DISPLAYUT:
         PUSH "T:TAPE VOLUME TYPE="UTSTYPE UTFULL UTPART UTEMPTY
         "EXECIO  1 DISKW OUTFILE"
         RETURN
        /***********************************************************/
        /* CONVERT THE HEX VALUE TO INDIVIDUAL 1'S AND 0'S         */
        /* EACH BYTE WILL TAKE UP 8 CHARACTER POSITIONS            */
        /***********************************************************/
         BITSTR:
           IF BIT.F ^= "1111"  THEN DO
              BIT.0="0000"; BIT.1="0001"; BIT.2="0010"; BIT.3="0011"
              BIT.4="0100"; BIT.5="0101"; BIT.6="0110"; BIT.7="0111"
              BIT.8="1000"; BIT.9="1001"; BIT.A="1010"; BIT.B="1011"
              BIT.C="1100"; BIT.D="1101"; BIT.E="1110"; BIT.F="1111"
           END
           CH=C2X(ARG(1))
           BS=''
           DO I=1 TO LENGTH(CH)
              Q=SUBSTR(CH,I,1)
              BS=BS!!BIT.Q
           END
        RETURN BS
$$
//HSMSTEP2 EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD DSN=HSM.SAMPLE.TOOL,
//            DISP=OLD
//SYSIN    DD DATA,DLM='$$'
./ ADD NAME=SPLITER
/* REXX - SPLITER                                    */
/*********************************************************************/
/* This REXX exec will REPRO a number of records from the specified  */
/* Control Data Set (CDSNAME) into a temporary file.  Then read the  */
/* records from the temporary file into storage.  The MCDS or BCDS   */
/* record images are then analyzed to determine suggested 2-way,     */
/* 3-way or 4-way splits for the Control data set and displays       */
/* these results to file SYSTSPRT.  All records in the specified     */
/* Control Data Set are analyzed before the results are displayed.   */
/*                                                                   */
/* Note: The REXX language is a general-use programming interface.   */
/*                                                               à01C*/
/*                                                               à06C*/
/*********************************************************************/
NUMERIC DIGITS 12
IO=1000      /* number of records per I/O request to read */
LINE.=0         /*                                    à01A*/
SIZE.=0         /*                                    à01A*/
TOTAL_SIZE=0    /* Total size of input file in bytes      */
REC_COUNT=0     /* Total number of records in input file  */
M=1; AVG=500    /* Initial analysis group£ average size   */
X00=X2C('00')   /* Keys from x'00' - x'1F' are in MCDS        àZRA */
X20=X2C('20')   /* Keys from x'20' - x'31' are in BCDS        àZRA */
X32=X2C('32')   /* Keys from x'32' - x'3F' are in OCDS        àZRA */
X3F=X2C('3F')   /* Keys over x'3F' are MCA, MCD, MCB, OR MCC  àZRC */
MCA=X2C('11'); MCD=X2C('00')  /* MCHTYPE of MCA and MCD   */
MCB=X2C('20'); MCC=X2C('24')  /* MCHTYPE of MCB and MCC   */
MCA_COUNT = 0; MCD_COUNT=0    /* Number of MCA and MCD's  */
MCB_COUNT = 0; MCC_COUNT=0    /* Number of MCC and MCB's  à06A*/
FROMKEY=0; CDS_TYPE_DETERMINED=0  /* Init fields            àZRA*/
MCDS_FLAG=0; BCDS_FLAG=0      /* Init CDS FLAGS             àZRA*/
OCDS_FLAG=0; STOP=0           /* Init CDS FLAG & STOP flag  àZRA*/
EOF_REC=('Z9999999999999999999999999999999999999999999') /* àZRA*/
LIMIT1=24; LIMIT2=2*LIMIT1   /* number of analysis groups */
START=1                       /* Start number of the first record
                                 to process each loop.           àSZA*/
DO N=1 TO LIMIT2
   SIZE.N=0; LOWKEY.N=''; CUMPERCENT.N=100
END
  /*****************************************************/
CALL READ_LINES                                              /* à01C*/
DO WHILE LINE.0 > 0
   DO N=START TO LINE.0 WHILE STOP=0   /* Dynamic START number   àSZC*/
      IF OCDS_FLAG = 0 THEN  /* Not OCDS data set                àZRA*/
       CALL PROCESS_LINE     /* Process each record */
      ELSE                   /*                                  àZRA*/
       STOP=1                /* STOP PROCESSING.  THIS IS OCDS   àZRA*/
      END
   IF N < IO ! STOP = 1 THEN  /* if all records read or need to
                                 stop processing                 àZRC*/
     LINE.0 = 0             /* We're done                        àRIA*/
   ELSE DO                  /* More records to read              àSZC*/
     START = 2              /* Next loop start on 2nd record     àSZA*/
     CALL READ_LINES                                          /* à01C*/
    END                     /* End more records to read          àSZA*/
   END
  IF OCDS_FLAG = 0 THEN     /* NOT OCDS                          àZRA*/
   CALL DISPLAY_RESULTS  /* Show appropriate ranges */
  EXIT 0
  /*****************************************************/
  READ_LINES:
    /****************************************************************/
    /* REPRO 1000 MORE RECORDS TO THE TEMPORARY FILE, THEN READ THEM*/
    /* INTO VIRTUAL STORAGE FOR PROCESSING. INSTEAD OF ADJUSTING    */
    /* THE FROMKEY TO THE 1000x+1 RECORD FOR THE NEXT READ OF 1000  */
    /* RECORDS, PUT IT ON THE LAST RECORD READ IN (i.e. 1000th REC).*/
    /* THIS GUARANTEES THAT THE NEXT REPRO COMMAND WILL NOT FAIL,   */
    /* BUT WILL READ AT LEAST 1 RECORD (i.e. THE LAST RECORD FROM   */
    /* THE LAST READ). THE MAIN PROCESSING LOOP WILL USE THE 'START'*/
    /* VARIABLE TO SKIP PAST THE FIRST RECORD OF 1000 BECAUSE IT WAS*/
    /* PROCESSED DURING THE PREVIOUS LOOP. THE VERY FIRST READ IS A */
    /* CORNER CASE AND IS HANDLED APPROPRIATELY BY PROCESSING FROM  */
    /* THE VERY FIRST RECORD.                                   àSZC*/
    /****************************************************************/
    x = OUTTRAP(ON.)
    "REPRO INFILE(INDATA) OUTFILE(ATEMP) COUNT("IO")",
           "FROMKEY(X'"FROMKEY"')"
    x = OUTTRAP('OFF')
     IF RC > 4 THEN DO                       /* RC=4 IS OKAY    àRIA*/
        SAY  'REPRO OF CDS FAILED WITH RC='RC                /* àRIA*/
        DO N=1 to ON.0; Say ON.n; end
        EXIT 8                                               /* àRIA*/
        END                                                  /* àRIA*/
     "EXECIO * DISKR ATEMP ( STEM  LINE."    /* TMPFILE TO VIRT à01A*/
     MM=LINE.0                                               /* à04C*/
     IF MM>0 THEN DO                         /* GET NEW FROMKEY à04C*/
        FROMKEY = C2X(LEFT(LINE.MM,44))      /* FOR NEXT REPRO. à04C*/
        LAST = X2D(RIGHT(FROMKEY,2))         /* SAVE LAST KEY   àSZC*/
        FROMKEY = LEFT(FROMKEY,86)!!D2X(LAST)                /* à01A*/
        IF START>1 & MM=1 THEN               /* DONE PROCESSING?àSZA*/
          LINE.0 = 0                         /* YES, PROPAGATE  àSZA*/
        END                                  /* END NEW FROMKEY à01A*/
    "EXECIO 0 DISKR ATEMP ( FINIS"           /* close tempfile  à01A*/
    RETURN                                   /* END READ_LINES  à01A*/
PROCESS_LINE:
     BYTES =LENGTH(LINE.N)  /* Length of record in bytes */
     KEY=LEFT(LINE.N,44)    /* Key of record */
     MCKT=LEFT(KEY,1)          /* MCKTYPE field */
     MCHT=SUBSTR(LINE.N,47,1)  /* MCHTYPE field */

     IF CDS_TYPE_DETERMINED=0 THEN DO /* CDS TYPE NOT DETERMINEDàZRA*/
       IF MCHT>=X00 & MCHT<X20 & KEY^=EOF_REC THEN /* MCDS TYPE àZRA*/
          MCDS_FLAG = 1                        /* SET MCDS FLAG àZRA*/
       ELSE                                    /*               àZRA*/
       IF MCHT>=X20 & MCHT<X32 THEN            /* BCDS TYPE     àZRA*/
          BCDS_FLAG = 1                        /* SET BCDS FLAG àZRA*/
       ELSE                                    /*               àZRA*/
       IF MCHT>=X32 & MCHT<=X3F THEN           /* OCDS TYPE     àZRA*/
          OCDS_FLAG = 1                        /* SET OCDS FLAG àZRA*/
       CDS_TYPE_DETERMINED=1             /* CDS TYPE DETERMINED àZRA*/
     END                                 /* END DO              àZRA*/

     IF OCDS_FLAG = 1 THEN            /* PROCESSING OCDS        àZRA*/
        SAY "OCDS NOT ELIGIBLE FOR PROCESSING WITH SPLITER" /*  àZRA*/
     ELSE                            /* PROCESSING MCDS OR BCDS àZRA*/
     IF MCKT>X3F ! MCKT=MCHT THEN DO /* valid HSM key */
        TOTAL_SIZE = TOTAL_SIZE + BYTES
        REC_COUNT = REC_COUNT + 1
        IF MCHT=MCA then MCA_COUNT=MCA_COUNT + 1          /* à06A*/
        IF MCHT=MCB then MCB_COUNT=MCB_COUNT + 1          /* à06A*/
        IF MCHT=MCC then MCC_COUNT=MCC_COUNT + 1          /* à06A*/
        /* DON'T INCREMENT THE MCD COUNT IF THIS IS AN
           EOF RECORD.  THE EOF RECORD ALWAYS APPEARS TO
           BE AN MCD RECORD NO MATTER WHICH CDS IS BEING
           PROCESSED.                                             àZRA*/
        IF MCHT=MCD & KEY^=EOF_REC then MCD_COUNT=MCD_COUNT + 1 /*àZRC*/
        HIGH_KEY = KEY
        IF SIZE.M=0          /* For new group, */
           THEN LOWKEY.M=KEY /* Initialize Low Key */

        SIZE.M=SIZE.M+BYTES
        IF SIZE.M>=AVG THEN DO /* Group filled        */
           IF M<LIMIT2 THEN M=M+1 /* Start new group  */
           ELSE DO               /* No more groups    */
                DO J=1 TO LIMIT1 /* Merge existing groups */
                   J2= 2*J; J1=J2-1
                   SIZE.J = SIZE.J1+ SIZE.J2
                   LOWKEY.J = LOWKEY.J1
                   END           /* Merge existing groups */
                DO J=LIMIT1+1 TO LIMIT2 /* CLEAR END */
                   SIZE.J = 0
                   LOWKEY.J = ''
                   END              /* Clear groups    */
                M = LIMIT1+1
                CALL AVERAGE  /* Determine new average */
                END         /* No more groups          */
           END           /* Group Filled               */
     END                 /* Valid HSM key              */
     RETURN
  /*****************************************************/
  /*  Determine new running average for all groups     */
  /*****************************************************/
AVERAGE:
     AVREC = TOTAL_SIZE/REC_COUNT
     SUM=0; DO J=1 TO LIMIT1; SUM=SUM+SIZE.J;  END
     AVG = SUM/LIMIT1 - AVREC/2
     RETURN
   /*****************************************************/
 DISPLAY_RESULTS:
   CUM = 0
   SAY " GROUP  CUM %     STARTING KEY"
   SAY " =====  =====     ============"
   DO J=1 TO LIMIT2 /* DISPLAY RESULTS */
      IF LOWKEY.J<' ' THEN KEY="X'"C2X(LEFT(LOWKEY.J,21))"'"
                     ELSE KEY= LOWKEY.J
         IF SIZE.J > 0 THEN DO
            CUM = CUM + SIZE.J
            CUMPERCENT.J = FORMAT(100*CUM/TOTAL_SIZE,5,2)
            SAY FORMAT(J,5) format(CUMPERCENT.J,5,1)'   'KEY
            END
         END        /* DISPLAY RESULTS */
      SAY "HIGHEST KEY FOUND: " HIGH_KEY
  IF REC_COUNT=1 & HIGH_KEY=EOF_REC THEN   /* PRIMER REC ONLY   àZRA*/
   SAY " "                                 /*                   àZRA*/
  ELSE DO                                  /*                   àZRA*/
  P25=1; P33=1; P50=1; P67=1; P75=1
  DO J=1 TO LIMIT2 /* DETERMINE RANGES */
    J2 = J+1
    IF CUMPERCENT.J<=50 & CUMPERCENT.J2>50 THEN P50=J
    IF CUMPERCENT.J<=33 & CUMPERCENT.J2>33 THEN P33=J
    IF CUMPERCENT.J<=67 & CUMPERCENT.J2>67 THEN P67=J
    IF CUMPERCENT.J<=25 & CUMPERCENT.J2>25 THEN P25=J
    IF CUMPERCENT.J<=75 & CUMPERCENT.J2>75 THEN P75=J
    END           /* DETERMINE RANGES */
   /*****************************************************/
   /*  DISPLAY SUGGESTED RANGES BASED ON SIZE           */
   /*****************************************************/
 SAY " "
 SAY "TWO-WAY SPLIT: "
    SAY "   FROMKEY( X'00' ) TOKEY( "RANGE(TO,P50)" )"         /*àRIC*/
    SAY "   FROMKEY( "RANGE(FROM,P50)" ) TOKEY( X'FF' )"       /*àRIC*/
 SAY " "
 SAY "THREE-WAY SPLIT: "
    SAY "   FROMKEY( X'00' ) TOKEY( "RANGE(TO,P33)" )"         /*àRIC*/
    SAY "   FROMKEY( "RANGE(FROM,P33)" ) TOKEY( "RANGE(TO,P67)" )"
                                                               /*àRIC*/
    SAY "   FROMKEY( "RANGE(FROM,P67)" ) TOKEY( X'FF' )"       /*àRIC*/
 SAY " "
 SAY "FOUR-WAY SPLIT:"
    SAY "   FROMKEY( X'00' ) TOKEY( "RANGE(TO,P25)" )"         /*àRIC*/
    SAY "   FROMKEY( "RANGE(FROM,P25)" ) TOKEY( "RANGE(TO,P50)" )"
                                                               /*àRIC*/
    SAY "   FROMKEY( "RANGE(FROM,P50)" ) TOKEY( "RANGE(TO,P75)" )"
                                                               /*àRIC*/
    SAY "   FROMKEY( "RANGE(FROM,P75)" ) TOKEY( X'FF' )"       /*àRIC*/
 SAY " "
 END                                             /*              àZRA*/
     AVREC = TOTAL_SIZE % REC_COUNT
 SAY "AVERAGE RECORD SIZE IN BYTES ..... " format(AVREC,11)
 SAY "TOTAL NUMBER OF RECORDS .......... " format(REC_COUNT,11)
 if MCB_count > 0 ! MCC_count > 0 ! BCDS_FLAG = 1 Then do    /* àZRC*/
 SAY "      NUMBER OF MCB RECORDS....... " format(MCB_COUNT,11)
 SAY "      NUMBER OF MCC RECORDS....... " format(MCC_COUNT,11)
 end                                                         /* à06A*/
 else                                                        /* àZRC*/
 if MCA_count > 0 ! MCD_count > 0 ! MCDS_FLAG = 1 then do    /* àZRA*/
 SAY "      NUMBER OF MCA RECORDS....... " format(MCA_COUNT,11)
 SAY "      NUMBER OF MCD RECORDS....... " format(MCD_COUNT,11)
 end                                                         /* à06A*/
 else                                                        /* àZRA*/
 if REC_COUNT=1 & HIGH_KEY=EOF_REC THEN    /* PRIMER REC ONLY   àZRA*/
 SAY "CDS IS EMPTY EXCEPT FOR PRIMER RECORD"                 /* àZRA*/
 RETURN
   /*****************************************************/
 RANGE:   PROCEDURE EXPOSE LOWKEY.
      J=ARG(2); J2=J+1
      X1=LOWKEY.J; X2=LOWKEY.J2; K=0
      DO N=1 TO LENGTH(LOWKEY.J)
         IF SUBSTR(X1,N,1)^=SUBSTR(X2,N,1) & K=0 THEN K=N
         END
      IF ARG(1)=TO   THEN KEYVALUE=LEFT(X1,K)
      IF ARG(1)=FROM THEN DO
         Q=SUBSTR(X1,K,1);  Q2=D2C(C2D(Q)+1)
         KEYVALUE=LEFT(X1,K-1)!!Q2
         END
       /* Since alphanumeric characters are not contiguous
          in the EBCDIC coding sequence, we check to see if
          any characters in the key require hex notation        à06A*/
       hexreq = no                                           /* à06A*/
       STANDARDKEYS ='.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ' /* à06A*/
       do n=1 to length(keyvalue)                            /* à06A*/
          if pos(substr(keyvalue,n,1),standardkeys)=0 then , /* à06A*/
             hexreq = yes                                    /* à06A*/
       end                                                   /* à06A*/
       IF hexreq =yes THEN KEYVALUE ="X'"C2X(KEYVALUE)"'"    /* à06C*/
       RETURN KEYVALUE
./ ADD NAME=SPLITCDS
//SPLITCDS JOB ?JOBPARM
//*
//********************************************************************
//*  THIS IS A SAMPLE JOB TO DETERMINE APPROPRIATE KEYRANGES         *
//*  IF YOU DESIRE TO SPLIT YOUR MCDS OR BCDS INTO 2, 3 OR 4         *
//*  RANGES.                                                         *
//*                                                                  *
//* FOLLOWING ARE FIELDS IDENTIFIED THAT MUST BE CHANGED TO EXECUTE  *
//* THIS BATCH JOB:                                              à01A*
//*                                                                  *
//* ?JOBPARM  - JOB CARD WITH APPROPRIATE INFORMATION FOR YOUR       *
//*             INSTALLATION.                                    à01A*
//*                                                                  *
//* ?CDSNAME  - NAME OF THE CONTROL DATA SET THAT YOU WANT TO        *
//*             PROCESS.                                         à01C*
//*                                                                  *
//*                                                             1à03D*
//********************************************************************
//*
//************************************************************
//*  STEP n-- CONVERT EXPORT COPY TO RECFM=VB SO THAT IT
//*           CAN BE READ BY TSO/E REXX.  This step has been
//*           DELETED                                     àZRC
//************************************************************
//STEP1   EXEC PGM=IKJEFT01
//************************************************************
//*  STEP 1 -- ALLOCATE THE SPECIFIED CONTROL DATA SET AND
//*            INVOKE SPLITER ROUTINE TO DETERMINE RECOMMENDED
//*            KEYRANGES FOR EACH CDS PORTION.            à01C
//*
//*           SPLITER - REXX EXEC ... HSM.SAMPLE.TOOL(SPLITER)
//*
//*           RESULTS WRITTEN TO SYSTSPRT DD CARD.
//*
//*  THE ATEMP FILE HOLDS 1000 CDS RECORDS, AND WILL BE 3-9      à06A*
//*  CYLINDERS IN SIZE, DEPENDING ON THE RECORD SIZES. THE       à06A*
//*  LRECL 6552 HANDLES THE LARGEST RECORD POSSIBLE IN HSM.      à06A*
//*
//* OW02581 CHANGED THE FOLLOWING INDATA AND ATEMP DD CARDS à01C
//**************************************************************
//INDATA    DD DSN=?CDSNAME,DISP=SHR
//ATEMP     DD DSNAME=&&ATEMP,DISP=(NEW,PASS),DSORG=PS,
//             LRECL=6552,RECFM=VB,SPACE=(CYL,(3,1)),
//             UNIT=SYSDA
//SYSTSPRT  DD SYSOUT=*
//SYSEXEC   DD DSN=HSM.SAMPLE.TOOL,DISP=SHR
//SYSTSIN   DD *
  SPLITER
/*
./ ADD NAME=KEYRNGID
/* REXX - KEYRNGID                                    à08A*/
/*************************************************************** à08A*/
/* This REXX exec will REPRO a number of records from the MCDS into  */
/* a temporary file.  Then read the records from the temporary file  */
/* into storage.  The MCDS record images are analyzed to identify    */
/* migrated VSAM keyrange datasets. The VSAM keyrange datasets       */
/* are identified by dataset name and associated datamover in the    */
/* results. The results are output to file SYSTSPRT.  All records    */
/* in the MCDS are analyzed before the results are displayed.        */
/*                                                                   */
/* Note: The REXX language is a general-use programming interface.   */
/*                                                               àZRC*/
/*********************************************************************/
IO=1000      /* number of records per I/O request to read */
LINE.=0         /*                                        */
X3F=X2C('3F')   /* Keys over x'3F' are MCD or MCA         */
MCA=X2C('11'); MCD=X2C('00')  /* MCHTYPE of MCA and MCD   */
MCA_COUNT = 0; MCD_COUNT=0    /* Number of MCA and MCD's  */
FRMKEY=0; HEADER_DONE=0

CALL READ_LINES
DO WHILE LINE.0 > 0
   DO N=1 TO LINE.0
      CALL PROCESS_LINE     /* Process each record */
      END
   IF N < IO THEN           /* If all the records were read      */
     LINE.0 = 0             /* We're done                        */
   ELSE                     /* More records to read              */
     CALL READ_LINES
   END
   IF HEADER_DONE > 0 THEN
  SAY '========================================================='
  EXIT 0
  /*****************************************************/
  READ_LINES:
    /****************************************************************/
    /* REPRO 1000 MORE RECORDS TO THE TEMPORARY FILE, THEN READ THEM*/
    /* INTO VIRTUAL STORAGE FOR PROCESSING.                         */
    /****************************************************************/
    x = OUTTRAP(ON.)                         /* Trapping on         */
    "REPRO INFILE(INDATA) OUTFILE(ATEMP) COUNT("IO")",
           "FROMKEY(X'"FRMKEY"')"
    x = OUTTRAP('OFF')                       /* Trapping on         */
     IF RC > 4 THEN DO                       /* RC=4 IS OKAY    */
        SAY  'REPRO OF MCDS FAILED WITH RC='RC
        DO N=1 to ON.0; Say ON.n; end        /* Echo trapped output  */
        EXIT 8
        END
     "EXECIO * DISKR ATEMP ( STEM  LINE."    /* TMPFILE TO VIRT     */
     MM=LINE.0
     IF MM>0 THEN DO                         /* GET NEW FROMKEY     */
        FRMKEY = C2X(LEFT(LINE.MM,44))      /* FOR NEXT REPRO.     */
        LAST = 1+ X2D(RIGHT(FRMKEY,2))
        FRMKEY = LEFT(FRMKEY,86)!!D2X(LAST)
        END                                  /* END NEW FROMKEY     */
    "EXECIO 0 DISKR ATEMP ( FINIS"           /* close tempfile      */
    RETURN                                   /* END READ_LINES      */
PROCESS_LINE:
     BYTES =LENGTH(LINE.N)  /* Length of record in bytes */
     KEY=LEFT(LINE.N,44)    /* Key of record */
     MCKT=LEFT(KEY,1)          /* MCKTYPE field */
     MCHT=SUBSTR(LINE.N,47,1)  /* MCHTYPE field */

     IF MCKT>X3F THEN DO                     /* valid HSM MCD key */
        IF MCHT=MCD then DO                /* MCD record...           */
          MCD_COUNT=MCD_COUNT + 1
          DKRBYTE=SUBSTR(LINE.N,398,1)     /* Byte with keyrange bit */
          DKRBYT=X2B(C2X(DKRBYTE))         /* To HEX then to BINARY  */
          DKEYRG=SUBSTR(DKRBYT,4,1)        /* Get keyrange bit value */
          IF DKEYRG > 0 THEN DO            /* Is a keyrange...       */
           IF HEADER_DONE = 0 THEN         /* Header output yet?     */
             CALL DISPLAY_HEADER           /* No..output header      */
             DDMVBYTE=SUBSTR(LINE.N,135,1) /* Byte w/datamover bit   */
             DDMVBYT=X2B(C2X(DDMVBYTE))    /* To HEX then to BINARY  */
             DDMVBIT=SUBSTR(DDMVBYT,7,1)   /* Get dm bit value ON=DSS*/
             IF DDMVBIT = 0 THEN       /* HSM/IDCAMS datamover   à09C*/
               SAY KEY '   IDCAMS'
             ELSE                      /* DFSMSdss is data mover à09C*/
               SAY KEY '   DFSMSdss'
            END                              /* end - Is a keyrange. */
        END                                /* end - MCD record        */
     END                                   /* Valid HSM MCD key       */
     RETURN
DISPLAY_HEADER:
  HEADER_DONE = 1
  SAY 'Dataset name                                    Datamover'
  SAY '========================================================='
  RETURN
./ ADD NAME=FINDKRDS
//FINDKRDS JOB ?JOBPARM
//*
//************************************************************** à08A*
//*  This is a sample job to identify migrated VSAM keyrange         *
//*  datasets,  output the dataset name to a file and indicate       *
//*  the datamover that migrated the dataset.                        *
//*                                                                  *
//* FOLLOWING ARE FIELDS IDENTIFIED THAT MUST BE CHANGED TO EXECUTE  *
//* THIS BATCH JOB:                                                  *
//*                                                                  *
//* ?JOBPARM  - JOB CARD WITH APPROPRIATE INFORMATION FOR YOUR       *
//*             INSTALLATION.                                        *
//*                                                                  *
//* ?MCDSNAME  - NAME OF THE CONTROL DATA SET (data component name)  *
//*              THAT YOU WANT TO PROCESS.                           *
//*                                                                  *
//* Note: If using RLS to share CDSs defined with SHAREOPTIONS(3,x), *
//* DFHSM must be shutdown on all sharing hosts for the program to   *
//* execute successfully.  If it is inconvenient to shutdown DFHSM   *
//* on all sharing hosts, use the CDS backup copy that is created at *
//* Autobackup or Backvol CDS time in place of the active MCDS to    *
//* successfully run the program.  Simply Restore the MCDS backup    *
//* copy to a new name and then run the Exec against the restored    *
//* copy.                                                            *
//************************************************************** à08A*
//*
//************************************************************
//STEP1   EXEC PGM=IKJEFT01
//***************************************************************
//*  STEP 1 -- Allocate the specified MCDS and invoke KEYRNGID
//*            routine to identify any VSAM keyrange dataset that
//*            has been migrated.
//*
//*           KEYRNGID - REXX EXEC ... HSM.SAMPLE.TOOL(KEYRNGID)
//*
//*           RESULTS WRITTEN TO SYSTSPRT DD CARD.
//*
//*  THE ATEMP FILE HOLDS 1000 CDS RECORDS, AND WILL BE 3-9
//*  CYLINDERS IN SIZE, DEPENDING ON THE RECORD SIZES. THE
//*  LRECL 6552 HANDLES THE LARGEST RECORD POSSIBLE IN HSM.
//*
//****************************************************************
//INDATA    DD DSN=?MCDSNAME,DISP=SHR
//ATEMP     DD DSNAME=&&ATEMP,DISP=(NEW,PASS),DSORG=PS,
//             LRECL=6552,RECFM=VB,SPACE=(CYL,(3,1)),
//             UNIT=SYSDA
//SYSTSPRT  DD SYSOUT=*
//SYSEXEC   DD DSN=HSM.SAMPLE.TOOL,DISP=SHR
//SYSTSIN   DD *
  KEYRNGID
/*
./ ADD NAME=BCDSKEYR
//BCDSKEYR JOB ?JOBPARM
//*
//************************************************************** à09A*
//* This is a sample job to identify backed up VSAM key range        *
//* datasets that were backed up using HSM as the data mover.        *
//*                                                                  *
//* Following are fields identified that must be changed to execute  *
//* this batch job:                                                  *
//*                                                                  *
//* ?JOBPARM  - Job card with appropriate information for your       *
//*             installation.                                        *
//*                                                                  *
//* ?BCDSNAME - Name of the control data set (data component name)   *
//*             that you want to process.                            *
//*                                                                  *
//* ?BCDSOUT  - Name of the data set that will contain the output    *
//*             of this job.                                         *
//*                                                                  *
//* Note: If using RLS to share CDSs defined with SHAREOPTIONS(3,x), *
//* DFHSM must be shutdown on all sharing hosts for the program to   *
//* execute successfully.  If it is inconvenient to shutdown DFHSM   *
//* on all sharing hosts, use the CDS backup copy that is created at *
//* Autobackup or Backvol CDS time in place of the active BCDS to    *
//* successfully run the program.  Simply Restore the BCDS backup    *
//* copy to a new name and then run the Exec against the restored    *
//* copy.                                                            *
//************************************************************** à09A*
//*
//*------------------------------------------------------------------
//SORT1   EXEC PGM=ICETOOL,REGION=4096K
//*------------------------------------------------------------------
//TOOLMSG  DD  SYSOUT=*
//DFSMSG   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SORKWK01 DD  UNIT=SYSDA,SPACE=(CYL,(10,10))
//SORKWK02 DD  UNIT=SYSDA,SPACE=(CYL,(10,10))
//BCDS     DD  DISP=SHR,DSN=?BCDSNAME
//CMDS     DD  DISP=(NEW,CATLG,DELETE),UNIT=SYSDA,
//             DSN=?BCDSOUT,
//             DCB=(LRECL=500,BLKSIZE=20500,RECFM=VB),
//             SPACE=(CYL,(9,9),RLSE)
//*MSGOUT1  DD  SYSOUT=*
//*SYSOUT   DD  SYSOUT=*
//TOOLIN    DD *
   COPY FROM(BCDS) TO(CMDS) USING(CPY1)
/*
//CPY1CNTL  DD *
 OPTION VLSCMP
 RECORD TYPE=V
 INCLUDE COND=((51,1,BI,EQ,X'24'),AND,(306,1,BI,EQ,B'..1.....'),AND,
    (156,1,BI,EQ,B'..0.....'))
/*
./ ADD NAME=PREMERGE
//PREMERGE JOB ?JOBPARM
//*
//*********************************************************************
//*  THIS IS A SAMPLE JOB THAT MAY ASSIST IN THE PLANNING OF A        *
//*  CDS MERGE.  THIS JOB WILL COMPARE TWO CDSs AND CREATE A          *
//*  REPORT THAT WILL LIST THE DUPLICATE KEYS BETWEEN THEM.           *
//*  THIS JOB WILL NEED TO BE RUN FOR EACH OF THE THREE CDS RECORDS   *
//*  (MCDSs, BCDSs, AND OCDSs).  THIS JOB COMPARES SINGLE CLUSTER     *
//*  CDSs, BUT MAY BE MODIFIED TO SUPPORT MORE THAN 2 CDSs BEING      *
//*  MERGED OR A MULTICLUSTERED CDS ENVIRONMENT.  FOR THIS THE        *
//*  JOB NEEDS TO BE MODIFIED.  CURRENTLY THERE IS ONLY A SYS1CDS     *
//*  DD AND A SYS2CDS DD DEFINED.  FOR MULTICLUSTERING OR MORE        *
//*  THAN 2 CDSs BEING MERGED, DD CARDS WOULD NEED TO BE              *
//*  ESTABLISHED FOR EACH OF THE CDSs TO BE CONSIDERED.  THEN         *
//*  COPY COMMANDS WOULD NEED TO BE ADDED TO COPY ALL OF THE          *
//*  CDSs OR CLUSTERS INTO THE ALLKEYS FILE BEFORE THE SORT IS        *
//*  DONE. THE REPORT CREATED WILL THEN LIST ALL OF THE DUPLICATE     *
//*  KEYS BETWEEN THE RECORDS COMPARED.                               *
//*                                                                   *
//*  Note:  Before merging the CDSes, it is recommended that AUDIT be *
//*  run against all CDSes to ensure that all errors are corrected.   *
//*                                                                   *
//*  The fields that need to be specified for this job are as         *
//*  follows:                                                         *
//*                                                                   *
//*  ?CDSNAME1 = First host cds for premerge comparison               *
//*                                                                   *
//*  ?CDSNAME2 = Second host cds for premerge comparison              *
//*                                                                   *
//*  ?REPORTNAME = Output data set name of the report on the          *
//*                duplicate keys between the CDSs compared           *
//*                                                                   *
//*                                                                   *
//*                                                                   *
//*  AFTER THE PREMERGE JOB IS RUN, IF ANY DUPLICATE KEYS             *
//*  ARE FOUND HANDLE THEM AS FOLLOWS:                                *
//*                                                                   *
//*                                                                   *
//*  MCDS duplicates that need to be considered when merging a        *
//*  second host's CDSs into a copy of a first host's CDSs:           *
//*                                                                   *
//*  -(0) migrated data set records                                   *
//*  Locate identical data sets and delete the migrated data          *
//*  sets on the second host BEFORE merging the MCDSs so that         *
//*  the MCA records get deleted and the migration space is           *
//*  invalidated.                                                     *
//*                                                                   *
//*  -(4) migration volume record                                     *
//*  If there are SMS volumes that have the same name on both         *
//*  systems and they are system packs where it does not matter       *
//*  which is kept then nothing should be done.  If, however,         *
//*  they are not system packs then the data will need to be          *
//*  moved to a different L0 DASD, L1 DASD, OR L2 TAPE. To deal       *
//*  with duplicates on DASD a FREEVOL can be performed.  With        *
//*  duplicates that are on TAPE RECYCLE can be used.                 *
//*                                                                   *
//*  -(10) MCRx migration control record                              *
//*  If there is a host with hostid of "x" on each system, then       *
//*  a LIST TTOC SELECT(ASSOC) needs to be done on the second         *
//*  host before merging that CDS into the first. A DELVOL            *
//*  UNASSIGN needs to be done for each of the ML2 tapes in the       *
//*  list. These will be available as unassigned ML2s in the target   *
//*  system.  Alternatively these could be marked full.               *
//*                                                                   *
//*                                                                   *
//*  BCDS duplicates that need to be considered when merging a        *
//*  second host's CDSs into a copy of a first host's CDSs.           *
//*                                                                   *
//*  -(20) data set backup record                                     *
//*  If multiple data sets of the same name have backup copies        *
//*  then the backup versions of all the duplicate MCBs will be       *
//*  lost when the CDSs are merged.  The MCCs, however, will          *
//*  continue to exist, since they are disconnected from their        *
//*  MCB.  A BDELETE will need to be done on each and every           *
//*  backup version of these duplicates before a merge is done.       *
//*  If the data sets both need to be kept then rename the user       *
//*  data set on the second system before BDELETEing the backup       *
//*  versions.                                                        *
//*                                                                   *
//*  -(22) dump class definition                                      *
//*  If there is one dump class defined on both systems               *
//*  and the definition is different, make the options                *
//*  of both occurrences of this class the same or change all uses on *
//*  one system to a different class name, define this new            *
//*  class, and then delete the one it replaces.                      *
//*                                                                   *
//*  -(2C) backup volume record                                       *
//*  In the case of backup tape duplicates a RECYCLE should be        *
//*  performed to move data to non-duplicate tapes.                   *
//*                                                                   *
//*  -(30) BVR record                                                 *
//*  There may be many duplicates  among the daily, spill, and        *
//*  unassigned records.  These duplicates can be ignored             *
//*  during the merger.                                               *
//*  After bringing up the merged system a FIXCDS                     *
//*  BVR REFRESH should be performed followed by a CDS backup         *
//*  before any backup volumes are used.  The BVR REFRESH will        *
//*  set on a flag that as the CDS backup concludes successfully      *
//*  it will build the new format BVR records from the MCT            *
//*  records of the merged BCDS and remove all old BVR records        *
//*                                                                   *
//*  -(OCDS)                                                          *
//*  In this case duplicates will be addressed by the RECYCLE         *
//*  command as mentioned in the type 4 and 2C records explained.     *
//*                                                                   *
//****************************************************************àZRC*
//SORT1   EXEC PGM=ICETOOL,REGION=4096K
//SYSPRINT DD  SYSOUT=*
//TOOLMSG  DD  SYSOUT=*
//DFSMSG   DD  SYSOUT=*
//SYS1CDS  DD  DISP=SHR,
//             DSN=?CDSNAME1
//SYS2CDS  DD  DISP=SHR,
//             DSN=?CDSNAME2
//* DD cards can be defined for other CDSs to be
//* considered for the premerge duplicates
//* report
//ALLKEYS  DD  DISP=(MOD,PASS),UNIT=SYSDA,
//             DCB=(LRECL=100,BLKSIZE=0,RECFM=VB),
//             SPACE=(CYL,(50,10),RLSE),
//             DSN=&&ALLKEYS
//SUMKEYS  DD  DISP=(MOD,PASS),UNIT=SYSDA,
//             DCB=(LRECL=100,BLKSIZE=0,RECFM=VB),
//             SPACE=(CYL,(50,10),RLSE),
//             DSN=&&SUMKEYS
//DUPKEYS  DD  DISP=(MOD,PASS),UNIT=SYSDA,
//             DCB=(LRECL=100,BLKSIZE=0,RECFM=VB),
//             SPACE=(CYL,(50,10),RLSE),
//             DSN=&&DUPKEYS
//TEMP     DD  DISP=(NEW,CATLG),UNIT=SYSDA,
//             DSN=&&TEMP1,
//             DCB=(*.DUPKEYS),
//             SPACE=(TRK,(1,5),RLSE)
//DISPOUT  DD  DISP=(NEW,CATLG),UNIT=SYSDA,
//             SPACE=(TRK,(1,5),RLSE),
//             DSN=?REPORTNAME
//MSGOUT1  DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//TOOLIN   DD  *
* copy the keys from the sys1 CDS to the ALLKEYS file
   COPY FROM(SYS1CDS) TO(ALLKEYS) USING(ALL1)
* copy the keys from the sys2 CDS to the ALLKEYS file
   COPY FROM(SYS2CDS) TO(ALLKEYS) USING(ALL1)
* copy all other instance of this type CDS into ALLKEYS
* for consideration in the duplicate keys report

* sum the counter fields added to the record keys
   SORT FROM(ALLKEYS) TO(SUMKEYS) USING(SUM1)
* copy the duplicate keys
   COPY FROM(SUMKEYS) TO(DUPKEYS) USING(DUP1)
* prints a report on duplicate keys found, sorted by MCHTYPE
   SORT FROM(DUPKEYS) TO(TEMP) USING(SRT1)
   DISPLAY FROM(TEMP) LIST(DISPOUT) -
   LINES(999) -
   HEADER('MCHTYPE') ON(51,1,HEX) -
   HEADER('KEY') ON(5,44,CH) -
   BLANK
//ALL1CNTL DD *
 OUTREC FIELDS=(1,4,5,64,X'0001')
/*
//SUM1CNTL DD *
 SORT FIELDS=(5,44,BI,A)
 SUM FIELDS=(69,2,BI)
/*
//DUP1CNTL DD *
 INCLUDE COND=(69,2,BI,GT,X'0001')
 OUTREC FIELDS=(1,4,5,64)
/*
//SRT1CNTL DD  *
 SORT FIELDS=(51,1,BI,A)
/*
./ ADD NAME=HALTER
/* REXX - HALTER                                             à02A*/
/****************************************************************
 This program modifies the STORCLAS and/or MGMTCLAS of a migrated
 data set.  These must be 1..8 characters in length.  This program
 invokes IDCAMS ALTER directly.  These classes are passed to the  àWIC
 ACS routines during recall to influence the final STORCLAS
 and MGMTCLAS.  This program will work for data sets that are
 migrated or on Level 0 DASD.                                     àWIC
 ****************************************************************
 To invoke from TSO, ISPF 3.4 Line Command, or PGM=IKJEFT01:
    HALTER MGMTCLAS(xxxx) STORCLAS(yyyy) dsn
    HALTER MC(xxxx) SC(yyyy) dsn

 You may specify either MGMTCLAS or STORCLAS or both
 Data Set Name follows standard TSO conventions, either
 specify fully-qualified name in quotes 'SYSPREF.data.set'
 or allow TSO to prefix your data set without quotes.
 Issuer must be authorized to alter the data sets specified.      àWIC
 ****************************************************************/

PARSE ARG PARM
parse upper var parm parms
none='N/A'; sc=none; mc=none
if pos('STORCLAS(',parms)>0 then do
   parse var parms a 'STORCLAS(' sc ')' b
   parms = a b
   end
if pos('SC(',parms)>0 then do
   parse var parms a 'SC(' sc ')' b
   parms = a b
   end
if sc ^= none then do
   sc = strip(sc)
   len_sc = right(length(sc),2,'0')
   if len_sc>='01' & len_sc<='08' then provided_sc = Y
   else say "Invalid Length for storage class("sc") ......"parms
   end
if pos('MGMTCLAS(',parms)>0 then do
   parse var parms a 'MGMTCLAS(' mc ')' b
   parms = a b
   end
if pos('MC(',parms)>0 then do
   parse var parms a 'MC(' mc ')' b
   parms = a b
   end
if mc ^= none then do
   mc = strip(mc)
   len_mc = right(length(mc),2,'0')
   if len_mc>='01' & len_mc<='08' then provided_mc = Y
   else say "Invalid Length for management class("mc") ......"parms
   provided_mc = Y
   end
dsn = strip(parms)
idcops = ''
if provided_sc = Y then do
   idcops = idcops 'STORCLAS('sc')'                       /* àWIC*/
   end
if provided_mc = Y then do
   idcops = idcops 'MGMTCLAS('mc')'                       /* àWIC*/
   end
rc = 0
Address TSO "ALTER "dsn" "idcops                          /* àWIC*/
exit rc
./ ADD NAME=ABARPOST
/*REXX****************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name                                            */
/*                                                                   */
/*  Output: 1) Abars Activity Log                                    */
/*          2) ARECOVER statements                                   */
/*          3) DSN Report with detail                                */
/*                                                                   */
/*PROPRIETARY V3 STATEMENT                                           */
/*Licensed Materials - Property of IBM                               */
/*5650-ZOS                                                           */
/*Copyright IBM Corp. 1993,2017                                  àEYC*/
/*END PROPRIETARY V3 STATEMENT                                       */
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec                                    */
/*********************************************************************/
arg iagname tunit .
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
logrc = 0
stat = msg('OFF')
address TSO
/*********************************************************************/
/* setup constants                                                   */
/*********************************************************************/
call dr10
logrc = rc
parse var result dcoldsn ardsn detpre .
ardsn = "'" !! ardsn !! "(" !! iagname !! ")'"
/*********************************************************************/
/* locate the activity log                                           */
/*********************************************************************/
call dr14 iagname
logrc = rc
logdsn = result
/*********************************************************************/
/* attempt log dataset allocation and parse                          */
/*   copy the log to sysout, create arecover statements and DSN rpt  */
/*********************************************************************/
call dr21 iagname tunit logdsn ardsn detpre
logrc = result
/*********************************************************************/
/* write dsnrpt to LOG ddname                                        */
/*********************************************************************/
call dr22 iagname detpre
logrc = result
quit:
exit logrc
./ ADD NAME=ARAUDIT
/*REXX****************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name                                            */
/*                                                                   */
/*  Output: 1) Abars Activity Log                                    */
/*          2) ARECOVER statements                                   */
/*          3) DSN Report with detail                                */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec                                    */
/*********************************************************************/
arg iagname .
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
logrc = 0
stat = msg('OFF')
address TSO
/*********************************************************************/
/* setup constants                                                   */
/*********************************************************************/
call dr10
parse var result dcoldsn ardsn detpre loglog
ardsn = "'" !! ardsn !! "(" !! iagname !! ")'"
/*********************************************************************/
/* allocate the log of logs dataset and look to see the logs         */
/* created and how many times the aggregate has been executed        */
/** and **************************************************************/
/* allocate the arecover parameters dataset to read the datasets     */
/* and check for their existence                                 àZRC*/
/*********************************************************************/
call dr41 iagname loglog ardsn
logrc = result
return logrc
./ ADD NAME=ARECPROC
/*REXX****************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name                                            */
/*                                                                   */
/*  Output: 1) Abars Activity Log                                    */
/*          2) ARECOVER statements                                   */
/*          3) DSN Report with detail                                */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec                                    */
/*********************************************************************/
arg iagname .
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
logrc = 0
stat = msg('OFF')
address TSO
/*********************************************************************/
/* setup constants                                                   */
/*********************************************************************/
call dr10
parse var result dcoldsn ardsn detpre loglog
ardsn = "'" !! ardsn !! "(" !! iagname !! ")'"
/*********************************************************************/
/* allocate the arecover parameters dataset to execute the           */
/* arecover command for the aggregate                                */
/*********************************************************************/
call dr31 iagname ardsn
logrc = result
/*********************************************************************/
/* locate the activity log                                           */
/*********************************************************************/
call dr14 iagname
logdsn = result
/*********************************************************************/
/* process the activity log                                          */
/*********************************************************************/
call dr32 iagname logdsn loglog
exit logrc
./ ADD NAME=ARECSNGL
/*REXX****************************************************************/
/*  Function: Handle subset restore of an aggregate                  */
/*                                                                   */
/*  Input: Aggregate Name                                            */
/*         Indsn sysin                                               */
/*                                                                   */
/*  Output: 1) Restart Dataset                                       */
/*          2) ARECOVER Command                                      */
/*          3) ARECOVER Activity Log                                 */
/*                                                                   */
/*  Copyright IBM Corp. 1995,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec                                    */
/* trace ?R */
/*********************************************************************/
arg iagname .
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
logrc = 0
stat = msg('OFF')
address TSO
/*********************************************************************/
/* setup constants                                                   */
/*********************************************************************/
call dr10
parse var result dcoldsn ardsn thlq loglog
ardsn = "'" !! ardsn !! "(" !! iagname !! ")'"
/*********************************************************************/
/* parse the parameters supplied for accuracy                        */
/*********************************************************************/
call dr70 iagname ardsn
logrc = result
/*********************************************************************/
/* set up the restart dataset                                        */
/*********************************************************************/
call dr71 iagname ardsn thlq
/*********************************************************************/
/* allocate the arecover parameters dataset to execute the           */
/* arecover command for the aggregate                                */
/*********************************************************************/
call dr72 iagname ardsn
logrc = result
/*********************************************************************/
/* locate the activity log                                           */
/*********************************************************************/
call dr14 iagname
logdsn=result
/*********************************************************************/
/* process the activity log                                          */
/*********************************************************************/
call dr32 iagname logdsn loglog
exit logrc
/*REXX****************************************************************/
draudit:
/*********************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name (s) in input dataset                       */
/*                                                                   */
/* Output: audit report of aggregate (s)                             */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec - none                             */
/*********************************************************************/
/*********************************************************************/
/* Constants and Flags                                               */
/*********************************************************************/
errors = 0
tdsn = 0
tagg = 0
lines = 58
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
"EXECIO 0 DISKR INCNTL (OPEN"
"EXECIO 0 DISKW AGSUMM (OPEN"
/*********************************************************************/
/*   write the Summary ABARS Activity Log                            */
/*********************************************************************/
"execio 1 diskr INCNTL"
do while (rc = 0)
   tagg = tagg + 1 /* counting total aggregates */
   if lines > 56 then
      call rpthead
   parse pull iagname
   iagname=strip(iagname,b)
   call araudit iagname
   parse var result cdsn edsn
   push '   ' left(iagname,8) right(cdsn,7) right(edsn,7)
   "execio 1 diskw AGSUMM"
   lines = lines + 1
   errors = errors + edsn
   tdsn = tdsn + cdsn
   "execio 1 diskr INCNTL"
end
push "    -------- ------- -------"
"execio 1 diskw agsumm"
push '0   Aggregates:' left(tagg,7) ' Datasets: ' tdsn ,
     ' Errors: ' errors
"execio 1 diskw AGSUMM"
/************************************************************/
"execio 0 diskr INCNTL (finis"
"execio 0 diskw agsumm (finis"
return 0;
rpthead:
/*********************************************************************/
/* Write Report Heading                                              */
/*********************************************************************/
push "1   ABARS Arecover Aggregate Audit Summary Report      " ,
      "              " date(usa)
"execio 1 diskw agsumm"
push "0   Agname   DSNs    Errors "
"execio 1 diskw agsumm"
push "    -------- ------- -------"
"execio 1 diskw agsumm"
lines = 4
return 0;
/*REXX****************************************************************/
draudit:
/*********************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name (s) in input dataset                       */
/*                                                                   */
/* Output: audit report of aggregate (s)                             */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec - none                             */
/*********************************************************************/
/*********************************************************************/
/* Constants and Flags                                               */
/*********************************************************************/
errors = 0
tdsn = 0
tagg = 0
lines = 58
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
"EXECIO 0 DISKR INCNTL (OPEN"
"EXECIO 0 DISKW AGSUMM (OPEN"
/*********************************************************************/
/*   write the Summary ABARS Activity Log                            */
/*********************************************************************/
"execio 1 diskr INCNTL"
do while (rc = 0)
   tagg = tagg + 1 /* counting total aggregates */
   if lines > 56 then
      call rpthead
   parse pull iagname
   iagname=strip(iagname,b)
   call araudit iagname
   parse var result cdsn edsn
   push '   ' left(iagname,8) right(cdsn,7) right(edsn,7)
   "execio 1 diskw AGSUMM"
   lines = lines + 1
   errors = errors + edsn
   tdsn = tdsn + cdsn
   "execio 1 diskr INCNTL"
end
push "    -------- ------- -------"
"execio 1 diskw agsumm"
push '0   Aggregates:' left(tagg,7) ' Datasets: ' tdsn ,
     ' Errors: ' errors
"execio 1 diskw AGSUMM"
/************************************************************/
"execio 0 diskr INCNTL (finis"
"execio 0 diskw agsumm (finis"
return 0;
rpthead:
/*********************************************************************/
/* Write Report Heading                                              */
/*********************************************************************/
push "1   ABARS Arecover Aggregate Audit Summary Report      " ,
      "              " date(usa)
"execio 1 diskw agsumm"
push "0   Agname   DSNs    Errors "
"execio 1 diskw agsumm"
push "    -------- ------- -------"
"execio 1 diskw agsumm"
lines = 4
return 0;
./ ADD NAME=DRAUDIT
/*REXX****************************************************************/
draudit:
/*********************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name (s) in input dataset                       */
/*                                                                   */
/* Output: audit report of aggregate (s)                             */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec - none                             */
/*********************************************************************/
/*********************************************************************/
/* Constants and Flags                                               */
/*********************************************************************/
errors = 0
tdsn = 0
tagg = 0
lines = 58
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
"EXECIO 0 DISKR INCNTL (OPEN"
"EXECIO 0 DISKW AGSUMM (OPEN"
/*********************************************************************/
/*   write the Summary ABARS Activity Log                            */
/*********************************************************************/
"execio 1 diskr INCNTL"
do while (rc = 0)
   tagg = tagg + 1 /* counting total aggregates */
   if lines > 56 then
      call rpthead
   parse pull iagname
   iagname=strip(iagname,b)
   call araudit iagname
   parse var result cdsn edsn
   push '   ' left(iagname,8) right(cdsn,7) right(edsn,7)
   "execio 1 diskw AGSUMM"
   lines = lines + 1
   errors = errors + edsn
   tdsn = tdsn + cdsn
   "execio 1 diskr INCNTL"
end
push "    -------- ------- -------"
"execio 1 diskw agsumm"
push '0   Aggregates:' left(tagg,7) ' Datasets: ' tdsn ,
     ' Errors: ' errors
"execio 1 diskw AGSUMM"
/************************************************************/
"execio 0 diskr INCNTL (finis"
"execio 0 diskw agsumm (finis"
return 0;
rpthead:
/*********************************************************************/
/* Write Report Heading                                              */
/*********************************************************************/
push "1   ABARS Arecover Aggregate Audit Summary Report      " ,
      "              " date(usa)
"execio 1 diskw agsumm"
push "0   Agname   DSNs    Errors "
"execio 1 diskw agsumm"
push "    -------- ------- -------"
"execio 1 diskw agsumm"
lines = 4
return 0;
./ ADD NAME=DRBACKUP
/*REXX****************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name, Unit Type                                 */
/*                                                                   */
/*  Output: Modified Inc/Ex/Acc/All list                             */
/*          Result of abars abackup execution                        */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec                                    */
/*********************************************************************/
arg iagname tunit execver input .
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
  stat = msg('OFF')
/*********************************************************************/
/* setup constants                                                   */
/*********************************************************************/
call dr10
parse var result dcoldsn arecprm thlq .
/*********************************************************************/
/* Parse input parameters and Flag any problems                      */
/*********************************************************************/
  call dr11 iagname tunit execver input
  idsn = result
  if result = 16 then
    do
      endrc = result
      signal quit
    end
/*********************************************************************/
/* Read Dcollect Records and get the abars selection dataset         */
/*********************************************************************/
  call dr12 iagname dcoldsn
  output = result
  if result = 16 then
    do
      endrc = result
      signal quit
    end
/*********************************************************************/
/* copy input to selection dataset                                   */
/*********************************************************************/
  call dr13 iagname idsn output
  if result ^ = 0 then
    do
      endrc = result
      return endrc
    end
/*********************************************************************/
/* Run ABACKUP with Verify Option                                    */
/*********************************************************************/
  "HSEND WAIT ABACKUP" iagname tunit "VERIFY"
   endrc = rc
/*********************************************************************/
/* locate the verify log                                             */
/*********************************************************************/
  call dr14 iagname
  logdsn = result
  if endrc > 0 then    /* from previous Verify Command */
    do
      say "DRBACKUP: Aggregate Verify Failed, Check Report in" logdsn
      endrc = 16
      signal quit
    end
/*********************************************************************/
/* read the Read the log and look for datasets to exclude            */
/*********************************************************************/
  call dr15 iagname logdsn output thlq
  idsn = result
  if result = 16 then
    do
      endrc = result
      signal quit
    end
/*********************************************************************/
/* copy revised input to selection dataset                           */
/*********************************************************************/
  call dr13 iagname idsn output
  if result ^ = 0 then
    do
      endrc = result
      signal quit
    end
/*********************************************************************/
/* do the abackup from the modified control dataset                  */
/*********************************************************************/
   stat = msg(stat)
  "HSEND WAIT ABACKUP" iagname tunit execver
   endrc = rc
quit:
/*********************************************************************/
/* Clear ABARS control dataset £1                                    */
/*********************************************************************/
  call dr16 iagname output
/*********************************************************************/
exit endrc
/*REXX****************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name, Unit Type                                 */
/*                                                                   */
/*  Output: List of datasets in the aggregate                        */
/*          and their location                                       */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec                                    */
/*********************************************************************/
arg iagname tunit execver input .
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
  stat = msg('OFF')
/*********************************************************************/
/* setup constants                                                   */
/*********************************************************************/
call dr10
parse var result dcoldsn .
/*********************************************************************/
/* Verify Input dataset exists                                       */
/*********************************************************************/
if input ^= '' then
  do
    parse var input inputx '(' idsn
    if lastpos(')',idsn) ^= 0 then
      idsn = delstr(idsn,lastpos(')',idsn),1)
    msdsn = sysdsn(idsn)
    if msdsn ^= 'OK' then   /* problem, flag what's wrong */
      do
        say 'DRSCAN: Input Dataset' idsn '...' !! msdsn
        return (16)
      end
  end
/*********************************************************************/
/* Read Dcollect Records and get the abars selection dataset         */
/*********************************************************************/
if input ^= '' then
  do
    call dr12 iagname dcoldsn
    output = result
    if result = 16 then
      do
        endrc = result
        signal quit
      end
  end
/*********************************************************************/
/* copy input to selection dataset                                   */
/*********************************************************************/
if input ^= '' then
  do
    call dr13 iagname idsn output
    if result ^ = 0 then
      do
        endrc = result
        return endrc
      end
  end
/*********************************************************************/
/* Run ABACKUP with Verify Option                                    */
/*********************************************************************/
  "HSEND WAIT ABACKUP" iagname tunit "VERIFY"
   endrc = rc
/*********************************************************************/
/* locate the verify log                                             */
/*********************************************************************/
  call dr14 iagname
  logdsn = result
  if endrc > 0 then    /* from previous Verify Command */
    do
      say "DRSCAN: Aggregate Verify Failed, Check Report in" logdsn
      endrc = 16
      signal quit
    end
/*********************************************************************/
/* read the Read the log and look for datasets to exclude            */
/*********************************************************************/
  call dr51 iagname logdsn
  if result ^ = 0 then
    do
      endrc = result
      signal quit
    end
/*********************************************************************/
/* Clear ABARS control dataset £1                                    */
/*********************************************************************/
quit:
if input ^= '' then
  call dr16 iagname output
/*********************************************************************/
exit endrc
./ ADD NAME=DRSCAN
/*REXX****************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name, Unit Type                                 */
/*                                                                   */
/*  Output: List of datasets in the aggregate                        */
/*          and their location                                       */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec                                    */
/*********************************************************************/
arg iagname tunit execver input .
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
  stat = msg('OFF')
/*********************************************************************/
/* setup constants                                                   */
/*********************************************************************/
call dr10
parse var result dcoldsn .
/*********************************************************************/
/* Verify Input dataset exists                                       */
/*********************************************************************/
if input ^= '' then
  do
    parse var input inputx '(' idsn
    if lastpos(')',idsn) ^= 0 then
      idsn = delstr(idsn,lastpos(')',idsn),1)
    msdsn = sysdsn(idsn)
    if msdsn ^= 'OK' then   /* problem, flag what's wrong */
      do
        say 'DRSCAN: Input Dataset' idsn '...' !! msdsn
        return (16)
      end
  end
/*********************************************************************/
/* Read Dcollect Records and get the abars selection dataset         */
/*********************************************************************/
if input ^= '' then
  do
    call dr12 iagname dcoldsn
    output = result
    if result = 16 then
      do
        endrc = result
        signal quit
      end
  end
/*********************************************************************/
/* copy input to selection dataset                                   */
/*********************************************************************/
if input ^= '' then
  do
    call dr13 iagname idsn output
    if result ^ = 0 then
      do
        endrc = result
        return endrc
      end
  end
/*********************************************************************/
/* Run ABACKUP with Verify Option                                    */
/*********************************************************************/
  "HSEND WAIT ABACKUP" iagname tunit "VERIFY"
   endrc = rc
/*********************************************************************/
/* locate the verify log                                             */
/*********************************************************************/
  call dr14 iagname
  logdsn = result
  if endrc > 0 then    /* from previous Verify Command */
    do
      say "DRSCAN: Aggregate Verify Failed, Check Report in" logdsn
      endrc = 16
      signal quit
    end
/*********************************************************************/
/* read the Read the log and look for datasets to exclude            */
/*********************************************************************/
  call dr51 iagname logdsn
  if result ^ = 0 then
    do
      endrc = result
      signal quit
    end
/*********************************************************************/
/* Clear ABARS control dataset £1                                    */
/*********************************************************************/
quit:
if input ^= '' then
  call dr16 iagname output
/*********************************************************************/
exit endrc
./ ADD NAME=DRSEO
/*REXX****************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name, Unit Type                                 */
/*                                                                   */
/*  Output: List of datasets in the aggregate                        */
/*          and their location                                       */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec                                    */
/*********************************************************************/
arg iagname tunit execver input .
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
  stat = msg('OFF')
/*********************************************************************/
/* setup constants                                                   */
/*********************************************************************/
call dr10
parse var result dcoldsn .
/*********************************************************************/
/* Verify Input dataset exists                                       */
/*********************************************************************/
if input ^= '' then
  do
    parse var input inputx '(' idsn
    if lastpos(')',idsn) ^= 0 then
      idsn = delstr(idsn,lastpos(')',idsn),1)
    msdsn = sysdsn(idsn)
    if msdsn ^= 'OK' then   /* problem, flag what's wrong */
      do
        say 'DRSEO: Input Dataset' idsn '...' !! msdsn
        return (16)
      end
  end
/*********************************************************************/
/* Read Dcollect Records and get the abars selection dataset         */
/*********************************************************************/
if input ^= '' then
  do
    call dr12 iagname dcoldsn
    output = result
    if result = 16 then
      do
        endrc = result
        signal quit
      end
  end
/*********************************************************************/
/* copy input to selection dataset                                   */
/*********************************************************************/
if input ^= '' then
  do
    call dr13 iagname idsn output
    if result ^ = 0 then
      do
        endrc = result
        return endrc
      end
  end
/*********************************************************************/
/* Run ABACKUP with Verify Option                                    */
/*********************************************************************/
  "HSEND WAIT ABACKUP" iagname tunit "VERIFY"
   endrc = rc
/*********************************************************************/
/* locate the verify log                                             */
/*********************************************************************/
  call dr14 iagname
  logdsn = result
  if endrc > 0 then    /* from previous Verify Command */
    do
      say "DRSEO: Aggregate Verify Failed, Check Report in" logdsn
      endrc = 16
      signal quit
    end
/*********************************************************************/
/* read the Read the log and look for datasets to exclude            */
/*********************************************************************/
  call dr61 iagname logdsn
  if result ^ = 0 then
    do
      endrc = result
      signal quit
    end
/*********************************************************************/
/* Clear ABARS control dataset £1                                    */
/*********************************************************************/
quit:
if input ^= '' then
  call dr16 iagname output
/*********************************************************************/
exit endrc
./ ADD NAME=DR10
/*REXX****************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Output: constants used for ABARS Utilities                       */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Constants and Flags                                               */
/*********************************************************************/
/* utility dataset allocation defaults */
dcoldsn = "'A10DLH.DCOLLECT.DATA'"
arec    = "A10DLH.ABARS.ARECOVER.PARMS"
thlq    = "temp."
loglog  = "A10DLH.ABARS.ARECOVER.LOGS"
return dcoldsn arec thlq loglog
./ ADD NAME=DR11
/*REXX*/
dr11:
arg agname tunit execver input
/* *********************** */
/* * subroutine readparm * */
/* *********************** */
/* ************************************* */
/* * validates input parameters       ** */
/* *  and fails exec with messages    ** */
/* *  if problems are encountered.    ** */
/* ************************************* */
if agname  = '' ! ,
   tunit   = '' ! ,
   execver = '' ! ,
   input   = ''   then
  do
    say 'DRBACKUP: 4 Required parameters not supplied'
    say 'DRBACKUP: need Aggregate Name, Tape Unit, Execute/Verify, ',
        'and Input DSN (fully qualified)'
    return (16);
  end
/* ************************************* */
/* * check EXECUTE/VERIFY option      ** */
/* * and test to see if it's good     ** */
/* * Rich Sleger Spellcheck......     ** */
/* ************************************* */
if execver = 'EXECUTE' ! ,
   execver = 'VERIFY' then
  nop
else
  do
    say 'DRBACKUP:' execver ' MUST specify VERIFY or EXECUTE'
    return (16);
  end
/* ************************************* */
/* * pull dsn out of input parameter  ** */
/* * and test to see if it's good     ** */
/* ************************************* */
parse var input inputx '(' idsn
if lastpos(')',idsn) ^= 0 then
  idsn = delstr(idsn,lastpos(')',idsn),1)
msdsn = sysdsn(idsn)
if msdsn ^= 'OK' then
  do /* problem  flag what's wrong */
    say 'DRBACKUP: valid input dataset required'
    say 'DRBACKUP:' input '...' !! msdsn
    return (16)
  end
return idsn;
./ ADD NAME=DR12
/*REXX*/
dr12:
arg iagname dcoldsn
/* *********************** */
/* * subroutine readdcol * */
/* *********************** */
/* ************************************* */
/* * reads the dcollect records to    ** */
/* * acquire information about the    ** */
/* * aggregate                        ** */
/* ************************************* */
/*********************************************************************/
/* Constants and Flags                                               */
/*********************************************************************/
agnamef = 0
/*********************************************************************/
/* DCOLLECT Aggregate Group Record Description (rectype = 'AG')      */
/*********************************************************************/
/* Offset (dec) !  Length (bytes)  ! Field Description               */
/*********************************************************************/
/* 1            !  24              ! DCOLLECT Header                 */
/* 1            !  4               !  RDW                            */
/* 5            !  2               !  Record Type                    */
/* 7            !  2               !  VERSION                        */
/* 9            !  4               !  SMFID                          */
/* 13           !  4               !  SMF style Timestamp            */
/* 17           !  4               !  SMF style Datestamp            */
/* 21           !  4               !  Reserved                       */
/* 25           !  616             ! AG Definition Record            */
/* 25           !  2               !  AG Name Length                 */
/* 27           !  30              !  AG Name                        */
/* 57           !  8               !  TSO Userid doing last update   */
/* 65           !  10              !  Date of last update            */
/* 75           !   2              !  Reserved                       */
/* 77           !   8              !  Time of last update            */
/* 85           ! 120              !  Description of Aggregate       */
/* 205          !   1              !  Flags                          */
/*              !                  !       (1... ....) - TOLENQ(YES) */
/*              !                  !       (.1.. ....) - RETPD(YES)  */
/*              !                  !       (..1. ....) -*COPIES(YES) */
/*              !                  !       (...1 1111) - reserved    */
/* 206          !   3              !  Reserved                       */
/* 209          !   4              !  Retention Period               */
/* 213          !   30             !  Destination                    */
/* 243          !   33             !  Output DSN Prefix              */
/* 276          !   1              !  Reserved                       */
/* 277          !   44             !  Instruction DSN                */
/* 321          !    8             !  Instruction Member Name        */
/* 329          !  260             !  Array of DSNs (5)              */
/*              !   44             !           DSN                   */
/*              !    8             !           Member Name (if any)  */
/* 589          !    2             !  Management Class Name Length -**/
/* 591          !    30            !  Management Class Name -*       */
/* 621          !    4             !  Number of Copies      -*       */
/* 625          !    16            !  Reserved                       */
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
"allocate fi(input) da("dcoldsn") shr reuse"
if rc ^= 0 then
  do
    say 'DRBACKUP: cannot allocate' dcolldsn '.  RC='rc
    exit rc
  end
"execio 1 diskr input"
if rc ^= 0 then
  do
    say 'DRBACKUP: Error reading' dcolldsn '.  RC='rc
    exit rc
  end
do while rc = 0 & agnamef = 0
   parse pull dcollrec
   parse var dcollrec 5 rectype 7
   if rectype = 'AG' then /* aggregate record */
      do
       parse var dcollrec 25 agnamel 27 agname 57 .
       aggname = substr(agname,1,c2d(agnamel))
       if iagname = aggname then
         do /* found our aggregate */
           agnamef = 1
            /* get input dataset names */
           parse var dcollrec 329 rectail 644
           do n = 1 to 5
             parse var rectail 1 agidsn.n +44 agimem.n +8 rectail
           end
         end
     end
    "execio 1 diskr input"
end
"execio 0 diskr input (finis"
"free fi(input)"
/* *************************** */
/* * Delete the last record  * */
/* * read from the queue.    * */
/* * (didn't process til EOF)* */
/* *************************** */
if queued() = 1 then
  do
    delstack
  end
/* ******************************* */
/* * Check to see if we          * */
/* * Didn't find a match for     * */
/* * aggregate name (re-run, ... * */
/* * need dcollect info current) * */
/* ******************************* */
if agnamef = 0 then
  do /* need to flag error */
    say 'DRBACKUP:' iagname 'aggregate not found in dcollect dsn',
         dcoldsn
    return (16);
  end
output = "'" !! strip(agidsn.1,b) !! "(" !! strip(agimem.1,t) !! ")'"
return output;   /* remove for production  */
/* ******************************* */
/* * Check to see if there are   * */
/* * more than one selection dsn * */
/* * defined (error if there is).* */
/* ******************************* */
do i = 2 to 5
  if agidsn.i ^= "" then
    do
      say 'DRBACKUP:' iagname 'has multiple selection datasets defined'
      return (16);
    end
end
output = "'" !! strip(agidsn.1,b) !! "(" !! strip(agimem.1,t) !! ")'"
return output;
./ ADD NAME=DR13
/*REXX*/
dr13:
arg agname idsn oputctl
/* *********************** */
/* * subroutine copyrecs * */
/* *********************** */
/* ************************************* */
/* * copies the aggregate's input     ** */
/* *dataset to selection dataset      ** */
/* ************************************* */
/* ************************************* */
/* * check it to see if it exists     ** */
/* ************************************* */
if idsn = oputctl then   /* problem, flag what's wrong */
  do
    say 'DRBACKUP: Selection Dataset and input dataset are the same'
    say 'DRBACKUP: Selection Dataset :' oputctl
    say 'DRBACKUP:     Input Dataset :' idsn
    return (16)
  end
parse var oputctl odsn '(' .
odsn = odsn !! "'"
msdsn = sysdsn(odsn)
if msdsn = 'OK' ! ,
   msdsn = 'UNAVAILABLE DATASET' then /* good, continue */
  do
  "alloc fi(sysut2) da("oputctl") old"
  end
else /* so far so good             */
  do
    say 'DRBACKUP: Selection Dataset' odsn '...' !! msdsn
    return (16)
  end
r = 0
do while (rc ^= 0 & r ^= 6)
  r = r + 1
  "wait 10"
  "alloc fi(sysut2) da("oputctl") old"
end
if rc ^= 0 then
  do
    say 'DRBACKUP: Reset of selection dataset unsuccessful' oputctl
    return
  end
/* ************************************* */
/* * do remaining allocations         ** */
/* ************************************* */
"alloc fi(sysut1) da("idsn") shr reuse"
"alloc fi(sysin) dummy reuse"
"alloc fi(sysprint) dummy reuse"
/* ************************************* */
/* * copy to selection dataset        ** */
/* ************************************* */
"call 'sys1.linklib(iebgener)'"
"FREE FI(SYSUT1)"
"FREE FI(SYSUT2)"
return (0)
./ ADD NAME=DR14
/*REXX****************************************************************/
/*  GETLOG Subroutine                                                */
/*********************************************************************/
/*  Function:                                                        */
/*      Passed the aggregate name, we will use the automate function */
/*   "getvar" to obtain the log name of the last ABARS command for   */
/*   this aggregate. Automate is scanning for the occurrence of a    */
/*   "ARC6030I" message on the console and setting the variable for  */
/*   us.                                                             */
/*                                                                   */
/*   Input: Aggregate Name                                           */
/*                                                                   */
/*  Output: Logdsn for the aggregate                                 */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                    */
/*                                                                   */
/****************************************************************àZRC*/
dr14:
arg iagname, .
stat = msg('OFF')   /* suppress messages to the job */
varname = "ABARS_" !! iagname
"getvar " value(varname) logdsn
logdsn = "'" !! logdsn !! "'"
 /*"delvar " value(varname)*/
return logdsn
./ ADD NAME=DR14AM
/*REXX****************************************************************/
/*  GETLOG Subroutine                                                */
/*********************************************************************/
/*  Function:                                                        */
/*      Passed the aggregate name, we will use the automate function */
/*   "getvar" to obtain the log name of the last ABARS command for   */
/*   this aggregate. Automate is scanning for the occurrence of a    */
/*   "ARC6030I" message on the console and setting the variable for  */
/*   us.                                                             */
/*                                                                   */
/*   Input: Aggregate Name                                           */
/*                                                                   */
/*  Output: Logdsn for the aggregate                                 */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                    */
/*                                                                   */
/****************************************************************àZRC*/
dr14:
arg iagname, .
stat = msg('OFF')   /* suppress messages to the job */
varname = "ABARS_" !! iagname
"getvar " value(varname) logdsn
logdsn = "'" !! logdsn !! "'"
 /*"delvar " value(varname)*/
return logdsn
./ ADD NAME=DR14NV
/*REXX****************************************************************/
/*  GETLOG Subroutine                                                */
/*********************************************************************/
/*  Function:                                                        */
/*      Passed the aggregate name, we will use the same PDS that     */
/*   NETVIEW writes to obtain the activity log of the most recent    */
/*   ABARS command for this aggregate.  NETVIEW is scanning for      */
/*   the occurrence of an "ARC6030I on the console and updates this  */
/*   PDS for us.                                                 àXRC*/
/*                                                                   */
/*   Input: Aggregate Name                                           */
/*                                                                   */
/*  Output: Logdsn for the aggregate                                 */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                    */
/*                                                                   */
/****************************************************************àZRC*/
dr14:
arg iagname, .
stat = msg('OFF')   /* suppress messages to the job */
"alloc fi(input) da('a10dlh.abarxref.pds(" !! iagname !! ")') shr reuse"
"execio 1 diskr input"
parse pull logdsn
"execio 0 diskr input (close"
"free fi(input)"
logdsn = "'" !! logdsn !! "'"
return logdsn
./ ADD NAME=DR15
/*REXX****************************************************************/
dr15:
/*********************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name,                                           */
/*         Activity Log Dataset,                                     */
/*         ABARS Selection DSN £1,                                   */
/*                                                                   */
/*  Output: Revised aggregate control cards                          */
/*          (ABARS Selection DSN £1)                                 */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec                                    */
/*********************************************************************/
arg iagname actlog output thlq .
/*********************************************************************/
/* Constants and Flags (global to subroutines)                       */
/*********************************************************************/
look = 'OFF'
m = 0
smc1 = 0   /* counter for the £ of datasets*/
smc2 = 0   /* counter for the £ of arcive'd datasets*/
smc3 = 0   /* counter for the £ of non-arcive'd datasets*/
include = 'INCLUDE ('
exclude = 'EXCLUDE ('
accompa = 'ACCOMPANY ('
allocat = 'ALLOCATE ('
ii = 0   /* counters for the £ of lines per occurrence àZRC*/
jj = 0   /* counters for the £ of lines per occurrence àZRC*/
kk = 0   /* counters for the £ of lines per occurrence àZRC*/
ll = 0   /* counters for the £ of lines per occurrence àZRC*/
text. = ''
idsn = "'" !! thlq !! "SELECT." !! iagname !! "'"
/*********************************************************************/
/* Text is an internal data structure for ABARS control statements   */
/* it has 3 levels of qualification                                  */
/* Text.a.b.c                                                        */
/*     "a" is 1 - 4 for include, exclude, allocate, or accompany     */
/*       "b" is the number of occurrences of the control card    àZRC*/
/*        "c" is the number of statements under "control"            */
/*********************************************************************/
/*********************************************************************/
/* The control statements follow two paths (providing all exist)     */
/* 1)the exclude/include statements are dealt with from the          */
/*   subroutines readlog and writeinc                                */
/* 2)the allocate/accompany statements are dealt with from the       */
/*   subroutines allocacc and writeaa                                */
/* These statements merge in the selection dataset prior to          */
/* executing the abackup execute for the aggregate.                  */
/*********************************************************************/
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
/*trace*?r************************************************************/
  stat = msg('OFF')
call readlog
if result > 0 then signal quit
call allocacc
if result > 0 then signal quit
call writeinc
if result > 0 then signal quit
call writeaa
quit:
return idsn;
readlog:
/* *********************** */
/* * subroutine readlog  * */
/* *********************** */
/* ************************************* */
/* * allocates the backup log dataset ** */
/* * the reads the backup activity    ** */
/* * log to eliminate archive data    ** */
/* ************************************* */
/*********************************************************************/
/*   start with opening and reading the ABARS Verify Activity Log    */
/*********************************************************************/
stat = msg('OFF')
"allocate fi(input) da("actlog") shr reuse"
if rc ^= 0 then
  do
    say 'DRBACKUP: Error allocating log dsn' actlog '.  RC='rc
    return 16;
  end
/*********************************************************************/
/*   parse the abars activity log for dataset names                  */
/*********************************************************************/
"execio 1 diskr input"
do while rc = 0
   parse pull abarorec
   parse var abarorec 2 abarmsg 10 .
   if abarmsg = 'ARC6004I' then /* msg from an EXECUTE log (bad)*/
      do
        say 'DRBACKUP: Log not from ABACKUP VERIFY' logdsn
        say 'DRBACKUP: Check Automated Operations, wrong log' actlog
        return (16);
      end
   if abarmsg = 'ARC6166I' then /* start of dataset names */
     do /* read the next record */
       "execio 1 diskr input"
       parse pull abarorec
       parse var abarorec abart1 abart2 .
       if abart1 = 'INCLUDE/EXCLUDE' ! ,
          abart2 = 'INCLUDE/EXCLUDE' then
         look = 'ON'
       else
         look = 'OFF'
     end
   if abarmsg = 'ARC6250I' then /* msg proceeding DSNs for DFSMShsm */
      look = 'OFF'
   if abarmsg = 'ARC6379I' then /* Dataset Count Fix 9/8/94         */
      look = 'OFF'              /* Dataset Count Fix 9/8/94         */
   if abarmsg = 'ARC6055I' then /* msg proceeding DSNs for DFHSM 2.6*/
      look = 'OFF'
   if look = 'ON' then
/*********************************************************************/
/*   Look for Dataset names                                          */
/*********************************************************************/
     do
       parse var abarorec 2 abarnull 4 .
       if abarnull = '  '  then  /* it is a dataset name */
         do
           smc1 = smc1 + 1
           parse var abarorec 4 agdsn 48 .
           agdsn = strip(agdsn,t)
           aggdsn = "'" !! agdsn !! "'"
           /* *************************** */
           /* parse the output of listcat */
           /* *************************** */
           call outtrap ("cmdoput.")
           "LISTC entry("aggdsn") volume"
           do j = 1 to cmdoput.0
             parse var cmdoput.j 8 volser 14 .
             if volser = 'VOLSER' then
               do
                j = cmdoput.0   /* end listcat process */
                 parse var cmdoput.j 26 volume 32 junk 52 devt 60 .
                 /* ************************ */
                 /* do we want this dataset? */
                 /* ************************ */
                 call dr151 iagname agdsn volume devt
                 why = result
                 if why ^= '' then
                   do
                     say 'DRBACKUP: Problem with' agdsn why
                     smc2 = smc2 + 1
                   end
                 else
                   do
                     smc3 = smc3 + 1
                     incldsn.smc3 = agdsn
                   end
               end
           end
           call outtrap("off")
         end
     end
   "execio 1 diskr input"
end
"execio 0 diskr input (finis"
"free fi(input)"
/* "delete" actlog  */
return 0;
allocacc:
/* *********************** */
/* * subroutine allocacc * */
/* *********************** */
/* **************************** */
/* look for allocate/accompany */
/* statements in selection dsn */
/* **************************** */
"alloc fi(abin) da("output") shr"
"EXECIO 1 DISKR ABIN"
if rc ^= 0 then do
  say 'DRBACKUP: Error allocating selection dataset' output '.  RC='rc
  exit rc
end
parse pull abarin
do while rc = 0
  parse var abarin kword '(' abarin
  kword = strip(kword,b)
  abarin = strip(abarin,t)
  if lastpos('-',abarin) ^= 0 then
    abarin = delstr(abarin,lastpos('-',abarin),1)
  select
    when abbrev(include,kword,1)  then
      do
        i = 1
        ii = ii + 1
        text.i.ii.1 = abarin
        call mparse i ii text.i.ii.1
      end
    when abbrev(exclude,kword,1)  then
      do
        j = 2
        jj = jj + 1
        text.j.jj.1 = abarin
        call mparse j jj text.j.jj.1
      end
    when abbrev(accompa,kword,1)  then
      do
        k = 3
        kk = kk + 1
        text.k.kk.1 = abarin
        call mparse k kk text.k.kk.1
      end
    when abbrev(allocat,kword,1)  then
      do
        l = 4
        ll = ll + 1
        text.l.ll.1 = abarin
        call mparse l ll text.l.ll.1
      end
    otherwise /* could be a comment */
      do
        nop
      end
  end
  "execio 1 diskr abin"
  parse pull abarin
end
"execio 0 diskr abin (finis"
"free fi(abin)"
return 0;
writeinc:
/* *********************** */
/* * subroutine writeinc * */
/* *********************** */
/* **************************** */
/* open cntl dataset and write */
/* datasets to be included     */
/* **************************** */
/* "alloc fi(about) da("output") old" */
msdsn = sysdsn(idsn)
if msdsn = 'OK' then   /* reuse dataset */
   "alloc fi(about) da("idsn") old"
else /* create a new dataset       */
   "alloc fi(about) da("idsn") new space(2 1)" ,
    " recfm(f b) lrecl(80) blksize(0) dsorg(PS)"
say 'DRBACKUP: Candidate Datasets for backup:' smc1
say "DRBACKUP: Arcive'd Datasets Excluded:" smc2
say "DRBACKUP: Datasets Included:" smc3
"EXECIO 0 DISKW ABOUT (OPEN"
preceed = ' INCLUDE('
if smc3 > 0 then
  do j = 1 to smc3
    if j ^= smc3  then
      do
        push preceed !! incldsn.j !! ','
       "EXECIO 1 DISKW ABOUT"
      end
    else
      do
        push preceed !! incldsn.j !! ')'
       "EXECIO 1 DISKW ABOUT"
      end
    preceed = '         '
  end
else
  do
    say "DRBACKUP: All datasets in aggregate have been eliminated"
    return (16);
  end
return 0;
writeaa:
/* *********************** */
/* * subroutine writeaa  * */
/* *********************** */
/* **************************** */
/* follow this with allocate/   */
/* accompany statements         */
/* **************************** */
if text.3.1.1 ^= '' then
  do
    push ' ' accompa '-'
    "EXECIO 1 DISKW ABOUT"
    ddname = 'ABOUT'
    call commstmt 3 ddname
  end
if text.4.1.1 ^= '' then
  do
    push ' ' allocat '-'
    "EXECIO 1 DISKW ABOUT"
    ddname = 'ABOUT'
    call commstmt 4 ddname
  end
push '  /* dataset modified by DRBACKUP' date(usa) time() '*/'
"EXECIO 1 DISKW ABOUT"
"execio 0 diskw about (finis"
"free fi(about)"
return 0;
mparse: PROCEDURE EXPOSE TEXT.
arg u v excludes
/* *********************** */
/* * subroutine mparse   * */
/* *********************** */
/* ************************************* */
/* * separates  merged include/exclude** */
/* * allocate/accompany statements and** */
/* * splits them for use by DFDSS.    ** */
/* ************************************* */
fileiorc = 0
paren = 1
w = 1
paren = paren + dr152('(',text.u.v.w) - dr152(')',text.u.v.w)
do while fileiorc = 0 & paren ^= 0
  "execio 1 diskr abin"
  fileiorc = rc
  w = w + 1
  parse pull text.u.v.w
  if lastpos('-',text.u.w.v) ^= 0 then
    text.u.w.v = delstr(text.u.w.v,lastpos('-',text.u.w.v),1)
  paren = paren + dr152('(',text.u.v.w) - dr152(')',text.u.v.w)
end
return 0;
commstmt: PROCEDURE EXPOSE TEXT.
/* *********************** */
/* * function commstmt   * */
/* *********************** */
/* ************************************* */
/* * creates control statements       ** */
/* * acceptable to both df/dss and    ** */
/* * abars                            ** */
/* ************************************* */
arg cntlx ddnam exclx .
i = 1
j. = 1
j = 1
do while (text.cntlx.i.j ^= '')
  do while (text.cntlx.i.j ^= '')
   /* say text. cntlx i j '=' text.cntlx.i.j  */
      j.i = j.i + 1
      j = j + 1
  end
  j.i = j.i - 1
  j = 1
  i = i + 1
end
i = i - 1
do x = 1 to i
   do y = 1 to j.i
      linex = text.cntlx.x.y
      if x = i & y = j.i then /* last line */
        do
          if exclx ^= '' then   /* there are excludes too */
            do
              push '   ' linex ' - '
              'EXECIO 1 DISKW' ddnam
            end
          else  /* end of statements */
            do
              push '   ' linex
              'EXECIO 1 DISKW' ddnam
            end
        end
      else
        if x ^= i & y = j.i then /* end of intermediate */
          do
            linex = delstr(linex,length(linex)) /* delete extra )*/
            push '   ' linex ' - '
            'EXECIO 1 DISKW' ddnam
          end
        else
          do  /* its a line without continuation */
            push '   ' linex ' - '
            'EXECIO 1 DISKW' ddnam
          end
   end
return 0;
./ ADD NAME=DR151
/*REXX****************************************************************/
/*  ELIMDSN Subroutine                                               */
/*********************************************************************/
dr151:
arg agname aggdsn volume devt
elimflag = ""
if volume = 'ARCIVE' then
  do
    elimflag = '...Archived dataset'
  end
return elimflag
./ ADD NAME=DR152
/*REXX*/
dr152:
arg lookupv, abarin
/* *********************** */
/* * function count      * */
/* *********************** */
/* ************************************* */
/* * parses a line of input and counts** */
/* * the £ of occurrences of a string ** */
/* ********************************àZRC* */
lastrp = 1
idx = 0
do while lastrp ^= 0
  lastrp = pos(lookupv,abarin,lastrp)
  if lastrp > 0  then
    do
      lastrp = lastrp + 1 /* search starting from the next pos */
      idx = idx + 1
    end
end
return idx
./ ADD NAME=DR16
/*REXX*/
dr16:
arg agname output
/* *********************** */
/* * subroutine clearctl * */
/* *********************** */
"alloc fi(exclout) da("output") old"
/* ************************************* */
/* * clears the 1st selection dataset.** */
/* * first, loop until we get the     ** */
/* *   selection dataset allocated    ** */
/* ************************************* */
r = 0
do while (rc ^= 0 & r ^= 20)
  r = r + 1
  "wait 15"
  "alloc fi(exclout) da("output") old"
end
if rc ^= 0 then
  do
    say 'DRBACKUP: Reset of selection dataset unsuccessful' output
    return
  end
/* ************************************* */
/* * Second, Run our records into     ** */
/* *   the dataset to reset it        ** */
/* ************************************* */
"EXECIO 0 DISKW EXCLOUT (OPEN"
push '  /* dataset cleared by DRBACKUP' date(usa) time() '*/'
"EXECIO 1 DISKW EXCLOUT"
"execio 0 diskw EXCLOUT (finis"
"free fi(exclout)"
return 0;
./ ADD NAME=DR21
/*REXX****************************************************************/
dr21:
/*********************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name,                                           */
/*         Activity Log Dataset,                                     */
/*                                                                   */
/* Output: ARECOVER dataset statements,                              */
/*         Activity Log,                                             */
/*         Detail DSN dataset                                        */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec                                    */
/*********************************************************************/
arg iagname tunit actlog ardsn detpre .
/*********************************************************************/
/* Constants and Flags                                               */
/*********************************************************************/
look = 'OFF'
dsnlist = 'off'
k = 0
cs = 0           /* copy set, support for multiple copies */
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
/** set up a reporting dsn **********************************/
rptdsn = "'" !! detpre !! "dsndet." !! iagname !! "'"
msdsn = sysdsn(rptdsn)
if msdsn ^= 'OK' then
  do
   "alloc da("rptdsn") new space(2 1)"    ,
     " recfm(f b) lrecl(200) blksize(0) dsorg(PS)"
  end
"alloc fi(dsndet) da("rptdsn") old"
/*********************************************************************/
/*   Locate and read the ABARS Activity Log                          */
/*********************************************************************/
if actlog = "''" then
  do
    say "ABARPOST: no ABACKUP logs available for aggregate" iagname
    return (16);
  end
"allocate fi(input) da("actlog") shr reuse"
"EXECIO 0 DISKW dsndet (OPEN"
"EXECIO 0 DISKW LOG (OPEN"
/*********************************************************************/
/*   parse the abars activity log for msgs,dsns,cond codes, etc      */
/*********************************************************************/
"execio 1 diskr input"
cdsn = 'no'
execlog = 'no'
do while (rc = 0)
   parse pull abarorec
   push abarorec
   "execio 1 diskw log"
   "execio 1 diskr input"
   parse var abarorec 2 ablogmsg 10
   select
     when ablogmsg = "ARC6055I" then  /* ending msg  */
       logrc = word(abarorec,words(abarorec))
     when ablogmsg = "ARC6061I" then  /* Control File Message */
       do                             /* Volser Follows       */
         cdsn = 'yes'
         cs = cs + 1
         parse var abarorec 41 cntldsn.cs .
       end
     when dsnlist = 'on' then  /* gather detail on datasets   */
       do
         parse var abarorec 24 dssmsg 31
         if dssmsg = 'ADR013I' then
           do
             dsnlist = 'off'
           end
         else
           do
             call dr212 dssmsg, abarorec
             if result ^= '' then
               do
                 k = k + 1
                 dsnlist.k = '  /*' result '*/'
               end
           end
       end
     when ablogmsg = "ARC6064I" then  /* mig/tape dsn fix 9/8/94 */
       do
         parse var abarorec 20 tmdsn .
         k = k + 1
         dsnlist.k = '  /*' tmdsn '*/'
         call dr213 tmdsn
       end
     when ablogmsg = "ARC6004I" then  /* active execute log */
       do
         execlog = 'yes'
         parse var abarorec 24 dssmsg 31
         if dssmsg = 'ADR454I' then
           dsnlist = 'on'
       end
     when cdsn = 'yes' then  /* look for volser of cntl dsn */
       do
         if sysvar(syshsm) = 2060 then  /* its dfhsm 2.6 */
           do
             parse var abarorec cc cntlvol.cs .
             if cc = 0 then
               cdsn = 'found'
           end
         else  /* its DFSMS/hsm V1 */
           if ablogmsg = "ARC6060I" then /* want the line before */
             cdsn = 'found'
           else
             do
               parse var abarorec 2 nopre 4 .   /* Fix Volser 9/8/94 */
               if nopre = '  ' then             /* Fix Volser 9/8/94 */
                 parse var abarorec 4 cntlvol.cs .        /*  9/8/94 */
             end
       end
     otherwise
       nop
  end
end
/************************************************************/
"execio 0 diskr input (finis"
"execio 0 diskw dsndet (finis"
"free fi(input,dsndet)"
/************************************************************/
r = 0
parse var ardsn arparms '(' .
arparms = arparms !! "'"
mdsn = sysdsn(arparms)
if mdsn ^= 'OK' then
  do
    say 'ABARPOST:' arparms '...' !! mdsn
    say 'ARECOVER parms not written for' iagname
    return logrc;
  end
/************************************************************/
/**if dfhsm2.6, the last dataset is the instruction dataset**/
/**for auditing purposes, this dataset is unnecessary      **/
/************************************************************/
if sysvar(syshsm) = 2060 then  /* its dfhsm 2.6 */
  do
    dsnlist.k = ''
    dsnlist.0 = k - 1
  end
else
  do
/************************************************************/
/**if DFSMS1.1, the last two datasets are              àZRC**/
/**the instruction dataset and the abackup log             **/
/**for auditing purposes, these datasets are unnecessary   **/
/************************************************************/
    dsnlist.k = ''
    k = k - 1
    dsnlist.k = ''
    dsnlist.0 = k - 1
  end
if cdsn = 'found' then
  do
    CALL OUTTRAP 'CMDOUTPUT.',999
    if cs = 1 then
      do
        call dr211 iagname tunit cntldsn.1 cntlvol.1 actlog 1
        call dr211 iagname tunit cntldsn.1 cntlvol.1 actlog 2
      end
    else
      do
        call dr211 iagname tunit cntldsn.1 cntlvol.1 actlog 1
        call dr211 iagname tunit cntldsn.2 cntlvol.2 actlog 2
      end
    CALL OUTTRAP 'OFF',999
    "ALLOC FI(AROUT) DA("ardsn") old"
    do while (rc ^= 0 & r ^= 20)
      r = r + 1
      "wait 15"
      "ALLOC FI(AROUT) DA("ardsn") old"
    end
    if rc ^= 0 then
      do
        say "ABARPOST: Unable to Allocate Arecover parms dataset" ardsn
        return 16;
      end
    "EXECIO * DISKW AROUT (STEM CMDOUTPUT."
    "EXECIO * DISKW AROUT (STEM dsnlist. FINIS"
    "FREE FI(AROUT)"
  end
/************************************************************/
return logrc;
dr212:
/************************************************************/
/* REXX SUBROUTINE-DR212                                    */
/* takes the datasetnames from the abackup log records      */
/* and writes the dsn attributes to a file for later report */
/************************************************************/
arg dfdssmsg, abarorec
retrndsn = ''
if dfdssmsg ^= '' then
  return retrndsn;
parse var abarorec 50 dsname 94
parse var abarorec 50 nmflg  64
parse var abarorec 50 apflg  52
dsnameq = "'" !! strip(dsname,t) !! "'"
select
 when nmflg  = 'CLUSTER NAME  '  then
   do
     parse var abarorec 65 compname 110
     push compname 'CLUSTER'
    "execio 1 diskw dsndet"
     retrndsn = strip(compname,t)
   end
 when apflg = '  ' then /* text concerning path and aix */
     nop
 when nmflg = 'CATALOG NAME  ' then
     nop
 when nmflg = 'COMPONENT NAME' then
   do
     parse var abarorec 65 compname 110
     compname  = "'" !! strip(compname,t) !! "'"
     x = listdsi(compname)
     rc = outtrap('cmdoput.',999,noconcat)
     "LISTC entry("compname") alloc"
     do i = 1 to cmdoput.0
       parse var cmdoput.i 1 piece1 6 junk 8 piece2 21
       select
         when  piece1 = 'DATA' then
           comptype = piece1
         when  piece1 = 'INDEX' then
           comptype = piece1
         when  piece1 = 'AIX' then
           comptype = piece1
         when  piece2 = 'DATASET-OWNER' then
           parse var cmdoput.i 53 credt 61
         when  piece2 = 'RELEASE------' then
           parse var cmdoput.i 53 expdt 61
         when  piece2 = 'SPACE-TYPE---' then
           do
             parse var cmdoput.i 24 allotype 32
             /* suppress the  dashes ('---') from listcat */
             x = lastpos('-',allotype) + 1
             y = length(allotype)
             allotype = substr(allotype,x,y)
           end
         when  piece2 = 'SPACE-PRI----' then
           do
             parse var cmdoput.i 26 prispace 32
             /* suppress the  dashes ('---') from listcat */
             x = lastpos('-',prispace) + 1
             y = length(prispace)
             prispace = substr(prispace,x,y)
           end
         when  piece2 = 'SPACE-SEC----' then
           do
             parse var cmdoput.i 26 secspace 32
             /* suppress the  dashes ('---') from listcat */
             x = lastpos('-',secspace) + 1
             y = length(secspace)
             secspace = substr(secspace,x,y)
           end
         when  piece2 = 'VOLSER-------' then
           do
             parse var cmdoput.i 56 cisize 61
             parse var cmdoput.i 80 hiallo  90
             parse var cmdoput.i 116 extents 119
             /* suppress the  dashes ('---') from listcat */
             x = lastpos('-',cisize) + 1
             y = length(cisize)
             cisize = substr(cisize,x,y)
             x = lastpos('-',hiallo) + 1
             y = length(hiallo)
             hiallo = substr(hiallo,x,y)
             x = lastpos('-',extents) + 1
             y = length(extents)
             extents = substr(extents,x,y)
           end
         when  piece2 = 'DEVTYPE------' then
           do
             parse var cmdoput.i 56 recptrk 61
             parse var cmdoput.i 80 hiused  90
             /* suppress the  dashes ('---') from listcat */
             x = lastpos('-',recptrk) + 1
             y = length(recptrk)
             recptrk = substr(recptrk,x,y)
             x = lastpos('-',hiused) + 1
             y = length(hiused)
             hiused = substr(hiused,x,y)
           end
         when  piece2 = 'VOLFLAG------' then
           parse var cmdoput.i 27 multi 32
         otherwise
           nop
       end  /*select*/
     end
     call outtrap("off")
     q = sysdsname 'VSAM    ' sysunit sysvolume sysdsorg,
         allotype hiallo hiused prispace secspace extents,
         credt sysrefdate expdt 'V' syslrecl,
         cisize syspassword sysracfa sysupdated systrkscyl,
         recptrk sysadirblk sysudirblk multi
     push q
     "execio 1 diskw dsndet"
   end
 otherwise
/***************************************************************/
/* non-vsam dataset                                            */
/***************************************************************/
     do
       x = listdsi(dsnameq "NORECALL")
       if sysreason  = 8 then /* tape dataset */
         q = dsname 'NONVSAM' 'TAPE'
       else
         q = sysdsname 'NONVSAM' sysunit sysvolume sysdsorg,
           sysunits sysalloc sysused sysprimary sysseconds sysextents,
           syscreate sysrefdate sysexdate sysrecfm syslrecl,
           sysblksize syspassword sysracfa sysupdated systrkscyl,
           sysblkstrk sysadirblk sysudirblk
        push q
       "execio 1 diskw dsndet"
       retrndsn = sysdsname
     end
end /* select */
return retrndsn;
dr213:
/************************************************************/
/* REXX SUBROUTINE-DR213                                    */
/* takes the datasetname  from the abackup log records      */
/* and writes the dsn attributes to a file for later report */
/* (tape and migrated datasets only)                        */
/************************************************************/
arg dsname
retrndsn = ''
dsnameq = "'" !! strip(dsname,t) !! "'"
/***************************************************************/
/* non-vsam dataset                                            */
/***************************************************************/
x = listdsi(dsnameq "NORECALL")
if sysreason  = 8 then /* tape dataset */
  q = dsname 'NONVSAM' 'TAPE'
else
  if sysreason  = 9 then /* tape dataset */
    q = dsname 'NONVSAM' 'DASD' 'MIGRAT'
    else
      if sysreason  = 25 then /* tape dataset */
        q = dsname 'NONVSAM' 'TAPE' 'MIGRAT'
      else
        q = sysdsname '-ERROR-'
 push q
"execio 1 diskw dsndet"
retrndsn = sysdsname
return retrndsn;
./ ADD NAME=DR211
/*REXX                                                  àXRC*/
dr211:
arg iagname tunit cntldsn cntlvol logdsn i .
/************************************************************/
/* REXX SUBROUTINE-genarec                                  */
/* codes the arecover statements (valid for dfhsm 2.6)      */
/* for this aggregate                                       */
/************************************************************/
/************************************************************/
/* REXX SUBROUTINE-genarec                                  */
/* codes the arecover statements (valid for dfsmshsm 1.1)   */
/* for this aggregate as comments                           */
/************************************************************/
if i = 1 then
  do
    SAY " HSEND WAIT ARECOVER "cntldsn"-"
    SAY " VOLUMES("cntlvol") " tunit " REPLACE EXECUTE"
  end
 else
  do
    SAY " /*HSEND WAIT ARECOVER-*/"
    SAY " /*DATASETNAME("cntldsn") VOLUMES("cntlvol")-*/"
    SAY " /*" tunit " DSCONFLICT(REPLACE) EXECUTE *DFSMShsm11*/"
    SAY " /* " logdsn "*/"
   end
RETURN 0
./ ADD NAME=DR22
dr22:
arg iagname detpre .
stat = msg('OFF')
rptdsn = "'" !! detpre !! "dsndet." !! iagname !! "'"
"alloc fi(dsndet) da("rptdsn") old"
"execio 1 diskr dsndet"
lines = 58
page = 1
do while (rc = 0)
   if lines > 57 then
     do
       call DR221
     end
   parse pull ,
         sysdsname systyp sysunit sysvolume sysdsorg sysunits sysalloc,
         sysused sysprimary sysseconds sysextents syscreate,
         sysrefdate sysexdate sysrecfm syslrecl sysblksize,
         syspassword sysracfa sysupdated systrkscyl sysblkstrk,
         sysadirblk sysudirblk
   push " " ,
        left(sysdsname,44),
        sysunit,
        left(sysvolume,6),
        left(systyp,7),
        right(sysdsorg,5),
        left(sysunits,8),
        right(sysprimary,5),
        right(sysseconds,5),
        right(sysextents,3),
        syscreate,
        right(sysexdate,8),
        left(sysrecfm,5),
        right(sysblksize,7)
   "execio 1 diskw log"
   "execio 1 diskr dsndet"
   lines = lines + 1
end
"execio 0 diskw log   (finis"
"execio 0 diskr dsndet (finis"
"free fi(dsndet)"
"delete "rptdsn
return 0;
dr221:
/************************************************************/
/* REXX SUBROUTINE-DR221                                    */
/* report heading routine                                   */
/************************************************************/
push "1        ABARS DSN Detail Report for Aggregate:" ,
      iagname "      " date(usa) "   Page:" page
"execio 1 diskw log"
page = page + 1
push "0  Dataset Name                               ",
     "UNIT VOLSER DSNType DSORG Alloc   ",
     "Pri   Sec   Ext Credt    Expdt   ",
     "RECFM BLKSIZE"
"execio 1 diskw log"
push "  -------------------------------------------- " !! ,
     "---- ------ ------- ----- -------- ----- ----- " !! ,
     "--- -------- -------- ----- -------"
"execio 1 diskw log"
lines = 4
return 0;
./ ADD NAME=DR31
/*REXX****************************************************************/
dr31:
/*********************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name,                                           */
/*         arecover parms dataset                                    */
/*                                                                   */
/* Output: ARECOVER statement execution,                             */
/*         Activity Log,                                             */
/*         log of arecover logs for audit purposes                   */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec                                    */
/*********************************************************************/
arg iagname ardsn .
/*********************************************************************/
/* Constants and Flags                                               */
/*********************************************************************/
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
/*********************************************************************/
/* Find out which release of DFHSM is available                      */
/*********************************************************************/
 dfhsm = sysvar(syshsm)
/****DFHSM 2.6 is 2060 ***********************************************/
/****DFSMShsm 1.1 is 1010 ********************************************/
/*********************************************************************/
/*   Locate and read the ABARS arecover parms dataset                */
/*********************************************************************/
r = 0
if ardsn = "''" then
  do
    say "ARECPROC: no ARECOVER Parms Dataset for aggregate" iagname
    return (16);
  end
"allocate fi(input) da("ardsn") shr"
do while (rc ^= 0 & r ^= 20)
  r = r + 1
  "wait 15"
  "alloc fi(input) da("ardsn") shr"
end
if rc ^= 0 then
  do
    say 'ARECPROC: Check Syslog; Contention for parms DSN' ardsn
    return (16);
  end
/*********************************************************************/
/*   parse the abars arecover parms dataset for control dsn & volser */
/*********************************************************************/
"execio * diskr input (finis"
"free fi(input)"
parse pull h1 h2 h3 h4
parse pull h5 h6 h7 h8 h9
delstack
parse var h4 cdsn '-' .
if dfhsm ^= 2060 then
  do
    cdsn = 'datasetname(' !! cdsn !! ')'
    if h7 = 'REPLACE' then
      h7 = 'DSCONFLICT(REPLACE)'
  end
"hsend wait arecover" cdsn h5 h6 h7 h8
say "hsend wait arecover" cdsn ,
    h5 h6 h7 h8
return rc;
./ ADD NAME=DR31
/*REXX****************************************************************/
dr31:
/*********************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name,                                           */
/*         arecover parms dataset                                    */
/*                                                                   */
/* Output: ARECOVER statement execution,                             */
/*         Activity Log,                                             */
/*         log of arecover logs for audit purposes                   */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec                                    */
/*********************************************************************/
arg iagname ardsn .
/*********************************************************************/
/* Constants and Flags                                               */
/*********************************************************************/
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
/*********************************************************************/
/* Find out which release of DFHSM is available                      */
/*********************************************************************/
 dfhsm = sysvar(syshsm)
/****DFHSM 2.6 is 2060 ***********************************************/
/****DFSMShsm 1.1 is 1010 ********************************************/
/*********************************************************************/
/*   Locate and read the ABARS arecover parms dataset                */
/*********************************************************************/
r = 0
if ardsn = "''" then
  do
    say "ARECPROC: no ARECOVER Parms Dataset for aggregate" iagname
    return (16);
  end
"allocate fi(input) da("ardsn") shr"
do while (rc ^= 0 & r ^= 20)
  r = r + 1
  "wait 15"
  "alloc fi(input) da("ardsn") shr"
end
if rc ^= 0 then
  do
    say 'ARECPROC: Check Syslog; Contention for parms DSN' ardsn
    return (16);
  end
/*********************************************************************/
/*   parse the abars arecover parms dataset for control dsn & volser */
/*********************************************************************/
"execio * diskr input (finis"
"free fi(input)"
parse pull h1 h2 h3 h4
parse pull h5 h6 h7 h8 h9
delstack
parse var h4 cdsn '-' .
if dfhsm ^= 2060 then
  do
    cdsn = 'datasetname(' !! cdsn !! ')'
    if h7 = 'REPLACE' then
      h7 = 'DSCONFLICT(REPLACE)'
  end
"hsend wait arecover" cdsn h5 h6 h7 h8
say "hsend wait arecover" cdsn ,
    h5 h6 h7 h8
return rc;
./ ADD NAME=DR32
/*REXX****************************************************************/
dr32:
/*********************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name,                                           */
/*         Activity Log Dataset,                                     */
/*                                                                   */
/* Output: ARECOVER dataset statements,                              */
/*         Activity Log,                                             */
/*         Detail DSN dataset                                        */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec                                    */
/*********************************************************************/
arg iagname actlog loglog .
/*********************************************************************/
/* Constants and Flags                                               */
/*********************************************************************/
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
rclook = 'off'
/*********************************************************************/
/*   Locate and read the ABARS Activity Log                          */
/*********************************************************************/
if actlog = "''" then
  do
    say "ARECPROC: no ARECOVER logs available for aggregate" iagname
    return (16);
  end
"allocate fi(input) da("actlog") shr reuse"
/*********************************************************************/
"EXECIO 0 DISKW LOG (OPEN"
/*********************************************************************/
/*   write the abars activity log                                    */
/*********************************************************************/
"execio 1 diskr input"
do while (rc = 0)
   parse pull abarorec
   parse var abarorec 2 arlogmsg 10
   push abarorec
   "execio 1 diskw log"
   if arlogmsg = "ARC6103I" then  /* ending msg  */
       rclook = 'on'
   if rclook = 'on' then  /* ending msg  */
       logrc = word(abarorec,words(abarorec))
   "execio 1 diskr input"
end
/************************************************************/
"execio 0 diskr input (finis"
"execio 0 diskw log (finis"
"free fi(input)"
/** set up the log of logs **********************************/
r = 0
msdsn = sysdsn(loglog)
if msdsn ^= 'OK' then
  do
   "alloc da("loglog") new space(2 1)"    ,
     " recfm(f b) lrecl(80) blksize(0) dsorg(PS)"
  end
"alloc fi(logolog) da("loglog") mod"
do while (rc ^= 0 & r ^= 20)
  r = r + 1
  "wait 15"
  "alloc fi(logolog) da("loglog") mod"
end
if rc ^= 0 then
  do
    say 'ARECPROC: Mod to Log of Logs Dataset unsuccessful' loglog
    return 16;
  end
"EXECIO 0 DISKW logolog (OPEN"
push iagname ' ' actlog
"EXECIO 1 DISKW logolog (FINIS"
"free fi(logolog)"
return 0;
./ ADD NAME=DR41
dr41:
/*REXX****************************************************************/
/*********************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name,                                           */
/*         arecover parms dataset,                                   */
/*         log of logs                                               */
/*                                                                   */
/* Output: ARECOVER audit of datasets in the aggregate               */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
arg iagname loglog ardsn .
lines = 58
page = 1
call dr411 iagname loglog
call dr412 iagname ardsn
ok = result
return ok;
dr411:
/*********************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name,                                           */
/*         arecover parms dataset,                                   */
/*         log of logs                                               */
/*                                                                   */
/* Output: ARECOVER audit of datasets in the aggregate               */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*               Copyright (c) 1993.  All Rights Reserved.           */
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec                                    */
/*********************************************************************/
arg iagname loglog .
/*********************************************************************/
/* Constants and Flags                                               */
/*********************************************************************/
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
/*********************************************************************/
/* See how many times ARECOVER has ran                               */
/*********************************************************************/
r = 0
"alloc fi(logolog) da('"loglog"') shr"
do while (rc ^= 0 & r ^= 20)
  r = r + 1
  "wait 15"
  "alloc fi(logolog) da('"loglog"') shr"
end
if rc ^= 0 then
  do
    say 'DRBACKUP: Allocation of LOGS dataset unsuccessful' loglog
    return
  end
"EXECIO 1 DISKR logolog"
i = 0
do while (rc = 0)
  parse pull agname logdsn .
  if iagname = agname then
    do
      i = i + 1
      ld.i = logdsn
    end
  "EXECIO 1 DISKR logolog"
end
"EXECIO 1 DISKR logolog (FINIS"
"free fi(logolog)"
/******************************************************/
/** Set up report file and headings                  **/
/******************************************************/
"EXECIO 0 DISKW agdet (open"
if lines > 57 then
  do
    call DR4111
  end
/******************************************************/
if i = 0 then
  do
     push '    No ARECOVER commands executed for Aggregate'
     "execio 1 diskw agdet"
     push '    Expect all datasets to be in error'
     "execio 1 diskw agdet"
  end
else
  do k = 1 to i
    if lines > 57 then
      do
        call DR4111
      end
     push ' ' left(k,3) ld.k
     "execio 1 diskw agdet"
     lines = lines + 1
  end
push '    --------------------------------------------'
"execio 1 diskw agdet"
push '    ARECOVER for Aggregate' iagname ' ran ' i 'times'
"execio 1 diskw agdet"
push '0   --------------------------------------------'
"execio 1 diskw agdet"
lines = lines + 4
return 0;
/*REXX****************************************************************/
dr412:
/*********************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name,                                           */
/*         arecover parms dataset,                                   */
/*         log of logs                                               */
/*                                                                   */
/* Output: ARECOVER audit of datasets in the aggregate               */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec                                    */
/*********************************************************************/
arg iagname ardsn .
/*********************************************************************/
/* Constants and Flags                                               */
/*********************************************************************/
ok = 'OK'
cdsn = 0
edsn = 0
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
/*********************************************************************/
/*   Locate and read the ABARS arecover parms dataset                */
/*********************************************************************/
if ardsn = "''" then
  do
    say "ARAUDIT: no ARECOVER Parms Dataset for aggregate" iagname
    return (16);
  end
"allocate fi(input) da("ardsn") shr reuse"
/*********************************************************************/
/*   pass over the first 6 records (arecproc and documentation)      */
/*********************************************************************/
"execio 6 diskr input"
delstack
/*********************************************************************/
"execio 1 diskr input"
/*********************************************************************/
/*   process the remaining records                                   */
/*********************************************************************/
push "0    DSN                                         Errors         "
"execio 1 diskw agdet"
push "    -------------------------------------------- ---------------"
"execio 1 diskw agdet"
/*********************************************************************/
do while (rc = 0)
  if lines > 57 then
      call DR4112
  parse pull junk1 dsn junk2
  dsname = "'" !! dsn !! "'"
  x = listdsi(dsname "NORECALL")
  select
  when sysreason  = 0 then /* normal completion */
    reason = 'OK'
  when sysreason  = 5 then /* Dataset Not Found */
    reason = 'DSN Not Cataloged'
  when sysreason  = 8 then /* tape dataset */
    reason = 'OK'
  when sysreason  = 9 then /* migrated dataset- DASD */
    reason = 'OK'
  when sysreason  = 12 then /* VSAM dataset */
    reason = 'OK'
  when sysreason  = 19 then /* multi volume dataset */
    reason = 'OK'
  when sysreason  = 22 then /* volume not mounted */
    reason = 'Volume' sysvolume 'Offline'
  when sysreason  = 24 then /* Dangling Catalog Pointer */
      reason = 'DSN Not Found'
  when sysreason  = 25 then /* migrated dataset- TAPE */
    reason = 'OK'
  otherwise
    reason = sysreason
  end /* select */
  cdsn = cdsn + 1
  if reason ^= 'OK' then
    do
      push '   ' left(dsn,44) left(reason,20)
     "execio 1 diskw agdet"
      ok = 'ERROR'
     lines = lines + 1
     edsn = edsn + 1
  end
"execio 1 diskr input"
end
if OK = 'OK' then
    do
      push '   No errors found'
     "execio 1 diskw agdet"
  end
"execio 0 diskr input (finis"
"free fi(input)"
return cdsn edsn;
dr4111:
/************************************************************/
/* REXX SUBROUTINE-DR4111                                   */
/* report heading routine for audit detail                  */
/************************************************************/
push "1        ABARS Arecover Audit Detail Report for Aggregate:" ,
      iagname "      " date(usa) "   Page:" page
"execio 1 diskw agdet"
page = page + 1
push "0    Accumulated Logs                           "
"execio 1 diskw agdet"
push "    -------------------------------------------- "
"execio 1 diskw agdet"
lines = 4
return 0;
dr4112:
/************************************************************/
/* REXX SUBROUTINE-DR4112                                   */
/* report heading routine for audit detail                  */
/************************************************************/
push "1        ABARS Arecover Audit Detail Report for Aggregate:" ,
      iagname "      " date(usa) "   Page:" page
"execio 1 diskw agdet"
page = page + 1
push "0    DSN                                         Errors         "
"execio 1 diskw agdet"
push "    -------------------------------------------- " ,
     "--------------------"
"execio 1 diskw agdet"
lines = 4
return 0;
./ ADD NAME=DR51
/*REXX****************************************************************/
dr51:
/*********************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name,                                           */
/*         Activity Log Dataset,                                     */
/*                                                                   */
/*  Output: Report of dataset location for aggregate development     */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec                                    */
/*********************************************************************/
arg iagname actlog
/*********************************************************************/
/* Constants and Flags (global to subroutines)                       */
/*********************************************************************/
look = 'OFF'
m = 0
smc1 = 0   /* counter for the £ of datasets*/
smc2 = 0   /* counter for the £ of arcive'd datasets*/
smc3 = 0   /* counter for the £ of non-arcive'd datasets*/
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
/* ************************************* */
/* * allocates the abackup log dataset** */
/* * the reads the abackup activity   ** */
/* * log to locate the datasets       ** */
/* ************************************* */
/*********************************************************************/
/*   start with opening and reading the ABARS Verify Activity Log    */
/*********************************************************************/
stat = msg('OFF')
"allocate fi(input) da("actlog") shr reuse"
if rc ^= 0 then
  do
    say 'DRSCAN: Error allocating log dsn' actlog '.  RC='rc
    return 16;
  end
"EXECIO 0 DISKW ABRPT (OPEN"
/*********************************************************************/
/*   parse the abars activity log for dataset names                  */
/*********************************************************************/
"execio 1 diskr input"
do while rc = 0
   parse pull abarorec
   parse var abarorec 2 abarmsg 10 .
   if abarmsg = 'ARC6004I' then /* msg from an EXECUTE log (bad)*/
      do
        say 'DRSCAN: Log not from ABACKUP VERIFY' logdsn
        say 'DRSCAN: Check Automated Operations, wrong log' actlog
        return (16);
      end
   if abarmsg = 'ARC6166I' then /* start of dataset names */
     do /* read the next record */
       "execio 1 diskr input"
       parse pull abarorec
       parse var abarorec abart1 abart2 .
       if abart1 = 'INCLUDE/EXCLUDE' ! ,
          abart2 = 'INCLUDE/EXCLUDE' then
         look = 'ON'
       else
         look = 'OFF'
     end
   if abarmsg = 'ARC6250I' then /* msg proceeding DSNs for DFSMShsm */
      look = 'OFF'
   if abarmsg = 'ARC6055I' then /* msg proceeding DSNs for DFHSM 2.6*/
      look = 'OFF'
   if look = 'ON' then
/*********************************************************************/
/*   Look for Dataset names                                          */
/*********************************************************************/
     do
       parse var abarorec 2 abarnull 4 .
       if abarnull = '  '  then  /* it is a dataset name */
         do
           smc1 = smc1 + 1
           parse var abarorec 4 agdsn 48 .
           agdsn = strip(agdsn,t)
           aggdsn = "'" !! agdsn !! "'"
           /* *************************** */
           /* parse the output of listcat */
           /* *************************** */
           call outtrap ("cmdoput.")
           "LISTC entry("aggdsn") volume"
           do j = 1 to cmdoput.0
             parse var cmdoput.j 8 volser 14 .
             if volser = 'VOLSER' then
               do
                j = cmdoput.0   /* end listcat process */
                 parse var cmdoput.j 26 volume 32 junk 52 devt 60 .
                 /* ************************ */
                 /* do we want this dataset? */
                 /* ************************ */
                 call dr151 agdsn volume devt
                 why = result
                 if why ^= '' then
                   do
                     push '  ' left(iagname,8) left(agdsn,44) why
                     "EXECIO 1 DISKW ABRPT"
                     smc2 = smc2 + 1
                   end
                 else
                   do
                     smc3 = smc3 + 1
                     call intdsn agdsn
                     where = result
                     push '  ' left(iagname,8) left(agdsn,44) where
                     "EXECIO 1 DISKW ABRPT"
                   end
               end
           end
           call outtrap("off")
         end
     end
   "execio 1 diskr input"
end
push '  DRSCAN: Candidate Datasets for backup:' smc1
"EXECIO 1 DISKW ABRPT"
push "  DRSCAN: Archived Dataset Excluded:" smc2
"EXECIO 1 DISKW ABRPT"
push '  DRSCAN: Datasets Included:' smc3
"EXECIO 1 DISKW ABRPT"
"execio 0 diskr input (finis"
"execio 0 diskw ABRPT (finis"
"free fi(input)"
/* "delete" actlog  */
return 0;
intdsn:
/*********************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name,                                           */
/*         arecover parms dataset,                                   */
/*         log of logs                                               */
/*                                                                   */
/* Output: ARECOVER audit of datasets in the aggregate               */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
arg agdsn .
  dsname = "'" !! agdsn !! "'"
  x = listdsi(dsname "NORECALL")
  select
  when sysreason  = 0 then /* normal completion */
    reason = 'DSN on DASD'
  when sysreason  = 5 then /* Dataset Not Found */
    reason = '...DSN Not Cataloged'
  when sysreason  = 8 then /* tape dataset */
    reason = '...Tape Dataset'
  when sysreason  = 9 then /* migrated dataset- DASD */
    reason = '...DSN Migrated to DASD'
  when sysreason  = 12 then /* VSAM dataset */
    reason = 'Vsam DSN on DASD'
  when sysreason  = 19 then /* multi volume dataset */
    reason = '...Multi-Volume DSN'
  when sysreason  = 24 then /* Dangling Catalog Pointer */
      reason = '...DSN Not Found'
  when sysreason  = 25 then /* migrated dataset- TAPE */
    reason = '...DSN Migrated to Tape'
  otherwise
    reason = sysreason
  end /* select */
return reason;
./ ADD NAME=DR61
/*REXX****************************************************************/
dr61:
/*********************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name,                                           */
/*         Activity Log Dataset,                                     */
/*                                                                   */
/*  Output: Report of dataset location for aggregate development     */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec                                    */
/*********************************************************************/
arg iagname actlog
/*********************************************************************/
/* Constants and Flags (global to subroutines)                       */
/*********************************************************************/
look = 'OFF'
m = 0
smc1 = 0   /* counter for the £ of datasets*/
smc2 = 0   /* counter for the £ of arcive'd datasets*/
smc3 = 0   /* counter for the £ of non-arcive'd datasets*/
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
/* ************************************* */
/* * allocates the abackup log dataset** */
/* * the reads the abackup activity   ** */
/* * log to locate the datasets       ** */
/* ************************************* */
/*********************************************************************/
/*   start with opening and reading the ABARS Verify Activity Log    */
/*********************************************************************/
stat = msg('OFF')
"allocate fi(input) da("actlog") shr reuse"
if rc ^= 0 then
  do
    say 'DRSEO: Error allocating log dsn' actlog '.  RC='rc
    return 16;
  end
"EXECIO 0 DISKW ABRPT (OPEN"
/*********************************************************************/
/*   parse the abars activity log for dataset names                  */
/*********************************************************************/
"execio 1 diskr input"
do while rc = 0
   parse pull abarorec
   parse var abarorec 2 abarmsg 10 .
   if abarmsg = 'ARC6004I' then /* msg from an EXECUTE log (bad)*/
      do
        say 'DRSEO: Log not from ABACKUP VERIFY' logdsn
        say 'DRSEO: Check Automated Operations, wrong log' actlog
        return (16);
      end
   if abarmsg = 'ARC6166I' then /* start of dataset names */
     do /* read the next record */
       "execio 1 diskr input"
       parse pull abarorec
       parse var abarorec abart1 abart2 .
       if abart1 = 'INCLUDE/EXCLUDE' ! ,
          abart2 = 'INCLUDE/EXCLUDE' then
         look = 'ON'
       else
         look = 'OFF'
     end
   if abarmsg = 'ARC6250I' then /* msg proceeding DSNs for DFSMShsm */
      look = 'OFF'
   if abarmsg = 'ARC6055I' then /* msg proceeding DSNs for DFHSM 2.6*/
      look = 'OFF'
   if look = 'ON' then
/*********************************************************************/
/*   Look for Dataset names                                          */
/*********************************************************************/
     do
       parse var abarorec 2 abarnull 4 .
       if abarnull = '  '  then  /* it is a dataset name */
         do
           smc1 = smc1 + 1
           parse var abarorec 4 agdsn 48 .
           agdsn = strip(agdsn,t)
           aggdsn = "'" !! agdsn !! "'"
           /* *************************** */
           /* parse the output of listcat */
           /* *************************** */
           call outtrap ("cmdoput.")
           "LISTC entry("aggdsn") volume"
           do j = 1 to cmdoput.0
             parse var cmdoput.j 8 volser 14 .
             if volser = 'VOLSER' then
               do
                j = cmdoput.0   /* end listcat process */
                 parse var cmdoput.j 26 volume 32 junk 52 devt 60 .
                 /* ************************ */
                 /* do we want this dataset? */
                 /* ************************ */
                 call dr151 agdsn volume devt
                 why = result
                 if why ^= '' then
                   do
                     push '  ' left(iagname,8) left(agdsn,44) why
                     "EXECIO 1 DISKW ABRPT"
                     smc2 = smc2 + 1
                   end
                 else
                   do
                     smc3 = smc3 + 1
                     call intdsn agdsn
                     where = result
                     if where ^= '' then
                       do
                         push '  ' left(iagname,8) left(agdsn,44) ,
                               where
                         "EXECIO 1 DISKW ABRPT"
                       end
                   end
               end
           end
           call outtrap("off")
         end
     end
   "execio 1 diskr input"
end
push '  DRSCAN: Candidate Datasets for backup:' smc1
"EXECIO 1 DISKW ABRPT"
push "  DRSCAN: Archived Dataset Excluded:" smc2
"EXECIO 1 DISKW ABRPT"
push '  DRSCAN: Datasets Included:' smc3
"EXECIO 1 DISKW ABRPT"
"execio 0 diskr input (finis"
"execio 0 diskw ABRPT (finis"
"free fi(input)"
/* "delete" actlog  */
return 0;
intdsn:
/*********************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name,                                           */
/*         arecover parms dataset,                                   */
/*         log of logs                                               */
/*                                                                   */
/* Output: ARECOVER audit of datasets in the aggregate               */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1993,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
arg agdsn .
  dsname = "'" !! agdsn !! "'"
  x = listdsi(dsname "NORECALL")
  select
  when sysreason  = 0 then /* normal completion */
    reason = ''
  when sysreason  = 5 then /* Dataset Not Found */
    reason = '...DSN Not Cataloged'
  when sysreason  = 8 then /* tape dataset */
    reason = '...Tape Dataset'
  when sysreason  = 9 then /* migrated dataset- DASD */
    reason = '...DSN Migrated to DASD'
  when sysreason  = 12 then /* VSAM dataset */
    reason = ''
  when sysreason  = 19 then /* multi volume dataset */
    reason = '...Multi-Volume DSN'
  when sysreason  = 24 then /* Dangling Catalog Pointer */
      reason = '...DSN Not Found'
  when sysreason  = 25 then /* migrated dataset- TAPE */
    reason = '...DSN Migrated to Tape'
  otherwise
    reason = sysreason
  end /* select */
return reason;
./ ADD NAME=DR70
/*REXX*/
dr70:
arg agname apdsn .
/*********************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name,                                           */
/*         Aggregate Parms Dataset                                   */
/*                                                                   */
/* Output: ARECSNGL parms validation                                 */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1995,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* *********************** */
/* * subroutine readparm * */
/* *********************** */
/* ************************************* */
/* * validates input parameters       ** */
/* *  and fails exec with messages    ** */
/* *  if problems are encountered.    ** */
/* ************************************* */
if agname  = '' then
  do
    say 'ARECSNGL: 1 Required parameter not supplied'
    say 'ARECSNGL: need Aggregate Name'
    return (16);
  end
/* ************************************* */
/* * Insure we have an Aggregate      ** */
/* * parm member                      ** */
/* ************************************* */
msdsn = sysdsn(apdsn)
if msdsn ^= 'OK' then
  do /* problem  flag what's wrong */
    say 'ARECSNGL: valid aggregate parameter dataset required'
    say 'ARECSNGL:' apdsn '...' !! msdsn
    return (16)
  end
return 0;
./ ADD NAME=DR71
dr71:
/*REXX****************************************************************/
/*********************************************************************/
/*  Function: Setup Restart dataset for subset Aggregate Restore     */
/*                                                                   */
/*  Input: Aggregate Name,                                           */
/*         arecover parms dataset,                                   */
/*         Inputdsn                                                  */
/*         Temporary High Level Qualifier                            */
/*                                                                   */
/* Output: ARECOVER Restart Dataset                                  */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/* Copyright IBM Corp. 1995,2008                                 àZRC*/
/*                                                                   */
/*********************************************************************/
/*trace ?R*/
arg iagname ardsn thlq .
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
/*********************************************************************/
/* Read the Input DSN                                                */
/*********************************************************************/
stat = msg('off')
r = 0
"EXECIO 1 DISKR indsn"
i = 0
do while (rc = 0)
  i = i + 1
  parse pull restdsn.i .
  len.i = lastpos('*',restdsn.i)
  if len.i = 0 then
     len.i = length(restdsn.i)
  else
     len.i = len.i - 1
  "EXECIO 1 DISKR indsn"
end
"EXECIO 1 DISKR indsn (FINIS"
"free fi(indsn)"
/*********************************************************************/
/*   Locate and read the ABARS arecover parms dataset                */
/*********************************************************************/
"allocate fi(input) da("ardsn") shr reuse"
/*********************************************************************/
/*   pass over the first 5 records (arecproc and documentation),     */
/*   derive the ABARS restart dsn, allocate and open the restart dsn */
/*********************************************************************/
"execio 5 diskr input"
delstack
"execio 1 diskr input"
parse pull junk1 dsn junk2
parse var dsn . value(iagname) dsnsuff
rstrtdsn = dr711(iagname thlq) !! iagname !! '.restart' !! dsnsuff
"alloc da('" !! rstrtdsn !! ") new space(2 1)"    ,
     " recfm(f b) lrecl(80) blksize(0) dsorg(PS)"
"alloc fi(restart) da('"rstrtdsn") old"
"EXECIO 0 DISKW restart (open"
push 'RESTART DATA SET'
"execio 1 diskw restart"
/*********************************************************************/
"execio 1 diskr input"
/*********************************************************************/
/*   process the remaining records from parms dataset                */
/*********************************************************************/
/*********************************************************************/
do while (rc = 0)
  parse pull junk1 dsn junk2
  omit='n'
  do j=1 to i by 1
    if substr(restdsn.j,1,len.j) = substr(dsn,1,len.j) then
       omit = 'y'
  end
  if omit = 'n' then
    do
      push dsn
      "execio 1 diskw restart"
    end
  "execio 1 diskr input"
end
"execio 0 diskr input (finis"
"execio 0 diskw restart (finis"
"free fi(input)"
"free fi(restart)"
return 0;
./ ADD NAME=DR711
/*REXX****************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Output: DFSMS/hsm prefix                                         */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1995,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
gethsmid:
arg iagname thlq .
/*********************************************************************/
prename = thlq !! iagname
STAT = MSG('OFF')
"HSEND wait DISPLAY .MCVT.+C0 LENGTHS(7) ODS(" !! PRENAME !! ".MCVT)"
"allocate fi(ddx) da('" !! prename !! ".MCVT') shr"
"execio 1 diskr ddx"
parse pull junk1
"execio 1 diskr ddx"
parse pull hexaddr hexval1 hexval2 .
"execio 0 diskr ddx (finis"
"free fi(ddx)"
"delete '" !! prename !! ".MCVT'"
hexval =  hexval1 !! hexval2
huidlen = x2d(substr(hexval,15,2))
charval = substr(x2c(hexval),1,huidlen) !! '.'
RETURN charval
./ ADD NAME=DR72
/*REXX****************************************************************/
dr72:
/*********************************************************************/
/*  Function:                                                        */
/*                                                                   */
/*  Input: Aggregate Name,                                           */
/*         arecover parms dataset                                    */
/*                                                                   */
/* Output: ARECOVER statement execution,                             */
/*         Activity Log,                                             */
/*         log of arecover logs for audit purposes                   */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*  Copyright IBM Corp. 1995,2008                                àZRC*/
/*                                                                   */
/*********************************************************************/
/* Parameters Passed to this exec                                    */
/*********************************************************************/
/*trace ?r*/
arg iagname ardsn .
/*********************************************************************/
/* Constants and Flags                                               */
/*********************************************************************/
/*********************************************************************/
/* Function Starts Here                                              */
/*********************************************************************/
/*********************************************************************/
/* Find out which release of DFHSM is available                      */
/*********************************************************************/
 dfhsm = sysvar(syshsm)
/****DFHSM 2.6 is 2060 ***********************************************/
/****DFSMShsm 1.1 is 1010 ********************************************/
/*********************************************************************/
/*   Locate and read the ABARS arecover parms dataset                */
/*********************************************************************/
r = 0
if ardsn = "''" then
  do
    say "ARECSNGL: no ARECOVER Parms Dataset for aggregate" iagname
    return (16);
  end
"allocate fi(input) da("ardsn") shr"
do while (rc ^= 0 & r ^= 20)
  r = r + 1
  "wait 15"
  "alloc fi(input) da("ardsn") shr"
end
if rc ^= 0 then
  do
    say 'ARECSNGL: Check Syslog; Contention for parms DSN' ardsn
    return (16);
  end
/*********************************************************************/
/*   parse the abars arecover parms dataset for control dsn & volser */
/*   use second set of cntl dsn & volser                             */
/*********************************************************************/
"execio 3 diskr input "
delstack
"execio 1 diskr input "
parse pull 'DATASETNAME(' cdsn ')' h5 '-' .
"execio 1 diskr input "
parse pull j1 h6 'DSCONFLICT(' h7 ') ' h8 .
"execio * diskr input (finis"
"free fi(input)"
delstack
if dfhsm ^= 2060 then
  do
    cdsn = 'datasetname(' !! cdsn !! ')'
    if h7 = 'REPLACE' then
      h7 = 'DSCONFLICT(REPLACE)'
  end
"hsend wait arecover" cdsn h5 h6 h7 h8
say "hsend wait arecover" cdsn ,
    h5 h6 h7 h8
return rc;
./ ADD NAME=GENMASK
/* REXX */
/*******************************************************************/
/* GENMASK -                                                       */
/*    Syntax:   GENMASK input.data.set                             */
/*                                                                 */
/* This REXX exec will read in a filter list, and generate         */
/* an subprogram that can be incorporated into any                 */
/* DFSMShsm Exit, such as the ARCMDEXT exit.                       */
/*                                                                 */
/* The subprogram will be generated in assembler.                  */
/*******************************************************************/
/*                                                                 */
/* The format of the input file is a set of masks, one mask        */
/* per line:                                                       */
/*                                                                 */
/*    <mask number> mask <mask value>                              */
/*                                                                 */
/* Mask Number: Optional, ranging from 1-9999.  In no mask         */
/*      number specified, will be assigned one automatically.      */
/*      The mask numbers must be in ascending order.               */
/*                                                                 */
/* Mask: Required, 1-44 characters, representing dot-separated     */
/*       qualifiers.  Each qualifier can be 1-8 valid data set     */
/*       characters, or 0-7 valid data set characters followed     */
/*       by an asterisk (*).  Mask values of ** and % are not      */
/*       supported at this time.                                   */
/*                                                                 */
/*       Valid:                    Invalid:                        */
/*       PEARSON.*.*.*.OUTPUT      PEARSON.**.OUTPUT               */
/*       PEARSON.GDG.G*            PEARSON.GDG.G%%V%%%%            */
/*       PEARSON.TEST*.OUTLIST     PEARSON.TEST7.*LIST             */
/*                                                                 */
/*                                                                 */
/* Mask Value: Optional, 0-999999999, will be returned when a      */
/*       data set name matches the associated mask.  If not        */
/*       specified, a value of zero will be returned.              */
/*                                                                 */
/*                                                                 */
/*******************************************************************/
/*                                                                 */
/* The output file created will be:    input.data.set.ASM          */
/*                                                                 */
/* If errors found, the output will contain a list of error        */
/* messages.  If no errors found, the output will contain the      */
/* assembler source code generated.                                */
/*                                                                 */
/*******************************************************************/
/*                                                                 */
/* First pass of the filter masks checks for valid values.  The    */
/* following return codes are used to denote errors:               */
/*                                                                 */
/*     02 - Mask Number is not in ascending order                  */
/*     04 - Mask Number exceeds 1-9999 range                       */
/*     08 - Mask Value is non-integer, or exceeds 999999999        */
/*     10 - Mask exceeds 44 characters in length                   */
/*     12 - Last character in Mask is a dot (.)                    */
/*     16 - Two consecutive dots found (empty qualifier)           */
/*     20 - Qualifier exceeds 8 characters in length               */
/*     24 - More than one asterisk (*) found in Qualifier          */
/*     28 - Characters found after asterisk (*) in Qualifier       */
/*                                                                 */
/* To help fix mask errors, the position of the erroneous          */
/* character is provided with the error message.                   */
/*                                                                 */
/*******************************************************************/
/*                                                                 */
/* The resulting subprogram can be invoked as follows:             */
/*                                                                 */
/*       BAL R14,FILTER                                            */
/*                                                                 */
/* On input, the following registers must be specified:            */
/*                                                                 */
/*       Register 1 points to a 16 byte area                       */
/*         0(R1) 4-byte pointer to 44-character data set name      */
/*         4(R1) 4-byte pointer to 4-byte mask number              */
/*         8(R1) 4-byte pointer to 4-byte mask value               */
/*        12(R1) 4-byte pointer to 80-byte working storage area    */
/*                                                                 */
/*       Register 13 points to a valid 72-byte standard save area. */
/*                                                                 */
/* On output, the following fields are set:                        */
/*                                                                 */
/*       If no match found, mask number and mask value both zero.  */
/*                                                                 */
/*       If match found, mask number and mask value associated     */
/*          with the first mask found to match input data set      */
/*                                                                 */
/*******************************************************************/
NUMERIC DIGITS 11
PARSE ARG DSN OPS
ERRORS = 0
LASTMASK = 0
nummask = 0
OUTPUT.0 = 0
plx = pos('PLX',ops)
hlqs = ''; hcount = 0; hlqval. = 0; hlqnum. = 0
donecount = "0001"; donelimit = 50; maxtext = 0
value. = 0; loval=999999; hival=-1
CALL ANALYZE_DATA
IF ERRORS=0 THEN CALL GENERATE_CODE
CALL WRITE_RESULTS
EXIT
/*******************************************************************/
/* ANALYZE_DATA                                                    */
/*    READ AND PROCESS EACH RECORD OF THE INPUT FILE               */
/*******************************************************************/
ANALYZE_DATA:
ALLOC_OCDS = "DA("DSN")"
'ALLOC 'ALLOC_OCDS' FI(XDATA) SHR REUSE'
IF RC=0 THEN DO
SAY 'Data Set='DSN ' Successfully opened'
"EXECIO * DISKR XDATA ( STEM" X.
   DO M=1 TO X.0
      Call Parse_Mask
   END
"EXECIO 0 DISKR XDATA ( FINIS"
Say 'Lines Processed = 'x.0
If errors>0 then call write 'Warning: 'errors' Errors found'
END
ELSE SAY 'Unable to open DSN='DSN'.  SYNTAX: GENMASK dsn'
'FREE FI(XDATA)'
/* Determine Common High Level Qualifiers */
hlqmult = ''
qx = hlqs
do while (qx ç= '')
parse var qx "<"hlq">" qx
if hlqval.hlq > 1 then do

      hlqmult = hlqmult"<"hlq">"
      hcount = hcount + 1
      hlqnum.hlq = hcount
   end
end
RETURN
/*******************************************************************/
Parse_Mask:
   parse var x.m maskn mask maskv .
   if datatype(maskn,'Whole')=0 then do
      maskv = mask
      mask = maskn
      maskn = lastmask + 1
      end
   else
      maskn = maskn + 0
   if maskv='' then maskv=0
   if maskn>0 & maskn<= lastmask then do
     call write "Line "m": RC=02 Invalid Mask Number ("maskn")"
      errors = errors + 1
      end
   else if maskn=0 ! maskn>9999 then do
     call write "Line "m": RC=04 Invalid Mask Number ("maskn")"
      errors = errors + 1
      end
   else lastmask = maskn
   if datatype(maskv,'Whole')=0 ! maskv>999999999 then do
     call write "Line "m": RC=08 Invalid Mask Value ("maskv")"
      errors = errors + 1
      end
   if length(mask)>44 then do
     call write "Line "m": RC=10 Invalid Mask (",
             left(mask,30)") position="length(mask)
      errors = errors + 1
      end
   size=0; numstar=0; rc=0
do n=1 to length(mask) while(rc=0)
   char=substr(mask,n,1)
   select;
      when(char='.') then do
         if n=length(mask) then rc=12
         else if size<1 then rc=16
         else if size>8 then rc=20
         size=0
         numstar=0
         end
      when(char='*') then do
         if numstar>0 then rc=24
         numstar=numstar+1
         size=size+1
         end
      otherwise do
         if numstar>0 then rc=28
         size=size+1
         end
   end
   if rc>0 then do
     call write "Line "m": RC="rc" Invalid Mask (",
             left(mask,30)") position="n
      errors = errors + 1
      end
end
nummask = nummask + 1
mnum.nummask = right(maskn,4,'0')
mtext.nummask = mask
mval.nummask = maskv+0
if mval.nummask <=99999 then do
val = mval.nummask
value.val=value.val+1
if val<loval then loval=val
if val>hival then hival=val
end
kdot=pos('.',mask)
kstar=pos('*',mask)
if kdot>1 & (kstar=0 ! kstar>kdot) then do
   hlq = left(mask,kdot-1)
   hlqval.hlq=hlqval.hlq+1
   if hlqval.hlq=1 then do
      hlqs = hlqs"<"hlq">"
      end
end
return
/*******************************************************************/
Generate_Code:
qx=hlqs
do while qxç=''
   parse var qx "<"hx">" qx
   end
Comment_Tag = copies("*",71)
tcount = 0; tc.0 = 0
Call Front_Matter
do q=1 to nummask
mask = strip(mtext.q)
Call Comment "MASK "mnum.q mask "VALUE="mval.q
numstar=0
numdot=0
mask = strip(mask)
lenmask=length(mask)
starter = "IF"
do n=1 to lenmask
   char=substr(mask,n,1)
   if char='*' then do
      numstar=numstar+1
      star.numstar=n
      end
   if char='.' then do
      numdot=numdot+1
      dot.numdot=n
      end
end
if plx then do
   if q>1 then call write "ELSE"
end
else call write "MASK"mnum.q" DS    0H"
hlq=''
kdot = pos('.',mask)
if kdot>1 then do
   hlq=left(mask,kdot-1)
   if hlqval.hlq<2 then hlq=''
end
select;
/* Fully Qualified */
when numstar=0 then do
   if length(mask)<44 then mask=mask!!' '
   if hlq='' then Call Data_Set_Position 1,mask
   else do
      Call Data_Set_Position 1,hlq!!'.'
      klen = length(hlq)+2
      Call Data_Set_Position klen,substr(mask,klen)
   end
   Call Set_Values
end
/* No hard characters: *.*.*.*             */
when (numstar+numdot)=lenmask then do
   Call Number_Qualifiers
   Call Set_Values
      end
otherwise do
   Call Number_Qualifiers
   do r=1 to numstar
   if r= 1 & star.1>1 then do
      klen = length(hlq)+2
      if hlq='' ! (star.1=klen) then do
        Call Data_Set_Position 1,left(mask,star.1-1)
        end
      else do
        Call Data_Set_Position 1,hlq!!'.'
        Call Data_Set_Position klen,substr(mask,klen,star.1-klen)
        end
      end
   if r<numstar then do
      rx=r+1
      section=substr(mask,(star.r)+1,(star.rx)-(star.r)-1)
      dj=0
      do  j=1 to numdot while(dj=0)
          if dot.j>star.r then dj=j
          end
      if sectionç='.' then ,
         Call Data_Set_Position "DOT("dj")",section
      end
   if r=numstar & star.r<lenmask then do
      k=lenmask-star.r;
      dk="LASTPOS-"!!(k-1)
      Call Data_Set_Position dk,right(mask,k)
      end
   end
   Call Set_Values
   end
end
Say "Q= "q
if q<nummask & (q//donelimit)=0 then do
   call Comment "End of Section "donecount
   call write "         B     STEP"donecount
   call text_constants
   call write "STEP"donecount" DS    0H"
   call write "         BALR  P9,0"
   call write "         USING *,P9"
   donecount = right(donecount+1,4,'0')
   end
end
Call Back_Matter
Return
Comment:
  call write Comment_Tag
  call write "* "arg(1)
  call write Comment_Tag
Return
Number_Qualifiers:
nq= numdot+1
if plx then do
  call write starter" NUMQUAL="nq
  if starter="IF" then starter="   &"
end
else do
  call write "         LA    P7,"nq
  call write "         CR    NUMQUAL,P7"
  call write "         BNE   NEXT"mnum.q
end
Return
Data_Set_Position:
   startpos = arg(1)
   textvalue = arg(2)
   textlen = length(textvalue)
if plx then do
  call write starter" DSN("startpos"::"textlen")='"textvalue"'"
  if starter="IF" then starter="   &"
end
else do
   dsnreg = "DSN"
  if startpos=1 & pos('.',textvalue)=textlen then do
     hlq=left(textvalue,textlen-1)
     tco = "CQ"!!right(hlqnum.hlq,6,"0")
     end
  else do
     un=0
     do u=1 to tcount
        if tc.u=textvalue then un=u
     end
     if un=0 then do
        tcount = tcount + 1
        tc.tcount = textvalue
        un=tcount
        end
     tco = "CT"!!right(un+maxtext,6,"0")
     end
  if left(startpos,3)='DOT' then do
  parse var startpos "DOT("dotpos")" .
  call write "         L     P8,"!!(12+(dotpos*4))!!"(,WORK)"
  dsnreg = "P8"
  newpos = "0"
  end
  else if left(startpos,3)='LAS' then do
  parse var startpos "LASTPOS-"lp  .
  call write "         LR    P8,DSN"
  call write "         ALR   P8,LASTPOS"
  call write "         LA    P6,"lp+1
  call write "         SLR   P8,P6"
  dsnreg = "P8"
  newpos = "0"
  end
  else newpos = startpos-1
  call write "         CLC   "newpos"("textlen","dsnreg"),"tco
  call write "         BNE   NEXT"mnum.q
end
Return
Set_Values:
if plx then do
  settings = "MASK="mnum.q";"
  if mval.q > 0 then settings=settings!!" VALUE="mval.q";"
  call write "   THEN BEGIN; "settings" END;"
end
else do
  call write "         LA    MASK,"mnum.q
  thisval=mval.q
  if value.thisval > 1 then do
     call write "         B     SET"right(thisval,5,'0')
  end
  else do
  if mval.q > 0 then do
     call write "         LA    VALUE,"mval.q
     end
  call write "         B     DONE"
  end
  call write "NEXT"mnum.q" DS    0H"
end
Return
/*******************************************************************/
Write:
n=OUTPUT.0 + 1
line=arg(1)
if plx then do
   if left(line,1)="*" then line=" /"!!left(line,66)!!"*/"
   else if left(line,1)ç=" " then line=" "!!left(line,71)
end
OUTPUT.n = line
OUTPUT.0 = n
return
/*******************************************************************/
WRITE_RESULTS:
ext='.ASM'
if plx then ext='.PLX'
if left(dsn,1)="'" then do
   PARSE VAR DSN "'" BASE "'" .
   OUTDSN = "'"BASE!!ext"'"
   end
else outdsn = DSN!!ext
IF SYSDSN(OUTDSN) = 'OK' THEN ops='OLD REUSE'
   else ops="NEW CATALOG TRACKS SPACE(1 1) ",
        "RECFM(F B) LRECL(80) DSORG(PS)"
"ALLOC FI(OUTDATA) DA("OUTDSN") "ops
'EXECIO 'OUTPUT.0' DISKW OUTDATA ( FINIS STEM' OUTPUT.
'FREE FI(OUTDATA)'
Say "DSN= "outdsn" Created."
RETURN
Front_Matter:
Call write Comment_Tag
call write "*        SUBPROGRAM FILTER"
call write "*        Generated:   "date()
dsnq = dsn
if left(dsn,1)="'" then parse var dsn "'" dsnq "'"
call write "*        Filter list: "DSNQ
call write "* "
call write "* INPUT = PARAMETER LIST ITEMS USED ARE:"
call write "*     R1 POINTS TO A PARAMETER LIST     "
call write "*        0(R1) IS à OF DATA SET NAME,   "
call write "*              LEFT-JUSTIFIED WITH BLANKS "
call write "*        4(R1) IS à OF WORK AREA, 200 BYTES "
call write "*                                           "
call write "* EXIT-NORMAL = WORK AREA CONTAINS RESULTS: "
call write "*        0(WORKAREA) IS MASK NUMBER,        "
call write "*                    ZERO IF NO MATCH FOUND "
call write "*        4(WORKAREA) IS VALUE FOR MASK,     "
call write "*                    ZERO IF NO MATCH FOUND "
Call write Comment_Tag
if plx then do
call write "FILTER: PROCEDURE(DSN,WORKAREA);     "
call write "                                     "
call write "DECLARE                              "
call write "  DSN CHAR(44),                      "
call write "  1 WORKSPACE CHAR(200),             "
call write "    3 MASK FIXED(31),                "
call write "    3 VALUE FIXED(31),               "
call write "    3 NUMQUAL FIXED(31),             "
call write "    3 LASTPOS FIXED(31),             "
call write "    3 DOT(1:20) FIXED(31),           "
call write "  N FIXED(31);                       "
call write "WORKAREA=''B;                        "
call write "NUMQUAL=1;                           "
call write "DO N=1 TO 44;                        "
call write " IF DSN(N)^=' ' THEN LASTPOS=N;      "
call write " IF DSN(N)='.' THEN DO;              "
call write "    DOT(NUMQUAL)=N;                  "
call write "    NUMQUAL=NUMQUAL+1;               "
call write "    END;                             "
call write "END;                                 "
end
else do
call write "FILTER   DS    0H            "
call write "         STM   P14,P12,12(P13)  "
call write "         BALR  P12,0            "
call write "         USING *,P12            "
call Comment "       INITIALIZE VARIABLES"
call write "         LM    DSN,WORK,0(PARMS)     "
call write "         XC    0(200,WORK),0(WORK)   "
call write "         USING WORKAREA,WORK         "
call write "         LM    MASK,LASTPOS,0(WORK)  "
call write "         LA    P7,MAXLEN             "
call write "FILTER01 LR    P6,DSN                "
call write "         ALR   P6,LASTPOS            "
call write "         CLI   0(P6),BLANK           "
call write "         BC    B'1100',FILTER03      "
call write "         CLI   0(P6),PERIOD          "
call write "         BNE   FILTER02              "
call write "         LR    P8,NUMQUAL            "
call write "         SLA   P8,2                  "
call write "         ST    P6,DOT(P8)            "
call write "         LA    NUMQUAL,1(NUMQUAL)    "
call write "FILTER02 LA    LASTPOS,1(LASTPOS)    "
call write "         CLR   LASTPOS,P7            "
call write "         BM    FILTER01              "
call write "FILTER03 LA    NUMQUAL,1(NUMQUAL)    "
call write "         B     START"
call Comment "   SAVE RESULTS                    "
if hival>0 then do q=loval to hival
      if value.q>1 then do
      call write "SET"right(q,5,'0')" LA    VALUE,"q
      if q<hival then do
        call write "         B     DONE"
        end
      end
end
call write "DONE     STM   MASK,VALUE,WORKAREA "
call Comment "   RETURN REGISTERS BACK TO ORIGINAL VALUES"
call write "         LM    P14,P12,12(P13)        "
call write "         BR    P14                  "
call Comment "   COMMON HIGH LEVEL QUALIFIERS   "
hlquals = hlqs
do while(hlqualsç='')
   parse var hlquals '<'hlq'>' hlquals
   if hlqval.hlq > 1 then do
     cj="CQ"right(hlqnum.hlq,6,'0')
     call write cj" DC    CL"length(hlq)+1"'"hlq".'"
   end
end
call write "START    DS    0H "
call write "         BALR  P9,0                   "
call write "         USING *,P9                   "
end
Return
Back_Matter:
if plx then do
call write "  END FILTER;  "
end
else do
call write "         B     DONE"
Call text_constants
call Comment "   LOCAL REGISTER VARIABLES   "
call write "PARMS    EQU   1             "
call write "DSN      EQU   10            "
call write "WORK     EQU   11            "
call write "MASK     EQU   2             "
call write "VALUE    EQU   3             "
call write "NUMQUAL  EQU   4             "
call write "LASTPOS  EQU   5             "
call Comment "       IMMEDIATE CONSTANTS       "
call write "MAXLEN   EQU   44            "
call write "BLANK    EQU   C' '          "
call write "PERIOD   EQU   C'.'          "
call Comment "       GENERAL PURPOSE REGISTERS "
call write "P6       EQU   6             "
call write "P7       EQU   7             "
call write "P8       EQU   8             "
call write "P9       EQU   9             "
call write "P12      EQU   12            "
call write "P13      EQU   13            "
call write "P14      EQU   14            "
call Comment "       DATA CONTROL SECTION      "
call write "WORKAREA DSECT                     "
call write "         DS    0CL200              "
call write "         DS    F       MASK NUMBER "
call write "         DS    F       MASK VALUE  "
call write "         DS    F                   "
call write "         DS    F                   "
call write "DOT      DS    20C                 "
call write "         END                       "
end
Return
Text_Constants:
call Comment "   CHARACTER TEXT CONSTANTS   "
do j=1 to tcount
   fr=0; md=0; eq=0
   do p=1 to j-1
      if pos(tc.j,tc.p)>1 then md=p
      if pos(tc.j,tc.p)=1 then fr=p
      if tc.j = tc.p then eq=p
   end
   cj="CT"right(j+maxtext,6,'0')
   if eq>0 then call write cj" EQU   CT"right(eq+maxtext,6,'0')
   else if fr>0 then do
        fj=right(tc.fr+maxtext,6,"0")
        call write cj" EQU   CT"fj","length(tc.fr)",C'C'"
        end
   else if md>0 then do
        ml=length(tc.j)
        mo=pos(tc.j,tc.md)-1
        mj=right(md+maxtext,6,'0')
        call write cj" EQU   CT"!!mj"+"mo","ml",C'C'"
        end
   else call write cj" DC    CL"length(tc.j)"'"tc.j"'"
end
maxtext = maxtext + tcount
tcount = 0
Return
./ ADD NAME=QUERYSET
   /* REXX                                               àXRC*/
   /**********************************************************/
   /*                                                        */
   /* QUERYSET - This sample REXX exec demonstrates the  àXRC*/
   /*            4-byte console id and CART support          */
   /*            (Command And Response Token) in DFSMShsm.   */
   /*                                                        */
   /*            This exec issues a QUERY SETSYS via the     */
   /*            extended console control, and the results   */
   /*            are returned in variables that can then     */
   /*            be parsed or scanned for specific values.   */
   /*                                                        */
   /*            Variables: hsmid is the SYS1.PROCLIB(hsmid) */
   /*            used to start DFSMShsm with on this system. */
   /*                                                        */
   /**********************************************************/
      hsmid = 'HSMM'
      mdisp=sysvar(soldisp)
      "consprof soldisplay(no)"
      "console activate"
      address console "CART HSM"

      j = 0
      n = 0
      msghsm = 0

      address console "F "hsmid",Q SETSYS"
      do while msghsm = 0                        /* 11 */
         msghsm = getmsg('resp.','SOL','HSM',,22)
         if msghsm = 0 then do                   /* 10 */
             n = n+1
             do i = 1 to resp.0                 /* 9 */
                k = i+j
                wto.k = resp.i
             end                                /* 9 */
           j = j+resp.0
       end                                     /* 10 */

     end                                        /* 11 */

     "console deactivate"
     "consprof soldisplay("mdisp")"
     count=j
     say "Line-count = "count
     do i = 1 to count
     say "Line"i" = "wto.i
     end
./ ADD NAME=SCANBLOG
/* REXX                                                  àXRC*/
   /**********************************************************/
   /*                                                        */
   /* SCANBLOG - This sample REXX exec can scan several      */
   /*            days' worth of backup activity logs and     */
   /*            summarize the results.                  àXRC*/
   /*                                                        */
   /**********************************************************/
outdsn = "'HSMACT.SCAN.BAKLOG'"
notime= '**:**:**'
numrec = 1000
num = 0
msgs = ''
   /* THIS IS SEVEN DAYS CONTIGUOUS ACTIVITY */
    d.1  = "'HSMACT.HB.BAKLOG.D98089.T160139'"
    d.2  = "'HSMACT.HB.BAKLOG.D98089.T185134'"
    d.3  = "'HSMACT.HB.BAKLOG.D98090.T164202'"
    d.4  = "'HSMACT.HB.BAKLOG.D98090.T184203'"
    d.5  = "'HSMACT.HB.BAKLOG.D98091.T165216'"
    d.6  = "'HSMACT.HB.BAKLOG.D98091.T185533'"
    d.7  = "'HSMACT.HB.BAKLOG.D98092.T170123'"
    d.8 = "'HSMACT.HB.BAKLOG.D98092.T180208'"
    d.9 = "'HSMACT.HB.BAKLOG.D98093.T164227'"
    d.10 = "'HSMACT.HB.BAKLOG.D98093.T172520'"
    d.11 = "'HSMACT.HB.BAKLOG.D98094.T170020'"
    d.12 = "'HSMACT.HB.BAKLOG.D98094.T171135'"
    d.13 = "'HSMACT.HB.BAKLOG.D98095.T044203'"
    d.14 = "'HSMACT.HB.BAKLOG.D98095.T131935'"
d.0 = 14
Y.0 = 0
do n=1 to 4; dist.n=0; end
ebv = ''; ecd=''; emb= ''; ebm = ''; evo=''; ebu=''
"FREE F(IN)"
"FREE F(OUT)"
"DELETE "outdsn
ops = "NEW CATALOG SPACE(1 1) TRACKS RECFM(F B) LRECL(80)"
"ALLOC F(OUT) DA("outdsn") "ops
"MAKEBUF"
do q = 1 to d.0
"ALLOC F(IN) DA("d.q") SHR REUSE"
Call Sendout "Data Set Analyzed: "d.q
"EXECIO "numrec" DISKR IN (STEM "x.
DO WHILE X.0>0
   num = num + x.0
   DO N=1 to X.0
     CALL analyze
   END
   "EXECIO "numrec" DISKR IN (STEM "x.
END
"EXECIO 0 DISKR IN (FINIS"
"FREE F(IN)"
end
"DROPBUF"

Call Sendout "Number of lines read: "num
/*
do while msgs ç= ''
   PARSE VAR MSGS MSG MSGS
   Call Sendout "Number of "msg" ... "msgcount.msg
end */
do while ebv ç= ''
   parse var ebv eday ebv
   Call sendout "Expire bv  "eday xbv.eday.start xbv.eday.end ,
                                xbv.eday.numds
   end
do while ecd ç= ''
   parse var ecd eday ecd
   Call sendout "CDS backup "eday xcd.eday.start xcd.eday.end
   end
do while emb ç= ''
   parse var emb eday emb
   Call sendout "Move BVers "eday xmb.eday.start xmb.eday.end ,
                                xmb.eday.numds
   end
do while ebm ç= ''
   parse var ebm eday ebm
   Call sendout "Back Migds "eday xbm.eday.start xbm.eday.end ,
                                xbm.eday.numds
   end
do while evo ç= ''
   parse var evo eday evo
   Call sendout "Vol Backup "eday xvo.eday.start xvo.eday.end ,
                                xvo.eday.numds
   end
do while ebu  ç= ''
   parse var ebu eday  ebu
   Call sendout "Processing "eday "Expire=" xbu.eday.expbv ,
                                  "Backup=" xbu.eday.backup  ,
                                  "Tracks=" xbu.eday.tracks ,
                                  "Failed=" xbu.eday.fail
   end
call sendout "Data Set size distribution:"
   Call sendout "Number of Data Sets (0.0 - 0.5 MB) "format(dist.1,8)
   Call sendout "Number of Data Sets (0.6 - 2.0 MB) "format(dist.2,8)
   Call sendout "Number of Data Sets (2.1 -  20 MB) "format(dist.3,8)
   Call sendout "Number of Data Sets (20.1 MB over) "format(dist.4,8)
"EXECIO "y.0" DISKW OUT (FINIS STEM "y.
"FREE F(OUT)"
exit 0

Analyze:
   msg = substr(x.n,2,8)
   if left(msg,3)='ARC' then do
      if pos(msg,msgs)=0 then do
         msgcount.msg = 0
         msgs = msgs msg
         end
      msgcount.msg = msgcount.msg + 1
      if msg='ARC0680I' ! msg='ARC0681I' then call expbv
      if msg='ARC0740I' ! msg='ARC0741I' then call cdsb
      if msg='ARC0718I' ! msg='ARC0719I' then call mbv
      if msg='ARC0735I' ! msg='ARC0736I' then call bmds
      if msg='ARC0722I' ! msg='ARC0723I' then call volbv
      if msg='ARC0734I' then call dataset
   end
   else if pos('BACKUP LOG',x.n)>0 then do
      parse var x.n 'DATE ' tod ' '
      if pos(tod,ebu)=0 then do
         ebu = ebu tod
         xbu.tod.expbv   = 0
         xbu.tod.backup  = 0
         xbu.tod.tracks  = 0
         xbu.tod.fail    = 0
      end
   end
Return
Sendout:
   say arg(1)
   k=y.0 + 1
   y.k = arg(1)
   y.0 = k
Return
Expbv:
   parse var x.n ' ON ' day ','
   if pos(day,ebv)=0 then do
      ebv = ebv day
      xbv.day.start = notime
      xbv.day.end = notime
      xbv.day.numds = 0
      end
   if msg = 'ARC0680I' then do
      parse var x.n 'AT ' tim1 ' ON '
      xbv.day.start = tim1
      parse var day '19' tod
      if pos(tod,ebu)=0 then do
         ebu = ebu tod
         xbu.tod.expbv   = 0
         xbu.tod.backup  = 0
         xbu.tod.tracks  = 0
         xbu.tod.fail    = 0
      end
      end
   if msg = 'ARC0681I' then do
      parse var x.n 'AT ' tim2 ' ON ' . 'EXPIRED=' nd ','
      xbv.day.end   = tim2
      xbv.day.numds = nd
      end
Return
Cdsb:
   parse var x.n ' ON ' day ','
   if pos(day,ecd)=0 then do
      ecd = ecd day
      xcd.day.start = notime
      xcd.day.end = notime
      end
   if msg = 'ARC0740I' then do
      parse var x.n 'AT ' tim1 ' ON '
      xcd.day.start = tim1
      end
   if msg = 'ARC0741I' then do
      parse var x.n 'AT ' tim2 ' ON ' . 'EXPIRED=' nd ','
      xcd.day.end   = tim2
      end
Return
Mbv:
   if msg = 'ARC0718I' then do
   parse var x.n 'AT ' tim1 ' ON ' day ' SYSTEM'
   if pos(day,emb)=0 then do
      emb = emb day
      xmb.day.start = notime
      xmb.day.end = notime
      xmb.day.numds = 0
      mbday = day
      end
      xmb.day.start = tim1
      end
   if msg = 'ARC0719I' then do
      parse var x.n 'AT ' tim2 ',' nd ' BACKUP'
      xmb.mbday.end   = tim2
      xmb.mbday.numds = nd
      end
Return
Bmds:
   if msg = 'ARC0735I' then do
   parse var x.n 'AT ' tim1 ' ON ' day ' SYSTEM'
   if pos(day,ebm)=0 then do
      ebm = ebm day
      xbm.day.start = notime
      xbm.day.end = notime
      xbm.day.numds = 0
      bmday = day
      end
      xbm.day.start = tim1
      end
   if msg = 'ARC0736I' then do
      parse var x.n 'AT ' tim2 ', ' nd ' DATA'
      xbm.bmday.end   = tim2
      xbm.bmday.numds = nd
      end
Return
VolBV:
   if msg = 'ARC0722I' then do
   parse var x.n 'AT ' tim1 ' ON ' day ' SYSTEM'
   if pos(day,evo)=0 then do
      evo = evo day
      xvo.day.start = tim1
      xvo.day.end = notime
      xvo.day.numds = 0
      voday = day
      end
      end
   if msg = 'ARC0723I' then do
      parse var x.n 'AT ' tim2 ', ' nd ' DATA'
      xvo.voday.end   = tim2
      xvo.voday.numds = xvo.voday.numds + nd
      end
Return
Dataset:
   parse var x.n 'ACTION=' act ' FR' . 'TRACKS=' tr 'RC=' rcd ','
   if act = 'EXBACKV' then do
      xbu.tod.expbv = xbu.tod.expbv + 1
      end
   if act = 'BACK-UP' then do
      if rcd = 0 & pos('***',tr)=0 then do
         xbu.tod.backup = xbu.tod.backup + 1
         xbu.tod.tracks = xbu.tod.tracks + tr
         if tr<=10 then dist.1 = dist.1 + 1
         else if tr<=40 then dist.2 = dist.2 + 1
         else if tr<=400 then dist.3 = dist.3 + 1
         else dist.4 = dist.4 + 1
      end
      else xbu.tod.fail = xbu.tod.fail + 1
   end
Return
./ ADD NAME=SCANMLOG
/* REXX                                                  àXRC*/
   /**********************************************************/
   /*                                                        */
   /* SCANMLOG - This sample REXX exec can scan several      */
   /*            days' worth of migration activity logs and  */
   /*            summarize the results.                  àXRC*/
   /*                                                        */
   /**********************************************************/
outdsn = "'HSMACT.SCAN.MIGLOG'"
notime= '**:**:**'
numrec = 1000
num = 0
msgs = ''
   /* THIS IS SEVEN DAYS CONTIGUOUS ACTIVITY */
    d.1  = "'HSMACT.HB.MIGLOG.D98089.T002634'"
    d.2  = "'HSMACT.HB.MIGLOG.D98089.T024418'"
    d.3  = "'HSMACT.HB.MIGLOG.D98089.T031115'"
    d.4  = "'HSMACT.HB.MIGLOG.D98089.T040727'"
    d.5  = "'HSMACT.HB.MIGLOG.D98089.T052616'"
    d.6  = "'HSMACT.HB.MIGLOG.D98089.T061418'"
    d.7  = "'HSMACT.HB.MIGLOG.D98089.T074632'"
    d.8  = "'HSMACT.HB.MIGLOG.D98089.T083043'"
    d.9  = "'HSMACT.HB.MIGLOG.D98089.T095556'"
    d.10 = "'HSMACT.HB.MIGLOG.D98089.T105234'"
    d.11 = "'HSMACT.HB.MIGLOG.D98089.T111738'"
    d.12 = "'HSMACT.HB.MIGLOG.D98089.T121912'"
    d.13 = "'HSMACT.HB.MIGLOG.D98089.T134842'"
    d.14 = "'HSMACT.HB.MIGLOG.D98089.T142938'"
    d.15 = "'HSMACT.HB.MIGLOG.D98089.T160343'"
    d.16 = "'HSMACT.HB.MIGLOG.D98089.T162354'"
    d.17 = "'HSMACT.HB.MIGLOG.D98089.T171745'"
    d.18 = "'HSMACT.HB.MIGLOG.D98089.T183515'"
    d.19 = "'HSMACT.HB.MIGLOG.D98089.T192810'"
    d.20 = "'HSMACT.HB.MIGLOG.D98089.T202034'"
    d.21 = "'HSMACT.HB.MIGLOG.D98089.T211813'"
    d.22 = "'HSMACT.HB.MIGLOG.D98089.T223324'"
    d.23 = "'HSMACT.HB.MIGLOG.D98089.T231654'"
    d.24 = "'HSMACT.HB.MIGLOG.D98090.T005827'"
d.0 = 24
Y.0 = 0
do n=1 to 4; dist.n=0; end
ebv = ''; ecd=''; emb= ''; ebm = ''; evo=''; ebu=''; acts=''
fco = ''
"FREE F(IN)"
"FREE F(OUT)"
"DELETE "outdsn
ops = "NEW CATALOG SPACE(1 1) TRACKS RECFM(F B) LRECL(80)"
"ALLOC F(OUT) DA("outdsn") "ops
"MAKEBUF"
do q = 1 to d.0
"ALLOC F(IN) DA("d.q") SHR REUSE"
Call Sendout "Data Set Analyzed: "d.q
"EXECIO "numrec" DISKR IN (STEM "x.
DO WHILE X.0>0
   num = num + x.0
   DO N=1 to X.0
     CALL analyze
   END
   "EXECIO "numrec" DISKR IN (STEM "x.
END
"EXECIO 0 DISKR IN (FINIS"
"FREE F(IN)"
end
"DROPBUF"

Call Sendout "Number of lines read: "num
do while msgs ç= ''
   PARSE VAR MSGS MSG MSGS
   Call Sendout "Number of "msg" ... "msgcount.msg
end
do while ebv ç= ''
   parse var ebv eday ebv
   Call sendout "Mig Clean  "eday xbv.eday.start xbv.eday.end ,
                                xbv.eday.numds
   end
do while ecd ç= ''
   parse var ecd eday ecd
   Call sendout "Sub move   "eday xcd.eday.start xcd.eday.end ,
                                xcd.eday.numds xcd.eday.tracks
   end
do while emb ç= ''
   parse var emb eday emb
   Call sendout "PSM        "eday xmb.eday.start xmb.eday.end
   end
do while ebm ç= ''
   parse var ebm eday ebm
   Call sendout "Back Migds "eday xbm.eday.start xbm.eday.end ,
                                xbm.eday.numds
   end
do while fco ç= ''
   parse var fco xrc  fco
   Call sendout "Return Codes "xrc xco.xrc
   end
do while ebu  ç= ''
   parse var ebu eday  ebu
   Call sendout "Processing "eday "Migrate=" xbu.eday.migrat,
                                  "Tracks=" xbu.eday.tracks ,
                                  "Failed=" xbu.eday.fail
   Call sendout "Processing "eday "Expire=" xbu.eday.exp     ,
                                  "Delete=" xbu.eday.del     ,
                                  "Scratch=" xbu.eday.scr
   end
call sendout fco
call sendout "Data Set size distribution:"
   Call sendout "Number of Data Sets (0.0 - 0.5 MB) "format(dist.1,8)
   Call sendout "Number of Data Sets (0.6 - 2.0 MB) "format(dist.2,8)
   Call sendout "Number of Data Sets (2.1 -  20 MB) "format(dist.3,8)
   Call sendout "Number of Data Sets (20.1 MB over) "format(dist.4,8)
"EXECIO "y.0" DISKW OUT (FINIS STEM "y.
"FREE F(OUT)"
exit 0

Analyze:
   msg = substr(x.n,2,8)
   if left(msg,3)='ARC' then do
      if pos(msg,msgs)=0 then do
         msgcount.msg = 0
         msgs = msgs msg
         end
      msgcount.msg = msgcount.msg + 1
      if msg='ARC0526I' ! msg='ARC0527I' then call mcl
      if msg='ARC0530I' ! msg='ARC0531I' then call msub
      if msg='ARC0520I' ! msg='ARC0521I' then call psm
      if msg='ARC0734I' then call dataset
   end
   else if pos('MIGRATION LOG',x.n)>0 then do
      parse var x.n 'TIME ' tim ',  DATE ' tod ' '
      if pos(tod,ebu)=0 then do
         ebu = ebu tod
         xbu.tod.spmc    = 0
         xbu.tod.exp     = 0
         xbu.tod.del     = 0
         xbu.tod.scr     = 0
         xbu.tod.migrat  = 0
         xbu.tod.tracks  = 0
         xbu.tod.fail    = 0
      end
      if psmend = 1 then do
         xmb.mbday.end = tim
         psmend = 0
         end
   end
Return
Sendout:
   say arg(1)
   k=y.0 + 1
   y.k = arg(1)
   y.0 = k
Return
MCL:
   if msg = 'ARC0526I' then do
      parse var x.n 'AT ' tim1 ' ON ' day ','
      IF POS(day,ebv)=0 then ebv = ebv day
      mcday = day
      xbv.mcday.start = tim1
      xbv.mcday.end   = NOTIME
      xbv.mcday.numds = 0
      end
   if msg = 'ARC0527I' then do
      parse var x.n 'AT ' tim2 ',' nd 'MCDS'
      xbv.mcday.end   = tim2
      xbv.mcday.numds = nd
      end
Return
msub:
   if msg = 'ARC0530I' then do
      parse var x.n 'AT ' tim1 ' ON ' day ' SYSTEM'
   if pos(day,ecd)=0 then do
      ecd = ecd day
      subday = day
      xcd.subday.start = tim1
      xcd.subday.end = notime
      xcd.subday.numds = 0
      xcd.subday.tracks = 0
      end
      end
   if msg = 'ARC0531I' then do
      parse var x.n ',' nd 'DATA' . ',' tr 'TRACKS' . 'TIME ' tim2 ' '
      xcd.subday.end   = tim2
      xcd.subday.numds = nd
      xcd.subday.tracks = tr
      end
Return
psm:
   if msg = 'ARC0520I' then do
   if pos(day,emb)=0 then do
      emb = emb day
      xmb.day.start = tim
      mbday = day
      end
      end
   if msg = 'ARC0521I' then do
      psmend = 1
      end
Return
Bmds:
   if msg = 'ARC0735I' then do
   parse var x.n 'AT ' tim1 ' ON ' day ' SYSTEM'
   if pos(day,ebm)=0 then do
      ebm = ebm day
      xbm.day.start = notime
      xbm.day.end = notime
      xbm.day.numds = 0
      bmday = day
      end
      xbm.day.start = tim1
      end
   if msg = 'ARC0736I' then do
      parse var x.n 'AT ' tim2 ', ' nd ' DATA'
      xbm.bmday.end   = tim2
      xbm.bmday.numds = nd
      end
Return
VolBV:
   if msg = 'ARC0722I' then do
   parse var x.n 'AT ' tim1 ' ON ' day ' SYSTEM'
   if pos(day,evo)=0 then do
      evo = evo day
      xvo.day.start = tim1
      xvo.day.end = notime
      xvo.day.numds = 0
      voday = day
      end
      end
   if msg = 'ARC0723I' then do
      parse var x.n 'AT ' tim2 ', ' nd ' DATA'
      xvo.voday.end   = tim2
      xvo.voday.numds = xvo.voday.numds + nd
      end
Return
Dataset:
   parse var x.n 'ACTION=' act ' FR' . 'TRACKS=' tr 'RC=' rcd ','
   if pos(act,acts)=0 then acts = acts act
   if act = 'SPCMGMT' then do
      if rcd = 0 then say x.n
      xbu.tod.fail  = xbu.tod.fail  + 1
      call failure
      end
   if act = 'EXPIRED' then do
      xbu.tod.exp   = xbu.tod.exp   + 1
      end
   if act = 'DELETED' then do
      xbu.tod.del   = xbu.tod.del   + 1
      end
   if act = 'SCRATCH' then do
      xbu.tod.scr   = xbu.tod.scr   + 1
      end
   if act = 'MIGRATE' then do
      if rcd = 0 & pos('***',tr)=0 then do
         xbu.tod.migrat = xbu.tod.migrat + 1
         xbu.tod.tracks = xbu.tod.tracks + tr
         if tr<=10 then dist.1 = dist.1 + 1
         else if tr<=40 then dist.2 = dist.2 + 1
         else if tr<=400 then dist.3 = dist.3 + 1
         else dist.4 = dist.4 + 1
      end
      else do
           xbu.tod.fail = xbu.tod.fail + 1
           call failure
           end
   end
Return
Failure:
   xrc = right(rcd+0,3,'0')
   if pos(xrc,fco)=0 then do
      fco = fco xrc
      xco.xrc = 0
      end
   xco.xrc = xco.xrc + 1
Return
./ ADD NAME=SCANFSR
/* REXX                                                  àXRC*/
   /**********************************************************/
   /*                                                        */
   /* SCANFSR  - This sample REXX exec scans the FSR data    */
   /*            extracted from SMF (via IFASMFDP program)   */
   /*            and summarized by FSR type and Management   */
   /*            Class.                                      */
   /*                                                        */
   /*            Variables: set fsrid to the smf id for      */
   /*            fsr records, which is one more than the     */
   /*            value specified for DSR/VSR records.        */
   /*            If SETSYS SMFID(240) is specified, use 241. */
   /*                                                        */
   /*            Set the input and output data set names     */
   /*            accordingly.  Since REXX cannot process     */
   /*            Variable-blocked Span file I/O, this exec   */
   /*            will REPRO the data to a VB file for use.   */
   /*                                                    àXRC*/
   /**********************************************************/
fsrid = 241
indsn = "'HSMSMF.FSRDATA'"
outdsn = "'HSMSMF.FSRDATA.REPORT'"
notime= '**:**:**'
numrec = 1000
num = 0; y.0 = 0
types = ''
mgmt = ''
mgmtb= ''
"FREE F(IN)"
"FREE F(OUT)"
if sysdsn(outdsn)='OK' then "DELETE "outdsn
ops = "NEW CATALOG SPACE(1 1) TRACKS RECFM(F B) LRECL(80)"
"ALLOC F(OUT) DA("outdsn") "ops
"MAKEBUF"
   x = listdsi(indsn)
   say "RECFM = "sysrecfm
   if sysrecfm = 'VBS' then do
      "ALLOC F(IN) DA("indsn") SHR REUSE"
      parse var indsn "'" hlq "." da "'"
      tempdsn = "'"hlq"."da!!"."VB"'";
      if sysdsn(tempdsn)='OK' then do
         indsn = tempdsn
         end
      else do
         ops = "LIKE("indsn") RECFM(V B) LRECL(332)"
         "ALLOC F(TEMP) DA("tempdsn") "ops
         "REPRO INFILE(IN) OUTFILE(TEMP)"
         "FREE FI(IN)"; "FREE FI(TEMP)"
         indsn = tempdsn
         end
      end
"ALLOC F(IN) DA("indsn") SHR REUSE"
Call Sendout "Data Set Analyzed: "indsn
"EXECIO "numrec" DISKR IN (STEM "x.
DO WHILE X.0>0
   num = num + x.0
   DO N=1 to X.0
     CALL analyze
   END
   "EXECIO "numrec" DISKR IN (STEM "x.
END
"EXECIO 0 DISKR IN (FINIS"
"FREE F(IN)"
"DROPBUF"

Call Sendout "Number of lines read: "num
do while types ç= ''
   parse var types type types
   call sendout "FSR Type=("type") ... "xtype.type
   end
Call Sendout " "
Call Sendout "FSR counts by Management Class (Types 01 - 05)"
do while mgmt  ç= ''
   parse var mgmt mc mgmt
   columns = format(xmc.mc.001,6) format(xmc.mc.002,6)
   columns = columns format(xmc.mc.003,6) format(xmc.mc.004,6)
   columns = columns format(xmc.mc.005,6)
   call sendout "Management Class "mc columns
   end

Call Sendout " "
Call Sendout "FSR counts by Management Class (Type  07)"
do while mgmtb ç= ''
   parse var mgmtb mc mgmtb
   columns = format(xmc.mc.007,6)
   call sendout "Management Class "mc columns
   end

"EXECIO "y.0" DISKW OUT (FINIS STEM "y.
"FREE F(OUT)"
exit 0

Analyze:
    smftype = c2d(substr(x.n,2,1))
      if smftype = fsrid   then do
         fsrtype = right(c2d(substr(x.n,39,1)),3,'0')
         if pos(fsrtype,types)=0 then do
            types = types fsrtype
            xtype.fsrtype = 0
            end
         if left(xtype.fsrtype,1)='x' then say fsrtype xtype.fsrtype
         xtype.fsrtype = xtype.fsrtype + 1
         if fsrtype>=1 & fsrtype<=5 then call migrec
         if fsrtype =7  then call backup
         end
Return
Sendout:
   say arg(1)
   k=y.0 + 1
   y.k = arg(1)
   y.0 = k
Return
Migrec:
   mc= strip(substr(x.n,211,8))
   mc = left(mc,9,'.')
   if pos(mc,mgmt)=0 then do
      mgmt = mgmt mc
      xmc.mc.001 = 0
      xmc.mc.002 = 0
      xmc.mc.003 = 0
      xmc.mc.004 = 0
      xmc.mc.005 = 0
      end
   if pos(fsrtype,' 001 002 003 004 005 ')=0 then say fsrtype
   if left(xmc.mc.fsrtype,1)="x" then say xmc.mc.fsrtype
   xmc.mc.fsrtype = xmc.mc.fsrtype + 1
Return
Backup:
   mc= strip(substr(x.n,211,8))
   mc = left(mc,9,'.')
   if pos(mc,mgmtb)=0 then do
      mgmtb = mgmtb mc
      xmc.mc.007 = 0
      end
   xmc.mc.fsrtype = xmc.mc.fsrtype + 1
Return
./ ADD NAME=FSRSTAT
/* REXX                                                        àXRC*/
parse arg indsn ops
/*******************************************************************/
/*                                                                 */
/*  FSRSTAT:  This sample REXX program reads FSR data and presents */
/*            statistical results.  In some cases, the data is     */
/*            presented as a histogram, to group data in certain   */
/*            categories for further analysis.                     */
/*                                                                 */
/*            Method of invocation:                                */
/*                                                                 */
/*               FSRSTAT  'my.fsr.data.vb' FSRID(241)              */
/*                                                                 */
/*            Note: SMF data collected by IFASMFDP is saved in     */
/*            Variable-Blocked-Spanned (VBS) format.  This must    */
/*            be converted to Variable-Blocked using DFSORT or     */
/*            IDCAMS REPRO, to be processed by this REXX program.  */
/*            Any LRECL 332 or larger is acceptable.               */
/*                                                                 */
/*            The FSR type is defined by SETSYS SMFID(nnn) in the  */
/*            SYS1.PARMLIB(ARCCMDxx) member.  The FSR type is      */
/*            nnn+1, so if SETSYS SMFID(240) is specified, use     */
/*            FSRID(241) to represent the FSR records.             */
/*                                                                 */
/*******************************************************************/
if pos('FSRID(',ops)>0 then do
   parse var ops front 'FSRID(' fsrid ')' back
   ops = front back
   end
else fsrid = 241
Call OpenFiles
TotCPU = 0
Inc. = 0
"EXECIO "numrec" DISKR IN (STEM "x.
DO WHILE X.0>0; num=num+x.0
   DO N=1 to X.0; Call Analyze; End
   "EXECIO "numrec" DISKR IN (STEM "x.
   if (num//10000)=0 then say "Processing ... "num (totcpu%100)
END

/*******************************************************************/
/*                                                                 */
/*  The statistical results are based on the records provided as   */
/*  input.  Some may not make sense if the FSR records represent   */
/*  a multitude of functions.                                      */
/*                                                                 */
/*  Use DFSORT, or similar SORT product, to select just those FSR  */
/*  records that apply to a certain function, or meet some special */
/*  criteria.                                                      */
/*                                                                 */
/*  Note: the use of ____NONE represents either (a) the data set   */
/*  is not SMS-managed, or (b) is SMS-managed, but is not assigned */
/*  an explicit management class.                                  */
/*******************************************************************/
NONE = "____NONE"
Call Sendout "Data Set Analyzed: "indsn
Call Sendout "Number of lines read: "num
if num>0 then do
Call Sendout " "
Call ShowCount "FSR records by type ", xtype, KEY, UP
Call ShowPercent "FSR records by host ", xhost, KEY, UP
end
if naf=1 then do
Call ShowPercent "FSR records by Return Code ", xcode, COUNT, DOWN
Call ShowCount "FSR records by Date",xdate, KEY, UP
Call ShowHist    "FSR records by Hour", xhour
Call ShowHist    "FSR records by Size (KB)", xsize
Call ShowPercent "By Request (Mounted/TSO/User/Wait)", xreq, KEY, UP
Call ShowPercent "By Request (1=Extent Reduction)"   , xext, KEY, UP
Call ShowPercent "By Request (1=Piggy Back)"         , xpgb, KEY, UP
CALL ShowPercent "By Request (1=Tape Takeaway)", xtaway, KEY, UP
Call ShowHist    "FSR records by Age (days) ", xage
Call ShowHist    "By time completed (seconds)", xtime
Call ShowPercent "FSR records by Management Class ", xmc, COUNT, DOWN
Call ShowPercent "FSR records by GDG ", xllq,KEY,UP
Call sendout "Total CPU seconds "totcpu%100
/*
Call ShowPercent "FSR records by HLQ ", xhlq,KEY,UP
Call ShowCount "FSR records by job (first n chars)", xjob,COUNT,DOWN
Call ShowCount "FSR records by user (first n chars)", xuid,COUNT,DOWN
Call ShowCount "FSR records by FKB  ", xfkb , KEY, UP
*/
end
Call CloseFiles
exit 0
OpenFiles:
parse var indsn "'" base "'" ;outdsn = "'"base".FSRSTAT'"
numrec = 5000; num = 0; y.0 = 0; "FREE F(IN)"; "FREE FI(OUT)"
if sysdsn(outdsn)='OK' then ops = "OLD"; else ,
   ops = "NEW CATALOG SPACE(1 1) TRACKS RECFM(F B) LRECL(80)"
"ALLOC F(OUT) DA("outdsn") "ops ; "MAKEBUF"
"ALLOC F(IN) DA("indsn") SHR REUSE"
Return
CloseFiles:
"EXECIO 0 DISKR IN (FINIS"; "FREE FI(IN)"; "DROPBUF"
"EXECIO "y.0" DISKW OUT (FINIS STEM "y. ; "FREE F(OUT)"
Return
Analyze:
smftype = c2d(substr(x.n,2,1))
if smftype = fsrid   then do
   fsrtype = right(c2d(substr(x.n,39,1)),3,'0')
   fsrsid = substr(x.n,11,4)
  call keycount xtype,fsrtype; call keycount xhost,fsrsid
   if fsrtypeç='015' & fsrtypeç='016' then do
   fsrdsn = substr(x.n,41,44)
   call getmc; naf=1
   lq=lastpos('.',fsrdsn); llq=substr(fsrdsn,lq+1,lq+9)
   llq = underline(llq," ","_"); llq=left(llq,2)"_"
   if llq>="G0_" & llq<="G9_" then llq = "GDG"; else llq="NON"
   qq = substr(x.n,105,4)
   q2 = 0; if c2x(left(qq,1))='00' then q2=c2d(qq)
   fsrrc   = right(q2,4,'0')
   fsrdatr = c2x(substr(x.n,133,4)); fsrtimr = c2x(substr(x.n,137,4))
   fsrtims = c2x(substr(x.n,141,4)); fsrtime = c2x(substr(x.n,145,4))
   fsrtima = c2x(substr(x.n,149,4)); timeq = stamp(fsrtimr,fsrtims)
   timem = stamp(fsrtims,fsrtima);   timep = stamp(fsrtima,fsrtime)
  timet = stamp(fsrtimr,fsrtime);
  fsrflags = bitstr(substr(x.n,40,1))
  fsrfkb = substr(fsrflags,4,1)
  readkb  = c2d(substr(x.n,161,3)); writekb = c2d(substr(x.n,165,3))
  movekb = readkb + writekb
  if fsrfkb="0" then movekb = movekb % 4
  if fsrfkb="1" then movekb = movekb * 256
  fsrtvol = substr(x.n,85,6); tovol = left(fsrtvol,2)"_"
  fsrflg2 = bitstr(substr(x.n,175,1)); req=left(fsrflg2,4)
  fsrflg3 = bitstr(substr(x.n,176,1)); ext=substr(fsrflg3,4,1)
  fsrflg4 = bitstr(substr(x.n,128,1)); pgb=substr(fsrflg4,3,1)
  fsrcpu = 0; top=c2x(substr(x.n,177,1))
  if  top = '00' then fsrcpu=c2d(substr(x.n,177,4))
  totcpu = totcpu + fsrcpu
  fsrage  = right(c2d(substr(x.n,181,2)),4,'0')
  hr=left(fsrtimr,2)
  taway = C2D(BITAND(SUBSTR(x.n,219,1),'01'x))
  CALL Keycount xtaway, taway;
  call keycount xcode,fsrrc  ; call keycount xdate,fsrdatr
  call keycount xreq,req     ; call keycount xmc,mc
  call keyHist  xage,fsrage,1,15  ; call keyHist  xhour,hr,2,11
  Call KeyHist  xtime,timet,30,14
  Call Keycount xext, ext; call Keycount xpgb, pgb;
  Call keycount xllq, llq
  /*
  call keycount xjob,jobname ; call keycount xuid,userid
  call keycount xfkb, fsrfkb
  Call keycount xhlq, hlq
  Call keycount xtov, tovol
  */
  call keyHist  xsize, movekb,50,14
   end
   end
Return
KeyCount:
tag=arg(1); key=arg(2); Inc.tag = 1
if left(w.tag.KEYS,2)='W.' then do; w.tag.keys=''; w.tag.COUNT.=0; end
if pos(key,w.tag.keys)=0 then ,
   do; w.tag.keys = w.tag.keys key; w.tag.COUNT.key = 0; end
w.tag.COUNT.key = w.tag.COUNT.key + 1; return
ShowCount:
If inc.tag=0 then return
header=arg(1); tag=arg(2); method=arg(3); mode=arg(4)
Call Sortby tag,method,mode; Call Sendout header
list=w.tag.keys; do while list  ç= ''; parse var list key list
   call sendout left(key,10,' ') format(w.tag.COUNT.key,9); end
Call Sendout " "; Return
KeyHist:
tag=arg(1); point=arg(2); bar=arg(3); limit=arg(4); inc.tag=1
key = (point/bar)%1; if key>limit then key=limit+1
key = right(key,2,'0')
if left(w.tag.KEYS,2)='W.' then ,
   do; w.tag.keys=''; w.tag.HBAR = bar; w.tag.HLIMIT = limit
        w.tag.MAX=0
   do h=0 to limit+1; c1=right(h,2,'0'); w.tag.COUNT.c1=0; end; end
if w.tag.MAX<point then w.tag.MAX=point
w.tag.COUNT.key = w.tag.COUNT.key + 1; return
ShowHist:
header=arg(1); tag=arg(2); if inc.tag=0 then return
bar=w.tag.HBAR; limit=w.tag.HLIMIT; total=0; run=0
over=' over'; if w.tag.max<99999 then over=format(w.tag.max,5,0)
Call Sendout header
do h=0 to limit+1; key=right(h,2,'0'); total=total+w.tag.COUNT.key; end
do h=0 to limit+1; key=right(h,2,'0')
   x1=w.tag.count.key; x2=100*(x1/total); run=run+x2
   if h<=limit then range = format(h*bar,5)"->"format(h*bar+bar-1,5)
               else range = format(h*bar,5)"->"over
   if (h<=limit)!(w.tag.COUNT.key > 0) then ,
   call sendout range format(w.tag.COUNT.key,9) ,
        format(x2,6,2)'% 'format(run,6,2)'%'; end
Call Sendout " "; Return
ShowPercent:
header=arg(1); tag=arg(2); method=arg(3);  mode=arg(4);
if inc.tag=0 then return
Call Sortby tag,method,mode; Call Sendout header
list=w.tag.keys;
sn=words(list);
total=0; run=0
do q=1 to sn; c1=word(list,q); total=total+w.tag.COUNT.c1; end
list=w.tag.keys;
do while list  ç= ''; parse var list key list
   x1=w.tag.count.key; x2=100*(x1/total); run=run+x2
   call sendout left(key,10,' ') format(x1,9) ,
        format(x2,6,2)'% 'format(run,6,2)'%'; end
Call Sendout " "; Return
Sortby:
tag = arg(1); method= arg(2); mode = arg(3)
list = w.tag.KEYS; snum=words(list)
do q=1 to snum; v.q = word(list,q); end
do j=1 to snum-1; do k=j+1 to snum; c1=v.j; c2=v.k
   if method='COUNT' then do; c1=w.tag.count.c1; c2=w.tag.count.c2; end
   if mode='DOWN' then do; temp=c1; c1=c2; c2=temp; end
   if c1  > c2  then do; temp=v.j; v.j=v.k; v.k=temp; end; end; end
new= '';
do q=1 to snum;
   new = new v.q;
end;
w.tag.keys = new
Return
Sendout: /* say arg(1) */
   k=y.0 + 1; y.k = arg(1); y.0 = k; return
 /***********************************************************/
 /* CONVERT THE HEX VALUE TO INDIVIDUAL 1'S AND 0'S         */
 /* EACH BYTE WILL TAKE UP 8 CHARACTER POSITIONS            */
 /***********************************************************/
  BITSTR:
  IF BIT.F ç= "1111"  THEN DO
     BIT.0="0000"; BIT.1="0001"; BIT.2="0010"; BIT.3="0011"
     BIT.4="0100"; BIT.5="0101"; BIT.6="0110"; BIT.7="0111"
     BIT.8="1000"; BIT.9="1001"; BIT.A="1010"; BIT.B="1011"
     BIT.C="1100"; BIT.D="1101"; BIT.E="1110"; BIT.F="1111"
     END
  CH=C2X(ARG(1)); BS=''
  DO B=1 TO LENGTH(CH); Q=SUBSTR(CH,B,1); BS=BS!!BIT.Q; END
  RETURN BS
GetMC:
 fsrmcnam = substr(x.n,211,8); fsrmclen = c2d(substr(x.n,209,2))
 mc= underline(fsrmcnam,' ','_');
   fsrjbn = substr(x.n,15,8); fsruid=substr(x.n,31,8);
 jobname = left(underline(fsrjbn,' ','_'),1)!!"__"
 userid  = left(underline(fsruid,' ','_'),1)!!"__"
 RETURN
 UNDERLINE:
 ST = ''; L=LENGTH(ARG(1)); SP=ARG(2); UN=ARG(3)
 DO j=1 TO L; Q=SUBSTR(ARG(1),j,1); IF Q<' ' THEN Q=' '
   IF Q=SP  THEN ST = ST!!UN; ELSE ST=ST!!Q; END
if left(st,1)="_" then st=right("NONE",8,"_")
RETURN ST
stamp:
time1 = arg(1); time2 = arg(2)
hour1 = left(time1,2); min1=substr(time1,3,2); sec1=right(time1,4)
hour2 = left(time2,2); min2=substr(time2,3,2); sec2=right(time2,4)
if hour2<hour1 then hour2=hour2+24
stamp1 = 3600*hour1 + 60*min1 + (sec1/100)
stamp2 = 3600*hour2 + 60*min2 + (sec2/100)
return stamp2 - stamp1
$$
//HSMSTEP3 EXEC PGM=IEBGENER
//*
//********************************************************************
//* CREATES THE FOLLOWING JCL FOR THE ABARS UTILITIES:           à04A*
//*                                                              à04A*
//* ARECPROC -  ISSUE THE ARECOVER COMMAND                       à04A*
//* ARECSNGL -  SINGLE DATA SET RESTORE FOR ARECOVER             à04A*
//* ASMAL    -  ASSEMBLE AND LINK EDIT SLEEP PROGRAM             à04A*
//* DCOLLECT -  ISSUE DCOLLECT COMMAND FOR AGGREGATE             à04A*
//* DRAUDIT  -  CREATE AUDIT REPORTS FOR ARECOVER PROCESSING     à04A*
//* DRBACKUP -  SETUP AND ISSUE APPROPRIATE ABACKUP COMMAND      à04A*
//* DRSCAN   -  LIST INFORMATION REGARDING DATA SETS TO BE       à04A*
//*             BACKED UP BY ABARS                               à04A*
//* DRSCAN   -  LIST INFORMATION REGARDING DATA SETS TO BE       à04A*
//* HSMPATCH -  ABARS PATCH                                      à04A*
//* SETABKUP -  ISSUE ABACKUP COMMAND                            à04A*
//* SLEEPASM -  SLEEP ASSEMBLER PROGRAM                          à04A*
//********************************************************************
//*
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD UNIT=SYSDA,
//            DSN=HSM.ABARUTIL.JCL(ARECPROC),
//            DISP=(NEW,CATLG),
//            DCB=(RECFM=FB,LRECL=80),
//            SPACE=(CYL,(2,1,10))
//SYSIN    DD DUMMY
//SYSUT1   DD DATA,DLM='$$'
//ARECPROC JOB ?JOBPARM
//*
//AGGNAME1 EXEC DRECOVER
//DRECOVER.SYSTSIN DD  *
    %ARECPROC  AGGNAME1
$$
//HSMSTEP4 EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD DSN=HSM.ABARUTIL.JCL,
//            DISP=OLD
//SYSIN    DD DATA,DLM='$$'
./ ADD NAME=ARECSNGL
//ARECSNGL JOB ?JOBPARM
/*
//*
//DRECOVER PROC
//*********************************************************************
//******   ABARS ARECOVER
//*********************************************************************
//ARECOVER EXEC PGM=IKJEFT01,DYNAMNBR=20,TIME=1440
//SYSEXEC   DD  DSN=HSM.SAMPLE.TOOL,DISP=SHR
//STEPLIB   DD  DSN=A10DLH.TSO.LOAD,DISP=SHR
//SYSPRINT  DD  DUMMY
//SYSTSPRT  DD  SYSOUT=*
//LOG       DD  SYSOUT=*
//SYSTERM   DD  SYSOUT=*
//SYSIN     DD  DUMMY,DCB=BLKSIZE=80
//SYSTSIN   DD  DUMMY
//DRECOVER PEND
//AGGNAME1 EXEC DRECOVER
//ARECOVER.SYSTSIN DD  *
    %ARECSNGL  DAVETEST
//ARECOVER.INDSN DD  *
A10DLH.BADDSN
/*
./ ADD NAME=ASMAL
//ASMAL   JOB ?JOBPARM
//C      EXEC  PGM=IEV90,PARM=OBJECT,REGION=200K
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(10,5)),DSN=&SYSUT1
//SYSPUNCH DD  SYSOUT=B,DCB=(BLKSIZE=800),SPACE=(CYL,(5,5,0))
//SYSPRINT DD SYSOUT=A,DCB=(BLKSIZE=3509),UNIT=(,SEP=(SYSUT1,SYSPUNCH))
//SYSLIN   DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(5,5,0)),            *
//             DCB=(BLKSIZE=400),DSN=&&LOADSET
//SYSIN    DD DSN=A10DLH.JCL.CNTL(SLEEPASM),DISP=SHR
//L    EXEC  PGM=IEWL,PARM='MAP,LET,LIST,NCAL',REGION=96K,COND=(8,LT,C)
//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)
//         DD  DDNAME=SYSIN
//SYSLMOD DD DSN=A10DLH.TSO.LOAD,DISP=SHR
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(3,2)),DSN=&SYSUT1
//SYSPRINT DD  SYSOUT=A,DCB=(RECFM=FB,BLKSIZE=3509)
  ALIAS WAIT
  NAME SLEEP(R)
/*
./ ADD NAME=DCOLLECT
//DCOLLCT JOB ?JOBPARM
//*
//STEP1 EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  DCOLLECT OUTDATASET(HSMATH0.DCOLLECT.DATA) SMSDATA(ACTIVE) REPLACE
/*
./ ADD NAME=DRAUDIT
//DRAUDIT  JOB ?JOBPARM
//*
//AUDIT PROC
//AUDIT    EXEC PGM=IKJEFT01,DYNAMNBR=20,PARM='%DRAUDIT'
//SYSEXEC   DD  DSN=HSM.SAMPLE.TOOL,DISP=SHR
//SYSHELP   DD  DSN=SYS1.HELP,DISP=SHR
//SYSPRINT  DD  DUMMY
//SYSTSPRT  DD  SYSOUT=*
//SYSTERM   DD  SYSOUT=*
//AGDET     DD  SYSOUT=*,RECFM=FBA,LRECL=133
//AGSUMM    DD  SYSOUT=*,RECFM=FBA,LRECL=133
//SYSIN     DD  DUMMY,DCB=BLKSIZE=80
//SYSTSIN   DD  DUMMY
//AUDIT    PEND
//STEP1  EXEC AUDIT
//AUDIT.INCNTL DD  *
aggname1
aggname2
  .
  .
  .
aggnameN
/*
./ ADD NAME=DRBACKUP
//DRBACKUP JOB ?JOBPARM
//*
//TEST1 EXEC DRBACKUP
//ABACKUP.SYSTSIN DD  *
    %DRBACKUP  TEST1 UNIT(3480X) EXECUTE +
               INPUT('IB996RV.TEST.ABARS.CNTL(TEST1)')
//ABARPOST.SYSTSIN DD  *
    %ABARPOST  TEST1 UNIT(3480X)
/*
./ ADD NAME=DRSCAN
//DRSCAN   JOB ?JOBPARM
//*
//DRSCAN PROC
//*********************************************************************
//******   ABARS ABACKUP PRE PROCESSOR
//******    1) ELIMINATES 'ARCIVE' DATASETS FROM AGGREGATE
//******    2) SET UP ENVIRONMENT FOR POST PROCESSING
//*********************************************************************
//ABACKUP  EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSPROC   DD  DSN=?????????.ISPCLIB,DISP=SHR
//SYSEXEC   DD  DSN=HSM.SAMPLE.TOOL,DISP=SHR
//SYSHELP   DD  DSN=SYS1.HELP,DISP=SHR
//SYSPRINT  DD  DUMMY
//SYSTSPRT  DD  SYSOUT=*
//SYSTERM   DD  SYSOUT=*
//ABRPT     DD  SYSOUT=*,RECFM=FBA,LRECL=133
//SYSIN     DD  DUMMY,DCB=BLKSIZE=80
//SYSTSIN   DD  DUMMY
//DRSCAN  PEND
//STEP1  EXEC DRSCAN
//ABACKUP.SYSTSIN DD  *
    %DRSCAN  LMDB204 UNIT(3480X) VERIFY
    %DRSCAN  LMDB304 UNIT(3480X) VERIFY
    %DRSCAN  LMDB309 UNIT(3480X) VERIFY
    %DRSCAN  LMDB312 UNIT(3480X) VERIFY
/*
./ ADD NAME=HSMPATCH
//HSMPTCH JOB ?JOBPARM
//IKJACCT EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSPRINT DD  DUMMY
//SYSTSPRT DD  SYSOUT=*
//SYSTERM  DD  SYSOUT=*
//SYSIN    DD  DUMMY,DCB=BLKSIZE=80
//SYSTSIN  DD  *
    HSEND PATCH .ABRCB.+81 BITS(.....1..)
//*
./ ADD NAME=SETABKUP
//SETABKP JOB ?JOBPARM
//DRBACKUP PROC
//*********************************************************************
//******   ABARS ABACKUP PRE PROCESSOR IF %DRBACKUP IS USED:
//******    1) ELIMINATES 'ARCIVE' DATASETS FROM AGGREGATE
//******    2) SET UP ENVIRONMENT FOR POST PROCESSING
//*********************************************************************
//*********************************************************************
//******   ABARS POST PROCESSOR
//******    1) WRITES ACTIVITY LOG TO DDNAME 'LOG'
//******       IF ABACKUP IS GOOD.....
//******    2) WRITES ARECOVER STATEMENTS TO ARECOVER PARMS DATASET
//******    3) CREATES DATASET ATTRIBUTE DETAIL REPORT
//*********************************************************************
//ABARPOST EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSEXEC   DD  DSN=HSM.SAMPLE.TOOL,DISP=SHR
//SYSHELP   DD  DSN=SYS1.HELP,DISP=SHR
//SYSPRINT  DD  DUMMY
//SYSTSPRT  DD  SYSOUT=*
//LOG       DD  SYSOUT=*,RECFM=FBA,LRECL=133
//SYSTERM   DD  SYSOUT=*
//SYSIN     DD  DUMMY,DCB=BLKSIZE=80
//SYSTSIN   DD  DUMMY
//DRBACKUP PEND
//DAVETEST EXEC DRBACKUP
//ABARPOST.SYSTSIN DD  *
    %ABARPOST  DAVETEST UNIT(3490)
//
    HSEND WAIT ABACKUP DAVETEST UNIT(3490) EXECUTE
    %ABARPOST  DAVETEST UNIT(3490)
./ ADD NAME=SLEEPASM
CMDNAME  TITLE ' TSO SLEEP command'
         SPACE 1
***********************************************************************
*                                                                     *
*   Copyright IBM Corp. 2008                                      àZRC*
*                                                                     *
*                                                                     *
*        Command SLEEP puts a REXX Exec to sleep for a                *
*        specified amount of seconds. Command used in ABARS           *
*        Utilities to attempt to resolve dataset allocation           *
*        conflicts.                                                   *
*                                                                     *
*        Command syntax:                                              *
*                                                                     *
*              SLEEP <number_of_seconds>                              *
*                    'only' 15 digits allowed                         *
*                    only numerics allowed                            *
*                    default is 60 seconds                            *
*                                                                     *
***********************************************************************
         SPACE 1
SLEEP    CSECT
         SAVE  (14,12),,SLEEP(&SYSTIME._&SYSDATE) Save registers
         LR    R12,R15             Load register 12 with entry address
         USING SLEEP,R12           Establish addressability to SLEEP
         ST    R13,SAVEAREA+4      Store address of previous savearea
         LA    R2,SAVEAREA         Temp address of savearea
         ST    R2,8(,R13)          Store address of current savearea
*                                    in previous savearea
         LR    R13,R2              Our save area.
         L     R6,0(,R1)           Point to the command buffer
         LH    R5,2(,R6)           Load index into command buffer.
         LA    R4,4(R5,R6)         Point to command argument
         LH    R3,0(,R6)           Get length of command buffer
         SR    R3,R5               Subtract the command code length
         SH    R3,=H'4'            Subtract length of prefix.
         BZ    STAX                Branch to process argument
ARGPROC  CH    R3,=H'15'           Only 15 characters in arg.
         BH    ERRMSG1               bin
         LR    R2,R3               Set up validity check loop
         LR    R7,R4               Set up address reg for val. check
VALLOOP  CLI   0(R7),C'0'          Larger than smallest num?
         BL    ERRMSG2               bin
         CLI   0(R7),C'9'          Smaller than largest num?
         BH    ERRMSG2               bin
         LA    R7,1(,R7)           Increment arg. pointer
         BCT   R2,VALLOOP            branch if more arg. chars.
         BCTR  R3,*-*              Decrement for EX instruction
         EX    R3,PACK             Pack the EBCDIC number.
         CVB   R2,DEC              Convert it to binary
         MH    R2,=H'100'          Get the number in hundreds of a sec.
         ST    R2,TIME             Save it for STIMER.
         EJECT
STAX     STAX  WAKEUP,             Address of exit routine             .
               OBUF=(ATTNMSG,L'ATTNMSG), Message to interrupter        .
               TOPLEVL=YES         This is a top level interrupt.
         LTR R15,R15               STAX successful?
         BZ STIMER                   biy
         TPUT  MSG3,L'MSG3         Issue warning and continue
STIMER   STIMER REAL,              Set the specified interval          .
               WAKEUP,             Address of exit routine             .
               BINTVL=TIME         Time interval for SLEEP
         WAIT  1,                  WAIT for timer expiration           .
               ECB=WECB,           ECB to be posted after timer exp    .
               LONG=YES            Swap out while at sleep.
RETURN   L     R13,4(R13)          Get previous savearea scale='0.8'.
         RETURN (14,12),RC=0       Return to the TSO
ERRMSG1  TPUT  MSG1,L'MSG1         Issue error message
         B     ERRRETN
ERRMSG2  TPUT  MSG2,L'MSG2         Issue error message
         B     ERRRETN
ERRRETN  TPUT  MSGX,L'MSGX         Issue termination message
         L     R13,4(R13)          Get previous save area.
         RETURN (14,12),RC=12      Return to the TSO using rc = 12
         EJECT
*
*  Combined wake up routine for STIMER and STAX
*
WAKEUP   SAVE  (14,12),,WAKEUP.ROUTINE
         LR    R10,R15             Addressability in exit.
         DROP R12
         USING WAKEUP,R10
         LA    R3,EXITSAVE         Load address of workarea
         ST    R13,4(,R3)          Store address of previous savearea
         ST    R3,8(,R13)          Store address of current savearea
*                                    in previous savearea
         LR    R13,R3              Load register 13 with address of
*                                    current savearea
         POST  WECB                Wake up mainline routine
         L     R13,4(R13)          Get previous savearea.
         RETURN (14,12),RC=0       Return to OS
         DROP  R10                 Remove base reg. for exit
         USING SLEEP,R12           Re-establish base reg. for SLEEP
         EJECT
ATTNMSG  DC    C'SLEEP stopped due to ATTN'                  àFVC
MSG1     DC    C'Time longer than 16 characters'
MSG2     DC    C'Time not numeric'
MSG3     DC    C'STAX failed, SLEEP continues'
MSGX     DC    C'SLEEP terminated due to error'
PACK     PACK  DEC,0(*-*,R4)
SAVEAREA DS    18F                 Normal save area
EXITSAVE DS    18F                 Exit routine save area
WECB     DC    F'0'                Must contain zeros at WAIT time
TIME     DC    F'6000'             Timer default (set to 60 sec)
DEC      DS    D                   Dec time value (work field)
         SPACE 3
         LTORG
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   SLEEP
$$
//HSMSTEP5 EXEC PGM=IEBGENER
//*
//********************************************************************
//* THESE ARE THE PROCEDURES FOR THE ABARS UTILITIES:            à04A*
//*                                                              à04A*
//* DRBACKUP - PROVIDES AGGREGATE BACKUP SUPPORT                 à04A*
//* DRECOVER - PROVIDES AGGREGATE RECOVERY SUPPORT               à04A*
//********************************************************************
//*
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD UNIT=SYSDA,
//            DSN=HSM.ABARUTIL.PROCLIB(DRBACKUP),
//            DISP=(NEW,CATLG),
//            DCB=(RECFM=FB,LRECL=80),
//            SPACE=(CYL,(1,1,5))
//SYSIN    DD DUMMY
//SYSUT1   DD DATA,DLM='$$'
//DRBACKUP PROC
//*********************************************************************
//******   ABARS ABACKUP PRE PROCESSOR IF %DRBACKUP IS USED:
//******    1) ELIMINATES 'ARCIVE' DATASETS FROM AGGREGATE
//******    2) SET UP ENVIRONMENT FOR POST PROCESSING
//*********************************************************************
//ABACKUP  EXEC PGM=IKJEFT01,DYNAMNBR=20,TIME=1440
//SYSEXEC   DD  DSN=HSM.SAMPLE.TOOL,DISP=SHR
//SYSHELP   DD  DSN=SYS1.HELP,DISP=SHR
//SYSPRINT  DD  DUMMY
//SYSTSPRT  DD  SYSOUT=*
//SYSTERM   DD  SYSOUT=*
//SYSIN     DD  DUMMY,DCB=BLKSIZE=80
//SYSTSIN   DD  DUMMY
//*********************************************************************
//******   ABARS POST PROCESSOR
//******    1) WRITES ACTIVITY LOG TO DDNAME 'LOG'
//******       IF ABACKUP IS GOOD.....
//******    2) WRITES ARECOVER STATEMENTS TO ARECOVER PARMS DATASET
//******    3) CREATES DATASET ATTRIBUTE DETAIL REPORT
//*********************************************************************
//ABARPOST EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSEXEC   DD  DSN=HSM.SAMPLE.TOOL,DISP=SHR
//SYSHELP   DD  DSN=SYS1.HELP,DISP=SHR
//SYSPRINT  DD  DUMMY
//SYSTSPRT  DD  SYSOUT=*
//LOG       DD  SYSOUT=*,RECFM=FBA,LRECL=133
//SYSTERM   DD  SYSOUT=*
//SYSIN     DD  DUMMY,DCB=BLKSIZE=80
//SYSTSIN   DD  DUMMY
//*********************************************************************
//******   ABENDBK - ISSUE U0100 ABEND CODE IF ABACKUP  STEP ISSUES
//******   A RETURN CODE NOT EQUAL TO 0
//*********************************************************************
//ABENDBK EXEC PGM=GPABEND,COND=(0,EQ,ABACKUP)
//SYSOUT  DD SYSOUT=*
$$
//HSMSTEP6 EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD DSN=HSM.ABARUTIL.PROCLIB,
//            DISP=OLD
//SYSIN    DD DATA,DLM='$$'
./ ADD NAME=DRECOVER
//DRECOVER PROC
//*********************************************************************
//******   ABARS ARECOVER
//*********************************************************************
//ARECOVER EXEC PGM=IKJEFT01,DYNAMNBR=20,TIME=1440
//SYSEXEC   DD  DSN=HSM.SAMPLE.TOOL,DISP=SHR
//SYSHELP   DD  DSN=SYS1.HELP,DISP=SHR
//SYSPRINT  DD  DUMMY
//SYSTSPRT  DD  SYSOUT=*
//LOG       DD  SYSOUT=*
//SYSTERM   DD  SYSOUT=*
//SYSIN     DD  DUMMY,DCB=BLKSIZE=80
//SYSTSIN   DD  DUMMY
//*********************************************************************
//******   ABENDBK - ISSUE U0100 ABEND CODE IF ARECOVER STEP ISSUES
//******   A RETURN CODE NOT EQUAL TO 0
//*********************************************************************
//ABENDBK EXEC PGM=GPABEND,COND=(0,EQ,ARECOVER)
//SYSOUT  DD SYSOUT=*
$$
//HSMSTEP7 EXEC PGM=IEBGENER
//*
//********************************************************************
//* THIS IS THE ABARS UTILITIES REFERENCE MATERIAL:              à04A*
//*                                                              à04A*
//* ABARTREF - ABARS UTILITIES TECHNICAL REFERENCE               à04A*
//* ABARUG   - ABARS UTILITIES USER'S GUIDE                      à04A*
//*                                                              à04A*
//********************************************************************
//*
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD UNIT=SYSDA,
//            DSN=HSM.ABARUTIL.DOCS(ABARTREF),
//            DISP=(NEW,CATLG),
//            DCB=(RECFM=FB,LRECL=80),
//            SPACE=(CYL,(1,1,10))
//SYSIN    DD DUMMY
//SYSUT1   DD DATA,DLM='$$'
.cm  gdoc sec='unclassified'
:GDOC SEC='(C)COPYRIGHT INTERNATIONAL BUSINESS MACHINES CORPORATION 1994
.cm  qprint dcf options 'twopass cont prof(dsmprof3'
:frontm.
:titlep.
:title.ABARS REXX Utilities
:title.Technical Reference
:address.
:aline.D. L. Heggen
:aline.214 280-5432
:aline.Tie 542-5432
:eaddress.
:address.
:aline.IBM Corporation
:aline.Department 1MJD
:aline.1605 LBJ Freeway
:aline.Dallas, Texas  75234
:eaddress.
:date.February 7th, 1994
:etitlep.
.ll 4i
:toc.
.ll 6i
:body
:h2.Introduction
:p.ABARS stands for Aggregate Backup and Recovery System.  It is an
extension of IBM's DFHSM product and allows for the backup (and in the
case of a disaster) the recovery of an application's data.  It creates
a transportable logical (as opposed to physical) copy of the
application's data.  The use of logical copies allows for the data
to be restored on a different device type than it originated.  This
simplifies recovery, because the Recovery Site need only supply the
required storage capacity for the application, not a specific
configuration.
:p.The ABARS Utilities allow Customers the ability to track and control
the execution of hundreds of ABARS aggregates defined in their
datacenters.
:h2.Technical Detail
:h3.Utility Flow
:p.Assuming HSEND and ABACKUP are restricted commands, Application
Owners request a ABARS Aggregate to be set-up for their use.  If
DRBACKUP is to be used (as opposed to the regular ABACKUP command),
The first selection dataset is not owned by the Application Owner
and defined to DFSMS with a name that allow Storage Administration
write access.  DRSCAN is used initially, to supply information
to the application owner concerning the location of the datasets
included in the aggregate.  After a few iterations of DRSCAN, the
Include/Exclude list for the aggregate is finalized, and production
can start.  Production Jobs of the DRBACKUP JCL PROCs are usually
submitted via a Scheduling package (CA7,OPC/ESA,etc).  The ARECOVER
Parms produced as output from ABARPOST step of the DRBACKUP Procedure
are transmitted to the recovery site in coordination with the Vaulting
Cycle.
:p.At the Recovery Site, the ARECOVER parms are merged to a single PDS
with the aggregate name as the member name (most to least recent,
copy without replacement).  Application owners schedule their
ARECOVER jobs to start (determine the order of restoration).  These
jobs read the PARMS dataset and execute the ARECOVER command, copy
the activity log to SYSOUT, and update a dataset with the aggregate
name and log dataset name (for audit).
:p.At some point in time an AUDIT is executed with a list of aggregates
to be checked.  The Audit lists the logs for the aggregate, the number
of times an ARECOVER has executed, and checks the status of movement
of each dataset in the aggregate to the recovery site.
:h2.Installation
:h3.Pre-Requisite Maintenance
:p.Need PTF UY73400 to write message ARC6030I to the system log
(SYSLOG).  This message contains the name of the aggregate and the
name of the activity log.
:p.Need hsm patch as described in the text of PTF UY73400
(Presented later in this document)
:p.Need APARS OY59794, OY60048, and OY37378 to allow DCOLLECT to
gather data on DFSMS Constructs.
:h3.Automated Operations Interface
:h4.Activity Log Name Capture
:p.Message(s) ARC6030I must be trapped and parsed for these utilities.
The utilities need to be presented with the Activity Log Dataset Name
for a given Aggregate Name.  Initial implementation used AUTOMATE/MVS
and it set Global Variables that we accessed through the utilities.
The ARC6030I message has 4 flavors.  There are differences between
DFHSM 2.6 /DFSMShsm 1.1 and ABACKUP/ARECOVER.  So depending on the
release and activity, the Automated Operations interface may need to
be different. The exec DR14AM is an example of an interface to Automate
and exec DR14NV is an implementation using NETVIEW.  In the appendix
of this document are instructions/examples of implementation of the
NETVIEW interface.
:h4.DCOLLECT Executions
:p.If the REXX exec DRBACKUP is necessary then
any time the aggregate definition changes, a DCOLLECT needs to
be run to capture the new structure.  For convenience, we set up
Automate/MVS to submit DCOLLECT whenever a SETSMS activate
was successful (msg IGD0008I).
:H4.ARECOVER Parms Transmission
:p.This environment vaults tapes twice daily.  We set up an NDM
transmission of the ARECOVER Parms Dataset approximately 30 minutes
prior to the vault run.  It is sent to the Recovery Site as a GDG PDS
and with a limit of 70.  We then copy to the ARECOVER.PARMS dataset from
the GDGs starting from GDG(0) to GDG(-69) without replacement
With this setup, our recovery has the most
current ARECOVER commands for the daily, weekly, and monthly aggregates.
:h3.HSM Setup
:p.Need the DFSMS/hsm ARCCMDxx member to specify SETSYS
ABARSACTLOGMSGLVL(FULL) to insure all DFDSS messages are written to
the activity log.  SETSYS ABARSACTLOGMSGLVL(FULL) is the default if
not specified.
:p.With ABARS II, the minimum number of tapes needed for an aggregate
increased from 2 to 3 tapes. A DFSMS/hsm patch exists to change the
minimum tapes needed for a aggregate back to 2 tapes.  If this
patch is applied, changes will need to be made to DRxx to not eliminate
the last two datasets in the Aggregate for Audit (they would have been
the instruction dataset and the activity log from ABACKUP).
:h3.REXX EXECS and JCL
:sl.
:li.Copy REXX Execs to Production REXX Library
:li.Allocate 2 Datasets for their use
:sl.
:li.HLQ.DCOLLECT.DATA (RECFM=VB,LRECL=644,DSORG=PS), should need no
more than 750Kb, DFSMS constructs are recorded here, DRBACKUP utility
reads the "AG" record types for the selection dataset name.
:li.HLQ.ARECOVER.PARMS (RECFM=FB,LRECL=80,DSORG=P0), should need no
more than 3750Kb, ABARS ARECOVER commands are recorded here with the
ABACKUP Activity Log Name (contains the date/time stamp) and a list of
datasets included in the aggregate for audit purposes.  This dataset
list is an improvement over mounting tapes and read the control file
of the aggregate to audit.
:esl.
:li.Specify dataset names for the utilities use in the REXX exec DR10.
This exec is called and the result is parsed to supply 'Global
Variables' for the utilities to allocate their datasets.
:ol.The datasets are:
:li.the DCOLLECT dataset - discussed earlier
:li.the ARECOVER PARMS dataset - discussed earlier
:li.the Temporary High Level Qualifier - This is used by various
utilities for allocation of 'temporary' datasets. It would be
appropriate to associate this high-level qualifier with a
management class that deletes after 2 days unreferenced.
These datasets are normally
only a few tracks in size and needed only for a short period of time
after allocation (e.g. ABARPOST will allocate a temp. dataset when
its needed and delete it. This dataset
contains information for the DSN Detail Report)
:li.the ARECOVER LOGS dataset (Allocated by ARECPROC when needed)
:eol.
:li.Copy DR10 to member DR10SAVE in the same library.  This convention
saves the information in DR10 so that new distributions of the code
can overlay DR10 and installation supplied parameters can be reinstated.
:li.Copy DRBACKUP and DRECOVER PROCs to a proclib available to batch
jobs.
:li.Copy DRBACKUP, DRECOVER, ARECPROC, and DRAUDIT to a jcl library
for submission.
:li.COPY DR14AM (Automate/MVS) or DR14NV(NETVIEW) to DR14.  This will
enable the supplied interface to Console Automation.  An example of
Console Automation via NETVIEW is supplied in the appendix of this
document.
:li.Decide if DRBACKUP is to be used in this installation.... If so
existing aggregates will need to have a different selection dataset.
(ALTER the Aggregate in ISMF).
DRBACKUP will use the existing selection dataset as input and it will
re-write the 'new' selection dataset for the aggregate.  DRBACKUP also
restricts the aggregate to use only the first selection dataset (ABARS
allows up to 5).
:esl.
:h2.Program Detail
:p.The naming convention used for execs is as follows.  The Driver
Execs are given a name indicative of their function.  The supporting
execs are DRxyz; where x is a number from 1-7 identifying the Driver
exec they were designed to support, y is the order of sequence that
they are first called by the driver, and z (if used) is a subroutine
used by the DRxy supporting exec.  I tried to generalize and re-use
these execs wherever it made sense.  So DR10 is used by all execs.
DR13 is used twice by DRBACKUP and optionally by DRSCAN and DRSEO.
Inside these execs can be other internal subroutines for their use
exclusively.  For example, WRITEAA is a subroutine in DR15 and its
use is to write the allocate/accompany statements to the ABARS
selection dataset.
:h3.DRBACKUP exec
:ol.Driver exec for DRBACKUP Function. Parameters passed are the
Aggregate Name, Tape Unit, EXECUTE/VERIFY, and the Input Dataset.
Output will be Return Code 16, if a problem is found with execution,
or the return code from ABACKUP.
:li.Suppresses TSO Messages
:li.Calls DR10 to get global parameters
:li.Calls DR11 to parse parameters sent
:li....Quits if problem found
:li.Calls DR12 to get Selection Dataset from Dcollect Data
:li....Quits if problem found
:li.Calls DR13 to copy input dataset to selection dataset
:li....Exits EXEC if problem found
:li.Issues ABACKUP ...Verify command
:li.Calls DR14 to locate Abars Activity Log Name
:li.Calls DR15 to parse log and exclude 'ARCIVE' datasets
:li.Calls DR13 to copy revised input dataset to selection dataset
:li.Issues ABACKUP command with option supplied as parameter
:li.Calls DR16 to clear Aggregate's Selection Dataset
:eol.
:h3.DR10 exec
:ol.Global Variables exec
No parameters are passed to this exec. It's called
from all Driver Execs and returns Global Variables.
:li.Sets strings up as variables to be used by all utilities
:li.Returns variables as result
:eol.
:h3.DR11 exec
:ol.Performs edits on parameters passed to DRBACKUP
:li.Checks to see that all variables are passed
:li....Exits EXEC if problem found
:li.Checks to see that either 'EXECUTE' or 'VERIFY' was requested
:li....Exits EXEC if problem found
:li.Parses out Input dataset Specification
:li.Checks to see if input dataset exists
:li....Exits EXEC if problem found
:li.Returns Input Dataset Name as result, if successful
:eol.
:h3.DR12 exec
:ol.Reads the DCOLLECT Data for Aggregate Structure
Passed the Aggregate Name and the DCOLLLECT.DATA Global Variable.
Logic in the exec gets all selection datasets for the aggregate
but it returns only the first selection dataset.  We'll need APAR
OW01729 to allow the use of more than 1 selection dataset in DRBACKUP.
:li.Allocates DCOLLECT Dataset
:li....Exits EXEC if problem found
:li.Looks for AG record Type and this aggregate's name in the record
:li....Exits EXEC if not found
:li.Loops through Selection Datasets
:li.Constructs the aggregate's first selection dataset name
:li.Returns Selection Dataset Name as result, if successful
:eol.
:h3.DR13 exec
Passed the Aggregate name and the Input and Output Dataset.
Nothing is passed back if no error is detected.
:ol.Copies the Input dataset to the selection (output) dataset
:li.Checks to insure input dataset and output dataset aren't the same
:li....Exits EXEC if they are the same
:li.Insures the selection dataset exists on the system
:li....Exits EXEC if not found
:li.Allocates output, input, and utility datasets
:li.Calls IEBGENER to perform copy
:li.Returns 0
:eol.
:h3.DR14 exec
Passed the Aggregate Name.
:ol.Get the activity log name for the aggregate
:li.Shuts off TSO messages
:li.Creates the variable name saved for us by AUTOMATE/MVS
:li.Issues AUTOMATE GETVAR Command to be returned the logname
:li.Create a fully qualified name out of the Logname Returned
:li.Return with logname as the result
:eol.
:h3.DR15 exec
:ol.Read the log and the input dataset and Create the Revised Input
Passed the Aggregate Name, Selection DSN, and Activity Log DSN
Parsing logic also exists here capable of dealing with multiple
selection datasets.  Changes need to be made here and DR12 to allow
more than one selection dataset to be used.  see DR12.
:li.Shuts off TSO messages
:li.Allocate and read the activity log
:li.Check to Insure Activity Log is from VERIFY Function
:li....Exits EXEC if problem found
:li.Parses for Starting and Ending messages of INC/EXC stmts
:li.Between starting and ending messages, parse for dataset names
:li.Issue LISTCAT command with dataset name
:li.Call DR151 for possible dataset elimination
:li.If not excluded, place DSN on stem variable
.hr left right
:li.Read Selection dataset
:li.Parse it for Allocate/Accompany statements
:li.Place allocate/ accompany statements on stem variables
.hr left right
:li.Allocate a Temporary dataset
:li.Write Include statements to temporary dataset
:li.Write allocate/accompany statements to temporary dataset
:li.Return temporary datasetname
:eol.
:h3.DR16 exec
Passed the Aggregate Name and Selection Dataset Name.
:ol.Prevents ABACKUP from attempting successful execution
:li.Writes comment to dataset as 1 record
:li.close dataset
:eol.
.pa
:h3.ABARPOST exec
:ol.Driver exec for ABARPOST Function
:li.Suppresses TSO Messages
:li.Calls DR10 to get global parameters
:li.Calls DR14 to locate Abars Activity Log Name
:li.Calls DR21 to parse log, copy to SYSOUT, code ARECOVER, and
gather information for DSN Detail report
:li.Calls DR22 to create DSN Detail Report
:eol.
:h3.DR21 exec
:ol.Parses the log for required functions
:li.Allocate report Dataset
:li.Allocate Activity Log
:li....Exits EXEC if problem found
:li.Read log until EOF
:sl.
:li.Write log record to DDNAME LOG
:li.Look for the last message
:li....Set the return code to the Return code in the log
:li.Look for the message with the control dataset information
:li....Save this for ARECOVER Command
:li.Look for the DF/DSS dataset messages
:li....Call DR212 to gather detail dataset information
:li.......Write dsn detail to dsn detail dataset
:esl.
:li.Insure parms dataset is available
:li....Exits EXEC if problem found
:li.Allocate ARECOVER Parms Dataset
:li.Call DR211 to set up ARECOVER command
:li.Write ARECOVER Parms and datasets to ARECOVER PARMS dataset
:li.Return
:eol.
:h3.DR22 exec
:ol.
:li.Allocate the DSN Detail Dataset
:li.Read the DSN Detail Dataset
:li.Write Report to the LOG DDNAME
:li.close datasets
:eol.
.pa
:h3.ARECPROC exec
:ol.Driver exec for ARECPROC Function
:li.Suppresses TSO Messages
:li.Calls DR10 to get global parameters
:li.Calls DR31 to Read ARECOVER Parms Dataset and Issue ARECOVER
:li.Calls DR14 to locate Abars Activity Log Name
:li.Calls DR31 to process the ABARS Activity Log
:eol.
:h3.DR31 exec
:ol.Read, parse, create, and execute ARECOVER Command
:li.Determine the release of DFHSM at recovery site
:li.Allocates ARECOVER Parms Dataset
:li....Exits EXEC if problem found
:li.Reads and Parses ARECOVER Parms
:li.Create and Execute HSEND ARECOVER command
:li.Return
:eol.
:h3.DR32 exec
:ol.Reads the arecover log and tracks the arecover executions
:li.Checks to see of the ARECOVER Activity Log exists
:li....Exits EXEC if problem found
:li.Reads through the log for the ending return code
:li.Allocates the Log of Logs dataset if not found
:li.Writes 1 record to LOL dataset with DISP=MOD
:li.Return
:eol.
.pa
:h3.DRAUDIT exec
:ol.Reads aggregate names as input and creates Audit Summary Report
:li.Open input INCNTL and output AGSUMM ddnames
:li.Read first record from INCNTL
:li.Do While not EOF
:li....Count the aggregates we are processing
:li....Check if we need a new report heading
:li....Call ARAUDIT with the aggregate name
:li....Parse result for the number of datasets and the number of errors
:li....Write line to the summary report
:li....Count the datasets and errors
:li.write total aggregates, datasets and errors
:eol.
:h3.ARAUDIT exec
:ol.Call DR10 to set up global parameters
:li.Call DR41 to create Audit Detail Report
:li.Return with the number of datasets and errors
:eol.
:h3.DR41 exec
:ol.
:li.Read the Log of Logs dataset
:li.Do While not EOF
:li....If Aggregate name equals the Aggregate name in the LOL
:li....tally the match
:li....save the Activity Log DSN
:li.Check to see we had matches
:li....If not, Provide message 'all Datasets in error'
:li....Otherwise, List the Activity Log Dataset Name
:li.Provide the count of log names as the £ of times ARECOVER Executed
:li.Allocate the ARECOVER Parms Dataset
:li.Skip over the first 6 records
:li.Read until EOF
:li....Parse out DSN of dataset in the aggregate
:li....Issue LISTDSI command against the dataset
:li....If Error
:li.......Write Detail line with Dataset Name and Nature of the error
:li.If no errors
:li....Write Detail Line indicating no datasets with errors
:li.Return with the number of datasets and errors
:eol.
.pa
:h3.DRSCAN EXEC
:ol.Driver exec for DRSCAN Function
:li.Suppresses TSO Messages
:li.Calls DR10 to get global parameters
:li.Checks to see if the Input Parameter was sent
:li....If so, Checks to see if the Input dataset exists
:li.......If not, Exits with error message
:li.Checks to see if the Input Parameter was sent
:li....Parses the input dsn out of the Input Parameter
:li....Calls DR12 to get Selection Dataset from Dcollect Data
:li....Quits if problem found
:li.Checks to see if the Input Parameter was sent
:li....Calls DR13 to copy input dataset to selection dataset
:li......Exits EXEC if problem found
:li.Issues ABACKUP ...Verify command
:li.Calls DR14 to locate Abars Activity Log Name
:li.Calls DR51 to parse log and List DSN information
:li.Checks to see if the Input Parameter was sent
:li....Calls DR16 to clear Aggregate's Selection Dataset
:eol.
:h3.DR51 exec
:ol.Read the log and list the dataset locations/characteristics
:li.Shuts off TSO messages
:li.Allocate and read the activity log
:li.Check to Insure Activity Log is from VERIFY Function
:li....Exits EXEC if problem found
:li.Parses for Starting and Ending messages of INC/EXC stmts
:li.Between starting and ending messages, parse for dataset names
:li.Issue LISTCAT command with dataset name
:li.Call DR151 to see if dataset is ARCIVE'd
:li.If not ARCIVE'd, call INTDSN to interrogate the DSN Info
:li.Write DSN and Info to SYSOUT
:eol.
.pa
:h3.DRSEO EXEC
:p.Function is the same as DRSCAN but Datasets listed are Exception
(exclusion) candidates only.
.fo off
:h2.Ancillary JCL
:h3.DCOLLECT JCL
//IB996RVP JOB (800000),'HEGGEN IDCAMS  X6678',CLASS=R,MSGCLASS=U,
//         NOTIFY=IB996RV
//*
//STEP1 EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  DCOLLECT OUTDATASET(IB996RV.DCOLLECT.DATA) SMSDATA(ACTIVE) REPLACE
/*
:h3.HSMPATCH JCL
//IB996RVT JOB (800000),'HEGGEN IDCAMS  X6678',CLASS=R,MSGCLASS=U,
//         NOTIFY=IB996RV
//IKJACCT EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSHELP  DD  DSN=SYS1.HELP,DISP=SHR
//SYSPRINT DD  DUMMY
//SYSTSPRT DD  SYSOUT=*
//SYSTERM  DD  SYSOUT=*
//SYSIN    DD  DUMMY,DCB=BLKSIZE=80
//SYSTSIN  DD  *
    HSEND PATCH .ABRCB.+81 BITS(.....1..)
//*
:h2.Error Messages
:h3.DRBACKUP
:ol.
:LI.DRBACKUP: AGGREGATE VERIFY FAILED, CHECK REPORT IN logdsn
:p.Issued ABACKUP ...VERIFY command and received a non-zero return
code.  Not much sense in continuing with execution, we know an EXECUTE
will not work.  Message is generated by DRBACKUP exec.
:LI.DRBACKUP: 4 REQUIRED PARAMETERS NOT SUPPLIED
    DRBACKUP: need Aggregate Name, Tape Unit, Execute/Verify,
         and Input DSN (fully qualified)
:p.Checked all four parameters to DRBACKUP for a null string and found
at least one null string.  A space between parameters is required.
A missing parameter to DRBACKUP will result in appearing that the
last parameter is missing, two missing parameters will appear as
the last two parameters are missing (and so on).  The execs have a
positional orientation to their parameters.  Message is generated by
DR11 exec.
:LI.DRBACKUP: execver  MUST SPECIFY VERIFY OR EXECUTE'
:p.Checked the third parameter for correct spelling and it didn't
pass.  Correct the spelling and resubmit.  Message is generated by
DR11 exec.
:LI.DRBACKUP: VALID INPUT DATASET REQUIRED
:p.Checked the Catalog and Volume for the existence of the input
dataset and it failed.  Insure the input dataset is spelled correctly
and exists on the system the command executes.  Message is generated by
DR11 exec.
:li.DRBACKUP: cannot allocate dcolldsn .  RC=rc
:p.Attempted Allocation of DCOLLECT dataset and it failed.  Value of
dcolldsn is what is specified in DR10.  RC is the return code from a
TSO Allocate command.  Insure that the DCOLLECT JCL is using the same
dataset for output that DR10 specifies.  Message is generated by
DR12 exec.
:li.DRBACKUP: Error reading dcolldsn .  RC=rc
:p.Attempted first read of the DCOLLECT dataset and had a problem. Value
of dcolldsn is what is specified in DR10.  RC is the return code from a
REXX EXECIO command.  Insure that the DCOLLECT JCL is using the same
dataset for output that DR10 specifies.  Insure the DCOLLECT JCL has
executed (possible EOF on first read, if RC=2).  Message is generated
by DR12 exec.
:li.DRBACKUP: iagname AGGREGATE NOT FOUND IN DCOLLECT DSN dcoldsn
:p.Read to end-of-file on DCOLLECT dataset and didn't match the
aggregate name on the DRBACKUP command to any in the DCOLLECT dataset.
Possible problems are: DCOLLECT dataset records are not correct or
current;  Aggregate Name is incorrect.  Insure the DCOLLECT JCL has
executed. Message is generated by DR12 exec.
:li.DRBACKUP: Selection Dataset and input dataset are the same
    DRBACKUP: Selection Dataset : oputctl
    DRBACKUP:     Input Dataset : idsn
:p.The dataset specified on the Input Parameter to DRBACKUP matches
the Selection Dataset defined for the aggregate.  This error prevents
the execs from over-writing the input dataset.   It is required that
these datasets have different names, The EXECS will read from the INPUT
DSN and write to the Selection DSN. Message is generated by DR13 exec.
:li.DRBACKUP: Selection Dataset odsn ...msdsn
:p.The exec has looked at the Catalog and Volume for the Selection
DSN odsn, and found a problem.  The Nature of the problem is specified
in the msdsn variable.  Message is generated by DR13 exec.
:LI.DRBACKUP: Allocation of Selection Dataset Unsuccessful oputctl
:p.The exec has attempted allocation of the Selection Dataset (oputctl)
with exclusive control many times.  Possible that someone or something
else has it allocated.  Check the SYSLOG for messages concerning
dataset contention.  Message is generated by DR13 exec.
:li.DRBACKUP: Error allocating log dsn actlog .  RC=rc
Possible that someone or something has it allocated or that the
Automate/MVS Script has problems. Check the SYSLOG for messages
concerning this dataset
Message is generated by Readlog subroutine of the DR15 exec.
:li.DRBACKUP: Log not from ABACKUP VERIFY
    DRBACKUP: Check Automated Operations, wrong log actlog
:p.The exec is reading the ABACKUP ...Verify Activity Log and found
messages that could only be produced by a Execute Activity Log.
We should have the verify log available to us, (the command was issued
DRBACKUP prior to executing this exec), if not then the Automate/MVS
scripts may have been pulled from the system.
Message is generated by Readlog subroutine of the DR15 exec.
:li.DRBACKUP: Problem with agdsn why
:p.The is the message produced when an DMS ARCIVE dataset is
encountered.  This is not an error.  Variable agdsn is the name of
a dataset in the aggregate, and why is a string returned from the
DR151 subroutine exec.
Message is generated by Readlog subroutine of the DR15 exec.
writeinc:
:li.DRBACKUP: Candidate Datasets for backup: smc1
:p.This message displays a count of the datasets included as a result
of the INPUT dataset used for a ABACKUP ...Verify.   SMC1 is
the total datasets prior to looking for ARCIVE'd datasets
Message is generated by Writeinc subroutine of the DR15 exec.
:li.DRBACKUP: Arcive'd Datasets Excluded: smc2
:p.This message displays a count of the datasets excluded because they
were archived (SMC2).
Message is generated by Writeinc subroutine of the DR15 exec.
:li.DRBACKUP: Datasets Included: smc3
:p.This message displays a count of the datasets included after the
archived datasets are removed (SMC3).  SMC1 = SMC2 + SMC3
Message is generated by Writeinc subroutine of the DR15 exec.
:li.DRBACKUP: All datasets in aggregate have been eliminated
:p.This message stops DRBACKUP because the aggregate has no datasets
to be included for backup (ABARS must have at least one include stmt).
Message is generated by Writeinc subroutine of the DR15 exec.
:li.DRBACKUP: Reset of selection dataset unsuccessful output
:p.Output is the name of the selection dataset.  This message indicates
that it couldn't allocate the selection with exclusive control to clear
it.  Clearing the selection dataset prevents the ABACKUP command from
accidentally using an old include list generated by DRBACKUP. Check the
SYSLOG for messages concerning another user/job having the selection
dataset allocated.
Message is generated by the DR16 exec.
:eol.
:h3.ABARPOST
:ol.
:li.ABARPOST: no ABACKUP logs available for aggregate iagname
:p.IAGNAME is the aggregate name supplied as a parameter to the command.
The ABACKUP activity log name is null.  Possible that this command was
issued prior to DRBACKUP execution.
Message is generated by the DR21 exec.
:li.ABARPOST:' arparms ...mdsn
    ARECOVER parms not written for iagname
:p.IAGNAME is the aggregate name supplied as a parameter to the command.
ARPARMS is the ARECOVER Parms dataset specified in DR10.  MDSN is text
describing the problem after checking the Catalog and Volume for the
dataset.
Message is generated by the DR21 exec.
:eol.
:h3.ARECPROC
:ol.
:li.ARECPROC: no ARECOVER Parms Dataset for aggregate iagname
:p.IAGNAME is the aggregate name supplied as a parameter to the command.
ARPARMS is the ARECOVER Parms dataset specified in DR10.  MDSN is text
describing the problem after checking the Catalog and Volume for the
dataset.
Message is generated by the DR31 exec.
:li.ARECPROC: Check Syslog; Contention for parms DSN ardsn
:p.The exec has attempted allocation of the PARMS Dataset (ardsn)
with shared control many times.  Possible that someone or something
else has it allocated.  Check the SYSLOG for messages concerning
dataset contention.  Message is generated by DR31 exec.
:li.ARECPROC: no ARECOVER logs available for aggregate iagname
:p.IAGNAME is the aggregate name supplied as a parameter to the command.
The ARECOVER activity log name is null.  Possible that the ARC6030I
message wasn't trapped at the recovery site.  Insure that the
Automate/MVS script is active/working.
Message is generated by the DR32 exec.
:li.ARECPROC: Mod to Log of Logs Dataset unsuccessful loglog
:p.The exec has attempted allocation of the LOG-of-Logs Dataset (loglog)
with Disp=mod many times.  Possible that someone or something
else has it allocated.  Check the SYSLOG for messages concerning
dataset contention.
Message is generated by the DR32 exec.
:eol
:h3.DRAUDIT
:ol
:LI.DRAUDIT: Allocation of LOGS dataset unsuccessful' loglog
:p.The exec has attempted allocation of the LOG-of-Logs Dataset (loglog)
with Disp=mod many times.  Possible that someone or something
else has it allocated.  Check the SYSLOG for messages concerning
dataset contention.
Message is generated by the DR41 Exec (called by araudit, called by
:li.DRAUDIT: No ARECOVER Parms Dataset for Aggregate iagname
:p.IAGNAME is the input aggregate name.
Check the ARECOVER Parms dataset in DR10 to insure it's not null.
Message is generated by the DR41 Exec (called by ARAUDIT  called by
DRAUDIT).
:eol.
:h3.DRSCAN:
:ol.
:LI.DRSCAN: INPUT DATASET input ...MSDSN
:p.Checked the Catalog and Volume for the existence of the input
dataset and it failed.  Insure the input dataset is spelled correctly
and exists on the system the command executes.  Message is generated by
DRSCAN exec.
:LI.DRSCAN: AGGREGATE VERIFY FAILED, CHECK REPORT IN logdsn
:p.Issued ABACKUP ...VERIFY command and received a non-zero return
code.  Not much sense in continuing with execution, we know the Activity
log has no datasets in it.  Message is generated by DRSCAN exec.
:LI.DRSCAN: ERROR ALLOCATING LOG DSN actlog .  RC=rc
:p.The exec has attempted allocation of the Log Dataset (actlog).
Possible that someone or something has it allocated or that the
Automate/MVS Script has problems. Check the SYSLOG for messages
concerning this dataset
Message is generated by DR61 exec.
:LI.DRSCAN: LOG NOT FROM ABACKUP VERIFY' LOGDSN
    DRSCAN: CHECK AUTOMATED OPERATIONS, WRONG LOG actlog
:p.The exec is reading the ABACKUP ...Verify Activity Log and found
messages that could only be produced by a Execute Activity Log.
We should have the verify log available to us, (the command was issued
by DRSCAN prior to executing this exec), if not then the Automate/MVS
scripts may have been pulled from the system.
Message is generated by DR51 exec.
:eol
:h3.DRSEO:
:ol
:LI.DRSEO: INPUT DATASET input ...msdsn
:p.Checked the Catalog and Volume for the existence of the input
dataset and it failed.  Insure the input dataset is spelled correctly
and exists on the system the command executes.  Message is generated by
DRSEO exec.
:LI.DRSEO: AGGREGATE VERIFY FAILED, CHECK REPORT IN logdsn
:p.Issued ABACKUP ...VERIFY command and received a non-zero return
code.  Not much sense in continuing with execution, we know the Activity
log has no datasets in it.  Message is generated by DRSEO exec.
:LI.DRSEO: ERROR ALLOCATING LOG DSN actlog .  RC=rc
:p.The exec has attempted allocation of the Log Dataset (actlog).
Possible that someone or something has it allocated or that the
Automate/MVS Script has problems. Check the SYSLOG for messages
concerning this dataset
Message is generated by DR61 exec.
:LI.DRSEO: LOG NOT FROM ABACKUP VERIFY LOGDSN
    DRSEO: CHECK AUTOMATED OPERATIONS, WRONG LOG actlog
:p.The exec is reading the ABACKUP ...Verify Activity Log and found
messages that could only be produced by a Execute Activity Log.
We should have the verify log available to us, (the command was issued
by DRSEO prior to executing this exec), if not then the Automate
scripts may have been pulled from the system.
Message is generated by DR61 exec.
:eol
:appendix
:h1.Automation Processing for ARC6030I Message
:p.The following describes sample automation for processing for matching
the Aggregate name to the Log Dataset using NETVIEW Automation.
.sp 1
:p. Provided by Donald Foster, IBM ISSC San Jose
:h2.Installation
:p.Installing this function requires changes to:
:ol
:li.The MPF list (possibly)
:li.The NETVIEW Message Automation Table
:li.The NETVIEW Clist data set.
:eol
:p.In addition, a data set needs to be pre-allocated to contain
the results of the automation processing.
:h3.MFP list
:p.Check your MFP list to be sure that message ARC6030I is available
for automation.
:h3.NETVIEW Message Table
:p.Add an entry similar to the following
to the appropriate section of your
message table.  The ARC6030I message is NOT a multi-line message
and is processed several times before all the data is collected.
Therefore, the message table
entry must ROUTE the processing to a SPECIFIC
autotask, as data is accumulated in a Global Task Variable.
.fo off
.sp
   IF MSGID='ARC6030I'
   THEN EXEC(CMD('ABARMSG ') ROUTE(ONE AUTO1))
   BEEP(N) DISPLAY(Y) HCYLOG(N) HOLD(N) SYSLOG(N) NETLOG(Y);
.sp
.fo on
:h3.CLIST Installation
:p.The CLIST named ABARMSG must be installed in a dataset listed
in the DSICLD DD card in the NETVIEW Proc.
If you change the name of the CLIST, the Message Automation Table
entry must change also.
:h3.Data Set Allocation
:p.Allocate a data set to contain the results of automation processing.
By default this dataset has the name 'NETVIEW.ABARDATA'.  To change
the name of the dataset, edit
the CLIST ABARMSG and change the OUTDSN variable.  The name of the
started task that NETVIEW runs under, must have RACF update access
to this dataset.  You will need to issue the SETROPTS RACF command,
after you issue the appropriate PERMIT commands,
if you do not want to completely restart NETVIEW.
This data set must be a pre-allocated PDS.
Also update DR14NV in the ABARS REXX Utilities, then copy this member
to DR14 for the utility's use.
:h2.ABARMSG Clist
:xmp
/**********************************************************************/
/* Description:  This NETVIEW Clist processes message ARC6030I.       */
/*               It allows the Aggregate Group name to be matched     */
/*               to the associate Log data set.                   àXRC*/
/*                                                                    */
/* Processing:  When an ARC6030I message is received for backup       */
/*              ('AGGREGATE GROUP' in text of message), a member      */
/*              is created in the output dataset containing the       */
/*              dataset name of the ACTIVITY LOG.  The name of        */
/*              the member is the aggregate group name specified      */
/*              in the message text.                                  */
/*                                                                    */
/*              When an ARC6030I message is received for recovery     */
/*              ('CONTROL FILE' in text of message), a member         */
/*              is created in the output dataset containing the       */
/*              dataset name of the ACTIVITY LOG.  The name of        */
/*              the member is the aggregate group name (as found      */
/*              in the data set name (3rd qualifier from the end).    */
/*                                                                    */
/* Input:                                                             */
/*       Backup Message:                                              */
/*         ARC6030I ACTIVITY LOG FOR AGGREGATE GROUP DAVETEST WILL BE */
/*         ARC6030I (CONT.) ROUTED TO                                 */
/*         ARC6030I (CONT.) HSMACT.HD.ABACKUP.DAVETEST.D95082.T113550 */
/*                                                                    */
/*       Recovery Message:                                            */
/*         ARC6030I ACTIVITY LOG FOR CONTROL FILE DATA SET            */
/*         ARC6030I (CONT.) DR.C.C01V0001 WILL BE ROUTED TO           */
/*         ARC6030I (CONT.) HSMACT.HD.ARECOVER.DAVETEST.D95083.T135552*/
/*                                                                    */
/* Output:                                                            */
/*       The data set where the members are created is specified      */
/*       in the variable OUTDSN.  Change this for your installation.  */
/*                                                                    */
/*       An entry is made into the NETVIEW Log indicating what        */
/*       processing has taken place.                              àXRC*/
/*                                                                    */
/**********************************************************************/
/* Created by Donald H. Foster 4/17/95                                */
/**********************************************************************/
/*                                                                    */
/* Process the message.  The ARC6030I message is not a multiline      */
/* message.  Therefore as the parts of the message are received,      */
/* they are kept is a global task variable until the last part of     */
/* the message is received.                                       àZRC*/
/*                                                                    */
/*====================================================================*/
/**********************************************************************/
/* Modify this variable to contain the fully qualified DSN for        */
/*        your installation.                                          */
/**********************************************************************/
OUTDSN = 'NETVIEW.ABARDATA'         /* PDS to create members in       */
/**********************************************************************/
/*====================================================================*/
Parse Source . . CLISTname .        /*    get name of CLIST as called */
Address NETVASIS                    /* support upper and lower case   */
'GETMLINE INARG 1 '                 /* get the message                */
Src = RC
If INARG = '' ! Src^=0 Then ,
   Do;
     'MSG LOG' CLISTname 'error process input data. GETMLINE RC='Src,
         ' or message was null: -'Inarg'-'
     End
  Else
     Call MsgTest                   /* go process message if 6030 msg */
Exit
/**********************************************************************/
/*                                                                    */
/*  If this is a 6030 message process it, else note error in log      */
/*                                                                    */
/**********************************************************************/
MsgTest:
Parse upper var INARG MsgID MsgText
If MsgID = 'ARC6030I' Then Call ParseMsg
  Else
    'MSG LOG' CLISTname 'received unexpected MSGID:' MsgID
Return
/**********************************************************************/
/*                                                                    */
/*  Piece the message together.                                       */
/*                                                                    */
/* -A new message is detected if first word is 'ACTIVITY'             */
/* -The last part of the message is detected if the data set name     */
/*  is found in the message i.e. there is a character string with     */
/*  more that 14 characters following the 'ROUTED TO' string.         */
/*  The last part of the dsn is always Dxxxxx.Txxxxxx (14 chars)      */
/*                                                                    */
/**********************************************************************/
ParseMsg:
Parse var MsgText TestWord MsgRest
If TestWord = 'ACTIVITY' Then SavedMsg = TestWord  /* save beginning  */
  Else Call GetSavedMsg                       /* go get prior parts   */
SavedMsg = SavedMsg!!' '!!MsgRest             /* reconstruct whole msg*/
Parse var SavedMsg . 'ROUTED TO' Logfile    /* DSN follows 'ROUTED TO'*/
Parse Var Logfile Logfile .                 /* isolate DSN            */
If Length(Logfile) > 14 Then Call MsgDone   /* have complete message  */
  Else
    Call SaveMsg                            /* go save this much      */
Return
/**********************************************************************/
/*                                                                    */
/* Message reconstruction is complete.  So save the DSN in            */
/* the appropriate member.                                            */
/*  Backup: member name follows 'GROUP'  .... DAVETEST                */
/*         ARC6030I ACTIVITY LOG FOR AGGREGATE GROUP DAVETEST WILL BE */
/*  Recovery: member name is 3rs from last DSN qualifier ... DAVETEST */
/*         ARC6030I (CONT.) HSMACT.HD.ARECOVER.DAVETEST.D95083.T135552*/
/*                                                                    */
/**********************************************************************/
MsgDone:
Parse Var SavedMsg . 'LOG FOR' type .
If type = 'AGGREGATE' Then
   Parse Var SavedMsg . 'GROUP' MemberName .
 Else
   Do; LogWord = Translate(Logfile,' ','.') /* remove periods from DSN*/
       WordCnt = Words(LogWord)             /* get count of qualifiers*/
       MemberName = Word(LogWord,WordCnt-2) /* yes, its this one      */
       End
"ALLOC F(ABARDATA) DA('"OUTDSN"("MemberName")') SHR FREE"
Src = Rc
If Src ^= 0 Then
   Do;
     'MSG LOG' CLISTname 'ALLOCATE ERROR for 'OUTDSN' RC='Src
     End
OutRec.0 = 1
OutRec.1 = Logfile
ADDRESS MVS 'EXECIO 1 DISKW ABARDATA (FINIS STEM OUTREC.'
Src = RC
If Src ^= 0 Then
   Do;
     'MSG LOG' CLISTname 'EXECIO error RC='Src' while processing' OUTDSN
     End
'MSG LOG' CLISTname 'DSN:'OUTDSN 'Member:'MemberName' contains:'LogFile
Return
/**********************************************************************/
/*                                                                    */
/* Get the previous message text from Task Global: ABAR6030           */
/*                                                                    */
/**********************************************************************/
GetSavedMsg:
'GLOBALV GETT ABAR6030'            /* get previously saved test       */
Src = RC
If Src ^= 0 Then
   Do;
     'MSG LOG' CLISTname 'GLOBALV GETT error RC='Src' while processing',
     Inarg
     End
SavedMsg = Value('ABAR6030')
Return
/**********************************************************************/
/*                                                                    */
/* Save the text so far in Task Global: ABAR6030                      */
/*                                                                    */
/**********************************************************************/
SaveMsg:
ABAR6030 = SavedMsg
'GLOBALV PUTT' 'ABAR6030'          /* get previously saved test       */
Src = RC
If Src ^= 0 Then
  Do;
    'MSG LOG' CLISTname 'GLOBALV PUTT error RC='Src' while processing',
    Inarg
    End
Return
:exmp
:backm.
:egdoc.
$$
//HSMSTEP8 EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD DSN=HSM.ABARUTIL.DOCS,
//            DISP=OLD
//SYSIN    DD DATA,DLM='$$'
./ ADD NAME=ABARUG
.cm  gdoc sec='unclassified'
:GDOC SEC='(C)COPYRIGHT INTERNATIONAL BUSINESS MACHINES CORPORATION 1994
.cm  qprint dcf options 'twopass cont prof(dsmprof3'
:frontm.
:titlep.
:title.ABARS REXX Utilities
:title.Users Guide
:address.
:aline.D. L. Heggen
:aline.214 280-5432
:aline.Tie 542-5432
:eaddress.
:address.
:aline.IBM Corporation
:aline.Department 1MJD
:aline.1605 LBJ Freeway
:aline.Dallas, Texas  75234
:eaddress.
:date.February 7th, 1994
:etitlep.
.ll 4i
:toc.
.ll 6i
:body
:h2.Introduction
:p.ABARS stands for Aggregate Backup and Recovery System.  It is an
extension of IBM's DFHSM product and allows for the backup (and in the
case of a disaster) the recovery of an application's data.  It creates
a transportable logical (as opposed to physical) copy of the
application's data.  The use of logical copies allows for the data
to be restored on a different device type than it originated.  This
simplifies recovery, because the Recovery Site need only supply the
required storage capacity for the application, not a specific
configuration.
:p.ABARS provides an excellent transport vehicle for datasets to a
Disaster/Recovery Site.  All data in an Abars Aggregate is self
describing and can be restored to any supported configuration.  ABARS
will create copies of DASD, Tape, and Migrated Datasets for critical
Business Application Recovery. An ABARS Aggregate definition is a
collection of datasets comprising a Critical Business Function.  The
Customers that use ABARS for Disaster/Recovery typically define an
aggregate to a set of data that can be processed in 30-45 minutes.
If the business application's datasets exceed this definition, then
multiple Aggregates are defined for the application.  This can lead to
more Aggregates than can be effectively tracked manually.  These
utilities extend ABARS capability by providing the ability to track
and control the execution of hundreds of ABARS aggregates defined for
critical Business Application Recovery.
:h3.Function
:p.These Utilities will:
:ol.
:li.Aid the development of an Aggregate definition
:li.Extend Dataset filter selection capability beyond Dataset Name
:li.Associate the activity log to an ABARS Execution
:li.Provide Report of dataset detail for an ABARS aggregate
:li.Create the ARECOVER command as a result of the ABACKUP Process
for transmission to recovery site
:li.Allow for Submission, Tracking and Reporting of Aggregates by a
Job Scheduling Product (i.e. OPC/ESA, CA7, etc.)
:li.Restore selected datasets from a successful ABACKUP execution
:li.Restore an Aggregate with the user specifying only the aggregate
name.
:li.Allow Aggregate Restoration to be independent of ABARS Release at
Recovery site
:li.Audit this process at any point in time to assess degree of
completeness.
:eol.
:h3 Design
:p.These ABARS Utilities are designed to:
:ol.
:li.Simplify the ABACKUP/ARECOVER process for Applications and Storage
Administrators
:li.Use external interfaces only
:li.Allow for easy maintenance/modification
:eol.
.sp
:p.These ABARS Utilities use:
:ol.
:li.an Automated Operations type product (NETVIEW, Automate, etc. )
:li.REXX Execs
:li.Assembler TSO Command (optional, for Wait function)
:li.DFHSM or DFSMShsm is required
:eol.
:h3.The Command Functions
:ol.
:li.DRSCAN (and/or DRSEO) to list location of datasets
contained in an Aggregate
:li.DRBACKUP to eliminate 'ARCIVE' data (Optional)
:li.ABARPOST to copy the activity log to sysout, code the ARECOVER
command, and create the DSN DETAIL Report
:li.ARECPROC to process the arecover commands from ABARPOST and
copy the ARECOVER Activity Log to Sysout
:li.DRAUDIT to audit the aggregate(s) progress at the recovery site
:li.ARECSNGL for selected dataset restore from ABACKUP tapes
:eol.
.pa
:h2.JCL, Commands,and Parameters
.fo off
:h3.DRSCAN JCL
//jobname  JOB .................
//DRSCAN PROC
//AUDIT    EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSEXEC   DD  DSN=IB996RV.ABARS.EXECS,DISP=SHR
//SYSHELP   DD  DSN=SYS1.HELP,DISP=SHR
//SYSPRINT  DD  DUMMY
//SYSTSPRT  DD  SYSOUT=*
//SYSTERM   DD  SYSOUT=*
//SYSIN     DD  DUMMY,DCB=BLKSIZE=80
//SYSTSIN   DD  DUMMY
//DRSCAN   PEND
//STEP1  EXEC DRSCAN
//DRSCAN.SYSTSIN DD  *
    %DRSCAN  aggname UNIT(tape) EXECUTE +
               INPUT('input dsn')
    %DRSEO  aggname UNIT(tape) EXECUTE
.fo on
:h3.DRSCAN/DRSEO Discussion
:p.Syntactically, the DRSCAN command is the same as DRBACKUP or ABACKUP
commands (that is; the INPUT parameter is optional).  This is designed
to minimize the changes needed as a new aggregate flows from design
to production usage.  As shown, multiple executions of the
command may be used in a single step.  Also in the example, the first
execution is for a aggregate that will use DRBACKUP, the second is for
an aggregate that will use ABACKUP.
We execute the front end of a DRBACKUP (if the
input dataset is supplied). and issue an ABACKUP VERIFY command.
The ABACKUP Activity Log is then allocated and each dataset is
interrogated for its location.  This information is used to create
the report.  The difference between DRSCAN and DRSEO is the DRSCAN
lists the location of all datasets in the aggregate, DRSEO lists
what we think may be candidates for exclusion from the aggregate.
DRSEO is a variation of DRSCAN to provide a list of datasets that
are likely candidates for exclusion.
.pa
:h3.DRBACKUP JCL
.fo off
//jobname  JOB .................
//aggname EXEC DRBACKUP
//ABACKUP.SYSTSIN DD  *
    %DRBACKUP  aggname UNIT(tape) EXECUTE +
               INPUT('input dsn')
//ABARPOST.SYSTSIN DD  *
    %ABARPOST  aggname UNIT(tape)
.sp
//jobname  JOB .................
//aggname EXEC DRBACKUP
//ABACKUP.SYSTSIN DD  *
    HSEND WAIT ABACKUP aggname UNIT(tape) EXECUTE
//ABARPOST.SYSTSIN DD  *
    %ABARPOST  aggname UNIT(tape)
:h3.DRBACKUP JCL PROC
//DRBACKUP PROC
//******   ABARS ABACKUP PRE PROCESSOR IF %DRBACKUP IS USED:
//******    1) ELIMINATES 'ARCIVE' DATASETS FROM AGGREGATE
//******    2) SET UP ENVIRONMENT FOR POST PROCESSING
//ABACKUP  EXEC PGM=IKJEFT01,DYNAMNBR=20,TIME=1440
//SYSPROC   DD  DSN=SYS3.FISCO.ISPCLIB,DISP=SHR
//SYSEXEC   DD  DSN=DSM.D.REXX.EXECS,DISP=SHR
//SYSHELP   DD  DSN=SYS1.HELP,DISP=SHR
//SYSPRINT  DD  DUMMY
//SYSTSPRT  DD  SYSOUT=*
//SYSTERM   DD  SYSOUT=*
//SYSIN     DD  DUMMY,DCB=BLKSIZE=80
//SYSTSIN   DD  DUMMY
//******   ABARS POST PROCESSOR
//******    1) WRITES ACTIVITY LOG TO DDNAME 'LOG'
//******       IF ABACKUP IS GOOD.....
//******    2) WRITES ARECOVER STATEMENTS TO ARECOVER PARMS DATASET
//******    3) CREATES DATASET ATTRIBUTE DETAIL REPORT
//ABARPOST EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSPROC   DD  DSN=SYS3.FISCO.ISPCLIB,DISP=SHR
//SYSEXEC   DD  DSN=DSM.D.REXX.EXECS,DISP=SHR
//SYSHELP   DD  DSN=SYS1.HELP,DISP=SHR
//SYSPRINT  DD  DUMMY
//SYSTSPRT  DD  SYSOUT=*
//LOG       DD  SYSOUT=*,RECFM=FBA,LRECL=133
//SYSTERM   DD  SYSOUT=*
//SYSIN     DD  DUMMY,DCB=BLKSIZE=80
//SYSTSIN   DD  DUMMY
//******   ABENDBK - ISSUE U0100 ABEND CODE IF ABACKUP  STEP ISSUES
//******   A RETURN CODE NOT EQUAL TO 0
//ABENDBK EXEC PGM=GPABEND,COND=(0,EQ,ABACKUP)
//SYSOUT  DD SYSOUT=*
.fo on
:h3.DRBACKUP Discussion
:p.The DRBACKUP JCL Proc supports both ABACKUP commands and DRBACKUP
commands.  Although only one command is allowed to be present per
execution. The ABACKUP command should already be familiar.  The only
additional parameter needed for DRBACKUP is an Input File (fully
qualified).  This is needed to copy and modify the dataset list
the selection statements generate.  Moving an aggregate to or from
DRBACKUP command requires a change in the aggregate structure.  Do
not change between ABACKUP and DRBACKUP commands
without getting the Aggregate altered by Storage Administration.
:p.The ABARPOST command needs both the Aggregate Name and Tape Unit
specified as parameters.  The necessity of the tape unit is because
APARPOST will code the ARECOVER command for use at the recovery site.
We didn't want to make DRBACKUP command a requirement (that if the
aggregate didn't have ARCIVE data or needed the ARCIVE data,
ABACKUP command is appropriate to use), and without access to the
tape unit specified to the ABACKUP command, it needs to be specified for
the ABARPOST command.
:p.The order of the steps provided in the DRBACKUP JCL Procedure is
important.  The ABACKUP step (if no problems are found) will end
with the return code of a ABACKUP command.  If this is non-zero
the ABENDBK step will flag the aggregate backup as a problem to
the Job Scheduling Product.
ABARPOST executes before ABENDBK to at least dump the ABACKUP
Activity Log to SYSOUT.  If the return code from the ABACKUP step is
zero, ABARPOST will also create the ARECOVER command and provide the DSN
Detail Report.
.pa
.fo off
:h3.DRECOVER JCL
//jobname  JOB .................
//aggname EXEC DRECOVER
//DRECOVER.SYSTSIN DD  *
    %ARECPROC aggname
:h3.DRECOVER JCL PROC
//DRECOVER PROC
//******   ABARS ARECOVER
//ARECOVER EXEC PGM=IKJEFT01,DYNAMNBR=20,TIME=1440
//SYSPROC   DD  DSN=SYS3.FISCO.ISPCLIB,DISP=SHR
//SYSEXEC   DD  DSN=DSM.D.REXX.EXECS,DISP=SHR
//SYSHELP   DD  DSN=SYS1.HELP,DISP=SHR
//SYSPRINT  DD  DUMMY
//SYSTSPRT  DD  SYSOUT=*
//LOG       DD  SYSOUT=*
//SYSTERM   DD  SYSOUT=*
//SYSIN     DD  DUMMY,DCB=BLKSIZE=80
//SYSTSIN   DD  DUMMY
//******   ABENDBK - ISSUE U0100 ABEND CODE IF ARECOVER STEP ISSUES
//******   A RETURN CODE NOT EQUAL TO 0
//ABENDBK EXEC PGM=GPABEND,COND=(0,EQ,ARECOVER)
.fo on
:h3.DRECOVER Discussion
:p.The only input parameter needed for the ARECPROC command is the
aggregate name.  This is used as the member name when accessing the
ARECOVER.PARMS dataset.  In this dataset the ARECOVER command is coded
as a result of a successful DRBACKUP execution.  This member is read,
and the environment is checked in the Recovery Site for the release
of DFHSM available.  The ARECOVER command is issued by the ARECPROC
command (syntactically   correct for the release of DFHSM found at the
recovery site).
:p.A 'fall back' position is available, by executing
the TSO Terminal Monitor Program in Batch and pointing the SYSTSIN
DD Card to the ARECOVER.PARMS dataset with the aggregate name specified
as the member name.
:p.Worse Case, the ABARS tape(s) could be read by DFDSS for Dataset
restoration outside the context of ABARS.
.pa
:h3.DRAUDIT JCL
.fo off
//jobname  JOB .................
//AUDIT PROC
//DRAUDIT  EXEC PGM=IKJEFT01,DYNAMNBR=20,PARM='%DRAUDIT'
//SYSEXEC   DD  DSN=IB996RV.ABARS.EXECS,DISP=SHR
//SYSHELP   DD  DSN=SYS1.HELP,DISP=SHR
//SYSPRINT  DD  DUMMY
//SYSTSPRT  DD  SYSOUT=*
//SYSTERM   DD  SYSOUT=*
//AGDET     DD  SYSOUT=*,RECFM=FBA,LRECL=133
//AGSUMM    DD  SYSOUT=*,RECFM=FBA,LRECL=133
//SYSIN     DD  DUMMY,DCB=BLKSIZE=80
//SYSTSIN   DD  DUMMY
//AUDIT    PEND
//STEP1  EXEC AUDIT
//AUDIT.INCNTL DD  *
aggname 1
        .
        .
        .
aggname n
.fo on
:h3.DRAUDIT Discussion
:p.Input is a list of aggregates following the INCNTL DD card.  ARECPROC
keeps track of the ARECOVER commands/Activity Logs for each aggregate
through a dataset it allocates and uses (DISP=NEW the first time,
DISP=MOD for each subsequent execution). The Audit can be run any time
and creates two different reports, a detail and a summary.
:p.The Detail Report lists an aggregate, the logs ARECOVER has created
and (by counting the number of log datasets) the number of times
ARECOVER has executed for this aggregate.  Following this information
is a report of the datasets in the aggregate with errors.  Errors are
detected via the REXX LISTDSI function.  That is to say, we can test
existence of the dataset from the aggregate at the recovery site,
but until applications start and access the data, the content
of the dataset can't be tested.
:p.The Summary Report lists an aggregate name, the number of datasets,
and the number of errors found. The Last Line lists the total number
of aggregates (requested for this audit), the total number of datasets,
and the total number of errors.  The quick scan for this report starts
at the bottom right edge (total errors).  If zero, look no further.
If not zero, scan the right column on the report.  This will locate
the aggregates with problems.  If the number of datasets and the
number of errors are approximately the same, assume the ARECOVER for
the aggregate hasn't completed yet.
.pa
:h3.ARECSNGL JCL
.fo off
//jobname  JOB .................
//aggname EXEC DRECOVER
//DRECOVER.SYSTSIN DD  *
    %ARECSNGL aggname
//DRECOVER.INDSN   DD  *
dsn1
dsn*
dsnN
.fo on
:h3.ARECSNGL Discussion
:p.The only input parameter needed for the ARECSNGL command is the
aggregate name.  This is used as the member name when accessing the
ARECOVER.PARMS dataset.  In this dataset the ARECOVER command is coded
as a result of a successful DRBACKUP execution.  This member is read,
and the environment is checked for the release of DFHSM available.
Additionally, a list of datasets in the aggregate that need selective
restore are supplied via the INDSN JCL DD Card. Input is expected to
one line per dataset.  Also a simplistic filter capability has been
enabled, use of an "*" on the right of the datasetname will allow a
match on all preceding characters.
:p.Up to 2 copies of the aggregate are supported, with the first copy
expected to go offsite and the second copy expected to remain onsite.
Multiple versions can be supported, if the member in the ARECOVER.PARMS
dataset is replaced with a valid member from a previous ABACKUP
execution.  Otherwise the most recent ABACKUP execution's version of the
dataset will be restored.
.pa
:h2.Error Messages
:h3.DRBACKUP
:ol.
:LI.DRBACKUP: AGGREGATE VERIFY FAILED, CHECK REPORT IN logdsn
:p.Issued ABACKUP ...VERIFY command and received a non-zero return
code.  Not much sense in continuing with execution, we know an EXECUTE
will not work.
:LI.DRBACKUP: 4 REQUIRED PARAMETERS NOT SUPPLIED
    DRBACKUP: need Aggregate Name, Tape Unit, Execute/Verify,
         and Input DSN (fully qualified)
:p.Checked all four parameters to DRBACKUP for a null string and found
at least one null string.  A space between parameters is required.
A missing parameter to DRBACKUP will result in appearing that the
last parameter is missing, two missing parameters will appear as
the last two parameters are missing (and so on).  The execs have a
positional orientation to their parameters.
:LI.'DRBACKUP:' EXECVER ' MUST SPECIFY VERIFY OR EXECUTE'
:p.Checked the third parameter for correct spelling and it didn't
pass.  Correct the spelling and resubmit.
:LI.DRBACKUP: VALID INPUT DATASET REQUIRED
:p.Checked the Catalog and Volume for the existence of the input
dataset and it failed.  Insure the input dataset is spelled correctly
and exists on the system the command executes.
:li.DRBACKUP: Error reading dcolldsn .  RC=rc
:p.Attempted first read of the DCOLLECT dataset and had a problem. Value
of dcolldsn is what is specified in DR10.  RC is the return code from a
REXX EXECIO command.  Insure that the DCOLLECT JCL is using the same
dataset for output that DR10 specifies.  Insure the DCOLLECT JCL has
executed (possible EOF on first read, if RC=2).  Probable problem with
the utility support files, contact your support.
:li.DRBACKUP: iagname AGGREGATE NOT FOUND IN DCOLLECT DSN dcoldsn
:p.Read to end-of-file on DCOLLECT dataset and didn't match the
aggregate name on the DRBACKUP command to any in the DCOLLECT dataset.
Possible problems are: DCOLLECT dataset records are not correct or
current;  Aggregate Name is incorrect.  Insure the DCOLLECT JCL has
executed or that the Aggregate Name is spelled correctly.
:li.DRBACKUP: Selection Dataset and input dataset are the same
    DRBACKUP: Selection Dataset : oputctl
    DRBACKUP:     Input Dataset : idsn
:p.The dataset specified on the Input Parameter to DRBACKUP matches
the Selection Dataset defined for the aggregate.  This error prevents
the execs from over-writing the input dataset.   It is required that
these datasets have different names, The EXECS will read from the INPUT
DSN and write to the Selection DSN.
:li.DRBACKUP: Selection Dataset odsn ...msdsn
:p.The exec has looked at the Catalog and Volume for the Selection
DSN odsn, and found a problem.  The Nature of the problem is specified
in the msdsn variable.
:LI.DRBACKUP: Allocation of Selection Dataset Unsuccessful oputctl
:p.The exec has attempted allocation of the Selection Dataset (oputctl)
with exclusive control many times.  Possible that someone or something
else has it allocated.  Check the SYSLOG for messages concerning
dataset contention.
:li.DRBACKUP: Log not from ABACKUP VERIFY
    DRBACKUP: Check Automated Operations, wrong log actlog
:p.The exec is reading the ABACKUP ...Verify Activity Log and found
messages that could only be produced by a Execute Activity Log.
We should have the verify log available to us, (the command was issued
by DRBACKUP prior to executing this exec), if not then the Console
Automation scripts have been pulled from the system.
:li.DRBACKUP: Problem with agdsn why
:p.The is the message produced when an DMS ARCIVE dataset is
encountered.  This is not an error.  Variable agdsn is the name of
a dataset in the aggregate, and why is a string returned from the
DR151 subroutine exec.
:li.'DRBACKUP: Candidate Datasets for backup:' smc1
:p.This message displays a count of the datasets included as a result
of the INPUT dataset used for a ABACKUP ...Verify.   SMC1 is
the total datasets prior to looking for ARCIVE'd datasets
:li."DRBACKUP: Arcive'd Datasets Excluded:" smc2
:p.This message displays a count of the datasets excluded because they
were archived (SMC2).
:li."DRBACKUP: Datasets Included:" smc3
:p.This message displays a count of the datasets included after the
archived datasets are removed (SMC3).  SMC1 = SMC2 + SMC3
:li.DRBACKUP: All datasets in aggregate have been eliminated
:p.This message stops DRBACKUP because the aggregate has no datasets
to be included for backup (ABARS must have at least one include stmt).
Use DRSCAN with this aggregate to insure that there will be datasets
to be backed up.
:eol.
:h3.ABARPOST
:ol.
:li.ABARPOST: no ABACKUP logs available for aggregate iagname
:p.IAGNAME is the aggregate name supplied as a parameter to the command.
The ABACKUP activity log name is null.  Possible that this command was
issued prior to DRBACKUP execution.
:eol.
:h3.ARECPROC
:ol.
:li.ARECPROC: no ARECOVER Parms Dataset for aggregate iagname
:p.IAGNAME is the aggregate name supplied as a parameter to the command.
ARPARMS is the ARECOVER Parms dataset specified in DR10.  MDSN is text
describing the problem after checking the Catalog and Volume for the
dataset.
:li.ARECPROC: Check Syslog; Contention for parms DSN ardsn
:p.The exec has attempted allocation of the PARMS Dataset (ardsn)
with shared control many times.  Possible that someone or something
else has it allocated.  Check the SYSLOG for messages concerning
dataset contention.
:li.ARECPROC: no ARECOVER logs available for aggregate iagname
:p.IAGNAME is the aggregate name supplied as a parameter to the command.
The ARECOVER activity log name is null.  Possible that the ARC60360I
message wasn't trapped at the recovery site.  Insure that the Console
Automation script is active/working.
:li.ARECPROC: Mod to Log of Logs Dataset unsuccessful loglog
:p.The exec has attempted allocation of the LOG-of-Logs Dataset (loglog)
with Disp=mod many times.  Possible that someone or something
else has it allocated.  Check the SYSLOG for messages concerning
dataset contention.
:eol
:h3.DRAUDIT
:ol
:LI.DRAUDIT: Allocation of LOGS dataset unsuccessful' loglog
:p.The exec has attempted allocation of the LOG-of-Logs Dataset (loglog)
with Disp=shr many times.  Possible that someone or something
else has it allocated.  Check the SYSLOG for messages concerning
dataset contention.
:li.DRAUDIT: No ARECOVER Parms Dataset for Aggregate iagname
:p.IAGNAME is the input aggregate name.
Check the ARECOVER Parms dataset in DR10 to insure it's not null.
:eol.
:h3.DRSCAN:
:ol.
:LI.DRSCAN: INPUT DATASET input ...MSDSN
:p.Checked the Catalog and Volume for the existence of the input
dataset and it failed.  Insure the input dataset is spelled correctly
and exists on the system the command executes.
:LI.DRSCAN: AGGREGATE VERIFY FAILED, CHECK REPORT IN logdsn
:p.Issued ABACKUP ...VERIFY command and received a non-zero return
code.  Not much sense in continuing with execution, we know the Activity
log has no datasets in it. .
:LI.DRSCAN: ERROR ALLOCATING LOG DSN actlog .  RC=rc
:p.The exec has attempted allocation of the Log Dataset (actlog).
Possible that someone or something has it allocated or that the Console
Automation script has problems. Check the SYSLOG for messages
concerning this dataset
:LI.DRSCAN: LOG NOT FROM ABACKUP VERIFY' LOGDSN
    DRSCAN: CHECK AUTOMATED OPERATIONS, WRONG LOG actlog
:p.The exec is reading the ABACKUP ...Verify Activity Log and found
messages that could only be produced by a Execute Activity Log.
We should have the verify log available to us, (the command was issued
by DRSCAN prior to executing this exec), if not then the Console
Automation scripts may have been pulled from the system.
:eol
:h3.DRSEO:
:ol
:LI.DRSEO: INPUT DATASET input ...msdsn
:p.Checked the Catalog and Volume for the existence of the input
dataset and it failed.  Insure the input dataset is spelled correctly
and exists on the system the command executes.
:LI.DRSEO: AGGREGATE VERIFY FAILED, CHECK REPORT IN logdsn
:p.Issued ABACKUP ...VERIFY command and received a non-zero return
code.  Not much sense in continuing with execution, we know the Activity
log has no datasets in it.  Message is generated by DRSEO exec.
:LI.DRSEO: ERROR ALLOCATING LOG DSN actlog .  RC=rc
:p.The exec has attempted allocation of the Log Dataset (actlog).
Possible that someone or something has it allocated or that the Console
Automation Script has problems. Check the SYSLOG for messages
concerning this dataset
:LI.DRSEO: LOG NOT FROM ABACKUP VERIFY LOGDSN
    DRSEO: CHECK AUTOMATED OPERATIONS, WRONG LOG actlog
:p.The exec is reading the ABACKUP ...Verify Activity Log and found
messages that could only be produced by a Execute Activity Log.
We should have the verify log available to us, (the command was issued
by DRSEO prior to executing this exec), if not then the Console
Automation scripts may have been pulled from the system.
:eol
:backm.
:egdoc.
 $$

./ ADD NAME=ARRCMDQ0
 AUTH SYS004                 /* ESTABLISH THE USER ID THAT CAN*/ -
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */
 AUTH SYS005                 /* ESTABLISH THE USER ID THAT CAN*/ -
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */
 AUTH SYSJRI                 /* ESTABLISH THE USER ID THAT CAN*/ -
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */
 AUTH PROPRI                 /* ESTABLISH THE USER ID THAT CAN*/ -
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */
 AUTH STCPRC                 /* ESTABLISH THE USER ID THAT CAN*/ -
  DATABASEAUTHORITY(USER)    /* ISSUE AUTH COMMANDS.          */
 SETSYS JES2                 /* JOB ENTRY SUBSYSTEM ID.       */ -
   NOCONVERSION              /* DO NOT REBLOCK DATA SETS      */
                             /* DURING RECALL OR RECOVERY.    */
 SETSYS -
   EXITON(TV)                /* ARCTVEXT ACTIVE               */
 SETSYS -
   NOREQUEST                 /* DO NOT ASK OPERATOR           */
                             /* PERMISSION TO START AUTOMATIC */
                             /* FUNCTIONS.                    */
 SETSYS -
   NODEBUG                   /* MOVE OR DELETE DATA WHEN      */ -
                             /* PERFORMING AUTO FUNCTIONS.    */ -
   NOEMERGENCY               /* ALLOW ALL DFHSM FUNCTIONS.    */
 SETSYS -
   NOSWAP                    /* RUN DFHSM NONSWAPPABLE.       */
 SETSYS -
   USERDATASETSERIALIZATION  /* DFHSM USES ITS OWN            */
                             /* FACILITIES FOR DATA SET       */
                             /* SERIALIZATION.                */
/* SETSYS - */
/*    DATAMOVER(DFDSS)     */
                             /* FACILITIES FOR MOVING         */
                             /* DATA.                         */
 SETSYS -
   OPTIMUMDASDBLOCKING       /* DFHSM USES ITS DEFINED        */
                             /* OPTIMUM BLOCK SIZE WHEN       */
                             /* MOVING DATA TO OWNED DASD.    */
 /*                                                           */
 /*************************************************************/
 /*                      DFHSM EXITS                          */
 /*************************************************************/
 /*                     NONE ACTIVATED                        */
 /*************************************************************/
 /*     DFHSM LOGGING, JOURNALING, AND REPORTING OPTIONS      */
 /*************************************************************/
 /*                                                           */
 SETSYS -
   JOURNAL(RECOVERY)         /* WRITE CDS CHANGES TO JOURNAL  */
                             /* IMMEDIATELY.                  */
 SETSYS -
   SMF(240)                  /* WRITE DSR'S & VSR'S TO SMF    */
                             /* RECORD TYPE 240; WRITE FSR'S  */
                             /* TO TYPE 241.                  */
                             /* CLASS A.                      */
 SETSYS -
   SYS1DUMP                  /* WRITE DFHSM DUMPS TO SYSTEM   */
                             /* DUMP DATA SET.                */
 SETSYS SYSOUT(X 1)

 SETSYS -
   ACTLOGMSGLVL(FULL)           /*   ACTIVITY LOGGING         */ -
   ACTLOGTYPE(SYSOUT)      /* WRITTEN TO SYSOUT CLASS AS    */
                             /* SPECIFIED BY SYSOUT PARM      */
 /*                                                           */
 /*************************************************************/
 /*                  DFHSM MONITOR OPTIONS                    */
 /*************************************************************/
 /*                                                           */
                             /* SPECIFY WHICH INFORMATIONAL   */
                             /* MESSAGES TO PRINT AT THE      */
                             /* OPERATOR CONSOLE.             */
 SETSYS MONITOR(MIGRATIONCONTROLDATASET(90))

 SETSYS MONITOR -
        (STARTUP             /* LIST STARTUP PARAMETERS.      */ -
         NOVOLUME)           /* DO NOT SHOW DATA SET LEVEL    */
                             /* MESSAGES ON SYSTEM CONSOLE.   */
 SETSYS MONITOR -
        (NOSPACE             /* DO NOT PRINT SPACE USAGE MSGS.*/ -
       JOURNAL(70 1) MCDS(90))  /* WARN WHEN JOURNAL IS 90% FULL */
                             /* CONSIDERING 1 EXTENT IS       */
                             /* AVAILABLE.                    */
 /*                                                           */
 /*************************************************************/
 /*        DFHSM COMMON SERVICE AREA LIMITING OPTIONS         */
 /*************************************************************/
 /*                                                           */
 SETSYS -
            CSALIMITS        /* LIMIT DFHSM USAGE OF CSA.     */ -
             (MWE(4))        /* MAXIMUM OF 4 NOWAIT TYPE MWES */
                             /* PER ADDRESS SPACE TO BE KEPT  */
                             /* ON CSA QUEUE.                 */
 SETSYS CSALIMITS -
              (MAXIMUM(200)  /* NEVER USE MORE THAN 100K.     */ -
               ACTIVE(90)    /* LIMIT NOWAIT FUNCTIONS TO 90%.*/ -
               INACTIVE(30)) /* ALLOW 30% DURING INACTIVITY.  */
 /*                                                           */
 /*************************************************************/
 /*           DFHSM TAPE HANDLING SPECIFICATIONS              */
 /*************************************************************/
 /*                                                           */
 SETSYS -
   DEFERMOUNT                /* DEFER MOUNT OF TAPE UNTIL     */
                             /* OPEN PROCESSING.              */
 SETSYS -
   TAPEHARDWARECOMPACT       /* USE IMPROVED DATA RECORDING   */
                             /* CAPABILITY WHEN 3480X IS      */
                             /* THE OUTPUT DEVICE.            */
 SETSYS -
   PARTIALTAPE(              /* DO NOT MARK AS FULL ANY TAPES */ -
    BACKUP(MARKFULL)         /* THAT ARE ONLY PARTLY FULL     */ -
    MIGRATION(MARKFULL))
 SETSYS TAPEUTILIZATION(UNITTYPE(3490) PERCENTFULL(100))
 SETSYS TAPEUTILIZATION(LIBRARYBACKUP PERCENTFULL(100))
 SETSYS TAPEUTILIZATION(LIBRARYMIGRATION PERCENTFULL(100))
 SETSYS TAPESPANSIZE(4000)
 SETSYS -
   INPUTTAPEALLOCATION(NOWAIT)   /* DON'T WAIT ON TAPE        */ -
   OUTPUTTAPEALLOCATION(NOWAIT)  /* ALLOCATION FOR INPUT,     */ -
   RECYCLETAPEALLOCATION(NOWAIT) /* OUTPUT, OR RECYCLE.       */
 SETSYS -
   SELECTVOLUME(             /* VOLUME SELECTION AT TAPE END  */ -
   BACKUP(SCRATCH)          /* OF VOLUME COMES FROM THE      */ -
   MIGRATION(SCRATCH)       /* DFHSM-OWNED POOL OF TAPE VOLS.*/ -
   DUMP(SCRATCH))
 SETSYS -
   RECYCLEPERCENT(40)        /* INFORM STORAGE ADMINISTRATOR  */
                             /* THAT A BACKUP TAPE SHOULD BE  */
                             /* RECYCLED WHEN THE AMOUNT OF   */
                             /* VALID DATA ON THE TAPE FALLS  */
                             /* BELOW 25%.                    */
 SETSYS -
   RECYCLEINPUTDEALLOCFREQUENCY(BACKUP(1) MIGRATION(1))
 SETSYS -
   TAPEDELETION(             /* RETURN TAPES THAT NO LONGER   */ -
    BACKUP(SCRATCH)          /* CONTAIN VALID DATA TO THE     */ -
    MIGRATION(SCRATCH)       /* DFHSM-OWNED POOL.             */ -
    DUMP(SCRATCH))
 SETSYS -
   USERUNITTABLE(VTSS)        /*NO ESOTERIC TAPE UNITS        */
                             /* DEFINED TO DFHSM. CTAPE1      */
 SETSYS -
   MOUNTWAITTIME(15)         /* WAIT 10 MINUTES BEFORE        */
                             /* ISSUING ADDITIONAL MESSAGES   */
                             /* TO OPERATORS FOR TAPE MOUNTS. */
 SETSYS -
   UNITNAME(VTSS)            /* START OUT WITH 3480X AS UNIT  */
                             /* TO BE USED FOR SCRATCH TAPES  */
                             /* DURING BACKUP OR DUMP.        */
 SETSYS -
   TAPEINPUTPROMPT(MIGRATIONTAPES(NO))  /* TAPE OPER MSGS    */
 SETSYS -
   TAPEINPUTPROMPT(BACKUPTAPES(NO))     /* TAPE OPER MSGS    */
 SETSYS -
   TAPEINPUTPROMPT(DUMPTAPES(NO))       /* TAPE OPER MSGS    */
 /*                                                           */
 /*************************************************************/
 /*         DFHSM CONTROL DATA SET BACKUP PARAMETERS          */
 /*************************************************************/
 /*                                                           */
 SETSYS CDSVERSIONBACKUP(    /* MAINTAIN FOUR BACKUP VERSIONS */ -
        BACKUPCOPIES(4)      /* OF THE CONTROL DATA SETS ON   */ -
  BACKUPDEVICECATEGORY(DASD)  /* TAPE OF UNIT TYPE CTAPE1     */ -
  MCDSBACKUPDSN(SYSTQ.MCDS.BACKUP) -
  BCDSBACKUPDSN(SYSTQ.BCDS.BACKUP) -
  OCDSBACKUPDSN(SYSTQ.OCDS.BACKUP) -
  JRNLBACKUPDSN(SYSTQ.JRNL.BACKUP))
 /*                                                           */
 /*************************************************************/
 /*               DFHSM RACF SPECIFICATIONS                   */
 /*************************************************************/
 /*                                                           */
 SETSYS -
   NORACFIND                 /* DO NOT PUT RACF-INDICATION    */
                             /* ON BACKUP AND MIGRATION       */
                             /* COPIES OF DATA SETS.          */
 SETSYS -
   TAPESECURITY(EXPIRATION)  /* USE RACF TO PROVIDE TAPE      */
                             /* SECURITY.                     */
 SETSYS -
   NOERASEONSCRATCH          /* DON'T ALLOW ERASE-ON-SCRATCH  */
                             /* ON ANY DFHSM BACKUP VERSIONS  */
                             /* AND MIGRATION COPIES.         */
 SETSYS -
   PROFILEBACKUP             /* BACKUP DISCRETE RACF PROFILES */
 /*                                                           */
 /*************************************************************/
 /*                DFHSM COMPACTION OPTIONS                   */
 /*************************************************************/
 /*                                                           */
 SETSYS -
   COMPACT(DASDMIGRATE)      /* USE COMPACTION FOR            */
                             /* MIGRATION TO DASD.            */
 SETSYS -
     COMPACTPERCENT(20)      /* DON'T COMPACT DATA UNLESS     */
                             /* HISTORICAL DATA SHOWS SAVINGS */
                             /* OF AT LEAST 20%.              */
 SETSYS -
   OBJECTNAMES(OBJ,OBJECT,LOAD,LOADLIB,LOADMODS,LINKLIB) -
   SOURCENAMES(ASM,COBOL,FORT,PLI,SOURCE,SRC,SRCLIB,SRCE,CNTL,JCL)
 /*                                                           */
 /*************************************************************/
 /*   DFHSM PATCH ADD 05.09.2011 FOR ZOS 1.12                 */
 /*   DFHSM PATCH SUPPRESS 07.11.11 APRES PTF                 */
 /*************************************************************/
 /* PATCH .MGCB.+ED BITS(......0.)                            */
 /*                                                           */
 /*************************************************************/
 /*               DFHSM MIGRATION PARAMETERS                  */
 /*************************************************************/
 /*                                                           */
 SETSYS -
   TAPEMIGRATION(ML2TAPE)    /* NO TAPE MIGRATION  CTAPE1     */
 SETSYS -
   MIGUNITNAME(VTSS)     /* NO TAPE MIGRATION             */
 SETSYS -
   ML2RECYCLEPERCENT(40) /* NO TAPE MIGRATION             */
 SETSYS -
   TAPEMAXRECALLTASKS(10) /* PASSE DE 5 A 10 09.09.19 PHR  */
 /*                         MAXRECALLTASKS EST A 12       */
 SETSYS -
   PRIMARYSPMGMTSTART         /*SPECIFY PROCESSING WINDOW FOR */ -
   (0556 0756)                /*PRIMARY SPACE MANAGEMENT      */
 /*(1001 1059)*************************************************/
 /*(0701 0945)*************************************************/
 DEFINE -
   PRIMARYSPMGMTCYCLE        /* RUN PRIMARY SPACE MGMT        */ -
   (YYYYYYY                  /* DIM. A COMPTER 09.10.2017 PHR */ -
   CYCLESTARTDATE(1990/06/11))
 SETSYS -
     DAYS(1)                 /* DATA SET MUST BE UNREFERENCED */
                             /* FOR 10 DAYS BEFORE IT WILL BE */
                             /* MIGRATED.                     */
 SETSYS -
     MIGRATEPREFIX(HSMSCQ)
                             /* PROVIDE THE HIGH-LEVEL        */
                             /* QUALIFIER OF THE NAMES OF     */
                             /* MIGRATED DATA SETS.           */
 SETSYS -
   NOINTERVALMIGRATION       /* PERFORM MIGRATION THROUGHOUT  */
                             /* THE DAY.                      */
 SETSYS -
   SECONDARYSPMGMTSTART(0544  /*SPECIFY PROCESSING WINDOW FOR */ -
     0555)
 /*(0450 0459)*************************************************/
 /*(0950 0959)*************************************************/
 /*(0650 0659)*************************************************/
                              /*SECONDARY SPACE MANAGEMENT    */
 DEFINE -
   SECONDARYSPMGMTCYCLE      /* RUN SECONDARY SPACE MANAGEMENT*/ -
   (YYYYYYY                  /* DIM. A COMPTER 09.10.2017 PHR */ -
   CYCLESTARTDATE(1990/06/11)) /* STARTING JUNE 11, 1990.       */
 SETSYS -
   MIGRATIONCLEANUPDAYS(14 7) /* KEEP MCDS STATISTICS RECORDS */
                             /* FOR RECALLED DATA SETS FOR    */
                             /* 14 DAYS, AND VOLUME OR DAILY  */
                             /* STATISTICS RECORDS FOR 7 DAYS.*/
 SETSYS -
     MIGRATIONLEVEL1DAYS(14) /* DATA SET MIGRATED TO ML2      */
                             /* AFTER 45 DAYS UNREFERENCED.   */
 SETSYS -
     MAXEXTENTS(5)           /* DATA SET EXTENT REDUCTION     */
                             /* OCCURS WHEN EXTENTS REACH 10. */
 SETSYS -
     MAXRECALLTASKS(12)      /* MAXIMUM OF X RECALL TASKS     */
                             /* ALLOWED AT ONE TIME.          */
 SETSYS -
   RECALL(PRIVATEVOLUME(LIKE)) /* AUTO RECALL PLACES          */
                             /* UNPOOLED DATA SETS ON PRIMARY */
                             /* VOLUME MARKED PUBLIC, STORAGE,*/
                             /* OR PRIVATE, THAT HAS LIKE     */
                             /* CHARACTERISTICS.              */
 SETSYS -
   SCRATCHFREQUENCY(7)       /* KEEP LIST DATA SETS 7 DAYS.   */ -
   EXPIREDDATASETS(SCRATCH)  /* DON'T SCRATCH EXPIRED DATA   */
                             /* SETS.                         */
 SETSYS -
   NOSMALLDATASETPACKING     /* DON'T DO SMALL D.S. PACKING.  */
 SETSYS -
   MAXMIGRATIONTASKS(9)      /* MAXIMUM OF THREE AUTOMATIC    */
                             /* VOLUME MIGRATION TASKS        */
                             /* TO BE PREFORMED CONCURRENTLY. */
 /*                                                           */
 /*************************************************************/
 /*                 DFHSM BACKUP PARAMETERS                   */
 /*************************************************************/
 /*                                                           */
 DEFINE BACKUP(YYYYYYN       /* BACKUP CYCLE OF ONE DAY.      */ -
   CYCLESTARTDATE(1990/06/11)) /* RUN BACKUP EVERY DAY TO A     */
                             /* SINGLE BACKUP VOLUME,         */
                             /* STARTING MONDAY,              */
                             /* JUNE 11, 1990.                */
 SETSYS -
   BACKUP(TAPE(VTSS))        /* ACTIVATE BACKUP AND DUMP      */
 SETSYS -
   AUTOBACKUPSTART(0500 0800 0930)
                             /* PROVIDE TIME TO START AUTO    */
                             /* BACKUP, LATE START TIME,      */
                             /* AND QUIESCE TIME.  AUTOBACKUP */
                             /* DISABLED UNTIL TIMES SPECIFIED*/
 SETSYS -
   BACKUPPREFIX(HSMSCQB)
                             /* PROVIDE THE HIGH-LEVEL        */
                             /* QUALIFIER OF THE NAMES OF     */
                             /* BACKUP DATA SETS.             */
 SETSYS -
   VERSIONS(1)               /* KEEP ONE VERSION OF BACKED-UP */ -
   FREQUENCY(1)              /* DATA SET.                     */
 SETSYS -
   MAXBACKUPTASKS(05)        /* MAX OF 3 BACKUP TASKS AT ONCE */ -
   NOSKIPABPRIMARY           /* BACK UP ALL PRIMARY VOLUMES   */
                             /* THAT HAVE AUTO BACKUP         */
 SETSYS SPILL(TAPE(VTSS))    /* ATTRIBUTE.                    */
                             /* DATA SETS FROM FULL DAILY     */
                             /* DASD VOLUMES TO SPILL VOLUMES.*/
 /*                                                           */
 /*                                                           */
 SETSYS RECYCLEOUTPUT(BACKUP(VTSS) MIGRATION(VTSS))
 /*                                                           */
 SETSYS TAPEMIGRATION(ML2TAPE(TAPE(VTSS)))
 /*                                                           */
 /*                                                           */
 SETSYS -
   INCREMENTALBACKUP(CHANGEDONLY)
 /*INCREMENTALBACKUP(ORIGINAL)    MAKE ORIGINAL BACKUP COPIES */
                             /* OF DATA SETS DESPITE SETTING  */
                             /* OF CHANGE BIT.                */
 /*                                                           */
 /*************************************************************/
 /*           DFHSM FULL VOLUME DUMP PARAMETERS               */
 /*************************************************************/
 /*                                                           */
 DEFINE -
   DUMPCYCLE(NNNNNNY         /* 7-DAY DUMP CYCLE WITH DUMP    */ -
    CYCLESTARTDATE(1990/06/11)) /* DONE ONLY ON SEVENTH DAY,    */
                             /* STARTING ON MONDAY, JUNE 11,  */
                             /* 1990, SO DUMPS CAN OCCUR ON   */
                             /* SUNDAY.                       */
 DEFINE DUMPCLASS(WEEKLY  DAY(7) RETPD(30) AUTOREUSE NORESET -
   DATASETRESTORE VTOCCOPIES(5))
 DEFINE DUMPCLASS(WEEKLY2  DAY(7) RETPD(40) AUTOREUSE NORESET -
   DATASETRESTORE VTOCCOPIES(7))
                             /* DEFINE A DUMP CLASS NAMED     */
                             /* SUNDAY THAT WILL BE AUTO      */
                             /* DUMPED ON THE SEVENTH DAY OF  */
                             /* OF THE CYCLE.  EACH DUMP COPY */
                             /* IS HELD FOR 27 DAYS, AND      */
                             /* THE TAPE IS REUSED WHEN       */
                             /* SCRATCHED. RESET NO DATA SET  */
                             /* CHANGE BITS AND ALLOW TSO     */
                             /* USERS TO RESTORE DATA SETS    */
                             /* FROM DUMP TAPE. AT MOST, KEEP */
                             /* FOUR DUMP VTOC COPY DATA SETS */
                             /* FOR A VOLUME.                 */
/* FINE DUMPCLASS(QUARTERS FREQUENCY(90) RETPD(356) PHR       */
 DEFINE DUMPCLASS(QUARTERS FREQUENCY(90) RETPD(300) -
   NOAUTOREUSE NODATASETRESTORE NORESET -
   DISPOSITION('OFF-SITE') VTOCCOPIES(0))
                             /* DEFINE A DUMP CLASS NAMED     */
                             /* QUARTERS THAT WILL BE AUTO    */
                             /* DUMPED EVERY THREE MONTHS AND */
                             /* HELD FOR ONE WEEK LESS THAN   */
                             /* A YEAR. USE ONLY FOR FULL     */
                             /* RESTORES. HOLD THE TAPE       */
                             /* OFF-SITE. KEEP NO VTOC COPIES */
                             /* FOR THIS CLASS.               */
 SETSYS -
   AUTODUMPSTART(1755 2000 2200)
                             /* PROVIDE TIME TO START AUTO    */
                             /* DUMP, LATE START TIME,        */
                             /* AND QUIESCE TIME.  AUTO DUMP  */
                             /* DISABLED UNTIL TIMES SPECIFIED*/
 SETSYS -
   DUMPIO(3,2)               /* BUFFER 5 TRACKS WHEN DUMPING, */
                             /* 2 TRACKS DURING DATA MOVEMENT */
 SETSYS -
   MAXDUMPTASKS(3)           /* ALLOW MAXIMUM OF 3 DUMP TASKS */
                             /* AT ONE TIME.                  */
 ADDVOL HSMQ01 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)
 /*                                                           */

./ ADD NAME=ARRCMDR$
 AUTH SYS004                 /* ESTABLISH THE USER ID THAT CAN*/ -      00010000
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00020000
 AUTH SYS005                 /* ESTABLISH THE USER ID THAT CAN*/ -      00030000
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00040000
 AUTH SYSJRI                 /* ESTABLISH THE USER ID THAT CAN*/ -      00050000
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00060000
 AUTH PROPRI                 /* ESTABLISH THE USER ID THAT CAN*/ -      00070000
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.          */        00080000
 AUTH STCPRC                 /* ESTABLISH THE USER ID THAT CAN*/ -      00090000
  DATABASEAUTHORITY(USER)    /* ISSUE AUTH COMMANDS.          */        00100000
 SETSYS JES2                 /* JOB ENTRY SUBSYSTEM ID.       */ -      00110000
   NOCONVERSION              /* DO NOT REBLOCK DATA SETS      */        00120000
                             /* DURING RECALL OR RECOVERY.    */        00130000
 SETSYS -                                                               00140000
   EXITON(TV)                /* ARCTVEXT ACTIVE               */        00150000
 SETSYS -                                                               00160000
   NOREQUEST                 /* DO NOT ASK OPERATOR           */        00170000
                             /* PERMISSION TO START AUTOMATIC */        00180000
                             /* FUNCTIONS.                    */        00190000
 SETSYS -                                                               00200000
   NODEBUG                   /* MOVE OR DELETE DATA WHEN      */ -      00210000
                             /* PERFORMING AUTO FUNCTIONS.    */ -      00220000
   NOEMERGENCY               /* ALLOW ALL DFHSM FUNCTIONS.    */        00230000
 SETSYS -                                                               00240000
   NOSWAP                    /* RUN DFHSM NONSWAPPABLE.       */        00250000
 SETSYS -                                                               00260000
   USERDATASETSERIALIZATION  /* DFHSM USES ITS OWN            */        00270000
                             /* FACILITIES FOR DATA SET       */        00280000
                             /* SERIALIZATION.                */        00290000
/* SETSYS - */                                                          00300000
/*    DATAMOVER(DFDSS)     */                                           00310000
                             /* FACILITIES FOR MOVING         */        00320000
                             /* DATA.                         */        00330000
 SETSYS -                                                               00340000
   OPTIMUMDASDBLOCKING       /* DFHSM USES ITS DEFINED        */        00350000
                             /* OPTIMUM BLOCK SIZE WHEN       */        00360000
                             /* MOVING DATA TO OWNED DASD.    */        00370000
 /*                                                           */        00380000
 /*************************************************************/        00390000
 /*                      DFHSM EXITS                          */        00400000
 /*************************************************************/        00410000
 /*                     NONE ACTIVATED                        */        00420000
 /*************************************************************/        00430000
 /*     DFHSM LOGGING, JOURNALING, AND REPORTING OPTIONS      */        00440000
 /*************************************************************/        00450000
 /*                                                           */        00460000
 SETSYS -                                                               00470000
   JOURNAL(RECOVERY)         /* WRITE CDS CHANGES TO JOURNAL  */        00480000
                             /* IMMEDIATELY.                  */        00490000
 SETSYS -                                                               00500000
   SMF(240)                  /* WRITE DSR'S & VSR'S TO SMF    */        00510000
                             /* RECORD TYPE 240; WRITE FSR'S  */        00520000
                             /* TO TYPE 241.                  */        00530000
                             /* CLASS A.                      */        00540000
 SETSYS -                                                               00550000
   SYS1DUMP                  /* WRITE DFHSM DUMPS TO SYSTEM   */        00560000
                             /* DUMP DATA SET.                */        00570000
 SETSYS SYSOUT(X 1)                                                     00580000
                                                                        00590000
 SETSYS -                                                               00600000
   ACTLOGMSGLVL(FULL)           /*   ACTIVITY LOGGING         */ -      00610000
   ACTLOGTYPE(SYSOUT)      /* WRITTEN TO SYSOUT CLASS AS    */          00620000
                             /* SPECIFIED BY SYSOUT PARM      */        00630000
 /*                                                           */        00640000
 /*************************************************************/        00650000
 /*                  DFHSM MONITOR OPTIONS                    */        00660000
 /*************************************************************/        00670000
 /*                                                           */        00680000
                             /* SPECIFY WHICH INFORMATIONAL   */        00690000
                             /* MESSAGES TO PRINT AT THE      */        00700000
                             /* OPERATOR CONSOLE.             */        00710000
 SETSYS MONITOR(MIGRATIONCONTROLDATASET(90))                            00720000
                                                                        00730000
 SETSYS MONITOR -                                                       00740000
        (STARTUP             /* LIST STARTUP PARAMETERS.      */ -      00750000
         NOVOLUME)           /* DO NOT SHOW DATA SET LEVEL    */        00760000
                             /* MESSAGES ON SYSTEM CONSOLE.   */        00770000
 SETSYS MONITOR -                                                       00780000
        (NOSPACE             /* DO NOT PRINT SPACE USAGE MSGS.*/ -      00790000
       JOURNAL(70 1) MCDS(90))  /* WARN WHEN JOURNAL IS 90% FULL */     00800000
                             /* CONSIDERING 1 EXTENT IS       */        00810000
                             /* AVAILABLE.                    */        00820000
 /*                                                           */        00830000
 /*************************************************************/        00840000
 /*        DFHSM COMMON SERVICE AREA LIMITING OPTIONS         */        00850000
 /*************************************************************/        00860000
 /*                                                           */        00870000
 SETSYS -                                                               00880000
            CSALIMITS        /* LIMIT DFHSM USAGE OF CSA.     */ -      00890000
             (MWE(4))        /* MAXIMUM OF 4 NOWAIT TYPE MWES */        00900000
                             /* PER ADDRESS SPACE TO BE KEPT  */        00910000
                             /* ON CSA QUEUE.                 */        00920000
 SETSYS CSALIMITS -                                                     00930000
              (MAXIMUM(200)  /* NEVER USE MORE THAN 100K.     */ -      00940000
               ACTIVE(90)    /* LIMIT NOWAIT FUNCTIONS TO 90%.*/ -      00950000
               INACTIVE(30)) /* ALLOW 30% DURING INACTIVITY.  */        00960000
 /*                                                           */        00970000
 /*************************************************************/        00980000
 /*           DFHSM TAPE HANDLING SPECIFICATIONS              */        00990000
 /*************************************************************/        01000000
 /*                                                           */        01010000
 SETSYS -                                                               01020000
   DEFERMOUNT                /* DEFER MOUNT OF TAPE UNTIL     */        01030000
                             /* OPEN PROCESSING.              */        01040000
 SETSYS -                                                               01050000
   TAPEHARDWARECOMPACT       /* USE IMPROVED DATA RECORDING   */        01060000
                             /* CAPABILITY WHEN 3480X IS      */        01070000
                             /* THE OUTPUT DEVICE.            */        01080000
 SETSYS -                                                               01090000
   PARTIALTAPE(              /* DO NOT MARK AS FULL ANY TAPES */ -      01100000
    BACKUP(MARKFULL)         /* THAT ARE ONLY PARTLY FULL     */ -      01110000
    MIGRATION(MARKFULL))                                                01120000
 SETSYS TAPEUTILIZATION(UNITTYPE(3490) PERCENTFULL(100))                01130000
 SETSYS TAPEUTILIZATION(LIBRARYBACKUP PERCENTFULL(100))                 01140000
 SETSYS TAPEUTILIZATION(LIBRARYMIGRATION PERCENTFULL(100))              01150000
 SETSYS TAPESPANSIZE(4000)                                              01160000
 SETSYS -                                                               01170000
   INPUTTAPEALLOCATION(NOWAIT)   /* DON'T WAIT ON TAPE        */ -      01180000
   OUTPUTTAPEALLOCATION(NOWAIT)  /* ALLOCATION FOR INPUT,     */ -      01190000
   RECYCLETAPEALLOCATION(NOWAIT) /* OUTPUT, OR RECYCLE.       */        01200000
 SETSYS -                                                               01210000
   SELECTVOLUME(             /* VOLUME SELECTION AT TAPE END  */ -      01220000
   BACKUP(SCRATCH)          /* OF VOLUME COMES FROM THE      */ -       01230000
   MIGRATION(SCRATCH)       /* DFHSM-OWNED POOL OF TAPE VOLS.*/ -       01240000
   DUMP(SCRATCH))                                                       01250000
 SETSYS -                                                               01260000
   RECYCLEPERCENT(40)        /* INFORM STORAGE ADMINISTRATOR  */        01270000
                             /* THAT A BACKUP TAPE SHOULD BE  */        01280000
                             /* RECYCLED WHEN THE AMOUNT OF   */        01290000
                             /* VALID DATA ON THE TAPE FALLS  */        01300000
                             /* BELOW 25%.                    */        01310000
 SETSYS -                                                               01320000
   RECYCLEINPUTDEALLOCFREQUENCY(BACKUP(1) MIGRATION(1))                 01330000
 SETSYS -                                                               01340000
   TAPEDELETION(             /* RETURN TAPES THAT NO LONGER   */ -      01350000
    BACKUP(SCRATCH)          /* CONTAIN VALID DATA TO THE     */ -      01360000
    MIGRATION(SCRATCH)       /* DFHSM-OWNED POOL.             */ -      01370000
    DUMP(SCRATCH))                                                      01380000
 SETSYS -                                                               01390000
   USERUNITTABLE(VTSS)        /*NO ESOTERIC TAPE UNITS        */        01400000
                             /* DEFINED TO DFHSM. CTAPE1      */        01410000
 SETSYS -                                                               01420000
   MOUNTWAITTIME(15)         /* WAIT 10 MINUTES BEFORE        */        01430000
                             /* ISSUING ADDITIONAL MESSAGES   */        01440000
                             /* TO OPERATORS FOR TAPE MOUNTS. */        01450000
 SETSYS -                                                               01460000
   UNITNAME(VTSS)            /* START OUT WITH 3480X AS UNIT  */        01470000
                             /* TO BE USED FOR SCRATCH TAPES  */        01480000
                             /* DURING BACKUP OR DUMP.        */        01490000
 SETSYS -                                                               01500000
   TAPEINPUTPROMPT(MIGRATIONTAPES(NO))  /* TAPE OPER MSGS    */         01510000
 SETSYS -                                                               01520000
   TAPEINPUTPROMPT(BACKUPTAPES(NO))     /* TAPE OPER MSGS    */         01530000
 SETSYS -                                                               01540000
   TAPEINPUTPROMPT(DUMPTAPES(NO))       /* TAPE OPER MSGS    */         01550000
 /*                                                           */        01560000
 /*************************************************************/        01570000
 /*         DFHSM CONTROL DATA SET BACKUP PARAMETERS          */        01580000
 /*************************************************************/        01590000
 /*                                                           */        01600000
 SETSYS CDSVERSIONBACKUP(    /* MAINTAIN FOUR BACKUP VERSIONS */ -      01610000
        BACKUPCOPIES(4)      /* OF THE CONTROL DATA SETS ON   */ -      01620000
        DATAMOVER(HSM)                                           -      01630000
  BACKUPDEVICECATEGORY(DASD)  /* TAPE OF UNIT TYPE CTAPE1     */ -      01640000
  MCDSBACKUPDSN(SYSTR.MCDS.BACKUP) -                                    01650000
  BCDSBACKUPDSN(SYSTR.BCDS.BACKUP) -                                    01660000
  OCDSBACKUPDSN(SYSTR.OCDS.BACKUP) -                                    01670000
  JRNLBACKUPDSN(SYSTR.JRNL.BACKUP))                                     01680000
 /*************************************************************/        01690000
 /*               DFHSM RACF SPECIFICATIONS                   */        01700000
 /*************************************************************/        01710000
 /*                                                           */        01720000
 SETSYS -                                                               01730000
   NORACFIND                 /* DO NOT PUT RACF-INDICATION    */        01740000
                             /* ON BACKUP AND MIGRATION       */        01750000
                             /* COPIES OF DATA SETS.          */        01760000
 SETSYS -                                                               01770000
   TAPESECURITY(EXPIRATION)  /* USE RACF TO PROVIDE TAPE      */        01780000
                             /* SECURITY.                     */        01790000
 SETSYS -                                                               01800000
   NOERASEONSCRATCH          /* DON'T ALLOW ERASE-ON-SCRATCH  */        01810000
                             /* ON ANY DFHSM BACKUP VERSIONS  */        01820000
                             /* AND MIGRATION COPIES.         */        01830000
 SETSYS -                                                               01840000
   PROFILEBACKUP             /* BACKUP DISCRETE RACF PROFILES */        01850000
 /*                                                           */        01860000
 /*************************************************************/        01870000
 /*                DFHSM COMPACTION OPTIONS                   */        01880000
 /*************************************************************/        01890000
 /*                                                           */        01900000
 SETSYS -                                                               01910000
   COMPACT(DASDMIGRATE)      /* USE COMPACTION FOR            */        01920000
                             /* MIGRATION TO DASD.            */        01930000
 SETSYS -                                                               01940000
     COMPACTPERCENT(20)      /* DON'T COMPACT DATA UNLESS     */        01950000
                             /* HISTORICAL DATA SHOWS SAVINGS */        01960000
                             /* OF AT LEAST 20%.              */        01970000
 SETSYS -                                                               01980000
   OBJECTNAMES(OBJ,OBJECT,LOAD,LOADLIB,LOADMODS,LINKLIB) -              01990000
   SOURCENAMES(ASM,COBOL,FORT,PLI,SOURCE,SRC,SRCLIB,SRCE,CNTL,JCL)      02000000
 /*                                                           */        02010000
 /*************************************************************/        02020000
 /*   DFHSM PATCH ADD 05.09.2011 FOR ZOS 1.12                 */        02030000
 /*   DFHSM PATCH SUPPRESS 07.11.11 APRES PTF                 */        02040000
 /*************************************************************/        02050000
 /*   PATCH .MGCB.+ED BITS(......0.)                          */        02060000
 /*                                                           */        02070000
 /*************************************************************/        02080000
 /*               DFHSM MIGRATION PARAMETERS                  */        02090000
 /*************************************************************/        02100000
 /*                                                           */        02110000
 SETSYS -                                                               02120000
   TAPEMIGRATION(ML2TAPE)    /* NO TAPE MIGRATION  CTAPE1     */        02130000
 SETSYS -                                                               02140000
   MIGUNITNAME(VTSS)     /* NO TAPE MIGRATION             */            02150000
 SETSYS -                                                               02160000
   ML2RECYCLEPERCENT(40) /* NO TAPE MIGRATION             */            02170000
 SETSYS -                                                               02180000
   TAPEMAXRECALLTASKS(8) /* NO TAPE MIGRATION             */            02190000
 SETSYS -                                                               02200000
   PRIMARYSPMGMTSTART         /*SPECIFY PROCESSING WINDOW FOR */ -      02210000
   (0555 0750)                /*PRIMARYSPMNGMT PHR 16.12.2019 */        02220000
 DEFINE -                                                               02230000
   PRIMARYSPMGMTCYCLE        /* RUN PRIMARY SPACE MGMT EVERY  */ -      02240000
   (YYYYYYY                  /* DAY, STARTING JUNE 11, 1990   */ -      02250000
   CYCLESTARTDATE(1990/06/11))                                          02260000
 SETSYS -                                                               02270000
     DAYS(1)                 /* DATA SET MUST BE UNREFERENCED */        02280000
                             /* FOR 10 DAYS BEFORE IT WILL BE */        02290000
                             /* MIGRATED.                     */        02300000
 SETSYS -                                                               02310000
     MIGRATEPREFIX(HSMRM)                                               02320000
                             /* PROVIDE THE HIGH-LEVEL        */        02330000
                             /* QUALIFIER OF THE NAMES OF     */        02340000
                             /* MIGRATED DATA SETS.           */        02350000
 SETSYS -                                                               02360000
   NOINTERVALMIGRATION       /* PERFORM MIGRATION THROUGHOUT  */        02370000
                             /* THE DAY.                      */        02380000
 SETSYS -                                                               02390000
   SECONDARYSPMGMTSTART(0550  /*SPECIFY PROCESSING WINDOW FOR */ -      02400000
     0554)                                                              02410000
                              /*SECONDARY SPACE MANAGEMENT    */        02420000
 DEFINE -                                                               02430000
   SECONDARYSPMGMTCYCLE      /* RUN SECONDARY SPACE MANAGEMENT*/ -      02440000
   (YYYYYYY                  /* EVERY DAY,                    */ -      02450000
   CYCLESTARTDATE(1990/06/11)) /* STARTING JUNE 11, 1990.       */      02460000
 SETSYS -                                                               02470000
   MIGRATIONCLEANUPDAYS(14 7) /* KEEP MCDS STATISTICS RECORDS */        02480000
                             /* FOR RECALLED DATA SETS FOR    */        02490000
                             /* 14 DAYS, AND VOLUME OR DAILY  */        02500000
                             /* STATISTICS RECORDS FOR 7 DAYS.*/        02510000
 SETSYS -                                                               02520000
     MIGRATIONLEVEL1DAYS(14) /* DATA SET MIGRATED TO ML2      */        02530000
                             /* AFTER 45 DAYS UNREFERENCED.   */        02540000
 SETSYS -                                                               02550000
     MAXEXTENTS(5)           /* DATA SET EXTENT REDUCTION     */        02560000
                             /* OCCURS WHEN EXTENTS REACH 10. */        02570000
 SETSYS -                                                               02580000
     MAXRECALLTASKS(10)      /* MAXIMUM OF X RECALL TASKS     */        02590000
                             /* ALLOWED AT ONE TIME.          */        02600000
 SETSYS -                                                               02610000
   RECALL(PRIVATEVOLUME(LIKE)) /* AUTO RECALL PLACES          */        02620000
                             /* UNPOOLED DATA SETS ON PRIMARY */        02630000
                             /* VOLUME MARKED PUBLIC, STORAGE,*/        02640000
                             /* OR PRIVATE, THAT HAS LIKE     */        02650000
                             /* CHARACTERISTICS.              */        02660000
 SETSYS -                                                               02670000
   SCRATCHFREQUENCY(7)       /* KEEP LIST DATA SETS 7 DAYS.   */ -      02680000
   EXPIREDDATASETS(SCRATCH)  /* DON'T SCRATCH EXPIRED DATA   */         02690000
                             /* SETS.                         */        02700000
 SETSYS -                                                               02710000
   NOSMALLDATASETPACKING     /* DON'T DO SMALL D.S. PACKING.  */        02720000
 SETSYS -                                                               02730000
   MAXMIGRATIONTASKS(8)      /* MAXIMUM OF THREE AUTOMATIC    */        02740000
                             /* VOLUME MIGRATION TASKS        */        02750000
                             /* TO BE PREFORMED CONCURRENTLY. */        02760000
 /*                                                           */        02770000
 /*************************************************************/        02780000
 /*                 DFHSM BACKUP PARAMETERS                   */        02790000
 /*************************************************************/        02800000
 /*                                                           */        02810000
 DEFINE BACKUP(YYYYYYN       /* BACKUP CYCLE OF ONE DAY.      */ -      02820000
   CYCLESTARTDATE(1990/06/11)) /* RUN BACKUP EVERY DAY TO A   */        02830000
                             /* SINGLE BACKUP VOLUME,         */        02840000
                             /* STARTING MONDAY,              */        02850000
                             /* JUNE 11, 1990.                */        02860000
 SETSYS -                                                               02870000
   BACKUP(TAPE(VTSS))        /* ACTIVATE BACKUP AND DUMP      */        02880000
 SETSYS -                                                               02890000
   AUTOBACKUPSTART(0510 0800 0955)          /*(0510 0800 0930)*/        02900000
                             /* PROVIDE TIME TO START AUTO    */        02910000
                             /* BACKUP, LATE START TIME,      */        02920000
                             /* AND QUIESCE TIME.  AUTOBACKUP */        02930000
                             /* DISABLED UNTIL TIMES SPECIFIED*/        02940000
 SETSYS -                                                               02950000
   BACKUPPREFIX(HSMSRB)                                                 02960000
                             /* PROVIDE THE HIGH-LEVEL        */        02970000
                             /* QUALIFIER OF THE NAMES OF     */        02980000
                             /* BACKUP DATA SETS.             */        02990000
 SETSYS -                                                               03000000
   VERSIONS(1)               /* KEEP ONE VERSION OF BACKED-UP */ -      03010000
   FREQUENCY(1)              /* DATA SET.                     */        03020000
 SETSYS -                                                               03030000
   MAXBACKUPTASKS(05)        /* MAX OF 3 BACKUP TASKS AT ONCE */ -      03040000
   NOSKIPABPRIMARY           /* BACK UP ALL PRIMARY VOLUMES   */        03050000
                             /* THAT HAVE AUTO BACKUP         */        03060000
 SETSYS SPILL(TAPE(VTSS))    /* ATTRIBUTE.                    */        03070000
                             /* DATA SETS FROM FULL DAILY     */        03080000
                             /* DASD VOLUMES TO SPILL VOLUMES.*/        03090000
 /*                                                           */        03100000
 SETSYS RECYCLEOUTPUT(BACKUP(VTSS) MIGRATION(VTSS))                     03110000
 /*                                                           */        03120000
 SETSYS TAPEMIGRATION(ML2TAPE(TAPE(VTSS)))                              03130000
 /*                                                           */        03140000
 /*                                                           */        03150000
 SETSYS -                                                               03160000
   INCREMENTALBACKUP(CHANGEDONLY)                                       03170000
 /*INCREMENTALBACKUP(ORIGINAL)    MAKE ORIGINAL BACKUP COPIES */        03180000
                             /* OF DATA SETS DESPITE SETTING  */        03190000
                             /* OF CHANGE BIT.                */        03200000
 /*                                                           */        03210000
 /*************************************************************/        03220000
 /*           DFHSM FULL VOLUME DUMP PARAMETERS               */        03230000
 /*************************************************************/        03240000
 /*                                                           */        03250000
 DEFINE -                                                               03260000
   DUMPCYCLE(NNNNNNY         /* 7-DAY DUMP CYCLE WITH DUMP    */ -      03270000
    CYCLESTARTDATE(1990/06/11)) /* DONE ONLY ON SEVENTH DAY,    */      03280000
                             /* STARTING ON MONDAY, JUNE 11,  */        03290000
                             /* 1990, SO DUMPS CAN OCCUR ON   */        03300000
                             /* SUNDAY.                       */        03310000
 DEFINE DUMPCLASS(WEEKLY DAY(7) RETPD(30) AUTOREUSE NORESET -           03320000
   DATASETRESTORE VTOCCOPIES(3))                                        03330000
 DEFINE DUMPCLASS(WEEKLY2 DAY(7) RETPD(40) AUTOREUSE NORESET -          03340000
   DATASETRESTORE VTOCCOPIES(4))                                        03350000
/* MODIF 19.05.14 WEEKLY VTOCCOPIES PASSE DE 5 A 4            */        03360000
/* MODIF 10.06.14 WEEKLY VTOCCOPIES PASSE DE 4 A 3            */        03370000
                             /* DEFINE A DUMP CLASS NAMED     */        03380000
                             /* SUNDAY THAT WILL BE AUTO      */        03390000
                             /* DUMPED ON THE SEVENTH DAY OF  */        03400000
                             /* OF THE CYCLE.  EACH DUMP COPY */        03410000
                             /* IS HELD FOR 27 DAYS, AND      */        03420000
                             /* THE TAPE IS REUSED WHEN       */        03430000
                             /* SCRATCHED. RESET NO DATA SET  */        03440000
                             /* CHANGE BITS AND ALLOW TSO     */        03450000
                             /* USERS TO RESTORE DATA SETS    */        03460000
                             /* FROM DUMP TAPE. AT MOST, KEEP */        03470000
                             /* FOUR DUMP VTOC COPY DATA SETS */        03480000
                             /* FOR A VOLUME.                 */        03490000
 DEFINE DUMPCLASS(QUARTERS FREQUENCY(90) RETPD(250) -                   03500000
   NOAUTOREUSE NODATASETRESTORE NORESET -                               03510000
   DISPOSITION('OFF-SITE') VTOCCOPIES(0))                               03520000
                             /* DEFINE A DUMP CLASS NAMED     */        03530000
                             /* QUARTERS THAT WILL BE AUTO    */        03540000
                             /* DUMPED EVERY THREE MONTHS AND */        03550000
                             /* HELD FOR ONE WEEK LESS THAN   */        03560000
                             /* A YEAR. USE ONLY FOR FULL     */        03570000
                             /* RESTORES. HOLD THE TAPE       */        03580000
                             /* OFF-SITE. KEEP NO VTOC COPIES */        03590000
                             /* FOR THIS CLASS.               */        03600000
 SETSYS -                                                               03610000
   AUTODUMPSTART(1800 2000 2200)                                        03620000
                             /* PROVIDE TIME TO START AUTO    */        03630000
                             /* DUMP, LATE START TIME,        */        03640000
                             /* AND QUIESCE TIME.  AUTO DUMP  */        03650000
                             /* DISABLED UNTIL TIMES SPECIFIED*/        03660000
 SETSYS -                                                               03670000
   DUMPIO(3,2)               /* BUFFER 5 TRACKS WHEN DUMPING, */        03680000
                             /* 2 TRACKS DURING DATA MOVEMENT */        03690000
 SETSYS -                                                               03700000
   MAXDUMPTASKS(3)           /* ALLOW MAXIMUM OF 3 DUMP TASKS */        03710000
                             /* AT ONE TIME.                  */        03720000
 ADDVOL HSMR01 -                                                        03730000
        UNIT(3390) -                                                    03740000
        MIGRATION  -                                                    03750000
        (MIGRATIONLEVEL1 -                                              03760000
         NOSMALLDATASETPACKING) -                                       03770000
        THRESHOLD(80)                                                   03780000
                                                                        03790000
 ADDVOL HSMR02 -                                                        03800000
        UNIT(3390) -                                                    03810000
        MIGRATION  -                                                    03820000
        (MIGRATIONLEVEL1 -                                              03830000
         NOSMALLDATASETPACKING) -                                       03840000
        THRESHOLD(80)                                                   03850000
                                                                        03860000
                                                                        03870000
 /*                                                           */        03880000

./ ADD NAME=ARRCMDR0
 AUTH SYS004                                                            00010000
  DATABASEAUTHORITY(CONTROL)                                            00020000
 AUTH SYS005                                                            00030000
  DATABASEAUTHORITY(CONTROL)                                            00040000
 AUTH SYSJRI                                                            00050000
  DATABASEAUTHORITY(CONTROL)                                            00060000
 AUTH PROPRI                                                            00070000
  DATABASEAUTHORITY(CONTROL)                                            00080000
 AUTH STCPRC                                                            00090000
  DATABASEAUTHORITY(USER)                                               00100000
 SETSYS JES2                                                            00110000
   NOCONVERSION                                                         00120000
                                                                        00130000
 SETSYS -                                                               00140000
   EXITON(TV)                                                           00150000
 SETSYS -                                                               00160000
   NOREQUEST                                                            00170000
                                                                        00180000
                                                                        00190000
 SETSYS -                                                               00200000
   NODEBUG                                                              00210000
                                                                        00220000
   NOEMERGENCY                                                          00230000
 SETSYS -                                                               00240000
   NOSWAP                                                               00250000
 SETSYS -                                                               00260000
   USERDATASETSERIALIZATION                                             00270000
                                                                        00280000
                                                                        00290000
/* SETSYS - */                                                          00300000
/*    DATAMOVER(DFDSS)     *                                            00310000
                                                                        00320000
                                                                        00330000
 SETSYS -                                                               00340000
   OPTIMUMDASDBLOCKING                                                  00350000
                                                                        00360000
                                                                        00370000
 /*                                                                     00380000
 /**************************                                            00390000
 /*                      DFH                                            00400000
 /**************************                                            00410000
 /*                     NONE                                            00420000
 /**************************                                            00430000
 /*     DFHSM LOGGING, JOURN                                            00440000
 /**************************                                            00450000
 /*                                                                     00460000
 SETSYS -                                                               00470000
   JOURNAL(RECOVERY)                                                    00480000
                                                                        00490000
 SETSYS -                                                               00500000
   SMF(240)                                                             00510000
                                                                        00520000
                                                                        00530000
                                                                        00540000
 SETSYS -                                                               00550000
   SYS1DUMP                                                             00560000
                                                                        00570000
 SETSYS SYSOUT(X 1)                                                     00580000
                                                                        00590000
 SETSYS -                                                               00600000
   ACTLOGMSGLVL(FULL)                                                   00610000
   ACTLOGTYPE(SYSOUT)      /                                            00620000
                                                                        00630000
 /*                                                                     00640000
 /**************************                                            00650000
 /*                  DFHSM M                                            00660000
 /**************************                                            00670000
 /*                                                                     00680000
                                                                        00690000
                                                                        00700000
                                                                        00710000
 SETSYS MONITOR(MIGRATIONCONTROLDATASET(90))                            00720000
                                                                        00730000
 SETSYS MONITOR -                                                       00740000
        (STARTUP                                                        00750000
         NOVOLUME)                                                      00760000
                                                                        00770000
 SETSYS MONITOR -                                                       00780000
        (NOSPACE                                                        00790000
       JOURNAL(70 1) MCDS(90                                            00800000
                                                                        00810000
                                                                        00820000
 /*                                                                     00830000
 /**************************                                            00840000
 /*        DFHSM COMMON SERV                                            00850000
 /**************************                                            00860000
 /*                                                                     00870000
 SETSYS -                                                               00880000
            CSALIMITS                                                   00890000
             (MWE(4))                                                   00900000
                                                                        00910000
                                                                        00920000
 SETSYS CSALIMITS -                                                     00930000
              (MAXIMUM(200)                                             00940000
               ACTIVE(90)                                               00950000
               INACTIVE(30))                                            00960000
 /*                                                                     00970000
 /**************************                                            00980000
 /*           DFHSM TAPE HAN                                            00990000
 /**************************                                            01000000
 /*                                                                     01010000
 SETSYS -                                                               01020000
   DEFERMOUNT                                                           01030000
                                                                        01040000
 SETSYS -                                                               01050000
   TAPEHARDWARECOMPACT                                                  01060000
                                                                        01070000
                                                                        01080000
 SETSYS -                                                               01090000
   PARTIALTAPE(                                                         01100000
    BACKUP(MARKFULL)                                                    01110000
    MIGRATION(MARKFULL))                                                01120000
 SETSYS TAPEUTILIZATION(UNITTYPE(3490) PERCENTFULL(100))                01130000
 SETSYS TAPEUTILIZATION(LIBRARYBACKUP PERCENTFULL(100))                 01140000
 SETSYS TAPEUTILIZATION(LIBRARYMIGRATION PERCENTFULL(100))              01150000
 SETSYS TAPESPANSIZE(4000)                                              01160000
 SETSYS -                                                               01170000
   INPUTTAPEALLOCATION(NOWAIT)   /* DON'T WAIT ON TAPE        */ -      01180000
   OUTPUTTAPEALLOCATION(NOWAIT)  /* ALLOCATION FOR INPUT,     */ -      01190000
   RECYCLETAPEALLOCATION(NOWAIT) /* OUTPUT, OR RECYCLE.       */        01200000
 SETSYS -                                                               01210000
   SELECTVOLUME(             /* VOLUME SELECTION AT TAPE END  */ -      01220000
   BACKUP(SCRATCH)          /* OF VOLUME COMES FROM THE      */ -       01230000
   MIGRATION(SCRATCH)       /* DFHSM-OWNED POOL OF TAPE VOLS.*/ -       01240000
   DUMP(SCRATCH))                                                       01250000
 SETSYS -                                                               01260000
   RECYCLEPERCENT(40)                                                   01270000
                                                                        01280000
                                                                        01290000
                                                                        01300000
                                                                        01310000
 SETSYS -                                                               01320000
   RECYCLEINPUTDEALLOCFREQUENCY(BACKUP(1) MIGRATION(1))                 01330000
 SETSYS -                                                               01340000
   TAPEDELETION(                                                        01350000
    BACKUP(SCRATCH)                                                     01360000
    MIGRATION(SCRATCH)                                                  01370000
    DUMP(SCRATCH))                                                      01380000
 SETSYS -                                                               01390000
   USERUNITTABLE(VTSS)                                                  01400000
                                                                        01410000
 SETSYS -                                                               01420000
   MOUNTWAITTIME(15)                                                    01430000
                                                                        01440000
                                                                        01450000
 SETSYS -                                                               01460000
   UNITNAME(VTSS)                                                       01470000
                                                                        01480000
                                                                        01490000
 SETSYS -                                                               01500000
   TAPEINPUTPROMPT(MIGRATIONTAPES(NO))  /* TAPE OPER MSGS    */         01510000
 SETSYS -                                                               01520000
   TAPEINPUTPROMPT(BACKUPTAPES(NO))     /* TAPE OPER MSGS    */         01530000
 SETSYS -                                                               01540000
   TAPEINPUTPROMPT(DUMPTAPES(NO))       /* TAPE OPER MSGS    */         01550000
 /*                                                           */        01560000
 /*************************************************************/        01570000
 /*         DFHSM CONTROL DATA SET BACKUP PARAMETERS          */        01580000
 /*************************************************************/        01590000
 /*                                                           */        01600000
 SETSYS CDSVERSIONBACKUP(    /* MAINTAIN FOUR BACKUP VERSIONS */ -      01610000
        BACKUPCOPIES(4)      /* OF THE CONTROL DATA SETS ON   */ -      01620000
        DATAMOVER(HSM)                                           -      01630000
  BACKUPDEVICECATEGORY(DASD)  /* TAPE OF UNIT TYPE CTAPE1     */ -      01640000
  MCDSBACKUPDSN(SYSTR.MCDS.BACKUP) -                                    01650000
  BCDSBACKUPDSN(SYSTR.BCDS.BACKUP) -                                    01660000
  OCDSBACKUPDSN(SYSTR.OCDS.BACKUP) -                                    01670000
  JRNLBACKUPDSN(SYSTR.JRNL.BACKUP))                                     01680000
 /*************************************************************/        01690000
 /*               DFHSM RACF SPECIFICATIONS                   */        01700000
 /*************************************************************/        01710000
 /*                                                           */        01720000
 SETSYS -                                                               01730000
   NORACFIND                                                            01740000
                                                                        01750000
                                                                        01760000
 SETSYS -                                                               01770000
   TAPESECURITY(EXPIRATION)                                             01780000
                                                                        01790000
 SETSYS -                                                               01800000
   NOERASEONSCRATCH                                                     01810000
                                                                        01820000
                                                                        01830000
 SETSYS -                                                               01840000
   PROFILEBACKUP                                                        01850000
 /*                                                                     01860000
 /**************************                                            01870000
 /*                DFHSM COM                                            01880000
 /**************************                                            01890000
 /*                                                                     01900000
 SETSYS -                                                               01910000
   COMPACT(DASDMIGRATE)                                                 01920000
                                                                        01930000
 SETSYS -                                                               01940000
     COMPACTPERCENT(20)                                                 01950000
                                                                        01960000
                                                                        01970000
 SETSYS -                                                               01980000
   OBJECTNAMES(OBJ,OBJECT,LOAD,LOADLIB,LOADMODS,LINKLIB) -              01990000
   SOURCENAMES(ASM,COBOL,FORT,PLI,SOURCE,SRC,SRCLIB,SRCE,CNTL,JCL)      02000000
 /*                                                           */        02010000
 /*************************************************************/        02020000
 /*   DFHSM PATCH ADD 05.09.2011 FOR ZOS 1.12                 */        02030000
 /*   DFHSM PATCH SUPPRESS 07.11.11 APRES PTF                 */        02040000
 /*************************************************************/        02050000
 /*   PATCH .MGCB.+ED BITS(......0.)                          */        02060000
 /*                                                           */        02070000
 /*************************************************************/        02080000
 /*               DFHSM MIGRATION PARAMETERS                  */        02090000
 /*************************************************************/        02100000
 /*                                                           */        02110000
 SETSYS -                                                               02120000
   TAPEMIGRATION(ML2TAPE)                                               02130000
 SETSYS -                                                               02140000
   MIGUNITNAME(VTSS)     /*                                             02150000
 SETSYS -                                                               02160000
   ML2RECYCLEPERCENT(40) /*                                             02170000
 SETSYS -                                                               02180000
   TAPEMAXRECALLTASKS(8) /*                                             02190000
 SETSYS -                                                               02200000
   PRIMARYSPMGMTSTART                                                   02210000
   (0555 0750)                                                          02220000
 DEFINE -                                                               02230000
   PRIMARYSPMGMTCYCLE                                                   02240000
   (YYYYYYY                                                             02250000
   CYCLESTARTDATE(1990/06/11                                            02260000
 SETSYS -                                                               02270000
     DAYS(1)                                                            02280000
                                                                        02290000
                                                                        02300000
 SETSYS -                                                               02310000
     MIGRATEPREFIX(HSMRM)                                               02320000
                                                                        02330000
                                                                        02340000
                                                                        02350000
 SETSYS -                                                               02360000
   NOINTERVALMIGRATION                                                  02370000
                                                                        02380000
 SETSYS -                                                               02390000
   SECONDARYSPMGMTSTART(0550                                            02400000
     0554)                                                              02410000
                                                                        02420000
 DEFINE -                                                               02430000
   SECONDARYSPMGMTCYCLE                                                 02440000
   (YYYYYYY                                                             02450000
   CYCLESTARTDATE(1990/06/11                                            02460000
 SETSYS -                                                               02470000
   MIGRATIONCLEANUPDAYS(14 7                                            02480000
                                                                        02490000
                                                                        02500000
                                                                        02510000
 SETSYS -                                                               02520000
     MIGRATIONLEVEL1DAYS(14)                                            02530000
                                                                        02540000
 SETSYS -                                                               02550000
     MAXEXTENTS(5)                                                      02560000
                                                                        02570000
 SETSYS -                                                               02580000
     MAXRECALLTASKS(10)                                                 02590000
                                                                        02600000
 SETSYS -                                                               02610000
   RECALL(PRIVATEVOLUME(LIKE                                            02620000
                                                                        02630000
                                                                        02640000
                                                                        02650000
                                                                        02660000
 SETSYS -                                                               02670000
   SCRATCHFREQUENCY(7)                                                  02680000
   EXPIREDDATASETS(SCRATCH)                                             02690000
                                                                        02700000
 SETSYS -                                                               02710000
   NOSMALLDATASETPACKING                                                02720000
 SETSYS -                                                               02730000
   MAXMIGRATIONTASKS(8)                                                 02740000
                                                                        02750000
                                                                        02760000
 /*                                                                     02770000
 /**************************                                            02780000
 /*                 DFHSM BA                                            02790000
 /**************************                                            02800000
 /*                                                                     02810000
 DEFINE BACKUP(YYYYYYN                                                  02820000
   CYCLESTARTDATE(1990/06/11                                            02830000
                                                                        02840000
                                                                        02850000
                                                                        02860000
 SETSYS -                                                               02870000
   BACKUP(TAPE(VTSS))                                                   02880000
 SETSYS -                                                               02890000
   AUTOBACKUPSTART(0510 0800                                            02900000
                                                                        02910000
                                                                        02920000
                                                                        02930000
                                                                        02940000
 SETSYS -                                                               02950000
   BACKUPPREFIX(HSMSRB)                                                 02960000
                                                                        02970000
                                                                        02980000
                                                                        02990000
 SETSYS -                                                               03000000
   VERSIONS(1)                                                          03010000
   FREQUENCY(1)                                                         03020000
 SETSYS -                                                               03030000
   MAXBACKUPTASKS(05)                                                   03040000
   NOSKIPABPRIMARY                                                      03050000
                                                                        03060000
 SETSYS SPILL(TAPE(VTSS))                                               03070000
                                                                        03080000
                                                                        03090000
 /*                                                           */        03100000
 SETSYS RECYCLEOUTPUT(BACKUP(VTSS) MIGRATION(VTSS))                     03110000
 /*                                                           */        03120000
 SETSYS TAPEMIGRATION(ML2TAPE(TAPE(VTSS)))                              03130000
 /*                                                           */        03140000
 /*                                                           */        03150000
 SETSYS -                                                               03160000
   INCREMENTALBACKUP(CHANGEDONLY)                                       03170000
 /*INCREMENTALBACKUP(ORIGINAL)    MAKE ORIGINAL BACKUP COPIES */        03180000
                             /* OF DATA SETS DESPITE SETTING  */        03190000
                             /* OF CHANGE BIT.                */        03200000
 /*                                                           */        03210000
 /*************************************************************/        03220000
 /*           DFHSM FULL VOLUME DUMP PARAMETERS               */        03230000
 /*************************************************************/        03240000
 /*                                                           */        03250000
 DEFINE -                                                               03260000
   DUMPCYCLE(NNNNNNY         /* 7-DAY DUMP CYCLE WITH DUMP    */ -      03270000
    CYCLESTARTDATE(1990/06/11)) /* DONE ONLY ON SEVENTH DAY,    */      03280000
                             /* STARTING ON MONDAY, JUNE 11,  */        03290000
                             /* 1990, SO DUMPS CAN OCCUR ON   */        03300000
                             /* SUNDAY.                       */        03310000
 DEFINE DUMPCLASS(WEEKLY DAY(7) RETPD(30) AUTOREUSE NORESET -           03320000
   DATASETRESTORE VTOCCOPIES(3))                                        03330000
 DEFINE DUMPCLASS(WEEKLY2 DAY(7) RETPD(40) AUTOREUSE NORESET -          03340000
   DATASETRESTORE VTOCCOPIES(4))                                        03350000
/* MODIF 19.05.14 WEEKLY VTOCCOPIES PASSE DE 5 A 4            */        03360000
/* MODIF 10.06.14 WEEKLY VTOCCOPIES PASSE DE 4 A 3            */        03370000
                                                                        03380000
                                                                        03390000
                                                                        03400000
                                                                        03410000
                                                                        03420000
                                                                        03430000
                                                                        03440000
                                                                        03450000
                                                                        03460000
                                                                        03470000
                                                                        03480000
                                                                        03490000
 DEFINE DUMPCLASS(QUARTERS FREQUENCY(90) RETPD(250) -                   03500000
   NOAUTOREUSE NODATASETRESTORE NORESET -                               03510000
   DISPOSITION('OFF-SITE') VTOCCOPIES(0))                               03520000
                                                                        03530000
                                                                        03540000
                                                                        03550000
                                                                        03560000
                                                                        03570000
                                                                        03580000
                                                                        03590000
                                                                        03600000
 SETSYS -                                                               03610000
   AUTODUMPSTART(1800 2000 2                                            03620000
                                                                        03630000
                                                                        03640000
                                                                        03650000
                                                                        03660000
 SETSYS -                                                               03670000
   DUMPIO(3,2)                                                          03680000
                                                                        03690000
 SETSYS -                                                               03700000
   MAXDUMPTASKS(3)                                                      03710000
                                                                        03720000
 ADDVOL HSMR01 -                                                        03730000
        UNIT(3390) -                                                    03740000
        MIGRATION  -                                                    03750000
        (MIGRATIONLEVEL1 -                                              03760000
         NOSMALLDATASETPACKI                                            03770000
        THRESHOLD(80)                                                   03780000
                                                                        03790000
 ADDVOL HSMR02 -                                                        03800000
        UNIT(3390) -                                                    03810000
        MIGRATION  -                                                    03820000
        (MIGRATIONLEVEL1 -                                              03830000
         NOSMALLDATASETPACKI                                            03840000
        THRESHOLD(80)                                                   03850000
                                                                        03860000
                                                                        03870000
 /*                                                                     03880000

./ ADD NAME=ARRCMD00
 AUTH SYSAJE
             DATABASEAUTHORITY(CONTROL)
 AUTH SYS005
 AUTH SYSJRI
 AUTH SYSLHU
 AUTH SYSTME
 AUTH PROPRI
 AUTH STCPRC
 SETSYS JES2
   NOCONVERSION

 SETSYS -
   EXITON(TV)
 SETSYS -
   NOREQUEST


 SETSYS -
   NODEBUG

   NOEMERGENCY
 SETSYS -
   NOSWAP
 SETSYS -
   USERDATASETSERIALIZATION


/* SETSYS - */
/*    DATAMOVER(DFDSS)     *


 SETSYS -
   OPTIMUMDASDBLOCKING


 /*                                                           */
 /*************************************************************/
 /*                      DFHSM EXITS                          */
 /*************************************************************/
 /*                     NONE ACTIVATED                        */
 /*************************************************************/
 /*     DFHSM LOGGING, JOURNALING, AND REPORTING OPTIONS      */
 /*************************************************************/
 /*                                                           */
 SETSYS -
   JOURNAL(RECOVERY)

 SETSYS -
   SMF(240)



 SETSYS -
   SYS1DUMP

 SETSYS SYSOUT(X 1)

 SETSYS -
   ACTLOGMSGLVL(FULL)
   ACTLOGTYPE(SYSOUT)      /

 /*
 /**************************
 /*                  DFHSM M
 /**************************
 /*



 SETSYS MONITOR(MIGRATIONCONTROLDATASET(90))

 SETSYS MONITOR -
        (STARTUP
         NOVOLUME)

 SETSYS MONITOR -
        (NOSPACE
       JOURNAL(70 1) MCDS(90


 /*
 /**************************
 /*        DFHSM COMMON SERV
 /**************************
 /*
 SETSYS -
            CSALIMITS
             (MWE(4))


 SETSYS CSALIMITS -
              (MAXIMUM(200)
               ACTIVE(90)
               INACTIVE(30))
 /*
 /**************************
 /*           DFHSM TAPE HAN
 /**************************
 /*
 SETSYS -
   DEFERMOUNT

 SETSYS -
   TAPEHARDWARECOMPACT


 SETSYS -
   PARTIALTAPE(
    BACKUP(MARKFULL)
    MIGRATION(MARKFULL))
 SETSYS TAPEUTILIZATION(UNITTYPE(3490) PERCENTFULL(100))
 SETSYS TAPEUTILIZATION(LIBRARYBACKUP PERCENTFULL(100))
 SETSYS TAPEUTILIZATION(LIBRARYMIGRATION PERCENTFULL(100))
 SETSYS TAPESPANSIZE(4000)
 SETSYS -
   INPUTTAPEALLOCATION(NOWAIT)   /* DON'T WAIT ON TAPE        */ -
   OUTPUTTAPEALLOCATION(NOWAIT)  /* ALLOCATION FOR INPUT,     */ -
   RECYCLETAPEALLOCATION(NOWAIT) /* OUTPUT, OR RECYCLE.       */
 SETSYS -
   SELECTVOLUME(             /* VOLUME SELECTION AT TAPE END  */ -
   BACKUP(SCRATCH)          /* OF VOLUME COMES FROM THE      */ -
   MIGRATION(SCRATCH)       /* DFHSM-OWNED POOL OF TAPE VOLS.*/ -
   DUMP(SCRATCH))
 SETSYS -
   RECYCLEPERCENT(40)        /* INFORM STORAGE ADMINISTRATOR  */
                             /* THAT A BACKUP TAPE SHOULD BE  */
                             /* RECYCLED WHEN THE AMOUNT OF   */
                             /* VALID DATA ON THE TAPE FALLS  */
                             /* BELOW 25%.                    */
 SETSYS -
   RECYCLEINPUTDEALLOCFREQUENCY(BACKUP(1) MIGRATION(1))
 SETSYS -
   TAPEDELETION(             /* RETURN TAPES THAT NO LONGER   */ -
    BACKUP(SCRATCH)          /* CONTAIN VALID DATA TO THE     */ -
    MIGRATION(SCRATCH)       /* DFHSM-OWNED POOL.             */ -
    DUMP(SCRATCH))
 SETSYS -
   USERUNITTABLE(VTSS)        /*NO ESOTERIC TAPE UNITS        */
                             /* DEFINED TO DFHSM. CTAPE1      */
 SETSYS -
   MOUNTWAITTIME(15)         /* WAIT 10 MINUTES BEFORE        */
                             /* ISSUING ADDITIONAL MESSAGES   */
                             /* TO OPERATORS FOR TAPE MOUNTS. */
 SETSYS -
   UNITNAME(VTSS)            /* START OUT WITH 3480X AS UNIT  */
                             /* TO BE USED FOR SCRATCH TAPES  */
                             /* DURING BACKUP OR DUMP.        */
 SETSYS -
   TAPEINPUTPROMPT(MIGRATIONTAPES(NO))  /* TAPE OPER MSGS    */
 SETSYS -
   TAPEINPUTPROMPT(BACKUPTAPES(NO))     /* TAPE OPER MSGS    */
 SETSYS -
   TAPEINPUTPROMPT(DUMPTAPES(NO))       /* TAPE OPER MSGS    */
 /*                                                           */
 /*************************************************************/
 /*         DFHSM CONTROL DATA SET BACKUP PARAMETERS          */
 /*************************************************************/
 /*                                                           */
 SETSYS CDSVERSIONBACKUP(    /* MAINTAIN FOUR BACKUP VERSIONS */ -
        BACKUPCOPIES(4)      /* OF THE CONTROL DATA SETS ON   */ -
  BACKUPDEVICECATEGORY(DASD)) /* TAPE OF UNIT TYPE CTAPE1     */
 /*                                                           */
 /*************************************************************/
 /*               DFHSM RACF SPECIFICATIONS                   */
 /*************************************************************/
 /*                                                           */
 SETSYS -
   NORACFIND                 /* DO NOT PUT RACF-INDICATION    */
                             /* ON BACKUP AND MIGRATION       */
                             /* COPIES OF DATA SETS.          */
 SETSYS -
   TAPESECURITY(EXPIRATION)  /* USE RACF TO PROVIDE TAPE      */
                             /* SECURITY.                     */
 SETSYS -
   NOERASEONSCRATCH          /* DON'T ALLOW ERASE-ON-SCRATCH  */
                             /* ON ANY DFHSM BACKUP VERSIONS  */
                             /* AND MIGRATION COPIES.         */
 SETSYS -
   PROFILEBACKUP             /* BACKUP DISCRETE RACF PROFILES */
 /*                                                           */
 /*************************************************************/
 /*                DFHSM COMPACTION OPTIONS                   */
 /*************************************************************/
 /*                                                           */
 SETSYS -
   COMPACT(DASDMIGRATE)      /* USE COMPACTION FOR            */
                             /* MIGRATION TO DASD.            */
 SETSYS -
     COMPACTPERCENT(20)      /* DON'T COMPACT DATA UNLESS     */
                             /* HISTORICAL DATA SHOWS SAVINGS */
                             /* OF AT LEAST 20%.              */
 SETSYS -
   OBJECTNAMES(OBJ,OBJECT,LOAD,LOADLIB,LOADMODS,LINKLIB) -
   SOURCENAMES(ASM,COBOL,FORT,PLI,SOURCE,SRC,SRCLIB,SRCE,CNTL,JCL)
 /*                                                           */
 /*************************************************************/
 /*   DFHSM PATCH ADD 05.09.2011 FOR ZOS 1.12                 */
 /*   DFHSM PATCH SUPPRESS 07.11.11 APRES PTF                 */
 /*************************************************************/
 /* PATCH .MGCB.+ED BITS(......0.)                            */
 /*                                                           */
 /*************************************************************/
 /*               DFHSM MIGRATION PARAMETERS                  */
 /*************************************************************/
 /*                                                           */
 SETSYS -
   TAPEMIGRATION(ML2TAPE)    /* NO TAPE MIGRATION  CTAPE1     */
 SETSYS -
   MIGUNITNAME(VTSS)     /* NO TAPE MIGRATION             */
 SETSYS -
   ML2RECYCLEPERCENT(40) /* NO TAPE MIGRATION             */
 SETSYS -
   TAPEMAXRECALLTASKS(10) /* NO TAPE MIGRATION             */
 SETSYS -
   PRIMARYSPMGMTSTART         /*SPECIFY PROCESSING WINDOW FOR */ -
   (0540 0756)                /*PRIMARY SPACE MANAGEMENT      */
 DEFINE -
   PRIMARYSPMGMTCYCLE        /* RUN PRIMARY SPACE MGMT        */ -
   (YYYYYYY                  /* DIM. A COMPTER 09.10.2017 PHR */ -
   CYCLESTARTDATE(1990/06/11))
 SETSYS -
     DAYS(1)                 /* DATA SET MUST BE UNREFERENCED */
                             /* FOR 10 DAYS BEFORE IT WILL BE */
                             /* MIGRATED.                     */
 SETSYS -
     MIGRATEPREFIX(HSMSCT)
                             /* PROVIDE THE HIGH-LEVEL        */
                             /* QUALIFIER OF THE NAMES OF     */
                             /* MIGRATED DATA SETS.           */
 SETSYS -
   NOINTERVALMIGRATION       /* PERFORM MIGRATION THROUGHOUT  */
                             /* THE DAY.                      */
 SETSYS -
   SECONDARYSPMGMTSTART(0515  /*SPECIFY PROCESSING WINDOW FOR */ -
     0539)
                              /*SECONDARY SPACE MANAGEMENT    */
 DEFINE -
   SECONDARYSPMGMTCYCLE      /* RUN SECONDARY SPACE MANAGEMENT*/ -
   (YYYYYYY                  /* DIM. A COMPTER 09.10.2017 PHR */ -
   CYCLESTARTDATE(1990/06/11)) /* STARTING JUNE 11, 1990.       */
 SETSYS -
   MIGRATIONCLEANUPDAYS(14 7) /* KEEP MCDS STATISTICS RECORDS */
                             /* FOR RECALLED DATA SETS FOR    */
                             /* 14 DAYS, AND VOLUME OR DAILY  */
                             /* STATISTICS RECORDS FOR 7 DAYS.*/
 SETSYS -
     MIGRATIONLEVEL1DAYS(14) /* DATA SET MIGRATED TO ML2      */
                             /* AFTER 45 DAYS UNREFERENCED.   */
 SETSYS -
     MAXEXTENTS(5)           /* DATA SET EXTENT REDUCTION     */
                             /* OCCURS WHEN EXTENTS REACH 10. */
 SETSYS -
     MAXRECALLTASKS(14)      /* MAXIMUM OF 15 RECALL TASKS   */
                             /* ALLOWED AT ONE TIME.          */
 SETSYS -
   RECALL(PRIVATEVOLUME(LIKE)) /* AUTO RECALL PLACES          */
                             /* UNPOOLED DATA SETS ON PRIMARY */
                             /* VOLUME MARKED PUBLIC, STORAGE,*/
                             /* OR PRIVATE, THAT HAS LIKE     */
                             /* CHARACTERISTICS.              */
 SETSYS -
   SCRATCHFREQUENCY(7)       /* KEEP LIST DATA SETS 7 DAYS.   */ -
   EXPIREDDATASETS(SCRATCH)  /* DON'T SCRATCH EXPIRED DATA   */
                             /* SETS.                         */
 SETSYS -
   NOSMALLDATASETPACKING     /* DON'T DO SMALL D.S. PACKING.  */
 SETSYS -
   MAXMIGRATIONTASKS(9)      /* MAXIMUM OF THREE AUTOMATIC    */
                             /* VOLUME MIGRATION TASKS        */
                             /* TO BE PREFORMED CONCURRENTLY. */
 /*                                                           */
 /*************************************************************/
 /*                 DFHSM BACKUP PARAMETERS                   */
 /*************************************************************/
 /*                                                           */
 DEFINE BACKUP(YYYYYYN       /* BACKUP CYCLE OF ONE DAY.      */ -
   CYCLESTARTDATE(1990/06/11)) /* RUN BACKUP EVERY DAY TO A     */
                             /* SINGLE BACKUP VOLUME,         */
                             /* STARTING MONDAY,              */
                             /* JUNE 11, 1990.                */
 SETSYS -
   BACKUP(TAPE(VTSS))        /* ACTIVATE BACKUP AND DUMP      */
 SETSYS -
   AUTOBACKUPSTART(0500 0800 0930)
                             /* PROVIDE TIME TO START AUTO    */
                             /* BACKUP, LATE START TIME,      */
                             /* AND QUIESCE TIME.  AUTOBACKUP */
                             /* DISABLED UNTIL TIMES SPECIFIED*/
 SETSYS -
   BACKUPPREFIX(HSMSCTB)
                             /* PROVIDE THE HIGH-LEVEL        */
                             /* QUALIFIER OF THE NAMES OF     */
                             /* BACKUP DATA SETS.             */
 SETSYS -
   VERSIONS(1)               /* KEEP ONE VERSION OF BACKED-UP */ -
   FREQUENCY(1)              /* DATA SET.                     */
 SETSYS -
   MAXBACKUPTASKS(05)        /* MAX OF 3 BACKUP TASKS AT ONCE */ -
   NOSKIPABPRIMARY           /* BACK UP ALL PRIMARY VOLUMES   */
                             /* THAT HAVE AUTO BACKUP         */
 SETSYS SPILL(TAPE(VTSS))    /* ATTRIBUTE.                    */
                             /* DATA SETS FROM FULL DAILY     */
                             /* DASD VOLUMES TO SPILL VOLUMES.*/
 /*                                                           */
 /*                                                           */
 SETSYS RECYCLEOUTPUT(BACKUP(VTSS) MIGRATION(VTSS))
 /*                                                           */
 SETSYS TAPEMIGRATION(ML2TAPE(TAPE(VTSS)))
 /*                                                           */
 /*                                                           */
 SETSYS -
   INCREMENTALBACKUP(CHANGEDONLY)
 /*INCREMENTALBACKUP(ORIGINAL)    MAKE ORIGINAL BACKUP COPIES */
                             /* OF DATA SETS DESPITE SETTING  */
                             /* OF CHANGE BIT.                */
 /*                                                           */
 /*************************************************************/
 /*           DFHSM FULL VOLUME DUMP PARAMETERS               */
 /*************************************************************/
 /*                                                           */
 DEFINE -
   DUMPCYCLE(NNNNNNY         /* 7-DAY DUMP CYCLE WITH DUMP    */ -
    CYCLESTARTDATE(1990/06/11)) /* DONE ONLY ON SEVENTH DAY,    */
                             /* STARTING ON MONDAY, JUNE 11,  */
                             /* 1990, SO DUMPS CAN OCCUR ON   */
                             /* SUNDAY.                       */
 DEFINE DUMPCLASS(WEEKLY  DAY(7) RETPD(30) AUTOREUSE NORESET -
   DATASETRESTORE VTOCCOPIES(5))
 DEFINE DUMPCLASS(WEEKLY2  DAY(7) RETPD(45) AUTOREUSE NORESET -
   DATASETRESTORE VTOCCOPIES(7))
                             /* DEFINE A DUMP CLASS NAMED     */
                             /* SUNDAY THAT WILL BE AUTO      */
                             /* DUMPED ON THE SEVENTH DAY OF  */
                             /* OF THE CYCLE.  EACH DUMP COPY */
                             /* IS HELD FOR 27 DAYS, AND      */
                             /* THE TAPE IS REUSED WHEN       */
                             /* SCRATCHED. RESET NO DATA SET  */
                             /* CHANGE BITS AND ALLOW TSO     */
                             /* USERS TO RESTORE DATA SETS    */
                             /* FROM DUMP TAPE. AT MOST, KEEP */
                             /* FOUR DUMP VTOC COPY DATA SETS */
                             /* FOR A VOLUME.                 */
 DEFINE DUMPCLASS(QUARTERS FREQUENCY(90) RETPD(356) -
   NOAUTOREUSE NODATASETRESTORE NORESET -
   DISPOSITION('OFF-SITE') VTOCCOPIES(0))
                             /* DEFINE A DUMP CLASS NAMED     */
                             /* QUARTERS THAT WILL BE AUTO    */
                             /* DUMPED EVERY THREE MONTHS AND */
                             /* HELD FOR ONE WEEK LESS THAN   */
                             /* A YEAR. USE ONLY FOR FULL     */
                             /* RESTORES. HOLD THE TAPE       */
                             /* OFF-SITE. KEEP NO VTOC COPIES */
                             /* FOR THIS CLASS.               */
 SETSYS -
   AUTODUMPSTART(1755 2000 2200)
                             /* PROVIDE TIME TO START AUTO    */
                             /* DUMP, LATE START TIME,        */
                             /* AND QUIESCE TIME.  AUTO DUMP  */
                             /* DISABLED UNTIL TIMES SPECIFIED*/
 SETSYS -
   DUMPIO(3,2)               /* BUFFER 5 TRACKS WHEN DUMPING, */
                             /* 2 TRACKS DURING DATA MOVEMENT */
 SETSYS -
   MAXDUMPTASKS(3)           /* ALLOW MAXIMUM OF 3 DUMP TASKS */
                             /* AT ONE TIME.                  */
 ADDVOL HSM001 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)

 ADDVOL HSM002 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)

 ADDVOL HSM003 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)

 ADDVOL HSM004 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)

 ADDVOL HSM005 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)

 ADDVOL HSM006 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)

 ADDVOL HSM007 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)

 ADDVOL HSM008 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)

 ADDVOL HSM009 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)

 ADDVOL HSM010 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)

 ADDVOL HSM011 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)

 ADDVOL HSM012 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)

 ADDVOL HSM013 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)

 ADDVOL HSM014 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)

 ADDVOL HSM015 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)

 ADDVOL HSM016 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)

 ADDVOL HSM017 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)

 ADDVOL HSM018 -
        UNIT(3390) -
        MIGRATION  -
        (MIGRATIONLEVEL1 -
         NOSMALLDATASETPACKING) -
        THRESHOLD(80)

 /*                                                           */

./ ADD NAME=ASMUX04
//SYSPGR1J JOB 1000,'P-GRANIE',REGION=4M,                               00000100
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00000200
//*------------------------------------------------------------         00000300
//GO        EXEC ASMHCL,PARM.C='NODECK,OBJECT',PARM.L='MAP,LIST,RENT'   00000600
//SYSLIB    DD DSN=SYS1.MACLIB,DISP=SHR                                 00000700
//*SYSIN     DD DSN=SYSEXT1.PSF.EXIT($APSUX04),DISP=SHR                 00000800
//SYSIN     DD DSN=SYST.MVS.SOURCE($$PSUX04),DISP=SHR                   00000902
//L.SYSIN   DD *                                                        00001000
 INCLUDE SYSLIB1(DSMTFFIB)                                              00001100
 NAME APSUX04(R)                                                        00001200
//*L.SYSLMOD DD DSN=MVS1.S3081.LINKLIB,DISP=SHR                         00001300
//L.SYSLMOD DD DSN=SYSPGR.LOAD,DISP=SHR                                 00002000
//L.SYSLIB1 DD DSN=SYSEXT1.LINKLIB,DISP=SHR                             00003001

./ ADD NAME=BATCNTLE
PXXX.VSAM.BATCNTLE                                                      00010000
PXXX.VSAM.BATCNTLE.DATA                      EXPL55                     00020000
PXXX.VSAM.BATCNTLE.INDEX                     EXPL55                     00030000

./ ADD NAME=CACHE271
//SYSPGR1  JOB 1000,'PH-GRANIE',REGION=2M,                              00000100
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPGR          00000200
//**********************************************************************00000300
//*  POUR 3990 IBM AVANT MANIP: SUBSYSTEM ET NVS OFF                    00000400
//*  DES ADR 100 ET 400                                                 00000500
//**********************************************************************00000600
//* DESACTIVE LE SUBSYSTEM CACHE GLOBALEMENT                            00000700
//**********************************************************************00000800
//*                                                                     00000900
//SUBSOFF  EXEC PGM=IDCAMS                                              00001000
//SYSPRINT DD SYSOUT=*                                                  00001100
//SYSIN DD *                                                            00002000
  SETCACHE -                                                            00003000
  VOLUME(DEV002) -                                                      00004000
  SUBSYSTEM -                                                           00005000
  UNIT(3380) -                                                          00006000
  OFF                                                                   00007000
/*                                                                      00008000
//**********************************************************************00009000
//*   ACTIVE OU PAS NON VOLATILE STORAGE SUR UN CONTROLEUR)             00010000
//**********************************************************************00020000
//NVSOFF   EXEC PGM=IDCAMS                                              00030000
//SYSPRINT DD SYSOUT=*                                                  00040000
//SYSIN DD *                                                            00050000
  SETCACHE -                                                            00060000
  VOLUME(DEV002) -                                                      00070000
  UNIT(3380)     -                                                      00080000
  NVS -                                                                 00090000
  OFF                                                                   00100000
/*                                                                      00110000
//**********************************************************************00120000
//* DESACTIVE LE SUBSYSTEM CACHE GLOBALEMENT ADR 400                    00130000
//**********************************************************************00140000
//*                                                                     00150000
//SUBSOFF  EXEC PGM=IDCAMS                                              00160000
//SYSPRINT DD SYSOUT=*                                                  00170000
//SYSIN DD *                                                            00180000
  SETCACHE -                                                            00190000
  VOLUME(MVS105) -                                                      00200000
  SUBSYSTEM -                                                           00210000
  UNIT(3390) -                                                          00220000
  OFF                                                                   00230000
/*                                                                      00240000
//**********************************************************************00250000
//*   ACTIVE OU PAS NON VOLATILE STORAGE SUR UN CONTROLEUR)             00260000
//**********************************************************************00270000
//NVSOFF   EXEC PGM=IDCAMS                                              00280000
//SYSPRINT DD SYSOUT=*                                                  00290000
//SYSIN DD *                                                            00300000
  SETCACHE -                                                            00310000
  VOLUME(MVS105) -                                                      00320000
  UNIT(3390)     -                                                      00330000
  NVS -                                                                 00340000
  OFF                                                                   00350000
/*                                                                      00360000

./ ADD NAME=CACHE272
//SYSPGR1  JOB 1000,'PH-GRANIE',REGION=2M,                              00000100
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPGR          00000200
//**********************************************************************00000300
//*  POUR 3990 IBM APRES MANIP: SUBSYSTEM ET NVS ON                     00000401
//*  DES ADR 100 ET 400                                                 00000500
//**********************************************************************00000600
//*    ACTIVE LE SUBSYSTEM CACHE GLOBALEMENT                            00000701
//**********************************************************************00000800
//*                                                                     00000900
//SUBON    EXEC PGM=IDCAMS                                              00001002
//SYSPRINT DD SYSOUT=*                                                  00001100
//SYSIN DD *                                                            00002000
  SETCACHE -                                                            00003000
  VOLUME(DEV002) -                                                      00004000
  SUBSYSTEM -                                                           00005000
  UNIT(3380) -                                                          00006000
  ON                                                                    00007001
/*                                                                      00008000
//**********************************************************************00009000
//*   ACTIVE OU PAS NON VOLATILE STORAGE SUR UN CONTROLEUR)             00010000
//**********************************************************************00020000
//NVSON    EXEC PGM=IDCAMS                                              00030002
//SYSPRINT DD SYSOUT=*                                                  00040000
//SYSIN DD *                                                            00050000
  SETCACHE -                                                            00060000
  VOLUME(DEV002) -                                                      00070000
  UNIT(3380)     -                                                      00080000
  NVS -                                                                 00090000
  ON                                                                    00100001
/*                                                                      00110000
//**********************************************************************00120000
//*    ACTIVE LE SUBSYSTEM CACHE GLOBALEMENT ADR 400                    00130001
//**********************************************************************00140000
//*                                                                     00150000
//SUBON    EXEC PGM=IDCAMS                                              00160002
//SYSPRINT DD SYSOUT=*                                                  00170000
//SYSIN DD *                                                            00180000
  SETCACHE -                                                            00190000
  VOLUME(MVS105) -                                                      00200000
  SUBSYSTEM -                                                           00210000
  UNIT(3390) -                                                          00220000
  ON                                                                    00230001
/*                                                                      00240000
//**********************************************************************00250000
//*   ACTIVE OU PAS NON VOLATILE STORAGE SUR UN CONTROLEUR)             00260000
//**********************************************************************00270000
//NVSON    EXEC PGM=IDCAMS                                              00280002
//SYSPRINT DD SYSOUT=*                                                  00290000
//SYSIN DD *                                                            00300000
  SETCACHE -                                                            00310000
  VOLUME(MVS105) -                                                      00320000
  UNIT(3390)     -                                                      00330000
  NVS -                                                                 00340000
  ON                                                                    00350001
/*                                                                      00360000

./ ADD NAME=CATCVTM
//CATCVTM  JOB 1000,MVS,REGION=8M,PERFORM=4,                            00010002
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//*------------------------------------------------------
//* CATALOG.MASTER.ZOS110.BRN2
//*------------------------------------------------------
//* GDE: CBIPO MVS CUSTOMIZATION
//* DOC: THIS JOB CREATES THE IDCAMS CONTROL STATEMENTS REQUIRED TO
//*      DEFINE THE ENTRIES IN YOUR EXISTING MVS MASTER CATALOG
//*      INTO A NEW MASTER CATALOG.
//*
//* WARNING: THIS JOB MAY EXCEED 1 MINUTE OF CPU TIME
//*
//* STEPNAME     FUNCTION
//*
//* DELET1       DELETES CONVERT.MASTER.ZOS110.BRN2 DATA SET WHICH WI LL
//*              BE ALLOCATED IN CREATE5.
//*
//* ASSEM2       ASSEMBLY OF INPUT PARAMETERS
//*              PASSED VIA SYSPARM.
//*
//* LIST3        LISTS THE SOURCE CATALOG.
//*
//* GENER4       EXECUTES MCNVTCAT(CBIPO-SUPPLIED PROGRAM)
//*              TO GENERATE IDCAMS CONTROL STATEMENTS FROM
//*              LISTCAT OUTPUT.
//*
//* CREATE5      CREATES A PARTOTOONED DATA SET (CONVERT.MASTER.ZOS110.BRN2)
//*              FROM GENER4 OUTPUT.
//*
//* NOTE: THIS JOB IS DESIGNED TO RUN UNDER YOUR CBIPO SYSTEM.
//*       IF YOU ARE RUNNING UNDER ANOTHER SYSTEM ENSURE THAT
//*       THE CORRECT VERSION OF MCNVTCAT IS ACCESSED.
//*
//*
//*********************************************************************
//*
//*  DELET1   DELETES CONVERT.MASTER.ZOS110.BRN2 DATA SET
//*           WHICH WILL BE ALLOCATED IN STEP: CREATE5
//*
//DELET1  EXEC PGM=IEFBR14,REGION=512K
//DD1      DD  DSN=CONVERT.MASTER.ZOS110.BRN2,DISP=(OLD,DELETE),
//             VOL=SER=ESA2M2,UNIT=3390
//*
//*********************************************************************
//*
//*  ASSEM2   ASSEMBLY OF INPUT PARAMETERS
//*
//ASSEM2  EXEC PGM=ASMBLR,REGION=512K,
//             COND=EVEN,
//             PARM='DECK,NOOBJ'
//STEPLIB  DD  DSN=IPO1.LINKLIB,DISP=SHR
//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))
//SYSPRINT DD  SYSOUT=*
//*YSLIB   DD  DSN=ESA510.SAMPLIB,DISP=SHR
//SYSPUNCH DD  DSN=&&CARD,DISP=(,PASS),
//             UNIT=SYSALLDA,SPACE=(CYL,(1,1))
//SYSIN    DD  *
  PUNCH ' LISTCAT ALL OUTFILE(OUTFILE) -'
  PUNCH '   CAT(CATALOG.MASTER.ZOS110.BRN2)'
.END     END
/*
//*********************************************************************
//* LIST3    LISTS VSAM SOURCE CATALOG TO BE CONVERTED
//*
//LIST3   EXEC PGM=IDCAMS,REGION=640K,
//             COND=(0,NE,ASSEM2)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DSN=&&CARD,DISP=(OLD,PASS)
//OUTFILE  DD  DSN=&&OUT,DISP=(,PASS),
//             UNIT=SYSALLDA,SPACE=(CYL,(3,3)),
//             DCB=(RECFM=VBA,LRECL=125,BLKSIZE=625)
/*
//*********************************************************************
//*  GENER4:   EXECUTE MCNVTCAT(CBIPO-SUPPLIED PROGRAM)
//*            TO GENERATE IDCAMS CONTROL CARDS FROM
//*            LISTCAT OUTPUT.
//*
//GENER4  EXEC PGM=MCNVTCAT,REGION=512K,                     /* .NU. */
//             PARM='CATALOG.MASTER.ZOS110.BRN2',
//             COND=((0,NE,ASSEM2))                          /* .RU. */
//STEPLIB  DD  DSN=IPO1.LINKLIB,DISP=SHR
//SYSEMSG  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//LIST     DD  DSN=&&OUT,DISP=(OLD,PASS)
//CONTR1   DD  DSN=&&CARD1,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR2   DD  DSN=&&CARD2,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR3   DD  DSN=&&CARD3,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR4   DD  DSN=&&CARD4,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR5   DD  DSN=&&CARD5,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR6   DD  DSN=&&CARD6,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR7   DD  DSN=&&CARD7,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTRS   DD  DSN=&&OUTDS,DISP=(NEW,PASS),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//*********************************************************************
//*  CREATE5: CREATES A PARTOTOONED DATA SET FROM GENER4 OUTPUT.
//*
//CREATE5 EXEC PGM=ICEGENER,REGION=512K,
//             COND=EVEN
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=&&OUTDS,DISP=(OLD,PASS)
//SYSUT2   DD  DSN=CONVERT.MASTER.ZOS110.BRN2,DISP=(NEW,CATLG),
//             VOL=SER=ESA2M2,UNIT=3390,
//             DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB),
//             SPACE=(CYL,(2,2,2)),LABEL=EXPDT=00000
//SYSIN    DD  *
  GENERATE MAXNAME=7,MAXFLDS=7,MAXGPS=7
        MEMBER  NAME=(ALIAS)                          1
ALIAS   RECORD  IDENT=(5,'ALIAS',4),FIELD=(80)        2
        MEMBER  NAME=(IMPORT)                         3
IMPORT  RECORD  IDENT=(6,'IMPORT',4),FIELD=(80)       4
        MEMBER  NAME=(NONVSAM)                        5
NONVSAM RECORD  IDENT=(7,'NONVSAM',4),FIELD=(80)      6
        MEMBER  NAME=(SYSCTLG)                        7
SYSCTLG RECORD  IDENT=(7,'SYSCTLG',4),FIELD=(80)      8
        MEMBER  NAME=(SYS1)                           9
SYS1    RECORD  IDENT=(4,'SYS1',4),FIELD=(80)        10
        MEMBER  NAME=(GDG)                           11
GDG     RECORD  IDENT=(3,'GDG',4),FIELD=(80)         12
        MEMBER  NAME=(MISC)                          13
MISC    RECORD  IDENT=(4,'MISC',4),FIELD=(80)        14
/*

./ ADD NAME=CATDEP
//SYSCAT01 JOB 1000,'SYSTEME',REGION=2M,                                00030000
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=SYSPLA          00040000

./ ADD NAME=CATEXT
//SYSCAT01 JOB 1000,'SYSTEME',REGION=2M,                                00030001
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=SYSPLA          00040001
//*------------------------------------------------------------         00050001
//*    AGRANDISSEMENT DU CATALOG CATALOG.GIARDX                         00060001
//*        ETAPE 1 LISTING DES ENTREES DU CATALOG                       00070001
//*                SAUVEGARDE DU DISQUE COMPLET PAR DFDSS               00080001
//*------------------------------------------------------------         00090001
//STEP1 EXEC PGM=IDCAMS                                                 00100001
//SYSPRINT DD DSN=SYST.GIARDX1.LISTING,DISP=(,CATLG),UNIT=3390,         00110001
//       SPACE=(CYL,(1,1),RLSE),VOL=SER=SYST09                          00120001
//SYSIN DD *                                                            00130001
 LISTCAT CATALOG(CATALOG.GIARDX)                                        00140001
//                                                                      00150001
//SYSCAT02 JOB 1000,'SYSTEME',REGION=2M,                                00160001
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=SYSPLA          00170001
//*------------------------------------------------------------         00180001
//*    AGRANDISSEMENT DU CATALOG CATALOG.GIARDX                         00190001
//*        ETAPE 2 REPRO DU GIARDX DANS GIARDX.BACKUP                   00200001
//*------------------------------------------------------------         00210001
//STEP1 EXEC PGM=IDCAMS                                                 00220001
//SYSPRINT DD SYSOUT=*                                                  00230001
//ALTERV   DD UNIT=3390,VOL=SER=MVS105,DISP=(,CATLG),                   00240001
//          DSN=CATALOG.GIARDX.BACKUP,SPACE=(CYL,(1,1))                 00250001
//SYSIN    DD  *                                                        00260001
    EXPORT CATALOG.GIARDX   -                                           00270001
           OUTFILE(ALTERV) TEMPORARY                                    00280001
//                                                                      00290001
//SYSCAT03 JOB 1000,'SYSTEME',REGION=2M,                                00300001
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=SYSPLA          00310001
//*------------------------------------------------------------         00320001
//*    AGRANDISSEMENT DU CATALOG CATALOG.GIARDX                         00330001
//*        ETAPE 3 DELETE DU  CATALOGUE GIARDX                          00340001
//*                DEFINE DU GIARDX AVEC TAILLE ADEQUATE                00350001
//*                IMPORT   BACKUP DANS NEW GIARDX                      00360001
//*------------------------------------------------------------         00370001
//STEP1 EXEC PGM=IDCAMS                                                 00380001
//SYSPRINT DD SYSOUT=*                                                  00390001
//SYSIN    DD  *                                                        00400001
  DELETE CATALOG.GIARDX RECOVERY USERCATALOG                            00401001
  DEFINE   -                                                            00410001
  USERCATALOG             /*  MASTERCATALOG             -  MCAT    */ - 00420001
 (                  /* £££   BEGIN CLUSTER-LEVEL PARAMETERS    £££ */ - 00430001
 ICFCAT                   /*  ICFCATALOG                -  ICFCAT  */ - 00440001
 NAME(CATALOG.GIARDX) -                                                 00450001
 VOL(IARD01)              /* VOLUMES(VOLSER)            - VOL      */ - 00460001
 CYL(6 1)                 /*  TRACKS(PP SS)             -   TRK    */ - 00470001
 SHR(3 4)      -                                                        00480001
 NWCK                     /* NOWRITECHECK       DEFAULT - NWCK     */ - 00490001
 IMBD                     /* IMBED              DEFAULT - IMBD     */ - 00500001
 REPL                     /*   REPLICATE                -  REPL    */ - 00510001
 BUFSP(57856)             /* BUFFERSPACE(BBBB)          - BUFSP,   */ - 00520001
 STRNO(2)                 /* STRNO(2)                   - STRNO    */ - 00530001
 BUFND(3)                 /* BUFND(3)                   - BFND     */ - 00540001
 BUFNI(3)                 /* BUFNI(3)                   - BFNI     */ - 00550001
 )                   /* £££ END OF CLUSTER-LEVEL PARAMETERS    £££ */ - 00560001
 DATA                /* *** DATA COMPONENT IS TO BE SPECIFIED. *** */ - 00570001
 (                   /* *** BEGIN DATA-LEVEL PARAMETERS        *** */ - 00580001
 CYL(4 1)                 /* TRACKS(PP SS)              - TRK      */ - 00590001
 CISZ(4096)               /* CONTROLINTERVALSIZE(DDDD)  - CISZ,    */ - 00600001
 BUFND(4)                 /* CONTROLINTERVALSIZE(DDDD)  - CISZ,    */ - 00610001
 )                   /* *** END OF DATA-LEVEL PARAMETERS       *** */ - 00620001
 INDEX               /* *** INDEX COMPONENT IS TO BE SPECIFIED.*** */ - 00630001
 (                   /* *** BEGIN INDEX-LEVEL PARAMETERS       *** */ - 00640001
 CYL(2 1)                 /* TRACKS(PP SS)              - TRK      */ - 00650001
 BUFNI(4)   /*               CONTROLINTERVALSIZE(IIII)  - CISZ,    */ - 00660001
 )                   /* *** END INDEX-LEVEL PARAMETERS         *** */   00670001
//                                                                      00680001
//SYSCAT04 JOB 1000,'SYSTEME',REGION=2M,                                00681001
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=SYSPLA          00682001
//STEP1   EXEC PGM=IDCAMS                                               00690001
//SYSPRINT DD  SYSOUT=*                                                 00720001
//SYSIN    DD  *                                                        00730001
  IMPORT INDATASET(CATALOG.GIARDX.BACKUP) -                             00740001
       OUTDATASET(CATALOG.GIARDX) ALIAS INTOEMPTY                       00750001
/*                                                                      00760001
//STEP2   EXEC PGM=IDCAMS                                               00770001
//SYSPRINT DD  SYSOUT=*                                                 00800001
//SYSIN    DD  *                                                        00810001
  LISTCAT  CATALOG(CATALOG.GIARDX)                                      00850001
/*                                                                      00860001

./ ADD NAME=COMMAND
S IEF125I                                                               00010000
S    CLRSSTO1                                                           00020000
S PROC161I                                                              00030000
DUMP TITLE='TEST RAYMOND',PARMLIB=01                                    00040000
S IEA061E                                                               00050000
DUMP COMM='TEST RAYMOND',PARMLIB=01                                     00060000
D R,R                                                                   00070000
DUMP COMM='TEST RAYMOND',PARMLIB=00                                     00080000
DUMP COMM='TEST RAYMOND',PARMLIB=00                                     00090000
PA PAGE=PAGE.LOCAL2.LP2                                                 00100000
S IRA405I                                                               00110000
D ASM                                                                   00120000
PD DELETE,PAGE=PAGE.LOCAL2.LP2                                          00130000
D C                                                                     00140000
D C,KEY=SYSCONS                                                         00150000
S MSGDB2S                                                               00160000
D C                                                                     00170000
D C,KEY=SYSCONS                                                         00180000
S MSGDB2S                                                               00190000
AMIDBC,DB2C,SSID,-DIS DB(*)                                             00200000
AMIDBC LGC,STATUS,SET,CONFIG                                            00210000
AMILPAS DBC,DB2C,SSID,-DIS DB(*)                                        00220000
CPAS DBC,DB2C,SSID,-DIS DB(*)                                           00230000
BMCP DBC,DB2C,SSID,-DIS DB(*)                                           00240000

./ ADD NAME=COMMND99
COM='V (A000-A09D,A100-A19D,A200-A29D,A300-A39D,A400-A49D),OFFLINE'     00001004
COM='V (          ),offline'                                     '      00002004
vol exp*                                                                00010003
COM='v (5AAA-5B92),offline'                                     '       00011004
COM='V (5E0A-5E19),offline'                                     '       00012004
COM='V (54AA-5498),offline'                                     '       00013004
COM='V (55A0-5599),offline'                                     '       00014004
COM='V (56AB-5699),offline'                                     '       00015004
COM='V (6AB0-6A97),offline'                                     '       00020004
COM='V (64AA-6499),offline'                                     '       00030004
COM='V (65AA-6599),offline'                                     '       00040004
COM='V (66AD-6699),offline'                                     '       00050004
COM='V (69AD-6995),offline'                                     '       00060004
vol wor*                                                                00061003
        6A2E- 6A5C                                                      00070004
        694B- 6972                                                      00080004
vol dev*                                                                00090005
COM='V (5C3A-5C44),offline'                                     '       00100006
COM='V (593D-5949),offline'                                     '       00110005
COM='V (6C1A-6C26),offline'                                     '       00120005
COM='V (682A-6834),offline'                                     '       00130005
COM='V (5C3A-5c39),offline'                                     '       00140005
COM='V (594b-594c),offline'                                     '       00150005
COM='V (6c17-6c19),offline'                                     '       00160006
COM='V (6825-6829),offline'                                     '       00170005

./ ADD NAME=COPYFIC1
//SYSPGR1  JOB 1000,'SYST-GRANIE',REGION=2M,                            00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPGR          00020001
//SVGSYST  EXEC PGM=ADRSCT,REGION=2048K
//STEPLIB DD DSN=SYST.LOADLIB,DISP=SHR
//***************************************************
//* COPY LOGIQUE DISQUE A DISQUE
//***************************************************
//SYSPRINT DD SYSOUT=*
//SYSIN    DD  *                                                        00160000
         COPY  LOGINDY((HDSD04,3390)) -                                 00170000
               OUTDY((HDSE24,3390)) -                                   00180000
               ALLDATA(*) ALLEXCP   PROCESS(SYS1) -                     00180000
               DS(INCL(**))   -                                         00180000
               TOL(ENQF)
/*                                                                      00240000
//                                                                      00240000

./ ADD NAME=COPYFULL
//SYSPGR1C JOB 1000,'PH-GRANIE',REGION=2M,                              00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//********************************************************************
//* *+ COPIE  FULL DISQUE A DISQUE
//********************************************************************
//COPY1    EXEC PGM=ADRDSSU,REGION=0M
//SYSPRINT DD  SYSOUT=*
//DASD1    DD  DISP=OLD,UNIT=3390,VOL=SER=ESA1B1
//DASD2    DD  DISP=OLD,UNIT=3390,VOL=SER=IPLMIN
//SYSIN    DD  *
      COPY  FULL             -
            INDDNAME(DASD1)  -
            OUTDDNAME(DASD2) -
            ALLDATA(*)       -
            ALLEXCP          -
            WRITECHECK
/*

./ ADD NAME=COPYIPLV
//SYSPGR1C JOB 1000,'PH-GRANIE',REGION=6M,                              00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//********************************************************************
//* *+ COPIE  FULL DISQUE A DISQUE
//********************************************************************
//* ATTENTION : COPIE BRN2 -----> BRN1   SISPCLIB : IKJDV2 à VIRER!!!
//* ATTENTION : COPIE BRN2 -----> BRN1   SISPCLIB : IKJDV2 à VIRER!!!
//********************************************************************
//COPY1    EXEC PGM=ADRDSSU,REGION=0M
//SYSPRINT DD  SYSOUT=*
//DASD1    DD  DISP=OLD,UNIT=3390,VOL=SER=ESA2B1
//DASD2    DD  DISP=OLD,UNIT=3390,VOL=SER=ESA1B1
//SYSIN    DD  *
      COPY  FULL             -
            INDDNAME(DASD1)  -
            OUTDDNAME(DASD2) -
            ALLDATA(*)       -
            ALLEXCP          -
            WRITECHECK
/*

./ ADD NAME=CSFCKDS
//SYSILEA   JOB (T002550),'IEBCOPY',                                    00001000
//             NOTIFY=&SYSUID,                                          00004200
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00005000
//********************************************************************
//*  Licensed Materials - Property of IBM                            *
//*  5694-A01                                                        *
//*  (C) Copyright IBM Corp. 2002                                    *
//*                                                                  *
//* THIS JCL DEFINES A VSAM CKDS TO USE FOR ICSF                     *
//*                                                                  *
//*  CAUTION: This is neither a JCL procedure nor a complete JOB.    *
//*  Before using this JOB step, you will have to make the following *
//*  modifications:                                                  *
//*                                                                  *
//*  1) Add the job parameters to meet your system requirements.     *
//*  2) Be sure to change CSF to the approrpriate HLQ if you choose  *
//*     not to use the default.                                      *
//*  3) Change xxxxxx to the volid where you want your CKDS to       *
//*     reside. The CKDS needs to be on a permanently resident       *
//*     volume.                                                      *
//*                                                                  *
//********************************************************************
//DEFINE  EXEC PGM=IDCAMS,REGION=4M
//SYSPRINT DD  SYSOUT=*
//SYSIN DD *
  DEFINE CLUSTER (NAME(SYST.CSF.CSFCKDS)   -
                  VOLUMES(SYS801)          -
                  RECORDS(100 50)          -
                  RECORDSIZE(252,252)      -
                  KEYS(72 0)               -
                  FREESPACE(10,10)         -
                  SHAREOPTIONS(2))         -
            DATA (NAME(SYST.CSF.CSFCKDS.DATA) -
                  BUFFERSPACE(100000)      -
                  ERASE                    -
                  WRITECHECK)              -
           INDEX (NAME(SYST.CSF.CSFCKDS.INDEX))
/*

./ ADD NAME=CSFPKDS
//SYSILEA   JOB (T002550),'CSFPKDS',                                    00001001
//             NOTIFY=&SYSUID,                                          00004201
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00005001
//********************************************************************  00006001
//*  Licensed Materials - Property of IBM                            *  00007001
//*  5694-A01                                                        *  00008001
//*  (C) Copyright IBM Corp. 2002, 2003                              *  00009001
//*                                                                  *  00010001
//* THIS JCL DEFINES A VSAM PKDS TO USE FOR ICSF                     *  00020001
//*                                                                  *  00030001
//*  CAUTION: This is neither a JCL procedure nor a complete JOB.    *  00040001
//*  Before using this JOB step, you will have to make the following *  00050001
//*  modifications:                                                  *  00060001
//*                                                                  *  00070001
//*  1) Add the job parameters to meet your system requirements.     *  00080001
//*  2) Be sure to change CSF to the approrpriate HLQ if you choose  *  00090001
//*     not to use the default.                                      *  00100001
//*  3) Change xxxxxx to the volid where you want your PKDS to       *  00110001
//*     reside. The PKDS needs to be on a permanently resident       *  00120001
//*     volume.                                                      *  00130001
//*                                                                  *  00140001
//********************************************************************  00150001
//DEFINE  EXEC PGM=IDCAMS,REGION=4M                                     00160001
//SYSPRINT DD  SYSOUT=*                                                 00170001
//SYSIN DD *                                                            00180001
  DEFINE CLUSTER (NAME(SYST.CSF.CSFPKDS)    -                           00190001
                  VOLUMES(SYS801)           -                           00200001
                  RECORDS(100,50)           -                           00210001
                  RECORDSIZE(350,2800)      -                           00220001
                  KEYS(72 0)                -                           00230001
                  FREESPACE(0,0)            -                           00240001
                  SHAREOPTIONS(2,3))        -                           00250001
            DATA (NAME(SYST.CSF.CSFPKDS.DATA) -                         00260001
                  BUFFERSPACE(100000)       -                           00270001
                  ERASE                     -                           00280001
                  CISZ(8192)                -                           00290001
                  WRITECHECK)               -                           00300001
           INDEX (NAME(SYST.CSF.CSFPKDS.INDEX))                         00310001
/*                                                                      00320001

./ ADD NAME=CSFSETMK
//SYSILEA   JOB (T002550),'IEBCOPY',                                    00001000
//             NOTIFY=&SYSUID,                                          00004200
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00005000
//********************************************************************
//*  Licensed Materials - Property of IBM                            *
//*  5694-A01                                                        *
//*  (C) Copyright IBM Corp. 2002                                    *
//*                                                                  *
//* THIS JCL USES A PASS PHRASE VALUE TO LOAD DES AND PKA MASTER KEYS*
//*                                                                  *
//*  CAUTION: This is neither a JCL procedure nor a complete JOB.    *
//*  Before using this JOB step, you will have to make the following *
//*  modifications:                                                  *
//*                                                                  *
//*  1) Add the job parameters to meet your system requirements.     *
//*  2) The first parameter must be the CKDS name                    *
//*  3) An optional second parameter may be used.  The second        *
//*     parameter must be 16-64 character pass phrase.               *
//*     For the pass phrase any EBCDIC character is allowed.         *
//*     Leading and trailing blanks will be removed.                 *
//*     Embedded blanks are allowed.                                 *
//*     It is STRONGLY recommended that the pass phrase NOT contain  *
//*     any commas.  Commas are used as a delimiter for the          *
//*     parameters of the CSFEUTIL program.                          *
//*  4) The last parameter must be the function PPINIT.              *
//*  5) If the default pass phrase of "Change This Pass Phrase"      *
//*     is desired, the PARM= would look like this:                  *
//*        PARM='CSF.CSFCKDS,PPINIT'                                 *
//*                                                                  *
//*     If a customer selected pass phrase is to be used the         *
//*     PARM= would look like this:                                  *
//*        PARM='CSF.CSFCKDS,Different Pass Phrase,PPINIT'           *
//*                                                                  *
//********************************************************************
//*     User supplied pass phrase of Different Pass Phrase
//STEP     EXEC PGM=CSFEUTIL,
//   PARM='CSF.CSFCKDS,Different Pass Phrase,PPINIT'
//SYSPRINT DD SYSOUT=*
//*

./ ADD NAME=CSI
CA.SM50.CSI                                                             00010001
CC16500                            ;CA.SM50.CSI  SOLVE ACCESS           00011003
CC2D67H                            ;CA.SM50.CSI                         00012001
CC2D670                            ;CA.SM50.CSI                         00013001
CAI.EZPT.CSI                                                            00020001
CAI.EZTPV6R4.CSI                                                        00030001
CAI.SMPCSI.CSI                                                          00040001
GIMMPVIA - VSAM OPEN FAILED                                             00041001
CAI.TLMS.R1105.SMPCSI.CSI                                               00050001
CAI.TLMS.R115.SP2.SMPCSI.CSI                                            00060001
CAI.TLMS.R115.SP3.SMPCSI.CSI                                            00070001
CAI.TLMS.R12.SP0.CSI                                                    00080001
CAI.TLMS.R12.SP06.CSI                                                   00090001
CAP.NMC0.CSI                                                            00100002
CBT2C00                            ;CAP.NMC0.CSI                        00101001
CC11C00                            ;CAP.NMC0.CSI                        00102001
CC18C00                            ;CAP.NMC0.CSI                        00103001
CC2AC00                            ;CAP.NMC0.CSI                        00104001
CC2D66H                            ;CAP.NMC0.CSI                        00105001
CC2D660                            ;CAP.NMC0.CSI                        00106001
CAP.SM50.CSI                                                            00110001
CC16500                            ;CAP.SM50.CSI                        00111001
CC2D67H                            ;CAP.SM50.CSI                        00112001
CC2D670                            ;CAP.SM50.CSI                        00113001
MIM.R115.SP0.SMPE.CSI                                                   00120001
MIM.R116.SP02.SMPE.CSI                                                  00130001
MIM.R117.SP02.CSI                                                       00140001
PLI.V2R3M0.CSI                                                          00150001
SMPE.GLOBAL.CSI                                                         00160001
SMPE.MVS.DLIB.CSI                                                       00170001
SMPE.MVS.TARGET.CSI                                                     00180001
SYS3.ABO.V210.CSI                                                       00190001
SYS3.ADFZCC.V180.CSI                                                    00200001
SYS3.AMIOPS.V202204.DLIB.CSI                                            00210001
SYS3.AMIOPS.V202204.GLOBAL.CSI                                          00220001
SYS3.AMIOPS.V202204.TARGET.CSI                                          00230001
SYS3.APA.V142.CSI                                                       00240001
SYS3.BMC.IOA.CSI                                                        00250001
SYS3.BMCDB2.V202301.DLIB.CSI                                            00260001
SYS3.BMCDB2.V202301.GLOBAL.CSI                                          00270001
SYS3.BMCDB2.V202301.TARGET.CSI                                          00280001
SYS3.BMCINST.V3300.DLIB.CSI                                             00290001
SYS3.BMCINST.V3300.GLOBAL.CSI                                           00300001
SYS3.BMCINST.V3300.TARGET.CSI                                           00310001
SYS3.BMC2A.IOA.CSI                                                      00320001
SYS3.BMC20.CSI                                                          00330001
SYS3.BMC9.IOA.CSI                                                       00340001
SYS3.CA.OPB9.CSI                                                        00350001
CC2D71H                            ;SYS3.CA.OPB9.CSI                    00351001
CC2D710                            ;SYS3.CA.OPB9.CSI                    00352001
CC2HB90                            ;SYS3.CA.OPB9.CSI SOLVE OPERATION ?  00353003
CDHDB90                            ;SYS3.CA.OPB9.CSI                    00354001
SYS3.CADB2.R20.CSI                                                      00360001
SYS3.CAMAT.V11.CSI                                                      00370001
SYS3.CAMAT.V11INC03.CSI                                                 00380001
SYS3.CCS.V150.CSI                                                       00390001
SYS3.CDC.V114.CSI                                                       00400001
SYS3.CICS.V550.CSI                                                      00410001
SYS3.CICSIA.V550.CSI                                                    00420001
SYS3.CICSPA.V540.CSI                                                    00430001
SYS3.CLSS310.CSI                                                        00440001
SYS3.COBOL.V42.CSI                                                      00450001
SYS3.COBOL.V63.CSI                                                      00460001
SYS3.COBOL.V640.CSI                                                     00470001
SYS3.COPYCAT.GLOBAL.CSI                                                 00480001
SYS3.CTG9020.CSI                                                        00490001
SYS3.DB2.V1210.CSI                                                      00500001
SYS3.DITTO.V1R3M0.CSI                                                   00510001
SYS3.ENDEVOR.LP2.CSI                                                    00520001
SYS3.ENDEVOR.V16SP00.CSI                                                00530001
SYS3.EWM.V702.CSI                                                       00540001
SYS3.EZTOKEN.SMPE.CSI                                                   00550001
SYS3.EZTOKEN.VSS.SMPE.CSI                                               00560001
SYS3.FAVER.V450.CSI                                                     00570001
SYS3.FILEMNGR.V141.CSI                                                  00580001
SYS3.FILEMNGR.V151.CSI                                                  00590001
SYS3.FLTANAL.V141.CSI                                                   00600001
SYS3.HYPERBUF.V115.CSI                                                  00610001
SYS3.IBM.RTC406.GLOBAL.CSI                                              00620001
SYS3.IBMDEBUG.V1410.CSI                                                 00630001
SYS3.IDZ.V150.CSI                                                       00640001
SYS3.IGY.V4R2M0.CSI                                                     00650001
SYS3.IMU.V410.CSI                                                       00660001
SYS3.JAVA.V800.CSI                                                      00670001
SYS3.LMS400.CSI                                                         00680001
SYS3.LMS400.DZONE.CSI                                                   00690001
SYS3.LMS400.TZONE.CSI                                                   00700001
SYS3.MATV900.CSI                                                        00710001
SYS3.MIM.CSI                                                            00720001
SYS3.MIM.R12.SP0.CSI                                                    00730001
SYS3.MLCX880.DZONE.CSI                                                  00740001
SYS3.MLCX880.GLOBAL.CSI                                                 00750001
SYS3.MLCX880.TZONE.CSI                                                  00760001
SYS3.MQ.V910.DZONE.CSI                                                  00770001
SYS3.MQ.V910.GLOBAL.CSI                                                 00780001
SYS3.MQ.V910.TZONE.CSI                                                  00790001
SYS3.MQ.V930VUE.DZONE.CSI                                               00800001
SYS3.MQ.V930VUE.GLOBAL.CSI                                              00810001
SYS3.MQ.V930VUE.TZONE.CSI                                               00820001
SYS3.PACBASE.V3R5M10G.DLIB.CSI                                          00830001
SYS3.PACBASE.V3R5M10G.GLOBAL.CSI                                        00840001
SYS3.PACBASE.V3R5M10G.TARGET.CSI                                        00850001
SYS3.PDSMAN.R770.CSI                                                    00860001
SYS3.PGP.V12.CSI                                                        00870001
SYS3.RTC.V606.CSI                                                       00880001
SYS3.SDF2.V1R4M0.CSI                                                    00890001
SYS3.TLMS.R12SP06.GLOBAL.CSI                                            00900001
SYS3.VSS.SMPE.CSI                                                       00910001
SYS3.XMLTKIT.V1R10M0.CSI                                                00920001
SYS3.XMLTKIT.V111.CSI                                                   00930001
SYS3.ZDT.V1204.CSI                                                      00940001
SYS3.ZOSCONCT.V300.CSI                                                  00950001
SYS3.ZOS204.GLOBAL.CSI                                                  00960001
SYS3.ZOS204.MVS.DLIB.CSI                                                00970001
SYS3.ZOS204.MVS.TARGET.CSI                                              00980001
SYS3.ZOS205.DLIB.CSI                                                    00990001
SYS3.ZOS205.GLOBAL.CSI                                                  01000001
SYS3.ZOS205.TARGET.CSI                                                  01010001
SYS3.ZWS.V950.CSI                                                       01020001

./ ADD NAME=CSSLIB
SYS1.CSSLIB                                                             00010000

./ ADD NAME=CTSSYNC
//SYSSCTRA JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=I,                       00010001
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//***********************************************************           00030000
//* MISE EN SCRATCH DES VOLUMES TLMS                                    00040001
//***********************************************************           00050000
//STEP0000  EXEC  PGM=CTSSYNC                                           00340001
//SYSPRINT  DD  SYSOUT=*                                                00350000
//SYSIN     DD  *                                                       00360000
SYNC                                                                    00400001
310000-399999                                                           00410002

./ ADD NAME=DALIASTE
//SYSALIAS JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=I,                       00010012
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020012
//***********************************************************           00030012
//* ATTENTION !!!! UN 2ND JOB POUR MAJ RACF SUR BRNR                    00040012
//*********************************************                         00330012
//DEFALIAS  EXEC  PGM=IDCAMS,REGION=4M                                  00340099
//SYSPRINT  DD  SYSOUT=*                                                00350012
//SYSIN     DD  *                                                       00360012
    DEFINE  ALIAS  (NAME(LAAC)              -                           00430099
            RELATE(CATALOG.LQUAL1))                                     00440099
    DEFINE  ALIAS  (NAME(PAAC)              -                           00450099
            RELATE(CATALOG.GPROD1))                                     00460099
/*                                                                      00580099

./ ADD NAME=DATACLAS
SYS3.MQ.V910.INST.DOCLIB(DCZFSEXT)                                      00010000
//DCZFSEXT JOB  ..........                                              00020000
//MYLIB JCLLIB ORDER=SYS1.SACBCNTL                                      00030000
//*--------------------------------------------------------------------*00040000
//*                                                                    *00050000
//* Description:                                                       *00060000
//*                                                                    *00070000
//*        INSTRUCTIONS BEFORE SUBMITTING                              *00080000
//*                                                                    *00090000
//*        CHANGE JOBCARD                                              *00100000
//*        Change £userid to a valid TSO userid                        *00110000
//*        CHANGE £scds TO YOUR SMS SCDS                               *00120000
//*        DATACLAS is set to DCZFEXT                                  *00130000
//*        Before using this Data Class                                *00140000
//*        you may want to review your ACS routines                    *00150000
//*        Add following to your shops ACS routines if needed          *00160000
//*                                                                    *00170000
//*       WHEN (&RECORG = 'LS' &&                                      *00180000
//*          &DATACLAS = 'DCZFSEXT')                                   *00190000
//*        DO                                                          *00200000
//*         SET &DATACLAS= 'DCZFSEXT'                                  *00210000
//*         EXIT                                                       *00220000
//*        END /* DO */                                                *00230000
//*                                                                    *00240000
//*        ALLOCATE DATASET '£userid.TEST.ISPTABL' with the same DCB   *00250000
//*        parameters as the ISMF DGTTLIB dataset                      *00260000
//*                                                                    *00270000
//*                                                                    *00280000
//* This job will use Naviquest batch to define the Data Class which   *00290000
//* is required to allocate zFS greater than 4 Gigabytes on NON SMS    *00300000
//* managed physical volume.                                           *00310000
//*                                                                    *00320000
//* Please change the JCL to shop standards. You must ensure to follow *00330000
//* the instream instructions and change those                         *00340000
//* variables that are indicated.                                      *00350000
//*                                                                    *00360000
//* Before using this Data Class you may want to review your ACS       *00370000
//* routines.                                                          *00380000
//*                                                                    *00390000
//************************** ADD BEG ***********************************00400000
//*                                                                     00410000
//STEP1   EXEC ACBJBAOB,                                                00420000
//        TABL2=£userid.TEST.ISPTABL                                    00430000
//SYSUDUMP DD  SYSOUT=*                                                 00440000
//SYSTSIN  DD *                                                         00450000
PROFILE PREFIX(£userid)                                                 00460000
ISPSTART CMD(ACBQBAD1 +                                                 00470000
DEFINE       +                                                          00480000
SCDS('£scds') +                                                         00490000
DCNAME(DCZFSEXT) +                                                      00500000
DESCR(Data Class for Non SMS managed zFS Extended VSAM Linear) +        00510000
RECORG(LS) +                                                            00520000
RECFM() +                                                               00530000
LRECL() +                                                               00540000
KEYLEN() +                                                              00550000
KEYOFF() +                                                              00560000
SPCAVREC() +                                                            00570000
SPCAVVAL() +                                                            00580000
SPCPRM() +                                                              00590000
SPCSEC() +                                                              00600000
SPCDIR() +                                                              00610000
OVERRIDE(N) +                                                           00620000
REXPPDT() +                                                             00630000
VOLCNT(10) +                                                            00640000
ADDVOLAM() +                                                            00650000
CISZDATA() +                                                            00660000
FRSPCCI() +                                                             00670000
FRSPCCA() +                                                             00680000
SHRXREG() +                                                             00690000
SHRXSYS() +                                                             00700000
COMPTN() +                                                              00710000
MDTYPE() +                                                              00720000
RECTECH() +                                                             00730000
PEFSCLG() +                                                             00740000
PERFSEG() +                                                             00750000
DSNMTYP()    +                                                          00760000
IFEXT()  +                                                              00770000
EXTADDRS(Y) +                                                           00780000
RECACCB(U) +                                                            00790000
REUSE(N) +                                                              00800000
INILOAD(R) +                                                            00810000
SPANONSP() +                                                            00820000
BWO() +                                                                 00830000
LOG() +                                                                 00840000
LOGSTID() +                                                             00850000
SPCCONRL() +                                                            00860000
REDSPCUT() +                                                            00870000
BLKSZLIM() +                                                            00880000
FRLOG() +                                                               00890000
RLSCF(A) +                                                              00900000
MAXVOL() +                                                              00910000
EXTCONS(N) +                                                            00920000
RLSABOVE(N) +                                                           00930000
SMBVSP() +                                                              00940000
SDB(N) +                                                                00950000
KEYLABL1() +                                                            00960000
KEYENCD1() +                                                            00970000
KEYLABL2() +                                                            00980000
KEYENCD2() +                                                            00990000
EATTR() +                                                               01000000
RECLAIMCA(Y) +                                                          01010000
UPDHLVLSCDS() +                                                         01020000
) +                                                                     01030000
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)                   01040000
/*                                                                      01050000
//STEP2   EXEC ACBJBAOB,                                                01060000
//        TABL2=£userid.TEST.ISPTABL                                    01070000
//SYSUDUMP DD  SYSOUT=*                                                 01080000
//SYSTSIN  DD *                                                         01090000
PROFILE PREFIX(£userid)                                                 01100000
ISPSTART CMD(ACBQBAD1 +                                                 01110000
DISPLAY +                                                               01120000
SCDS('£scds') +                                                         01130000
DCNAME(DCZFSEXT) +                                                      01140000
) +                                                                     01150000
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)                   01160000
/*                                                                      01170000
//STEP2   EXEC ACBJBAOB,                                                01180000
//        TABL2=£userid.TEST.ISPTABL                                    01190000
//SYSUDUMP DD  SYSOUT=*                                                 01200000
//SYSTSIN  DD *                                                         01210000
PROFILE PREFIX(£userid)                                                 01220000
ISPSTART CMD(ACBQBAD1 +                                                 01230000
DISPLAY +                                                               01240000
SCDS('£scds') +                                                         01250000
DCNAME(DCZFSEXT) +                                                      01260000
) +                                                                     01270000
BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)                   01280000

./ ADD NAME=DCOLLECT
//dcollect  JOB ACCT£,                                                  00001000
//             MVS,                                                     00002000
//             NOTIFY=&SYSUID,                                          00003000
//             MSGLEVEL=(1,1)                                           00004000
// SET LLQ=LISTCAT                                                      00004100
// SET LLQ=DCOLLECT                                                     00004200
//*DELETE  EXEC PGM=IEFBR14                                             00004300
//*SYSPRINT DD DSN=&SYSUID..&SYSNAME..&LLQ.,                            00004400
//* DISP=(MOD,DELETE,DELETE),                                           00004500
//* SPACE=(TRK,(2,2)),                                                  00004600
//* DCB=(LRECL=512,RECFM=FB)                                            00004700
//STEP1    EXEC PGM=IDCAMS                                              00004800
//*LISTCAT DD SYSOUT=*                                                  00004900
//SYSPRINT DD SYSOUT=*                                                  00005000
//OUT1     DD DSN=&SYSUID..&SYSNAME..&LLQ.,                             00005100
// DISP=(NEW,CATLG,DELETE),                                             00005200
// SPACE=(CYL,(20,20)),                                                 00006000
//* DCB=(LRECL=512,RECFM=FB)                                            00007000
// DCB=(RECFM=VB,LRECL=644,BLKSIZE=27998)                               00007100
//SYSIN    DD *                                                         00008000
  DCOLLECT  OUTFILE(OUT1)                                        +      01141000
    VOLUMES(**)                                                    +    01150000
    BACKUPDATA                                                     +    01160000
    CAPPLANDATA                                                    +    01170000
    EXCLUDEVOLUMES(SYSJVA DLIB06 DLIB08 DLIB09 DEVP20 DISQ0B   +        01180000
      sys700 wrkr37 syst16 syst13 mvs105 syst37  +                      01180100
      ZCXS01 SYSC26 SYSCS1 SYSC25 MANS02           +                    01180200
      SYS991 SYS990 SYS992 SYS902 SYST14 DISP1A DEV002 DEV065     +     01181000
      SYST08 TFA011 tfa013 tfa025                                       01182000
    MIGRATEDATA                                                    +    01190000
    SMSDATA(SCDSNAME(ACTIVE)                                            01200000
/*                                                                      01210000

./ ADD NAME=DEFA
//SYSALIAS JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=I,                       00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//*********************************************                         00030100
//* UNIQUEMENT POUR TF2000 ISIN EN ATTENTE DE CORRECTION                00030202
//* DU CEDICAM CAR POUR LE MODULE F2 IL FAIT UNE ALLOC                  00030302
//* AVEC LE PREFIX DE L'OPC EN QUESTION ICI STCOPAL                     00030402
//* ET COMME STCOPAL NETAIT PAS CONNU COMME ALIAS CA SE PLANTE          00030502
//*********************************************                         00030602
//* PLUS D'ALIAS SUR LE CATALOG GTEST ET GTEST1 SUR G T E S T 2         00030702
//* PLUS D'ALIAS SUR LE CATALOG GPROD ET PROD1: SUR G P R O D 6         00030802
//* PAS D'ALIAS SUR LE CATALOG  GETUD :         SUR G T E S T 2         00030902
//* ALIAS ***1 USERS BRN1 (EX: PROJRO1)         SUR G P U P 1           00031002
//* ALIAS GXXXXX                                SUR G T E S T 2         00031102
//* ALIAS DVXXX                                 SUR G T E S T 2         00031202
//* ALIAS SYSTEME                               SUR G S Y S T 1         00031302
//* ALIAS PACIFICA                              SUR G O P A L E 2       00031402
//* ALIAS DES CICS                              SUR G C I C S X         00031502
//*********************************************                         00031602
//* CATALOGUES EURO/AN 2000 : CATALOG.G S Y S T   (OBJET SYSTEME)       00031702
//*                         : CATALOG.O P ALE   (OBJETS USER)           00031802
//*                         : CATALOG.G T EST1  (OBJETS ETUDES)         00031902
//*********************************************                         00032002
//* CATALAOGUE RECETTE COMMUNE : CATALOG.C S Y S T (OBJET SYSTEME)      00032102
//* CATALAOGUE PRE PROD BRNQ   : CATALOG.L S Y S T (OBJET SYSTEME)      00032202
//*********************************************                         00032302
//*    ATTENTION : CREATION DU PROFILE RACF DE PRODUCTION               00032402
//*                NE PAS EXECUTER RACFID SI PAS PRODUCTION             00032502
//*********************************************                         00032602
//DEFALIAS  EXEC  PGM=IDCAMS,REGION=7M                                  00033000
//SYSPRINT  DD  SYSOUT=*                                                00040000
//SYSIN     DD  *                                                       00050000
    DEFINE  ALIAS  (NAME(STCOPAL)              -                        00060001
            RELATE(CATALOG.OPALE))             -                        00070001
    CATALOG(CATALOG.MASTER.OSR10.Y2000)                                 00080000
//                                                                      00432800
/*                                                                      00432900
//******************************************************************    00451000
//*      CREATION D'UN PROFILE DATASET DANS RACF DATASET                00460000
//*      -----------------------------------------------                00470000
//*    A EXECUTER POUR LES CREATIONS D'ALIAS DE PRODUCTION              00471000
//*    ----------> STCOPAL SI EURO                                      00472000
//*    ----------> STCPRC SI PROD                                       00473000
//******************************************************************    00480000
//RACFID   EXEC PGM=IKJEFT01                                            00490000
//SYSPRINT DD SYSOUT=*                                                  00500000
//SYSTSOUT DD SYSOUT=*                                                  00510000
//SYSTSPRT DD SYSOUT=*                                                  00520000
//SYSTSIN  DD *                                                         00530000
 ADDGROUP PUGT OWNER(PRODMGT) SUPGROUP(PRODMGT)                         00540000
 ADDSD  'PUGT.*' GENERIC OWNER(PRODMGT) UACC(NONE)                      00550000
 PERMIT 'PUGT.*' ACCESS(ALTER) ID(PRODMGT,PREP,SUPTECH,STCPRC,CTRL)     00560000
 PERMIT 'PUGT.*' ACCESS(READ) ID(DEVMGT,PROJ,STCGRP)                    00570000
 LD DA('PUGT.*') AUTHUSER                                               00580000
/*                                                                      00590000

./ ADD NAME=DEFABRNO
//SYSALPRO JOB  1,'ALIAS PRODUIT',MSGLEVEL=(1,1),CLASS=I,               00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//***********************************************************           00030000
//* ATTENTION !!!! CE JOB DOIT ETRE LANCE A PARTIR DE BRN2              00040000
//* UNIQUEMENT                                                          00041000
//***********************************************************           00042000
//* JOB DE DEFINITION DES ALIAS PRODUIT                                 00043000
//* NE PAS MODIFIER LE CATALOG !!!!!!!!!!!!!!!!!!                       00044000
//***********************************************************           00045000
//DEFALIAS  EXEC  PGM=IDCAMS,REGION=7M                                  00046000
//SYSPRINT  DD  SYSOUT=*                                                00047000
//SYSIN     DD  *                                                       00048000
    DEFINE  ALIAS  (NAME(XXXXX)               -                         00049000
            RELATE(CATALOG.OSYST))             -                        00050000
    CATALOG(CATALOG.MASTER.ZOS110.BRN2)                                 00060000
    DEFINE  ALIAS  (NAME(XXXXX)                -                        00070000
            RELATE(CATALOG.OSYST))             -                        00080000
    CATALOG(CATALOG.MASTER.ZOS110.BRN2.BACKUP)                          00090000
    DEFINE  ALIAS  (NAME(XXXXX)                -                        00100000
            RELATE(CATALOG.OSYST))             -                        00110000
    CATALOG(CATALOG.MASTER.ZOS110.BRNR)                                 00120000
    DEFINE  ALIAS  (NAME(XXXXX)                -                        00130000
            RELATE(CATALOG.OSYST))             -                        00140000
    CATALOG(CATALOG.MASTER.ZOS110.BRNQ)                                 00150000

./ ADD NAME=DEFABRNQ
//SYSALPRO JOB  1,'ALIAS PRODUIT',MSGLEVEL=(1,1),CLASS=I,               00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//***********************************************************           00030000
//* ATTENTION !!!! CE JOB DOIT ETRE LANCE A PARTIR DE BRN2              00040000
//* UNIQUEMENT                                                          00041000
//***********************************************************           00042000
//* JOB DE DEFINITION DES ALIAS PRODUIT                                 00043000
//* NE PAS MODIFIER LE CATALOG !!!!!!!!!!!!!!!!!!                       00044000
//***********************************************************           00045000
//DEFALIAS  EXEC  PGM=IDCAMS,REGION=7M                                  00046000
//SYSPRINT  DD  SYSOUT=*                                                00047000
//SYSIN     DD  *                                                       00048000
    DEFINE  ALIAS  (NAME(XXXXX)               -                         00049004
            RELATE(CATALOG.LSYST))             -                        00050000
    CATALOG(CATALOG.MASTER.ZOS110.BRN2)                                 00060000
    DEFINE  ALIAS  (NAME(XXXXX)                -                        00070004
            RELATE(CATALOG.LSYST))             -                        00080000
    CATALOG(CATALOG.MASTER.ZOS110.BRN2.BACKUP)                          00090000
    DEFINE  ALIAS  (NAME(XXXXX)                -                        00100004
            RELATE(CATALOG.LSYST))             -                        00110000
    CATALOG(CATALOG.MASTER.ZOS110.BRNR)                                 00120000
    DEFINE  ALIAS  (NAME(XXXXX)                -                        00130004
            RELATE(CATALOG.LSYST))             -                        00140000
    CATALOG(CATALOG.MASTER.ZOS110.BRNQ)                                 00150000

./ ADD NAME=DEFABRNR
//SYSALPRO JOB  1,'ALIAS PRODUIT',MSGLEVEL=(1,1),CLASS=I,               00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//***********************************************************           00030000
//* ATTENTION !!!! CE JOB DOIT ETRE LANCE A PARTIR DE BRN2              00040000
//* UNIQUEMENT                                                          00041000
//***********************************************************           00042000
//* JOB DE DEFINITION DES ALIAS PRODUIT                                 00043000
//* NE PAS MODIFIER LE CATALOG !!!!!!!!!!!!!!!!!!                       00044000
//***********************************************************           00045000
//DEFALIAS  EXEC  PGM=IDCAMS,REGION=7M                                  00046000
//SYSPRINT  DD  SYSOUT=*                                                00047000
//SYSIN     DD  *                                                       00048000
    DEFINE  ALIAS  (NAME(XXXXX)               -                         00049006
            RELATE(CATALOG.CSYST))             -                        00050000
    CATALOG(CATALOG.MASTER.ZOS110.BRN2)                                 00060000
    DEFINE  ALIAS  (NAME(XXXXX)                -                        00070006
            RELATE(CATALOG.CSYST))             -                        00080000
    CATALOG(CATALOG.MASTER.ZOS110.BRN2.BACKUP)                          00090000
    DEFINE  ALIAS  (NAME(XXXXX)                -                        00100006
            RELATE(CATALOG.CSYST))             -                        00110000
    CATALOG(CATALOG.MASTER.ZOS110.BRNR)                                 00120000
    DEFINE  ALIAS  (NAME(XXXXX)                -                        00130006
            RELATE(CATALOG.CSYST))             -                        00140000
    CATALOG(CATALOG.MASTER.ZOS110.BRNQ)                                 00150000

./ ADD NAME=DEFACCT
//SYSACC   JOB (1000),'VESPAN',NOTIFY=&SYSUID,
//      CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)
//**-----------------------------------------------------
//** NE PLUS METTRE £IKJDV1 POUR LES ETUDES
//**-----------------------------------------------------
//STEP1   EXEC PGM=IKJEFT01,REGION=4096K
//SYSTSPRT DD  SYSOUT=*
//SYSUADS  DD  DSN=SYS1.UADS,DISP=SHR
//SYSLBC   DD  DSN=SYS1.BRODCAST,DISP=SHR
//SYSTSIN   DD  *
ADDUSER SEC016 DFLTGRP(SECOP) NAME('YVON ANDRE') +
              OWNER(SECOP)                                +
     TSO (ACCTNUM(ACCT£) PROC(£IKJRAC) SIZE(8096)         +
     MAXSIZE(8096) UNIT(3390))                           +
     OMVS(UID(10) HOME('/U/SEC016') PROGRAM('/BIN/SH'))

./ ADD NAME=DEFALCI
//SYSALIAS JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=I,                       00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//DEFALIAS  EXEC  PGM=IDCAMS,REGION=7M                                  00340000
//SYSPRINT  DD  SYSOUT=*                                                00350000
//SYSIN     DD  *                                                       00360000
    DEFINE  ALIAS  (NAME(CICOVIDY)        -                             00400002
            RELATE(CATALOG.OSYST))             -                        00410001
    CATALOG(CATALOG.MASTER.ZOS110.BRN2)                                 00420000
    DEFINE  ALIAS  (NAME(CICOVIDY)           -                          00430002
            RELATE(CATALOG.OSYST))             -                        00440001
    CATALOG(CATALOG.MASTER.ZOS112.BRN2)                                 00450000
    DEFINE  ALIAS  (NAME(CICOVIDY)            -                         00460002
            RELATE(CATALOG.OSYST))             -                        00470001
    CATALOG(CATALOG.MASTER.ZOS110.BRN2.BACKUP)                          00480000
    DEFINE  ALIAS  (NAME(CICOVIDY)            -                         00490002
            RELATE(CATALOG.OSYST))             -                        00500001
    CATALOG(CATALOG.MASTER.ZOS112.BRN2.BACKUP)                          00510000
    DEFINE  ALIAS  (NAME(CICOVIDY)            -                         00511002
            RELATE(CATALOG.OSYST))             -                        00512001
    CATALOG(CATALOG.MASTER.ZOS110.BRNR)                                 00513000
    DEFINE  ALIAS  (NAME(CICOVIDY)            -                         00514002
            RELATE(CATALOG.OSYST))             -                        00515001
    CATALOG(CATALOG.MASTER.ZOS112.BRNR)                                 00516000
    DEFINE  ALIAS  (NAME(CICOVIDY)            -                         00550002
            RELATE(CATALOG.OSYST))             -                        00560001
    CATALOG(CATALOG.MASTER.ZOS110.BRNQ)                                 00570000
    DEFINE  ALIAS  (NAME(CICOVIDY)            -                         00571002
            RELATE(CATALOG.OSYST))             -                        00572001
    CATALOG(CATALOG.MASTER.ZOS112.BRNQ)                                 00573000
//                                                                      00580000
//******************************************************************    00590000
//*      CREATION D'UN PROFILE DATASET DANS RACF DATASET                00600000
//*      -----------------------------------------------                00610000
//*    A EXECUTER POUR LES CREATIONS D'ALIAS DE PRODUCTION              00620000
//*    ----------> STCOPAL SI EURO                                      00630000
//*    ----------> STCPRC SI PROD                                       00640000
//******************************************************************    00650000
//RACFID   EXEC PGM=IKJEFT01                                            00660000
//SYSPRINT DD SYSOUT=*                                                  00670000
//SYSTSOUT DD SYSOUT=*                                                  00680000
//SYSTSPRT DD SYSOUT=*                                                  00690000
//SYSTSIN  DD *                                                         00700000
 ADDGROUP CICSS OWNER(PRODMGT) SUPGROUP(PRODMGT)                        00710000
 ADDSD  'CICSS.*' GENERIC OWNER(PRODMGT) UACC(NONE)                     00720000
 PERMIT 'CICSS.*' ACCESS(ALTER) ID(PRODMGT,PREP,SUPTECH,STCPRC,CTRL)    00730000
 PERMIT 'CICSS.*' ACCESS(READ) ID(DEVMGT,PROJ,STCGRP)                   00740000
 LD DA('CICSS.*') AUTHUSER                                              00750000
/*                                                                      00760000

./ ADD NAME=DEFALD31
//SYS005AS JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=I,                       00010001
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//***********************************************************           00030000
//* ATTENTION !!!! UN 2ND JOB POUR MAJ RACF SUR BRNR                    00040000
//***********************************************************           00050000
//* !!!!!!!! PLUS D'ALIAS SUR LE CATALOG G S Y S T                      00060000
//* !!!!!!!! PLUS D'ALIAS SUR LE CATALOG G P R O D 6                    00070000
//***********************************************************           00080000
//* PLUS D'ALIAS SUR LE CATALOG GTEST ET GTEST SUR G T E S T 2          00090000
//* PLUS D'ALIAS SUR LE CATALOG GPROD ET PROD1: SUR G P R O D 7         00100000
//* PAS D'ALIAS SUR LE CATALOG  GETUD :         SUR G T E S T 2         00110000
//* PAS D'ALIAS SUR LE CATALOG  CRECT1 :        SUR C R E C T 3         00120000
//* ALIAS ***1 USERS BRN1 (EX: PROJRO1)         SUR G P U P 1           00130000
//* ALIAS GXXXXX                                SUR G T E S T 2         00140000
//* ALIAS DVXXX                                 SUR G T E S T 2         00150000
//* ALIAS PROXXX                                SUR G T E S T 1         00151000
//* ALIAS SYSTEME                               SUR G S Y S T 1         00160000
//* ALIAS PACIFICA                              SUR G O P A L E 2       00170000
//* ALIAS DES CICS                              SUR G C I C S X         00180000
//*********************************************                         00190000
//* CATALOGUES EURO/AN 2000 : CATALOG.G S Y S T   (OBJET SYSTEME)       00200000
//*                         : CATALOG.O P ALE   (OBJETS USER)           00210000
//*                         : CATALOG.G T EST1  (OBJETS ETUDES)         00220000
//*********************************************                         00230000
//* CATALAOGUE RECETTE COMMUNE : CATALOG.C S Y S T (OBJET SYSTEME)      00240000
//*                            : CATALOG.C R E C T 1 (OBJET RECETTE)    00250000
//*                            : CATALOG.C R E C T 2 (OBJET RECETTE)    00260000
//*                            : CATALOG.C R E C T 3 (OBJET RECETTE)    00270000
//* CATALOGUE PRE-PROD CAT     : CATALOG.L Q U A L 4                    00280000
//* CATALAOGUE PRE PROD BRNQ   : CATALOG.L S Y S T (OBJET SYSTEME)      00290000
//*********************************************                         00300000
//*    ATTENTION : CREATION DU PROFILE RACF DE PRODUCTION               00310000
//*                NE PAS EXECUTER RACFID SI PAS PRODUCTION             00320000
//*********************************************                         00330000
//DEFALIAS  EXEC  PGM=IDCAMS,REGION=7M                                  00340000
//SYSPRINT  DD  SYSOUT=*                                                00350000
//SYSIN     DD  *                                                       00360000
    DEFINE  ALIAS  (NAME(DVZ19)           -                             00400002
            RELATE(CATALOG.GTEST2))            -                        00410000
    CATALOG(CATALOG.MASTER.ZOS112.BRN2)                                 00420001
    DEFINE  ALIAS  (NAME(DVZ19)               -                         00490002
            RELATE(CATALOG.GTEST2))            -                        00500000
    CATALOG(CATALOG.MASTER.ZOS112.BRN2.BACKUP)                          00510000
    DEFINE  ALIAS  (NAME(DVZ19)               -                         00514002
            RELATE(CATALOG.GTEST2))            -                        00515000
    CATALOG(CATALOG.MASTER.ZOS112.BRNR)                                 00516000
    DEFINE  ALIAS  (NAME(DVZ19)               -                         00571002
            RELATE(CATALOG.GTEST2))            -                        00572000
    CATALOG(CATALOG.MASTER.ZOS112.BRNQ)                                 00573000

./ ADD NAME=DEFALIA$
//SYSALIAS JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=I,                       00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//***********************************************************           00030000
//* ATTENTION !!!! UN 2ND JOB POUR MAJ RACF SUR BRNR                    00040000
//***********************************************************           00050000
//* !!!!!!!! PLUS D'ALIAS SUR LE CATALOG G S Y S T                      00060000
//* !!!!!!!! PLUS D'ALIAS SUR LE CATALOG G P R O D 6                    00070000
//***********************************************************           00080000
//* PLUS D'ALIAS SUR LE CATALOG GTEST ET GTEST SUR G T E S T 2          00090000
//* PLUS D'ALIAS SUR LE CATALOG GPROD ET PROD1: SUR G P R O D 7         00100000
//* PAS D'ALIAS SUR LE CATALOG  GETUD :         SUR G T E S T 2         00110000
//* PAS D'ALIAS SUR LE CATALOG  CRECT1 :        SUR C R E C T 3         00120000
//* ALIAS ***1 USERS BRN1 (EX: PROJRO1)         SUR G P U P 1           00130000
//* ALIAS GXXXXX                                SUR G T E S T 2         00140000
//* ALIAS DVXXX                                 SUR G T E S T 2         00150000
//* ALIAS SYSTEME                               SUR G S Y S T 1         00160000
//* ALIAS PACIFICA                              SUR G O P A L E 2       00170000
//* ALIAS DES CICS                              SUR G C I C S X         00180000
//*********************************************                         00190000
//* CATALOGUES EURO/AN 2000 : CATALOG.G S Y S T   (OBJET SYSTEME)       00200000
//*                         : CATALOG.O P ALE   (OBJETS USER)           00210000
//*                         : CATALOG.G T EST1  (OBJETS ETUDES)         00220000
//*********************************************                         00230000
//* CATALAOGUE RECETTE COMMUNE : CATALOG.C S Y S T (OBJET SYSTEME)      00240000
//*                            : CATALOG.C R E C T 1 (OBJET RECETTE)    00250000
//*                            : CATALOG.C R E C T 2 (OBJET RECETTE)    00260000
//*                            : CATALOG.C R E C T 3 (OBJET RECETTE)    00270000
//* CATALOGUE PRE-PROD CAT     : CATALOG.L Q U A L 4                    00280000
//* CATALAOGUE PRE PROD BRNQ   : CATALOG.L S Y S T (OBJET SYSTEME)      00290000
//*********************************************                         00300000
//*    ATTENTION : CREATION DU PROFILE RACF DE PRODUCTION               00310000
//*                NE PAS EXECUTER RACFID SI PAS PRODUCTION             00320000
//*********************************************                         00330000
//DEFALIAS  EXEC  PGM=IDCAMS,REGION=7M                                  00340000
//SYSPRINT  DD  SYSOUT=*                                                00350000
//SYSIN     DD  *                                                       00360000
    DEFINE  ALIAS  (NAME(CICSS)               -                         00400003
            RELATE(CATALOG.GSYST1))            -                        00410001
    CATALOG(CATALOG.MASTER.ZOS110.BRN2)                                 00420000
    DEFINE  ALIAS  (NAME(CICSS)                -                        00460003
            RELATE(CATALOG.GSYST1))            -                        00470001
    CATALOG(CATALOG.MASTER.ZOS110.BRN2.BACKUP)                          00480000
    DEFINE  ALIAS  (NAME(CICSS)                -                        00511003
            RELATE(CATALOG.GSYST1))            -                        00512001
    CATALOG(CATALOG.MASTER.ZOS110.BRNR)                                 00513000
    DEFINE  ALIAS  (NAME(CICSS)                -                        00514003
            RELATE(CATALOG.GSYST1))            -                        00515002
    CATALOG(CATALOG.MASTER.ZOS112.BRNR)                                 00516002
    DEFINE  ALIAS  (NAME(CICSS)                -                        00517003
            RELATE(CATALOG.GSYST1))            -                        00518001
    CATALOG(CATALOG.MASTER.ZOS112.LP2)                                  00519003
    DEFINE  ALIAS  (NAME(CICSS)                -                        00550003
            RELATE(CATALOG.GSYST1))            -                        00560001
    CATALOG(CATALOG.MASTER.ZOS110.BRNQ)                                 00570000
    DEFINE  ALIAS  (NAME(CICSS)                -                        00571003
            RELATE(CATALOG.GSYST1))            -                        00572002
    CATALOG(CATALOG.MASTER.ZOS112.BRNQ)                                 00573002
//                                                                      00580000
//******************************************************************    00590000
//*      CREATION D'UN PROFILE DATASET DANS RACF DATASET                00600000
//*      -----------------------------------------------                00610000
//*    A EXECUTER POUR LES CREATIONS D'ALIAS DE PRODUCTION              00620000
//*    ----------> STCOPAL SI EURO                                      00630000
//*    ----------> STCPRC SI PROD                                       00640000
//******************************************************************    00650000
//RACFID   EXEC PGM=IKJEFT01                                            00660000
//SYSPRINT DD SYSOUT=*                                                  00670000
//SYSTSOUT DD SYSOUT=*                                                  00680000
//SYSTSPRT DD SYSOUT=*                                                  00690000
//SYSTSIN  DD *                                                         00700000
 ADDGROUP CICSS OWNER(PRODMGT) SUPGROUP(PRODMGT)                        00710003
 ADDSD  'CICSS.*' GENERIC OWNER(PRODMGT) UACC(NONE)                     00720003
 PERMIT 'CICSS.*' ACCESS(ALTER) ID(PRODMGT,PREP,SUPTECH,STCPRC,CTRL)    00730003
 PERMIT 'CICSS.*' ACCESS(READ) ID(DEVMGT,PROJ,STCGRP)                   00740003
 LD DA('CICSS.*') AUTHUSER                                              00750003
/*                                                                      00760000

./ ADD NAME=DEFALIAQ
//SYSALIAS JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=O,                       00010000
//         MSGCLASS=X,NOTIFY=&SYSUID,REGION=4M                          00020000
//***********************************************************           00030000
//*********** JOB DE DEFINE ALIAS POUR BRNQ ET BRN2 *********           00040000
//***********************************************************           00050000
//* CATALOG A UTILISER POUR DEFINE ALIAS USER                           00060000
//***********************************************************           00070000
//* ALIAS DVXXX,MXXXXX ET GXXXXX : CATALOG.PUSERDEV                     00090000
//* ALIAS SYSXXX ET SECXXX       : CATALOG.GSYST1                       00100000
//* ALIAS PROXXX                 : CATALOG.GPUP/GPUP1                   00110000
//***********************************************************           00120000
//* CATALOG A UTILISER POUR DEFINE ALIAS TECHNIQUE                      00130000
//***********************************************************           00140000
//* ALIAS SYSTEME BRNQ           : CATALOG.QSYS                         00320000
//* ALIAS SYSTEME BRN2           : CATALOG.PSYS                         00321000
//* ALIAS TECHNIQUE DOMAINE ETUDE : CATALOG.PUSERDEV                    00322000
//* ALIAS TECHNIQUE DOMAINE PROD BRNQ : CATALOG.LQUALX                  00323000
//* ALIAS TECHNIQUE DOMAINE PROD BRN2 : CATALOG.PQUALX                  00324000
//***********************************************************           00325000
//DEFALIAS  EXEC  PGM=IDCAMS                                            00340000
//SYSPRINT  DD  SYSOUT=*                                                00350000
//SYSIN     DD  *                                                       00360000
    DEFINE  ALIAS  (NAME(SEC010)             -                          00443007
            RELATE(CATALOG.LQUALX)) -                                   00444007
    CATALOG(CATALOG.MASTER.ZOS113.BRNQ)                                 00445000
/*                                                                      00581000

./ ADD NAME=DEFALIAS
//SYSALIAS JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=O,
//         MSGCLASS=X,NOTIFY=&SYSUID,REGION=4M
//***********************************************************
//*********** JOB DE DEFINE ALIAS POUR BRNQ ET BRN2 *********
//***********************************************************
//* CATALOG A UTILISER POUR DEFINE ALIAS USER
//***********************************************************
//* ALIAS DVXXX, MXXXXX ET GXXXXX  : CATALOG.PUSERDEV
//* ALIAS SYSXXX, SECXXX ET PROXXX : CATALOG.PUSERPRO
//***********************************************************
//* CATALOG A UTILISER POUR DEFINE ALIAS TECHNIQUE
//***********************************************************
//* ALIAS SYSTEME BRNQ                : CATALOG.QSYS
//* ALIAS SYSTEME BRN2                : CATALOG.PSYS
//* ALIAS UTILISATEUR TECHNIQUE PROD  : CATALOG.PUSERPRO
//* ALIAS UTILISATEUR TECHNIQUE ETUDE : CATALOG.PUSERDEV
//***********************************************************
//PROD     EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
    DEFINE ALIAS (NAME(DVJOL) -
           RELATE(CATALOG.SSYS))
/*
//
    DEFINE ALIAS (NAME(SEC015) -
           RELATE(CATALOG.PUSERPRO)) -
    CATALOG(CATALOG.MASTER.ZOS113.BRN2)
    DEFINE ALIAS (NAME(SEC015) -
           RELATE(CATALOG.PUSERPRO)) -
    CATALOG(CATALOG.MASTER.ZOS113.BRNQ)
/*
//
//

./ ADD NAME=DEFALPRO
//SYSALPRO JOB  1,'ALIAS PRODUIT',MSGLEVEL=(1,1),CLASS=I,               00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//***********************************************************           00030000
//* ATTENTION !!!! CE JOB DOIT ETRE LANCE A PARTIR DE BRN2              00040000
//* UNIQUEMENT                                                          00041000
//***********************************************************           00042000
//* JOB DE DEFINITION DES ALIAS PRODUIT                                 00043000
//* NE PAS MODIFIER LE CATALOG !!!!!!!!!!!!!!!!!!                       00044000
//***********************************************************           00045000
//DEFALIAS  EXEC  PGM=IDCAMS,REGION=7M                                  00046000
//SYSPRINT  DD  SYSOUT=*                                                00047000
//SYSIN     DD  *                                                       00048000
    DEFINE  ALIAS  (NAME(ENDEVOR)            -                          00121017
            RELATE(CATALOG.SSYS))             -                         00122017
    CATALOG(CATALOG.MASTER.ZOS113.LP2)                                  00123017

./ ADD NAME=DEFALPR2
//SYSALPRO JOB  1,'ALIAS PRODUIT',MSGLEVEL=(1,1),CLASS=I,               00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//***********************************************************           00030000
//* ATTENTION !!!! CE JOB DOIT ETRE LANCE A PARTIR DE LP2               00040000
//* UNIQUEMENT                                                          00041000
//***********************************************************           00042000
//* JOB DE DEFINITION DES ALIAS PRODUIT                                 00043000
//* NE PAS MODIFIER LE CATALOG !!!!!!!!!!!!!!!!!!                       00044000
//***********************************************************           00045000
//DEFALIAS  EXEC  PGM=IDCAMS,REGION=7M                                  00046000
//SYSPRINT  DD  SYSOUT=*                                                00047000
//SYSIN     DD  *                                                       00048000
    DEFINE  ALIAS  (NAME(CICSTS42)             -                        00157000
            RELATE(CATALOG.SSYS))              -                        00158000
    CATALOG(CATALOG.MASTER.ZOS112.LP2)                                  00159000

./ ADD NAME=DEFALP2
//SYSJRIAS JOB  1,'ALIAS PRODUIT',MSGLEVEL=(1,1),CLASS=I,               00010012
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//***********************************************************           00030000
//* ATTENTION !!!! CE JOB DOIT ETRE LANCE A PARTIR DE BRN2              00040000
//* UNIQUEMENT                                                          00041000
//***********************************************************           00042000
//* JOB DE DEFINITION DES ALIAS PRODUIT                                 00043000
//* NE PAS MODIFIER LE CATALOG !!!!!!!!!!!!!!!!!!                       00044000
//***********************************************************           00045000
//DEFALIAS  EXEC  PGM=IDCAMS,REGION=7M                                  00046000
//SYSPRINT  DD  SYSOUT=*                                                00047000
//SYSIN     DD  *                                                       00048000
    DEFINE  ALIAS  (NAME(PRO003)            -                           00049013
            RELATE(CATALOG.PUSERPRO))          -                        00050012
    CATALOG(CATALOG.MASTER.ZOS201.LP2)                                  00060012

./ ADD NAME=DEFAPPC
//SYSILEA   JOB (T002550),'IEBCOPY',                                    00001000
//             NOTIFY=&SYSUID,                                          00004200
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00005000
//*----------------------------------------------------------------     00005100
//* DEFINE TP FILE                                                      00005200
//*----------------------------------------------------------------     00005300
//TPSAMPLE EXEC PGM=IDCAMS                                              00006000
//CMNSTC   DD   DISP=OLD,UNIT=3390,VOL=SER=SYS910                       00007000
//SYSPRINT DD   SYSOUT=*                                                00008000
//SYSABEND DD   SYSOUT=*                                                00009000
//AMSDUMP  DD   SYSOUT=*                                                00010000
//SYSIN    DD   *                                                       00020000
        DEFINE CLUSTER (NAME(SYST.BRNQ.APPCTP) -                        00030000
            VOLUMES(SYS910) -                                           00040000
            INDEXED REUSE -                                             00050000
            SHAREOPTIONS(3 3) -                                         00060000
            RECORDSIZE(3824 7024) -                                     00070000
            KEYS(112 0) -                                               00080000
            TRACKS(5 5)) -                                              00090000
          DATA -                                                        00100000
            (NAME(SYST.BRNQ.APPCTP.DATA)) -                             00110000
          INDEX -                                                       00120000
            (NAME(SYST.BRNQ.APPCTP.INDEX))                              00130000
//*----------------------------------------------------------------     00131000
//* DEFINE TP FILE                                                      00132000
//*----------------------------------------------------------------     00133000
//TPSAMPLE EXEC PGM=IDCAMS                                              00134000
//CMNSTC   DD   DISP=OLD,UNIT=3390,VOL=SER=SYS910                       00135000
//SYSPRINT DD   SYSOUT=*                                                00136000
//SYSABEND DD   SYSOUT=*                                                00137000
//AMSDUMP  DD   SYSOUT=*                                                00138000
//SYSIN    DD   *                                                       00139000
        DEFINE CLUSTER (NAME(SYST.BRNQ.CSQTP) -                         00139100
            VOLUMES(SYS910) -                                           00139200
            INDEXED REUSE -                                             00139300
            SHAREOPTIONS(3 3) -                                         00139400
            RECORDSIZE(3824 7024) -                                     00139500
            KEYS(112 0) -                                               00139600
            TRACKS(5 5)) -                                              00139700
          DATA -                                                        00139800
            (NAME(SYST.BRNQ.CSQTP.DATA)) -                              00139900
          INDEX -                                                       00140000
            (NAME(SYST.BRNQ.CSQTP.INDEX))                               00140100
//*----------------------------------------------------------------     00141000
//* DEFINE SIDE FILE                                                    00150000
//*----------------------------------------------------------------     00160000
//SISAMPLE EXEC PGM=IDCAMS                                              00170000
//CMNSTC   DD   DISP=OLD,UNIT=3390,VOL=SER=SYS910                       00180000
//SYSPRINT DD   SYSOUT=*                                                00190000
//SYSABEND DD   SYSOUT=*                                                00200000
//AMSDUMP  DD   SYSOUT=*                                                00210000
//SYSIN    DD   *                                                       00220000
        DEFINE CLUSTER (NAME(SYST.BRNQ.APPCSI) -                        00230000
            VOLUME(SYS910) -                                            00240000
            INDEXED REUSE -                                             00250000
            SHAREOPTIONS(3 3) -                                         00260000
            RECORDSIZE(248 248) -                                       00270000
            KEYS(112 0) -                                               00280000
            TRACKS(1  1)) -                                             00290000
          DATA -                                                        00300000
            (NAME(SYST.BRNQ.APPCSI.DATA)) -                             00310000
          INDEX -                                                       00320000
            (NAME(SYST.BRNQ.APPCSI.INDEX))                              00330000

./ ADD NAME=DEFARMQ
//SYSILEA  JOB 1000,'P-GRANIE',REGION=4M,                               00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00030000
//*                                                                     00040000
//* SAMPLE JCL TO FORMAT A PRIMARY AND/OR AN ALTERNATE COUPLE DATA SETS 00050000
//* FOR AUTOMATIC RESTART MANAGER (ARM). IN THIS SAMPLE JCL, TWO COUPLE 00060000
//* DATASETS, SYS1.MIGLIB.ARMCPL03 AND SYS1.MIGLIB.ARMCPL02, WILL BE    00070000
//* ALLOCATED. IF THE SIZE OF THESE COUPLE DATASETS IS DIFFERENT, THE   00080000
//* LARGER OF THE TWO SHOULD ALWAYS BE USED AS AN ALTERNATE COUPLE      00090000
//* DATASET.                                                            00100000
//*                                                                     00110000
//* NOTES:                                                              00120000
//*   1. REGION=2M IS SUGGESTED TO USE WHEN INVOKING THE IXCL1DSU       00130000
//*      PROGRAM                                                        00140000
//*   2. SYSPRINT DD IS A REQUIRED DD STATEMENT FOR FORMAT UTILITY      00150000
//*      MESSAGES                                                       00160000
//*   3. SYSIN DD IS A REQUIRED DD STATEMENT FOR FORMAT UTILITY         00170000
//*      CONTROL STATEMENTS                                             00180000
//*   4. SYSPLEX NAME IS REQUIRED AND IS 1-8 CHARACTERS                 00190000
//*   5. DSN AND VOLSER ARE REQUIRED FOR DATA SET SPECIFICATION         00200000
//*   6. DATA TYPE(ARM) STATEMENT IS REQUIRED TO INDICATE WHAT TYPE     00210000
//*      OF COUPLE DATASET IS TO BE ALLOCATED                           00220000
//*   7. THE MAXSYSTEM VALUE SHOULD MATCH THE VALUE SPECIFIED FOR       00230000
//*      MAXSYSTEM ON THE SYSPLEX DATASETS, IF ALL SYSPLEX SYSTEMS      00240000
//*      ARE EXPECTED TO USE THE ARM DATATYPE.                          00250000
//*                                                                     00260000
//* CHANGE-ACTIVITY =                                                   00270000
//* $L0 = ARM    HBB5520 940310 PD00XO: ARM Initial Release             00280000
//* $L1 = ARM    HBB5520 940615 PD00CJ: Use couple dataset              00290000
//* $P1=PUX0564  HBB6605 970923 PD00HV: Add MAXSYSTEM keyword           00300000
//*                                                                     00310000
//******************************************************************    00320000
//*                                                                     00330000
//* IT IS RECOMMENDED TO SPECIFY A REGION SIZE OF 2M WHEN INVOKING      00340000
//* THE IXCL1DSU PROGRAM.  THIS IS TO ENSURE USERS WOULD HAVE ENOUGH    00350000
//* STORAGE SPACE FOR THE COUPLE DATASET TO BE ALLOCATED.               00360000
//*                                                                     00370000
//STEP1    EXEC PGM=IXCL1DSU,REGION=2M                                  00380000
//*TEPLIB  DD   DSN=SYS1.MIGLIB,DISP=SHR                                00390000
//SYSPRINT DD   SYSOUT=X                                                00400000
//SYSABEND DD   SYSOUT=X                                                00410000
//SYSIN    DD   *                                                       00420000
                              /* Allocating a primary Couple Dataset*/  00430000
   DEFINEDS SYSPLEX(BRNQPLEX)                                           00440000
        DSN(BRNQ.SYSPLEX.ARMCPL01) VOLSER(SYSXQB)                       00450000
        CATALOG MAXSYSTEM(8)                                            00460000
     DATA TYPE(ARM)                                                     00470000
                                      /* NOTE THAT, IF ANY OF THE       00480000
                                         FOLLOWING ITEM NAME(XXX) AND   00490000
                                         ITS NUMBER(N) ARE NOT SPECIFI- 00500000
                                         ED, DEFAULT VALUE FOR THAT     00510000
                                         ITEM WILL TAKE EFFECT.    */   00520000
       ITEM NAME(POLICY)   NUMBER(7)  /* MAXIMUM NUMBER OF USER-DEFINED 00530000
                                         ARM POLICIES THAT WILL BE ON   00540000
                                         THE COUPLE DATA SET AT ANY     00550000
                                         GIVEN TIME.                    00560000
                                         DEFAULTS TO 3.              */ 00570000
       ITEM NAME(MAXELEM)  NUMBER(35) /* MAXIMUM NUMBER OF ELEMENTS     00580000
                                         PER POLICY.                    00590000
                                         DEFAULTS TO 10.             */ 00600000
       ITEM NAME(TOTELEM)  NUMBER(30) /* MAXIMUM NUMBER OF ELEMENTS THAT00610000
                                         ARE ANTICIPATED TO BE REGISTER-00620000
                                         ED WITH ARM ACROSS THE SYSPLEX 00630000
                                         AT ANY GIVEN TIME.             00640000
                                         DEFAULTS TO 500.            */ 00650000
                            /* ALLOCATING AN ALTERNATE COUPLE DATASET*/ 00660000
   DEFINEDS SYSPLEX(BRNQPLEX)                                           00670000
        DSN(BRNQ.SYSPLEX.ARMCPL02) VOLSER(SYSXQA)                       00680000
        CATALOG MAXSYSTEM(8)                                            00690000
     DATA TYPE(ARM)                                                     00700000
       ITEM NAME(POLICY)   NUMBER(7)  /* MAXIMUM NUMBER OF USER-DEFINED 00710000
                                         ARM POLICIES THAT WILL BE ON   00720000
                                         THE COUPLE DATA SET AT ANY     00730000
                                         GIVEN TIME.                    00740000
                                         DEFAULTS TO 3.              */ 00750000
       ITEM NAME(MAXELEM)  NUMBER(35) /* MAXIMUM NUMBER OF ELEMENTS     00760000
                                         PER POLICY.                    00770000
                                         DEFAULTS TO 10.             */ 00780000
       ITEM NAME(TOTELEM)  NUMBER(30) /* MAXIMUM NUMBER OF ELEMENTS THAT00790000
                                         ARE ANTICIPATED TO BE REGISTER-00800000
                                         ED WITH ARM ACROSS THE SYSPLEX 00810000
                                         AT ANY GIVEN TIME.             00820000
                                         DEFAULTS TO 500.            */ 00830000
/*                                                                      00840000

./ ADD NAME=DEFARMR
//SYSILEA  JOB 1000,'P-GRANIE',REGION=4M,                               00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00030000
//*                                                                     00040000
//* SAMPLE JCL TO FORMAT A PRIMARY AND/OR AN ALTERNATE COUPLE DATA SETS 00050000
//* FOR AUTOMATIC RESTART MANAGER (ARM). IN THIS SAMPLE JCL, TWO COUPLE 00060000
//* DATASETS, SYS1.MIGLIB.ARMCPL03 AND SYS1.MIGLIB.ARMCPL02, WILL BE    00070000
//* ALLOCATED. IF THE SIZE OF THESE COUPLE DATASETS IS DIFFERENT, THE   00080000
//* LARGER OF THE TWO SHOULD ALWAYS BE USED AS AN ALTERNATE COUPLE      00090000
//* DATASET.                                                            00100000
//*                                                                     00110000
//* NOTES:                                                              00120000
//*   1. REGION=2M IS SUGGESTED TO USE WHEN INVOKING THE IXCL1DSU       00130000
//*      PROGRAM                                                        00140000
//*   2. SYSPRINT DD IS A REQUIRED DD STATEMENT FOR FORMAT UTILITY      00150000
//*      MESSAGES                                                       00160000
//*   3. SYSIN DD IS A REQUIRED DD STATEMENT FOR FORMAT UTILITY         00170000
//*      CONTROL STATEMENTS                                             00180000
//*   4. SYSPLEX NAME IS REQUIRED AND IS 1-8 CHARACTERS                 00190000
//*   5. DSN AND VOLSER ARE REQUIRED FOR DATA SET SPECIFICATION         00200000
//*   6. DATA TYPE(ARM) STATEMENT IS REQUIRED TO INDICATE WHAT TYPE     00210000
//*      OF COUPLE DATASET IS TO BE ALLOCATED                           00220000
//*   7. THE MAXSYSTEM VALUE SHOULD MATCH THE VALUE SPECIFIED FOR       00230000
//*      MAXSYSTEM ON THE SYSPLEX DATASETS, IF ALL SYSPLEX SYSTEMS      00240000
//*      ARE EXPECTED TO USE THE ARM DATATYPE.                          00250000
//*                                                                     00260000
//* CHANGE-ACTIVITY =                                                   00270000
//* $L0 = ARM    HBB5520 940310 PD00XO: ARM Initial Release             00280000
//* $L1 = ARM    HBB5520 940615 PD00CJ: Use couple dataset              00290000
//* $P1=PUX0564  HBB6605 970923 PD00HV: Add MAXSYSTEM keyword           00300000
//*                                                                     00310000
//******************************************************************    00320000
//*                                                                     00330000
//* IT IS RECOMMENDED TO SPECIFY A REGION SIZE OF 2M WHEN INVOKING      00340000
//* THE IXCL1DSU PROGRAM.  THIS IS TO ENSURE USERS WOULD HAVE ENOUGH    00350000
//* STORAGE SPACE FOR THE COUPLE DATASET TO BE ALLOCATED.               00360000
//*                                                                     00370000
//STEP1    EXEC PGM=IXCL1DSU,REGION=2M                                  00380000
//*TEPLIB  DD   DSN=SYS1.MIGLIB,DISP=SHR                                00390000
//SYSPRINT DD   SYSOUT=X                                                00400000
//SYSABEND DD   SYSOUT=X                                                00410000
//SYSIN    DD   *                                                       00420000
                              /* Allocating a primary Couple Dataset*/  00430000
   DEFINEDS SYSPLEX(BRNRPLEX)                                           00440000
        DSN(BRNR.SYSPLEX.ARMCPL01) VOLSER(SYSXRB)                       00450001
        CATALOG MAXSYSTEM(8)                                            00460000
     DATA TYPE(ARM)                                                     00470000
                                      /* NOTE THAT, IF ANY OF THE       00480000
                                         FOLLOWING ITEM NAME(XXX) AND   00490000
                                         ITS NUMBER(N) ARE NOT SPECIFI- 00500000
                                         ED, DEFAULT VALUE FOR THAT     00510000
                                         ITEM WILL TAKE EFFECT.    */   00520000
       ITEM NAME(POLICY)   NUMBER(7)  /* MAXIMUM NUMBER OF USER-DEFINED 00530000
                                         ARM POLICIES THAT WILL BE ON   00540000
                                         THE COUPLE DATA SET AT ANY     00550000
                                         GIVEN TIME.                    00560000
                                         DEFAULTS TO 3.              */ 00570000
       ITEM NAME(MAXELEM)  NUMBER(35) /* MAXIMUM NUMBER OF ELEMENTS     00580000
                                         PER POLICY.                    00590000
                                         DEFAULTS TO 10.             */ 00600000
       ITEM NAME(TOTELEM)  NUMBER(30) /* MAXIMUM NUMBER OF ELEMENTS THAT00610000
                                         ARE ANTICIPATED TO BE REGISTER-00620000
                                         ED WITH ARM ACROSS THE SYSPLEX 00630000
                                         AT ANY GIVEN TIME.             00640000
                                         DEFAULTS TO 500.            */ 00650000
                            /* ALLOCATING AN ALTERNATE COUPLE DATASET*/ 00660000
   DEFINEDS SYSPLEX(BRNRPLEX)                                           00670000
        DSN(BRNR.SYSPLEX.ARMCPL02) VOLSER(SYSXRA)                       00680001
        CATALOG MAXSYSTEM(8)                                            00690000
     DATA TYPE(ARM)                                                     00700000
       ITEM NAME(POLICY)   NUMBER(7)  /* MAXIMUM NUMBER OF USER-DEFINED 00710000
                                         ARM POLICIES THAT WILL BE ON   00720000
                                         THE COUPLE DATA SET AT ANY     00730000
                                         GIVEN TIME.                    00740000
                                         DEFAULTS TO 3.              */ 00750000
       ITEM NAME(MAXELEM)  NUMBER(35) /* MAXIMUM NUMBER OF ELEMENTS     00760000
                                         PER POLICY.                    00770000
                                         DEFAULTS TO 10.             */ 00780000
       ITEM NAME(TOTELEM)  NUMBER(30) /* MAXIMUM NUMBER OF ELEMENTS THAT00790000
                                         ARE ANTICIPATED TO BE REGISTER-00800000
                                         ED WITH ARM ACROSS THE SYSPLEX 00810000
                                         AT ANY GIVEN TIME.             00820000
                                         DEFAULTS TO 500.            */ 00830000
/*                                                                      00840000

./ ADD NAME=DEFARM2
//SYS003RR JOB 1000,'P-GRANIE',REGION=0M,                               00010001
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00030000
//*                                                                     00040000
//* SAMPLE JCL TO FORMAT A PRIMARY AND/OR AN ALTERNATE COUPLE DATA SETS 00050000
//* FOR AUTOMATIC RESTART MANAGER (ARM). IN THIS SAMPLE JCL, TWO COUPLE 00060000
//* DATASETS, SYS1.MIGLIB.ARMCPL03 AND SYS1.MIGLIB.ARMCPL02, WILL BE    00070000
//* ALLOCATED. IF THE SIZE OF THESE COUPLE DATASETS IS DIFFERENT, THE   00080000
//* LARGER OF THE TWO SHOULD ALWAYS BE USED AS AN ALTERNATE COUPLE      00090000
//* DATASET.                                                            00100000
//*                                                                     00110000
//* NOTES:                                                              00120000
//*   1. REGION=2M IS SUGGESTED TO USE WHEN INVOKING THE IXCL1DSU       00130000
//*      PROGRAM                                                        00140000
//*   2. SYSPRINT DD IS A REQUIRED DD STATEMENT FOR FORMAT UTILITY      00150000
//*      MESSAGES                                                       00160000
//*   3. SYSIN DD IS A REQUIRED DD STATEMENT FOR FORMAT UTILITY         00170000
//*      CONTROL STATEMENTS                                             00180000
//*   4. SYSPLEX NAME IS REQUIRED AND IS 1-8 CHARACTERS                 00190000
//*   5. DSN AND VOLSER ARE REQUIRED FOR DATA SET SPECIFICATION         00200000
//*   6. DATA TYPE(ARM) STATEMENT IS REQUIRED TO INDICATE WHAT TYPE     00210000
//*      OF COUPLE DATASET IS TO BE ALLOCATED                           00220000
//*   7. THE MAXSYSTEM VALUE SHOULD MATCH THE VALUE SPECIFIED FOR       00230000
//*      MAXSYSTEM ON THE SYSPLEX DATASETS, IF ALL SYSPLEX SYSTEMS      00240000
//*      ARE EXPECTED TO USE THE ARM DATATYPE.                          00250000
//*                                                                     00260000
//* CHANGE-ACTIVITY =                                                   00270000
//* $L0 = ARM    HBB5520 940310 PD00XO: ARM Initial Release             00280000
//* $L1 = ARM    HBB5520 940615 PD00CJ: Use couple dataset              00290000
//* $P1=PUX0564  HBB6605 970923 PD00HV: Add MAXSYSTEM keyword           00300000
//*                                                                     00310000
//******************************************************************    00320000
//*                                                                     00330000
//* IT IS RECOMMENDED TO SPECIFY A REGION SIZE OF 2M WHEN INVOKING      00340000
//* THE IXCL1DSU PROGRAM.  THIS IS TO ENSURE USERS WOULD HAVE ENOUGH    00350000
//* STORAGE SPACE FOR THE COUPLE DATASET TO BE ALLOCATED.               00360000
//*                                                                     00370000
//STEP1    EXEC PGM=IXCL1DSU,REGION=2M                                  00380000
//*TEPLIB  DD   DSN=SYS1.MIGLIB,DISP=SHR                                00390000
//SYSPRINT DD   SYSOUT=X                                                00400000
//SYSABEND DD   SYSOUT=X                                                00410000
//SYSIN    DD   *                                                       00420000
                              /* Allocating a primary Couple Dataset*/  00430000
   DEFINEDS SYSPLEX(BRN2PLEX)                                           00440000
        DSN(BRN2.SYSPLEX.ARMCPL01) VOLSER(SYSX2B)                       00450000
        CATALOG MAXSYSTEM(8)                                            00460000
     DATA TYPE(ARM)                                                     00470000
                                      /* NOTE THAT, IF ANY OF THE       00480000
                                         FOLLOWING ITEM NAME(XXX) AND   00490000
                                         ITS NUMBER(N) ARE NOT SPECIFI- 00500000
                                         ED, DEFAULT VALUE FOR THAT     00510000
                                         ITEM WILL TAKE EFFECT.    */   00520000
       ITEM NAME(POLICY)   NUMBER(7)  /* MAXIMUM NUMBER OF USER-DEFINED 00530000
                                         ARM POLICIES THAT WILL BE ON   00540000
                                         THE COUPLE DATA SET AT ANY     00550000
                                         GIVEN TIME.                    00560000
                                         DEFAULTS TO 3.              */ 00570000
       ITEM NAME(MAXELEM)  NUMBER(35) /* MAXIMUM NUMBER OF ELEMENTS     00580000
                                         PER POLICY.                    00590000
                                         DEFAULTS TO 10.             */ 00600000
       ITEM NAME(TOTELEM)  NUMBER(30) /* MAXIMUM NUMBER OF ELEMENTS THAT00610000
                                         ARE ANTICIPATED TO BE REGISTER-00620000
                                         ED WITH ARM ACROSS THE SYSPLEX 00630000
                                         AT ANY GIVEN TIME.             00640000
                                         DEFAULTS TO 500.            */ 00650000
                            /* ALLOCATING AN ALTERNATE COUPLE DATASET*/ 00660000
   DEFINEDS SYSPLEX(BRN2PLEX)                                           00670000
        DSN(BRN2X.SYSPLEX.ARMCPL02) VOLSER(SYSX2A)                      00680000
        CATALOG MAXSYSTEM(8)                                            00690000
     DATA TYPE(ARM)                                                     00700000
       ITEM NAME(POLICY)   NUMBER(7)  /* MAXIMUM NUMBER OF USER-DEFINED 00710000
                                         ARM POLICIES THAT WILL BE ON   00720000
                                         THE COUPLE DATA SET AT ANY     00730000
                                         GIVEN TIME.                    00740000
                                         DEFAULTS TO 3.              */ 00750000
       ITEM NAME(MAXELEM)  NUMBER(35) /* MAXIMUM NUMBER OF ELEMENTS     00760000
                                         PER POLICY.                    00770000
                                         DEFAULTS TO 10.             */ 00780000
       ITEM NAME(TOTELEM)  NUMBER(30) /* MAXIMUM NUMBER OF ELEMENTS THAT00790000
                                         ARE ANTICIPATED TO BE REGISTER-00800000
                                         ED WITH ARM ACROSS THE SYSPLEX 00810000
                                         AT ANY GIVEN TIME.             00820000
                                         DEFAULTS TO 500.            */ 00830000
/*                                                                      00840000

./ ADD NAME=DEFCDS
//SYSILEA  JOB 1000,'P-GRANIE',REGION=4M,                               00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//STEP1    EXEC PGM=IXCL1DSU                                            00650000
//SYSPRINT DD   SYSOUT=X                                                00750000
//SYSIN    DD   *                                                       00800000
     DEFINEDS SYSPLEX(BRNRPLEX)                                         00850000
              DSN(BRNR.PRA.SYSPLEX.CDS01) VOLSER(SYSXRA)                00900000
              MAXSYSTEM(8)                                              00950000
              CATALOG                                                   01000000
          DATA TYPE(SYSPLEX)                                            01050000
               ITEM NAME(GROUP) NUMBER(300)                             01100000
               ITEM NAME(MEMBER) NUMBER(120)                            01150000
     DEFINEDS SYSPLEX(BRNRPLEX)                                         01200000
              DSN(BRNR.PRA.SYSPLEX.CDS02) VOLSER(SYSXRB)                01250000
              MAXSYSTEM(8)                                              01300000
              CATALOG                                                   01350000
          DATA TYPE(SYSPLEX)                                            01400000
               ITEM NAME(GROUP) NUMBER(300)                             01450000
               ITEM NAME(MEMBER) NUMBER(120)                            01500000
/*                                                                      01550000

./ ADD NAME=DEFGDG
//SYSILEA  JOB 1000,'SYST-LAPEYRE',REGION=4M,                           00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020002
//LISTCAT  EXEC  PGM=IDCAMS                                             00030000
//SYSPRINT DD SYSOUT=*                                                  00040001
//SYSIN    DD *                                                         00040001
   DEF  GDG  (NAME(SYST.DCOMPROD.STAT) -
          LIMIT( 15) SCRATCH          NOEMPTY )
/*
//
   DELETE CICS.PROD.DFHCSD.SAVE GDG

./ ADD NAME=DEFHCDR
//SYSPGR1  JOB 1000,'PH-GRANIE',REGION=4M,                              00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPGR          00020002
//LISTCAT  EXEC  PGM=IDCAMS                                             00030000
//**********************************************                        00030000
//*  JCL POUR RECATALOGUER UN FICHIER IODF                              00030000
//**********************************************                        00030000
//STEPCAT  DD DSN=CATALOG.MAST2P2,DISP=SHR                              00030000
//SYSPRINT DD SYSOUT=*                                                  00040001
//SYSIN    DD *                                                         00040001
    DEFINE CLUSTER (NAME(SYS1.IODF00.WORK.CLUSTER)  -
          LINEAR               -
          VOL(SYST03)          -
          RECATALOG)
/*
//

./ ADD NAME=DEFLOGPX
//SYSPGR1J JOB 1000,'P-GRANIE',REGION=4M,                               00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//******************************************************************    00030000
//STEP1    EXEC PGM=IXCL1DSU                                            00040000
//*TEPLIB  DD   DSN=SYS1.MIGLIB,DISP=SHR                                00050000
//SYSPRINT DD   SYSOUT=X                                                00060000
//SYSIN    DD   *                                                       00070000
     DEFINEDS SYSPLEX(BRN2PLEX)                                         00080004
              DSN(BRN2.PRA.SYSPLEX.LOGR01) VOLSER(SYSX2B)               00090004
              MAXSYSTEM(8)                                              00100000
              CATALOG                                                   00110000
          DATA TYPE(LOGR)                                               00120000
               ITEM NAME(LSR) NUMBER(100)                               00130000
               ITEM NAME(LSTRR) NUMBER(100)                             00140000
               ITEM NAME(DSEXTENT) NUMBER(30)                           00150000
               ITEM NAME(SMDUPLEX) NUMBER(1)                            00151003
     DEFINEDS SYSPLEX(BRN2PLEX)                                         00160004
              DSN(BRN2.PRA.SYSPLEX.LOGR02) VOLSER(SYSX2A)               00170004
              MAXSYSTEM(8)                                              00180000
              CATALOG                                                   00190000
          DATA TYPE(LOGR)                                               00200000
               ITEM NAME(LSR) NUMBER(100)                               00210000
               ITEM NAME(LSTRR) NUMBER(100)                             00220000
               ITEM NAME(DSEXTENT) NUMBER(30)                           00230000
               ITEM NAME(SMDUPLEX) NUMBER(1)                            00240003

./ ADD NAME=DEFLOGR
//SYSPGR1J JOB 1000,'P-GRANIE',REGION=4M,                               00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//******************************************************************    00030000
//STEP1    EXEC PGM=IXCL1DSU                                            00040000
//*TEPLIB  DD   DSN=SYS1.MIGLIB,DISP=SHR                                00050000
//SYSPRINT DD   SYSOUT=X                                                00060000
//SYSIN    DD   *                                                       00070000
     DEFINEDS SYSPLEX(BRNRPLEX)                                         00080000
              DSN(BRNR.SYSPLEX.LOGR02) VOLSER(SYSXRA)                   00090002
              MAXSYSTEM(8)                                              00100000
              CATALOG                                                   00110000
          DATA TYPE(LOGR)                                               00120000
               ITEM NAME(LSR) NUMBER(200)                               00130000
               ITEM NAME(LSTRR) NUMBER(100)                             00140000
               ITEM NAME(DSEXTENT) NUMBER(30)                           00150000
               ITEM NAME(SMDUPLEX) NUMBER(1)                            00151000

./ ADD NAME=DEFMANX
//SYSMAN   JOB 1000,'SYST',REGION=2M,                                   00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//DEFMAN5 EXEC PGM=IDCAMS                                               00050001
//SYSPRINT  DD SYSOUT=*                                                 00070001
//SYSIN DD *                                                            00080001
 DEL SYS1.MAN2 CL                                                       00081006
 DEFINE CLUSTER (NAME(SYS1.MAN2) -                                      00090006
        VOLUME(ESA2M2) -                                                00100006
        NONINDEXED -                                                    00110001
        CYLINDERS(800) -                                                00120006
        REUSE -                                                         00130001
        RECORDSIZE(4086 32767) -                                        00140001
        SPANNED -                                                       00150001
        SPEED   -                                                       00160001
        CISZ(4096) -                                                    00170001
        SHAREOPTIONS(2))                                                00180001

./ ADD NAME=DEFNVSAM
//SYSCAT   JOB 1000,'SYST-GRANIE',                                      00010001
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//STEP1   EXEC PGM=IDCAMS,REGION=2M                                     00010537
//SYSPRINT DD  SYSOUT=*                                                 00010713
//SYSIN    DD  *                                                        00010713
   DEF  NVSAM(NAME(SYS2.DB2710.SDSNEXIT                        ) -
          DEVT( 3390                                           ) -
          VOL(  SYST24                                         ) )-
          CAT(CATALOG.MASTER.ZOS16.BRN2                            )
/*
//STEP2   EXEC PGM=IDCAMS,REGION=2M                                     00010537
//SYSPRINT DD  SYSOUT=*                                                 00010713
//SYSIN    DD  *                                                        00010713
   DEF  NVSAM(NAME(SYS2.DB2710.SDSNEXIT                        ) -
          DEVT( 3390                                           ) -
          VOL(  SYST24                                         ) )-
          CAT(CATALOG.MASTER.ZOS16.BRN2.BACKUP                     )
/*
//STEP6   EXEC PGM=IDCAMS,REGION=2M                                     00010537
//SYSPRINT DD  SYSOUT=*                                                 00010713
//SYSIN    DD  *                                                        00010713
   DEF  NVSAM(NAME(SYS2.DB2710.SDSNEXIT                        ) -
          DEVT( 3390                                           ) -
          VOL(  SYST24                                         ) )-
          CAT(CATALOG.MASTER.ZOS16.LP2                             )
/*
//STEP8   EXEC PGM=IDCAMS,REGION=2M                                     00010537
//SYSPRINT DD  SYSOUT=*                                                 00010713
//SYSIN    DD  *                                                        00010713
   DEF  NVSAM(NAME(SYS2.DB2710.SDSNEXIT                        ) -
          DEVT( 3390                                           ) -
          VOL(  SYST24                                         ) )-
          CAT(CATALOG.MASTER.ZOS16.BRNQ                            )
/*
//STEP10  EXEC PGM=IDCAMS,REGION=2M                                     00010537
//SYSPRINT DD  SYSOUT=*                                                 00010713
//SYSIN    DD  *                                                        00010713
   DEF  NVSAM(NAME(SYS2.DB2710.SDSNEXIT                        ) -
          DEVT( 3390                                           ) -
          VOL(  SYST24                                         ) )-
          CAT(CATALOG.MASTER.ZOS16.BRNR                            )
/*
//
//STEP1   EXEC PGM=IDCAMS,REGION=2M                                     00010537
//SYSPRINT DD  SYSOUT=*                                                 00010713
//SYSIN    DD  *                                                        00010713
   DEF  NVSAM(NAME(IAR017.ISPF.ISPPROF                         ) -
          DEVT( 3390                                           ) -
          VOL(  TSO002                                         ) )-
          CAT(CATALOG.GIARDX                                       )
//

./ ADD NAME=DEFNVSAR
//SYSPGR5  JOB 1000,'PH-GRANIE',REGION=4M,                              JOB08731
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020002
//LISTCAT  EXEC  PGM=IDCAMS                                             00030000
//SYSPRINT DD SYSOUT=*                                                  00040001
//SYSIN    DD *                                                         00040001
    DEFINE CLUSTER(NAME(CICS.CRECT.DFHCSD) -
          VOL(SYS903)         -
          RECATALOG)

./ ADD NAME=DEFNVSAX
//SYSILEA  JOB 1000,'SYST-GRANIE',                                      00010001
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//******************************************                            00010537
//* CATALOGUE UN NON VSAM DANS LES  MASTER CAT                          00010537
//******************************************                            00010537
//STEP1   EXEC PGM=IDCAMS,REGION=2M                                     00010537
//SYSPRINT DD  SYSOUT=*                                                 00010713
//SYSIN    DD  *                                                        00010713
   DEF  NVSAM(NAME(OPCESA.INST.SEQQCLIB                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN1                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQDATA                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN1                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQDLL0                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN1                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQEXE0                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN1                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQLMD0                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN1                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQMAC0                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN1                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQMSG0                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN1                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQPENU                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN1                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQPNL0                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN1                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQRENG                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN1                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQSAMP                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN1                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQSKL0                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN1                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQTBL0                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN1                                     )
/*

./ ADD NAME=DEFPAGE
//SYSPAGE  JOB 350,'SYSTEME',REGION=2M,COND=(0,LT),                     00010095
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020085
//*------------------------------------------------------------         00030003
//*        DEFINE PAGE SPACE       SYS1.PAGE.VXXXXXX.LOCAL   BRN2       00040090
//*                                SYS1.PAGE.VXXXXXX.LOCAL1  BRN1       00041090
//*                                SYS1.PAGE.VXXXXXX.LOCALR  BRNR       00042098
//*                                SYS1.PAGE.VXXXXXX.LOCALQ  BRNQ       00043098
//*   +    RECATLG   DANS LE MCAT DE BACKUP SI BRN2             *       00050098
//*-------------------------------------------------------------*       00062058
//DEFPAG   EXEC PGM=IDCAMS                                              00070056
//SYSPRINT DD  SYSOUT=*                                                 00090042
//VOL2     DD  VOL=SER=EXP346,UNIT=3390,DISP=SHR                        00100099
//SYSIN    DD    *                                                      00110042
  DEFINE PAGESPACE    (NAME(SYS1.PAGE.VEXP346.LOCAL) -                  00120099
               FILE(VOL2) -                                             00130042
               CYLINDERS(200) -                                         00140089
               STORAGECLASS(SCGSY) -                                    00141095
               VOLUME(EXP346))                                          00150099
/*                                                                      00160056
//RECATAL  EXEC  PGM=IDCAMS                                             00190056
//SYSPRINT DD SYSOUT=*                                                  00210056
//SYSIN    DD *                                                         00220056
    DEFINE PAGESPACE (NAME(SYS1.PAGE.VEXP346.LOCAL)            -        00230099
          VOL(EXP346)         -                                         00240099
          RECATALOG) -                                                  00250094
          CATALOG(CATALOG.MASTER.ZOS18.BRN2.BACKUP)                     00251099
//                                                                      00260070

./ ADD NAME=DEFPAGEQ
//SYSPAGE  JOB 350,'SYSTEME',REGION=2M,COND=(0,LT),                     00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00030000
//*        DEFINE PAGE SPACE       SYS1.PAGE.VXXXXXX.LOCAL   BRN2       00040000
//*                                SYS1.PAGE.VXXXXXX.LOCAL1  BRN1       00041000
//*   +    RECATLG   DANS LE MCAT DE BACKUP                     *       00042000
//*-------------------------------------------------------------*       00043000
//DEFPAG   EXEC PGM=IDCAMS                                              00044000
//SYSPRINT DD  SYSOUT=*                                                 00045000
//VOL2     DD  VOL=SER=QAL415,UNIT=3390,DISP=SHR                        00046000
//SYSIN    DD    *                                                      00047000
  DEFINE PAGESPACE    (NAME(SYS1.PAGE.VQAL415.LOCALQ) -                 00048000
               FILE(VOL2) -                                             00049000
               CYLINDERS(200) -                                         00050000
               STORAGECLASS(SCGSY1) -                                   00060000
               VOLUME(QAL415))                                          00070000
/*                                                                      00080000

./ ADD NAME=DEFRACF
//SYSALIAS JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=I,                       00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//******************************************************************    00451000
//*      CREATION D'UN PROFILE DATASET DANS RACF DATASET                00460000
//*      -----------------------------------------------                00470000
//*    A EXECUTER POUR LES CREATIONS D'ALIAS DE PRODUCTION              00471000
//*    ----------> STCOPAL SI EURO                                      00472000
//*    ----------> STCPRC SI PROD                                       00473000
//******************************************************************    00480000
//RACFID   EXEC PGM=IKJEFT01                                            00490000
//SYSPRINT DD SYSOUT=*                                                  00500000
//SYSTSOUT DD SYSOUT=*                                                  00510000
//SYSTSPRT DD SYSOUT=*                                                  00520000
//SYSTSIN  DD *                                                         00530000
 ADDGROUP LPPZ OWNER(PRODMGT) SUPGROUP(PRODMGT)                         00540002
 ADDSD  'LPPZ.*' GENERIC OWNER(PRODMGT) UACC(NONE)                      00550002
 PERMIT 'LPPZ.*' ACCESS(ALTER) ID(PRODMGT,PREP,SUPTECH,STCPRC,CTRL)     00560002
 PERMIT 'LPPZ.*' ACCESS(READ) ID(DEVMGT,PROJ,STCGRP)                    00570002
 LD DA('LPPZ.*') AUTHUSER                                               00580002
/*                                                                      00590000

./ ADD NAME=DEFRAG
//SYSDFR  JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=O,REGION=7M,              00028701
//             MSGCLASS=T,NOTIFY=&SYSUID,TIME=1439                      00028800
//EXPL47   EXEC PGM=ADRDSSU,PARM='TRACE=YES,WORKUNIT=WORKDA'
//SYSPRINT DD SYSOUT=T
//IN       DD UNIT=3390,VOL=SER=EXPL47,DISP=OLD
//SYSIN    DD *
    DEFRAG DDNAME(IN)
//*

./ ADD NAME=DEFRAPRO
//SYSALPRO JOB  1,'ALIAS PRODUIT',MSGLEVEL=(1,1),CLASS=I,               00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//***********************************************************           00030000
//* ATTENTION !!!! CE JOB DOIT ETRE SUR LP2, BRNR ET BRNQ               00040000
//* ET BRN2A CHAQUE CREATION D'ALIAS PRODUIT                            00041001
//***********************************************************           00042000
//******************************************************************    00190000
//*      CREATION D'UN PROFILE DATASET DANS RACF DATASET                00200000
//*      -----------------------------------------------                00210000
//******************************************************************    00220000
//RACFID   EXEC PGM=IKJEFT01                                            00230000
//SYSPRINT DD SYSOUT=*                                                  00240000
//SYSTSOUT DD SYSOUT=*                                                  00250000
//SYSTSPRT DD SYSOUT=*                                                  00260000
//SYSTSIN  DD *                                                         00270000
 ADDGROUP XXXXX OWNER(SYS1) SUPGROUP(SYS1)                              00280000
 ADDSD  'XXXXX.*' GENERIC OWNER(SYS1) UACC(READ)                        00290000
 PERMIT 'XXXXX.*' ACCESS(ALTER) ID(SYS1,PRODMGT)                        00300000
 LD DA('XXXXX.*') AUTHUSER                                              00310000
/*                                                                      00320000

./ ADD NAME=DEFRMFSP
//SYSILEA  JOB CLASS=I,MSGCLASS=T,NOTIFY=&SYSUID
//**********************************************************************
//*   ACTIVATION DES PROFILES SXX
//**********************************************************************
//RACFID   EXEC PGM=IKJEFT01
//SYSPRINT DD SYSOUT=*
//SYSTSOUT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
 PERMIT  ERBSDS.SMFDATA  CLASS(FACILITY) ID(SYS1) ACCESS(READ)
 SETROPTS REFRESH RACLIST(FACILITY)

./ ADD NAME=DEFSGIDX
//SYSINDEX JOB 1000,'SYSTEME',REGION=4M,                                00010001
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//********************************************************************
//ALLOC     EXEC PGM=IDCAMS
//*STEPCAT   DD   DSN=CATALOG.MASTLP2,DISP=SHR
//SYSPRINT  DD   SYSOUT=*
//DDINDEX   DD   DISP=OLD,UNIT=3390,VOL=SER=SYST06
//SYSIN     DD   *
   DEFINE  CLUSTER( -
                  NAME(SYS1.STGINDEX) -
                  VOLUMES(SYST06) -
                  FILE(DDINDEX) -
                  BUFFERSPACE(20480) -
                  KEYS(12 8) -
                  RECORDSIZE(2041 2041) -
                  REUSE -
                      ) -
           DATA(        -
                  CYLINDERS(4 0) -
                  CONTROLINTERVALSIZE(2048) -
               ) -
           INDEX(   -
                  CYLINDERS(2 0) -
                  CONTROLINTERVALSIZE(4096) -
                ) -
                  CATALOG(CATALOG.MASTER.LP2 -
                          )

./ ADD NAME=DEFSPOOL
//SYSPOOL  JOB 2500,'SYST-GRANIE',REGION=2M,                            00000102
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00000201
//* ----------------------------------------------------------- *       00000301
//*      APRES INIT: $S SPOOL,V=SPOOL2,FORMAT,Z                         00000504
//*      Z LAISSE LE VOLUME INACTIVE APRES LE FORMATTAGE                00000604
//*------------------------------------------------------               00000704
//ALLOC1  EXEC PGM=IEFBR14,REGION=512K                                  00000801
//SPOOL    DD  DSN=SYS1.HASPACE,DISP=(,KEEP),                           00000901
//             UNIT=3390,VOL=SER=SPOOL7,                                00001010
//             SPACE=(CYL,3337,,CONTIG,ROUND)                           00001110
//                                                                      00001201
//                                                                      00001304
//CHECKPT  DD  DSN=SYS1.HASPCKPT,DISP=(,KEEP),                          00001501
//             UNIT=3390,VOL=SER=SYST04,                                00002001
//             SPACE=(CYL,3)                                            00003001
//CHECKPT  DD  DSN=SYS1.HASPCKP2,DISP=(,KEEP),                          00004001
//             UNIT=3390,VOL=SER=SYST04,                                00005001
//             SPACE=(CYL,3)                                            00006001
//CHECKPT  DD  DSN=SYS1.HASPCKPN,DISP=(,KEEP),                          00007001
//             UNIT=3390,VOL=SER=SYST04,                                00008001
//             SPACE=(CYL,3)                                            00009001

./ ADD NAME=DEFSWAP
//SYSSWAP  JOB 1000,'SYST-GRANIE',REGION=2M,                            00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//*------------------------------------------------------------         00035003
//*        DEFINE PAGE SPACE SWAP  SYS1.SWAP.VXXXXXX.SWAP1      *       00060CRE
//*        + RECATALOG DANS LE MCAT DE BACKUP                   *       00060CRE
//*-------------------------------------------------------------*       00060CRE
//COMMON   EXEC PGM=IDCAMS                                              00035BLD
//SYSPRINT DD  SYSOUT=*                                                 00100BLD
//VOL2     DD  VOL=SER=EXPL42,UNIT=3390,DISP=SHR                        00120BLD
//SYSIN    DD    *                                                      00180BLD
  DEFINE PAGESPACE  (NAME (SYS1.SWAP.VEXPL42.SWAP1)    -                00490011
                    CYLINDERS (40)                       -              00500011
                    FILE (VOL2)                          -              00510000
                    VOLUMES (EXPL42)                     -              00520011
                    SWAP                                 -              00530000
                    UNIQUE)                                             00540000
/*
//RECATLG  EXEC  PGM=IDCAMS                                             00030000
//STEPCAT  DD DSN=CATALOG.MASTER21.BACKUP,DISP=SHR                      00030000
//SYSPRINT DD SYSOUT=*                                                  00040001
//SYSIN    DD *                                                         00040001
    DEFINE PAGESPACE (NAME(SYS1.SWAP.VEXPL42.SWAP1)   -
          VOL(EXPL42)         -
          RECATALOG)
//

./ ADD NAME=DEFSYQB
//SYSPGR1J JOB 1000,'P-GRANIE',REGION=4M,                               00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//STEP1    EXEC PGM=IXCL1DSU                                            00650000
//SYSPRINT DD   SYSOUT=X                                                00750000
//SYSIN    DD   *                                                       00800000
     DEFINEDS SYSPLEX(BRNQPLEX)                                         00850000
              DSN(BRNQ.PRA.SYSPLEX.CDS01) VOLSER(SYSXQA)                00900000
              MAXSYSTEM(8)                                              00950000
              CATALOG                                                   01000000
          DATA TYPE(SYSPLEX)                                            01050000
               ITEM NAME(GROUP) NUMBER(300)                             01100000
               ITEM NAME(MEMBER) NUMBER(120)                            01150000
     DEFINEDS SYSPLEX(BRNQPLEX)                                         01200000
              DSN(BRNQ.PRA.SYSPLEX.CDS02) VOLSER(SYSXQB)                01250000
              MAXSYSTEM(8)                                              01300000
              CATALOG                                                   01350000
          DATA TYPE(SYSPLEX)                                            01400000
               ITEM NAME(GROUP) NUMBER(300)                             01450000
               ITEM NAME(MEMBER) NUMBER(120)                            01500000
/*                                                                      01550000

./ ADD NAME=DEFSYSP1
//SYSPGR1J JOB 1000,'P-GRANIE',REGION=4M,                               00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*                                                                     00100000
//* SAMPLE JCL TO FORMAT THE PRIMARY AND/OR ALTERNATE COUPLE DATA SETS  00150000
//* - SYSPLEX COUPLE DATA SETS                                          00200000
//*                                                                     00207100
//*   1. SYSPLEX NAME IS REQUIRED AND IS 1-8 CHARACTERS                 00214200
//*   2. SYSPRINT DD IS A REQUIRED DD STATEMENT FOR FORMAT UTILITY      00221300
//*      MESSAGES                                                       00228400
//*   3. SYSIN DD IS A REQUIRED DD STATEMENT FOR FORMAT UTILITY         00235500
//*      CONTROL STATEMENTS                                             00242600
//*                                                                     00250000
//* CHANGE-ACTIVITY =                                                   00300000
//* $L0=COUPLXLK,HBB4410,880120,PDFR: CROSS-SYSTEM COUPLING FACILITY    00350000
//* $P1=PEO2890,HBB4410,891204,PDDS: CHANGING DSNS                      00400000
//* $L1=SYSLKXLK,HBB5510,920815,PDFR: XLS Initial Release               00450000
//* $P2=PIG1760,HBB5510,930701,PDPY:  Correct the TYPE name             00500000
//* $P3=PSD1112,JBB6602,960518,PDHV: Increase Items: Group / Member     00525000
//*                                                                     00550000
//******************************************************************    00600000
//STEP1    EXEC PGM=IXCL1DSU                                            00650000
//*TEPLIB  DD   DSN=SYS1.MIGLIB,DISP=SHR                                00700000
//SYSPRINT DD   SYSOUT=X                                                00750000
//SYSIN    DD   *                                                       00800000
     DEFINEDS SYSPLEX(BRNQPLEX)                                         00850003
              DSN(BRNQ.SYSPLEX.CDS01) VOLSER(SYS911)                    00900003
              MAXSYSTEM(8)                                              00950000
              CATALOG                                                   01000000
          DATA TYPE(SYSPLEX)                                            01050000
               ITEM NAME(GROUP) NUMBER(300)                             01100002
               ITEM NAME(MEMBER) NUMBER(120)                            01150000
     DEFINEDS SYSPLEX(BRNQPLEX)                                         01200003
              DSN(BRNQ.SYSPLEX.CDS02) VOLSER(SYS913)                    01250003
              MAXSYSTEM(8)                                              01300000
              CATALOG                                                   01350000
          DATA TYPE(SYSPLEX)                                            01400000
               ITEM NAME(GROUP) NUMBER(300)                             01450002
               ITEM NAME(MEMBER) NUMBER(120)                            01500000
/*                                                                      01550000

./ ADD NAME=DEFUCAT
//SYSPGR1C JOB 1000,'PH-GRANIE',REGION=2M,                              00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020101
//*------------------------------------------------------------         00060006
//DEFINE1 EXEC PGM=IDCAMS,REGION=1024K
//SYSPRINT DD  SYSOUT=*
//UCATVOL  DD  UNIT=3390,VOL=SER=IPLMI1,DISP=SHR
//SYSIN    DD  *
  DEFINE  UCAT -
     (NAME (CATALOG.MERHIS) -
      FILE (UCATVOL) -
      VOLUME (IPLMI1) -
      ICFCATALOG                               /*ICF*/ -
      CYLINDERS (20 10) ) -
      CAT(CATALOG.MASTER.ZOS13.BRN2)
/*
//

./ ADD NAME=DEFVVDS
//SYSPGRV  JOB 1000,'SYST',REGION=2M,                                   00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPGR          00020000
//*------------------------------------------------------------         00030000
//STEP1 EXEC PGM=IDCAMS                                                 00040000
//SYSPRINT DD SYSOUT=*                                                  00050000
//SYSIN DD *                                                            00060000
 DEFINE CLUSTER (NAME(SYS1.VVDS.VHSM001) TRACKS(100,10) -               00070000
          VOLUMES(HSM001) NONINDEXED) CATALOG(CATALOG.MASTER21)         00071000
 /*                                                                     00089300

./ ADD NAME=DEFWLMPX
//SYSPGR1J JOB 1000,'P-GRANIE',REGION=4M,                               00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00030000
//*******************************************************************   00040000
//*                                                                 *   00050000
//* Sample JCL to format the WLM CDS by invoking XCF format         *   00060000
//* utility.                                                        *   00070000
//*                                                                 *   00080000
//* Couple data set allocation rules:                               *   00090000
//*                                                                 *   00100000
//*   1. SYSPLEX name is required and is 1-8 characters.            *   00110000
//*   2. SYSPRINT DD is a required DD statement for format utility  *   00120000
//*      messages.                                                  *   00130000
//*   3. SYSIN DD is a required DD statement for format utility     *   00140000
//*      control statements.                                        *   00150000
//*   4. When allocating space for service definition extensions    *   00160000
//*      use the SVDEFEXT, SVDCREXT, SVAEAEXT and SVSEAEXT  àWLMPRES*   00170000
//*      SYSIN keywords.                                            *   00180000
//*                                                                 *   00190000
//*      - SVDEFEXT is used to set aside space for extensions to    *   00200000
//*        the IWMSVDEF.  Values for SVDEFEXT range from 0 to 8092  *   00210000
//*        and are in terms of kilobytes.                           *   00220000
//*                                                                 *   00230000
//*      - SVDCREXT is used to set aside space for extensions to    *   00240000
//*        the IWMSVDCR.  Values for SVDCREXT range from 0 to 8092  *   00250000
//*        and are in terms of kilobytes.                           *   00260000
//*                                                                 *   00270000
//*      - SVAEAEXT is used to set aside space for extensions to    *   00280000
//*        the IWMSVAEA.  Values for SVAEAEXT range from 0 to 8092  *   00290000
//*        and are in terms of kilobytes.                   àWLMPSTP*   00300000
//*                                                                 *   00310000
//*      - SVSEAEXT is used to set aside space for extensions to    *   00320000
//*        the IWMSVSEA.  Values for SVSEAEXT range from 0 to 8092  *   00330000
//*        and are in terms of kilobytes.                   àWLMPRES*   00340000
//*                                                                 *   00350000
//*      Reference MVS/ESA Programming: Workload Management         *   00360000
//*      Services for more details on SVDEFEXT, SVDCREXT,           *   00370000
//*      SVAEAEXT and SVSEAEXT.                             àWLMPRES*   00380000
//*                                                                 *   00390000
//*   5. MAXSYSTEM specifies the number of systems to be    àPQC1518*   00400000
//*      used by the new couple data set.  If this          àPQC1518*   00410000
//*      parameter is omitted, the format utility assigns   àPQC1518*   00420000
//*      a default value of eight.  For WLM we make the     àPQC1518*   00430000
//*      MAXSYSTEM value 32 so that it equal to the maximum àPQC1518*   00440000
//*      number of systems allowed in a sysplex.            àPQC1518*   00450000
//*      See OS/390 MVS Setting Up A Sysplex for more       àPQC1518*   00460000
//*      details.                                           àPQC1518*   00470000
//*                                                         àWLMPSTP*   00480000
//*   6. When allocating the WLM couple data set WLM        àPSY0613*   00490000
//*      provides a number of DATA-NAMEs for the ITEM       àPSY0613*   00500000
//*      NAME(DATA-NAME) statement.  For example, POLICY is àPSY0613*   00510000
//*      a DATA-NAME provided to specify the number of      àPSY0613*   00520000
//*      administrative policies that can be defined within àPSY0613*   00530000
//*      the WLM couple data set.                           àPSY0613*   00540000
//*                                                         àPSY0613*   00550000
//*      When allocating the WLM couple data set the        àPSY0613*   00560000
//*      DATA-NAMEs are dependent upon the MVS release that àPSY0613*   00570000
//*      is running.                                        àPSY0613*   00580000
//*                                                         àPSY0613*   00590000
//*      For example, the APPLENV keyword was introduced in àPSY0613*   00600000
//*      OS/390 Release 3.  If APPLENV is used in the job toàPSY0613*   00610000
//*      allocate the WLM couple data set it must run on a  àPSY0613*   00620000
//*      system running OS/390 Release 3 or later release.  àPSY0613*   00630000
//*                                                         àPSY0613*   00640000
//*      The following lists the DATA-NAMEs and at what     àPSY0613*   00650000
//*      release they were introduced.  The DATA-NAMEs are  àPSY0613*   00660000
//*      available to that release and any later release.   àPSY0613*   00670000
//*      For example,  POLICY is available on all releases  àPSY0613*   00680000
//*      and SCHENV is available on OS/390 R3 and R4.       àPSY0613*   00690000
//*                                                         àPSY0613*   00691000
//*      Release             DATA-NAME                      àPSY0613*   00692000
//*      -------             ---------                      àPSY0613*   00693000
//*      MVS/SP 5.1          POLICY                         àPSY0613*   00694000
//*                          WORKLOAD                       àPSY0613*   00694100
//*                          SRVCLASS                       àPSY0613*   00694200
//*      MVS/SP 5.2          SVDEFEXT                       àPSY0613*   00694300
//*                          SVDCREXT                       àPSY0613*   00694400
//*      OS/390 Release 3    APPLENV                        àPSY0613*   00694500
//*                          SVAEAEXT                       àPSY0613*   00694600
//*      OS/390 Release 4    SCHENV                         àPSY0613*   00694700
//*                          SVSEAEXT                       àPSY0613*   00694800
//*                                                         àPSY0613*   00694900
//*      To run the job to allocate the WLM couple data set àPSY0613*   00695000
//*      on the correct system use the JES2 /*JOBPARM or    àPSY0613*   00695100
//*      JES3 //*MAIN statement to route control to the     àPSY0613*   00695200
//*      correct system.                                    àPSY0613*   00695300
//*                                                         àPSY0613*   00695400
//*      Reference MVS/ESA JCL User's Guide for more detailsàPSY0613*   00695500
//*      on how to select a system.                         àPSY0613*   00695600
//*                                                         àPSY0613*   00695700
//*01* EXTERNAL CLASSIFICATION: None                        àWLMPSTP*   00695800
//*01* END OF EXTERNAL CLASSIFICATION:                      àWLMPSTP*   00695900
//*                                                                 *   00696000
//*******************************************************************   00697000
//*                                                                 *   00698000
//* CHANGE-ACTIVITY =                                               *   00699000
//* $L0=WLMI   ,HBB5510,930811,PD88IK: Workload Manager I Support   *   00700000
//* $P1=PIG2095,HBB5520,941202,PD46DB: Add comments to              *   00710000
//*                                    explain extension usage      *   00720000
//* $WLMPSTP,   HBB6603,950701,PDB9DB: Stored SQL procedures        *   00730000
//*                                    Add APPLENV and SVAEAEXT     *   00740000
//*                                    keywords                     *   00750000
//* $PQC1518,   HBB6603,960617,PDB9DB: Add MAXSYSTEM keywordàPQC1518*   00760000
//* $WLMPRES,   JBB6604,961225,PDB9DB: SCHENV support       àWLMPRES*   00770000
//* $PSY0613,   JBB6604,970501,PDB9DB: Item £6 added        àPSY0613*   00780000
//*******************************************************************   00790000
//STEP1    EXEC PGM=IXCL1DSU                                            00800000
//STEPLIB  DD   DSN=SYS1.MIGLIB,DISP=SHR                                00810000
//SYSPRINT DD   SYSOUT=X                                                00820000
//SYSIN    DD   *                                                       00830000
   DEFINEDS SYSPLEX(BRN2PLEX)                                           00840003
            DSN(BRN2.PRA.SYSPLEX.WLM01) VOLSER(SYSX2A)                  00850003
            MAXSYSTEM(32)                                               00860000
            CATALOG                                                     00870000
        DATA TYPE(WLM)                                                  00880000
             ITEM NAME(POLICY) NUMBER(15)                               00890000
             ITEM NAME(WORKLOAD) NUMBER(50)                             00900000
             ITEM NAME(SRVCLASS) NUMBER(200)                            00910000
             ITEM NAME(APPLENV) NUMBER(100)                             00920000
             ITEM NAME(SCHENV) NUMBER(100)                              00930000
   DEFINEDS SYSPLEX(BRN2PLEX)                                           00931003
            DSN(BRN2.PRA.SYSPLEX.WLM02) VOLSER(SYSX2B)                  00932003
            MAXSYSTEM(32)                                               00933000
            CATALOG                                                     00934000
        DATA TYPE(WLM)                                                  00935000
             ITEM NAME(POLICY) NUMBER(15)                               00936000
             ITEM NAME(WORKLOAD) NUMBER(50)                             00937000
             ITEM NAME(SRVCLASS) NUMBER(200)                            00938000
             ITEM NAME(APPLENV) NUMBER(100)                             00939000
             ITEM NAME(SCHENV) NUMBER(100)                              00939100
/*                                                                      00940000

./ ADD NAME=DELALIAS
//SYSALIAS JOB 1,SYSTEME,REGION=4M,NOTIFY=&SYSUID,
//             CLASS=A,MSGCLASS=T,MSGLEVEL=(1,1)
/*
//SP1A8 EXEC PGM=IDCAMS,REGION=1024K
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DELETE DV132 ALIAS CATALOG(CATALOG.MASTER.ZOS201.BRNQ)
  DELETE DV133 ALIAS CATALOG(CATALOG.MASTER.ZOS201.BRNQ)
/*

./ ADD NAME=DELALIA2
//SYSALIAS JOB 1,SYSTEME,REGION=2M,                                     00010002
//             CLASS=A,MSGCLASS=T,MSGLEVEL=(1,1)                        00020001
/*
//SP1 EXEC PGM=IDCAMS,REGION=1024K
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DELETE XPEDITRS ALIAS CATALOG(CATALOG.MASTER.ZOS112.LP2)
/*

./ ADD NAME=DELALXFO
//PROXFDEL JOB 1,'B-T',NOTIFY=&SYSUID,CLASS=A,MSGCLASS=X,
//          MSGLEVEL=(1,1)
//*======================================================*
//ALIA1 EXEC PGM=IDCAMS,REGION=1024K
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DELETE CCR1 ALIAS CATALOG(CATALOG.MASTER.ZOS13.BRN2)
//*
//ALIA2 EXEC PGM=IDCAMS,REGION=1024K
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DELETE CCR1 ALIAS CATALOG(CATALOG.MASTER.ZOS13.BRN2.BACKUP)
/*
//ALIA3 EXEC PGM=IDCAMS,REGION=1024K
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DELETE CCR1 ALIAS CATALOG(CATALOG.MASTER.ZOS13.LP2)
/*
//ALIA4 EXEC PGM=IDCAMS,REGION=1024K
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DELETE CCR1 ALIAS CATALOG(CATALOG.MASTER.ZOS13.BRN1)
/*
//ALIA5 EXEC PGM=IDCAMS,REGION=1024K
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DELETE CCR1 ALIAS CATALOG(CATALOG.MASTER.ZOS13.BRNQ)
/*
//ALIA6 EXEC PGM=IDCAMS,REGION=1024K
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DELETE CCR1 ALIAS CATALOG(CATALOG.MASTER.ZOS13.BRNR)
/*

./ ADD NAME=DELNOSCR
//SYSPGRC  JOB 1000,'PH-GRANIE',                                        00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//STEP1   EXEC PGM=IDCAMS,REGION=2M                                     00030000
//**********************************************************            00031000
//* DEL NOSCRATCH  + DEFINE NONVSAM                                     00031100
//* MASTERCAT à MODIFIER                                                00031200
//**********************************************************            00032000
//SYSPRINT DD  SYSOUT=*                                                 00100000
//SYSIN    DD  *                                                        00110000
   DELETE PRL0.VSAM.CRBSIV  NOSCRATCH   -                               00370001
   CAT(CATALOG.GPROD1)                                                  00380001

./ ADD NAME=DELNSDEF
//SYSPGRC  JOB 1000,'PH-GRANIE',                                        00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//STEP1   EXEC PGM=IDCAMS,REGION=2M                                     00030000
//**********************************************************            00031000
//* DEL NOSCRATCH  + DEFINE NONVSAM                                     00031100
//* MASTERCAT à MODIFIER                                                00031200
//**********************************************************            00032000
//SYSPRINT DD  SYSOUT=*                                                 00100000
//SYSIN    DD  *                                                        00110000
   DELETE OPCA.INSTSP4.OPCOBJ           -                               00370000
   NOSCRATCH CAT(CATALOG.MASTER11)                                      00380000
   DEF  NVSAM(NAME(OPCA.INSTSP4.OPCOBJ                        ) -       00390000
          DEVT( 3390                                      ) -           00400000
          VOL(  SYST02                                         ) )-     00410000
          CAT(CATALOG.MASTER11                                   )      00420000

./ ADD NAME=DELNVSAM
//SYSILEA  JOB 1000,'PH-GRANIE',                                        00010014
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020014
//STEP1   EXEC PGM=IDCAMS,REGION=2M                                     00030014
//SYSPRINT DD  SYSOUT=*                                                 00031014
//SYSIN    DD  *                                                        00031114
   DELETE SYS2.DB2TEST.SDSNLOAD -                                       00031417
   NOSCRATCH CAT(CATALOG.MASTER.ZOS16.BRN2)                             00031517
   DELETE SYS2.DB2TEST.SDSNLOAD -                                       00031818
   NOSCRATCH CAT(CATALOG.MASTER.ZOS16.BRN2.BACKUP)                      00031918
   DELETE SYS2.DB2TEST.SDSNLOAD -                                       00032218
   NOSCRATCH CAT(CATALOG.MASTER.ZOS16.LP2)                              00032318
   DELETE SYS2.DB2TEST.SDSNLOAD -                                       00033118
   NOSCRATCH CAT(CATALOG.MASTER.ZOS16.BRNQ)                             00033218
   DELETE SYS2.DB2TEST.SDSNLOAD -                                       00036016
   NOSCRATCH CAT(CATALOG.MASTER.ZOS16.BRNR)                             00037016

./ ADD NAME=DELPAGE
//SYSDEL   JOB 1000,'SYST-GRANIE',REGION=2M,                            00010007
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020007
//***********************************************************           00030000
//* PAS DE DELETE POSSIBLE SUR UN VOLUME CONTENANT UN FICHIER           00050000
//* PAGE ACTIF                                                          00060000
//* ATTENTION A LA MODIF DU IEASYS EN COURS AN CAS DE DELETE            00070005
//***********************************************************           00080000
//SYSDEL1 EXEC PGM=IDCAMS,REGION=512K                                   00090000
//*STEPCAT  DD  DSN=CATALOG.MASTBRN2,DISP=SHR                           00091009
//SYSPRINT DD  SYSOUT=*                                                 00092000
//SYSIN    DD  *                                                        00093000
               DELETE        -                                          00094000
               SYS1.PAGE.VYSYS00.LOCAL   -                              00095014
               PURGE         -                                          00096000
               PAGESPACE                                                00097000
//                                                                      00097110
//***********************************************************           00098009
//* DELETE DE L ENTREE CATALOGUE SUR LE MCAT DE BACKUP                  00098300
//***********************************************************           00098400
//SYSDEL1 EXEC PGM=IDCAMS,REGION=512K                                   00099000
//STEPCAT  DD  DSN=CATALOG.MASTBRN2.BACKUP,DISP=SHR                     00100009
//SYSPRINT DD  SYSOUT=*                                                 00110000
//SYSIN    DD  *                                                        00120000
               DELETE        -                                          00130000
               SYS1.PAGE.VEXPL13.LOCAL -                                00140009
               NOSCRATCH CAT(CATALOG.MASTBRN2.BACKUP)                   00150009
/*                                                                      00170000

./ ADD NAME=DELUSCAT
//SYSDEL   JOB 1000,'SYST-GRANIE',REGION=2M,                            00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//***********************************************************           00030000
//SYSDEL1 EXEC PGM=IDCAMS,REGION=512K                                   00090000
//SYSPRINT DD  SYSOUT=*                                                 00092000
//SYSIN    DD  *                                                        00093000
               DELETE             -                                     00094001
               CATALOG.GEODE      -                                     00095015
               RECOVERY           -                                     00096004
               USERCATALOG                                              00097001
/*                                                                      00098001

./ ADD NAME=DEVNVTAP
//SYSCAT   JOB 1000,'SYST-GRANIE',                                      00010001
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//STEP1   EXEC PGM=IDCAMS,REGION=2M                                     00010537
//SYSPRINT DD  SYSOUT=*                                                 00010713
//SYSIN    DD  *                                                        00010713
   DEF  NVSAM(NAME(SYSILE.SMF.DATA                             ) -
          DEVT( 3490                                           ) -
          FSEQN (1) -
          VOL(  027604                                         ) )-
          CAT(CATALOG.GSYST                                        )
//

./ ADD NAME=DFHSM
SYST.DFHSM.BCDS                                                         00010000
SYST.DFHSM.BCDS.DATA                         SYSTH1                     00020000
SYST.DFHSM.BCDS.INDEX                        SYSTH1                     00030000
SYST.DFHSM.BCDS.OLD                                                     00040000
SYST.DFHSM.BCDS.OLD.DATA                     SYSTH1                     00050000
SYST.DFHSM.BCDS.OLD.INDEX                    SYSTH1                     00060000
SYST.DFHSM.BRN2.HSMLOGX1                     SYST07                     00070000
SYST.DFHSM.BRN2.HSMLOGY1                     SYST07                     00080000
SYST.DFHSM.EDITLOG                           SYST09                     00090000
SYST.DFHSM.JOURNAL                           SYST17                     00100000
SYST.DFHSM.JRNL                              SYST01                     00110000
SYST.DFHSM.MCDS                                                         00120000
SYST.DFHSM.MCDS.DATA                         SYSTH2                     00130000
SYST.DFHSM.MCDS.INDEX                        SYSTH2                     00140000
SYST.DFHSM.MCDS.DU130612                     MIGRAT                     00150000
SYST.DFHSM.MCDS.DU130612.DATA                MIGRAT                     00160000
SYST.DFHSM.MCDS.DU130612.INDEX               MIGRAT                     00170000
SYST.DFHSM.OCDS                                                         00180000
SYST.DFHSM.OCDS.DATA                         SYST27                     00190000
SYST.DFHSM.OCDS.INDEX                        SYST27                     00200000
SYST.DFHSM.SAMPLE.CNTL                       MVS105                     00210000

./ ADD NAME=DIAGNOSE
//SYSDIAG JOB  1,LAPEYRE,MSGLEVEL=(1,1),CLASS=O,                        00028701
//             MSGCLASS=T,NOTIFY=&SYSUID                                00028801
//UCAT    EXEC PGM=IDCAMS                                               00070001
//SYSPRINT DD SYSOUT=*                                                  00080001
//VOLUME  DD DSN=SYS1.VVDS.VPER052,VOL=SER=PER052,UNIT=3390,            00090006
//        DISP=SHR                                                      00100001
//SYSIN    DD *                                                         00110001
  DIAGNOSE VVDS INFILE(VOLUME) COMPAREDS(CATALOG.PREDICA)               00120006
//*                                                                     00130001
//                                                                      00140001

./ ADD NAME=DISK
SYS5.DISQUES.PARM.BRNQ(BKLP2000)

./ ADD NAME=DLDFMTP
//SYSGFO1   JOB 1,SYSTEME,NOTIFY=SYSGFO,CLASS=I,MSGCLASS=T
//STEP1     EXEC PGM=IDCAMS,REGION=2048K
//SYSPRINT  DD   SYSOUT=*
//SYSIN     DD   *
   DELETE     (OXXX.VSAM.BATCNTL) -
               PURGE CLUSTER
   DEFINE CLUSTER -
              (NAME(OXXX.VSAM.BATCNTLE) -
               RECORDS (105)                 -
               FREESPACE (0 0)               -
               NUMBERED                      -
               SPEED                         -
               SHAREOPTIONS (4 4)            -
               VOLUME (SYS905))              -
          DATA                               -
              (NAME (OXXX.VSAM.BATCNTLE.DATA)  -
               RECORDSIZE (500 500)          -
               CONTROLINTERVALSIZE (512))
/*
//

./ ADD NAME=DSNDUMP
//SYS019M JOB  (ACCOUNT),'NAME'
//*
//STEP1  EXEC  PGM=ADRDSSU,REGION=64M
//SYSPRINT  DD  SYSOUT=*
//OUTDD1 DD DUMMY
//*OUTDD1 DD DSN=SYS019.D,
//*LABEL=(1,SL),
//*DISP=(OLD,CATLG,DELETE)
//SYSIN    DD DSN=SYS019.LP2.MVS(DSNNOTS),DISP=SHR
// PEND
//STETP1  EXEC DSNNOTC,VOL=DISSA
//
 DUMP DATASET( -
        INCLUDE( -
                SYS019.AMIOPS.AMIALPAS -
                )) -
      OUTDDNAME( -
                OUTDD1 -
                ) -
      CANCELERROR -
      OPTIMIZE(1) -
      WAIT(2,2)
/*

./ ADD NAME=DSNDUMP1
DUMP INDDNAME(DASD1,DASD2) OUTDDNAME(TAPE) -                            00010000
DATASET(INCLUDE(USER2.**,USER3.*) -                                     00020000
EXCLUDE(USER2.**.REP) -                                                 00030000
BY((DSCHA,EQ,1)))                                                       00040000
EXAMPLE 2D: WITH FILTERING DATA IN A DATA                               00050000

./ ADD NAME=DSNDUMP2
  DUMP DATASET(INCLUDE(**) -                                            00010000
    BY((CATLG EQ NO))) -                                                00020000
       INDDNAME(DASD1) -                                                00040000
    OUTDDNAME(TAPE)                                                     00050000
//                                                                      00051000
  DUMP DATASET(INCLUDE(**) -                                            00052000
  BY((DSORG NE VSAM) -                                                  00053000
  (CATLG EQ NO))) -                                                     00054000
  INDDNAME(DASD1,DASD2) -                                               00055000
  OUTDDNAME(TAPE)                                                       00056000
//                                                                      00057000
DELETE PURGE                                                            00060000
IF YOU DO NOT WANT A DUMP                                               00070000

./ ADD NAME=DSNMOVE
//DSNMOVE   JOB ACCT£,                                                  00010000
//             MVS,                                                     00020000
//             TYPRUN=HOLD,
//             NOTIFY=&SYSUID,                                          00030000
//             MSGCLASS=T                                               00040001
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00050002
//      SYS019.LP2.DB2,                                                 00051002
//      SYS1.SACBCNTL)                                                  00060002
//*STEP1  EXEC  PGM=ADRDSSU,PARM='TYPRUN=NORUN',REGION=8M
//STEP1  EXEC  PGM=ADRDSSU,PARM='UTILMSG=YES',REGION=8M
//SYSPRINT  DD  SYSOUT=*
//OUTVOL1  DD    VOL=SER=VATS04,UNIT=3390,DISP=SHR
//SYSIN    DD    *
 COPY DATASET( -
      INCLUDE( -
                SYS019.**.DATASETS   -
                )) -
      CANCELERROR -
      CATALOG -
      OUTDDNAME( -
                OUTVOL1 -
               ) -
      PERCENTUTILIZED( -
                      100 -
                     ) -
      DELETE                             -
      TGTALLOC(SOURCE) -
      FASTREP(PREF) -
      WAIT(2,2)
/*

./ ADD NAME=DSNNOTA
ALLOC    ALLOCATION TYPE (CYLINDER, TRACK, BLOCK, ABSOLUTE TRACK, OR MOV00020001
CATLG    WHETHER THE DATA SET IS CURRENTLY CATALOGED OR NOT (USING THE S00040001
CREDT    CREATION DATE (ABSOLUTE OR RELATIVE)                           00050101
DSCHA    WHETHER THE DATA-SET-CHANGED FLAG IS ON OR OFF                 00050301
DSORG    DATA SET ORGANIZATION (SAM, PAM, PDS, PDSE, BDAM, HFS, EXCP, VS00050501
EXPDT    EXPIRATION DATE (ABSOLUTE OR RELATIVE). DATA SETS WITHOUT EXPIR00050701
EXTNT    NUMBER OF ALLOCATED OR USED EXTENTS FOR THE ENTIRE DATA SET ON 00051001
FSIZE    NUMBER OF ALLOCATED OR USED TRACKS FOR THE ENTIRE DATA SET ON A00051201
MULTI    WHETHER THE DATA SET IS SINGLEVOLUME OR MULTIVOLUME (SINGLE VOL00051501
REFDT    LAST-REFERENCED DATE (ABSOLUTE OR RELATIVE)                    00051801
DATACLAS DATA CLASS FOR SMS                                             00052001
MGMTCLAS MANAGEMENT CLASS FOR SMS                                       00052201
STORCLAS STORAGE CLASS FOR SMS                                          00052401
//                                                                      00052501
  DUMP DATASET(INCLUDE(DB2C.**) -                                       00052600
    BY((EXPDT LT 230101))) -                                            00052700
       PHYSINDD(DASD1) -                                                00053000
    OUTDDNAME(TAPE)                                                     00054000
/*                                                                      00055000
//                                                                      00060000
  DUMP DATASET(INCLUDE(**) -                                            00060100
    BY((FSIZE GT 15000))) -                                             00060200
       PHYSINDD(DASD1) -                                                00060300
    OUTDDNAME(TAPE)                                                     00060400
//                                                                      00060500
  DUMP DATASET(INCLUDE(**) -                                            00061000
    BY((CATLG EQ NO))) -                                                00062000
       PHYSINDD(DASD1) -                                                00063000
    OUTDDNAME(TAPE)                                                     00064000
ALLOC    ALLOCATION TYPE (CYLINDER, TRACK, BLOCK, ABSOLUTE TRACK, OR MOV00070000
CATLG    WHETHER THE DATA SET IS CURRENTLY CATALOGED OR NOT (USING THE S00090000
CREDT    CREATION DATE (ABSOLUTE OR RELATIVE)                           00110000
DSCHA    WHETHER THE DATA-SET-CHANGED FLAG IS ON OR OFF                 00130000
DSORG    000000ET ORG(SAM, PAM, PDS, PDSE, BDAM, HFS, EXCP, VSAM OR ZFS 00150000
EXPDT    EXPIRATION DATE (ABSOLUTE OR RELATIVE). DATA SETS WITHOUT EXPIR00170000
EXTNT    NUMBER OF ALLOCATED OR USED EXTENTS FOR THE ENTIRE DATA SET ON 00200000
FSIZE    NUMBER OF ALLOCATED OR USED TRACKS FOR THE ENTIRE DATA SET ON A00220000
MULTI    WHETHER THE DATA SET IS SINGLEVOLUME OR MULTIVOLUME (SINGLE VOL00250000
REFDT    LAST-REFERENCED DATE (ABSOLUTE OR RELATIVE)                    00280000
DATACLAS DATA CLASS FOR SMS                                             00300000
MGMTCLAS MANAGEMENT CLASS FOR SMS                                       00320000
STORCLAS STORAGE CLASS FOR SMS                                          00340000

./ ADD NAME=DSNNOTC
//DSNNOTC   JOB ACCT£,                                                  00010000
//             MVS,                                                     00020000
//             NOTIFY=&SYSUID,                                          00030000
//             MSGCLASS=T                                               00040001
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00050002
//      SYS019.LP2.DB2,                                                 00051002
//      SYS1.SACBCNTL)                                                  00060002
//DSNNOTC PROC
//STEP1  EXEC  PGM=ADRDSSU,REGION=64M
//SYSPRINT  DD  SYSOUT=*
//DASD1  DD VOL=SER=&VOLSER,DISP=SHR,UNIT=3390
//OUTDD1 DD DUMMY
//*OUTDD1 DD DSN=SYS019.D,
//*LABEL=(1,SL),
//*DISP=(OLD,CATLG,DELETE)
//SYSIN    DD DSN=SYS019.LP2.MVS(DSNNOTS),DISP=SHR
// PEND
//STETP1  EXEC DSNNOTC,VOLSER=VATS01

./ ADD NAME=DSNNOTS
  DUMP DATASET(INCLUDE(DB2C.**) -                                       00051003
    BY((EXPDT LT 2024001))) -                                           00052005
       PHYSINDD(DASD1) -                                                00053002
    OUTDDNAME(OUTDD1)                                                   00054006

./ ADD NAME=DSNNOT1
//SYS019NT  JOB ACCT£,                                                  00010000
//             MVS,                                                     00020000
//             MSGCLASS=T,
//             NOTIFY=&SYSUID,                                          00030000
//             MSGLEVEL=(1,1)                                           00040000
//*
//DSNNOTC PROC
//STEP1  EXEC  PGM=ADRDSSU,REGION=64M
//SYSPRINT  DD  SYSOUT=*
//DASD1  DD VOL=SER=&VOLSER,DISP=SHR,UNIT=3390
//TAPE   DD DUMMY
//*OUTDD1 DD DSN=SYS019.D,
//*LABEL=(1,SL),
//*DISP=(OLD,CATLG,DELETE)
//SYSIN    DD DSN=SYS019.LP2.MVS(DSNNOTS),DISP=SHR
// PEND
//STETP1  EXEC DSNNOTC,VOLSER=DISQ0A
//STETP1  EXEC DSNNOTC,VOLSER=DISQ0B
//STETP1  EXEC DSNNOTC,VOLSER=DISQ0C
//STETP1  EXEC DSNNOTC,VOLSER=DISQ0D
//STETP1  EXEC DSNNOTC,VOLSER=DISQ1A
//STETP1  EXEC DSNNOTC,VOLSER=DISQ1B
//STETP1  EXEC DSNNOTC,VOLSER=DISQ1C
//STETP1  EXEC DSNNOTC,VOLSER=DISQ2A
//STETP1  EXEC DSNNOTC,VOLSER=DISQ2B
//STETP1  EXEC DSNNOTC,VOLSER=DISR0A
//STETP1  EXEC DSNNOTC,VOLSER=DISR0B
//STETP1  EXEC DSNNOTC,VOLSER=DISR0C
//STETP1  EXEC DSNNOTC,VOLSER=DISR0D
//STETP1  EXEC DSNNOTC,VOLSER=DISR1A
//STETP1  EXEC DSNNOTC,VOLSER=DISR1B
//STETP1  EXEC DSNNOTC,VOLSER=DISR1C
//STETP1  EXEC DSNNOTC,VOLSER=DISR1D
//STETP1  EXEC DSNNOTC,VOLSER=DISR2A
//STETP1  EXEC DSNNOTC,VOLSER=DISR2B
//STETP1  EXEC DSNNOTC,VOLSER=DISR2C
//STETP1  EXEC DSNNOTC,VOLSER=DISR2D
//STETP1  EXEC DSNNOTC,VOLSER=DISR3A
//STETP1  EXEC DSNNOTC,VOLSER=DISR3B
//STETP1  EXEC DSNNOTC,VOLSER=DISR3C
//STETP1  EXEC DSNNOTC,VOLSER=DISR3D
//STETP1  EXEC DSNNOTC,VOLSER=DISS0A
//STETP1  EXEC DSNNOTC,VOLSER=DISS0B
//STETP1  EXEC DSNNOTC,VOLSER=DISS0C
//STETP1  EXEC DSNNOTC,VOLSER=DISS0D
//STETP1  EXEC DSNNOTC,VOLSER=DISS1A
//STETP1  EXEC DSNNOTC,VOLSER=DISS1B
//STETP1  EXEC DSNNOTC,VOLSER=DISS1C
//STETP1  EXEC DSNNOTC,VOLSER=DISS1D
//STETP1  EXEC DSNNOTC,VOLSER=DISS2A
//STETP1  EXEC DSNNOTC,VOLSER=DISS2B
//STETP1  EXEC DSNNOTC,VOLSER=DISS2C
//STETP1  EXEC DSNNOTC,VOLSER=DISS2D
//STETP1  EXEC DSNNOTC,VOLSER=DISX00
//
//STETP1  EXEC DSNNOTC,VOLSER=ADMDMP
//STETP1  EXEC DSNNOTC,VOLSER=BKV203
//STETP1  EXEC DSNNOTC,VOLSER=CICSIA
//STETP1  EXEC DSNNOTC,VOLSER=CICSPZ
//STETP1  EXEC DSNNOTC,VOLSER=CICSP0
//STETP1  EXEC DSNNOTC,VOLSER=CICSQZ
//STETP1  EXEC DSNNOTC,VOLSER=CICSQ0
//STETP1  EXEC DSNNOTC,VOLSER=CICSRZ
//STETP1  EXEC DSNNOTC,VOLSER=CICSR0
//STETP1  EXEC DSNNOTC,VOLSER=CICSSZ
//STETP1  EXEC DSNNOTC,VOLSER=CICSS0
//STETP1  EXEC DSNNOTC,VOLSER=CKPTBQ
//STETP1  EXEC DSNNOTC,VOLSER=CKPTB2
//STETP1  EXEC DSNNOTC,VOLSER=CKPTP1
//STETP1  EXEC DSNNOTC,VOLSER=CKPTP2
//STETP1  EXEC DSNNOTC,VOLSER=CKPTQ1
//
//STETP1  EXEC DSNNOTC,VOLSER=CKPTQ2
//STETP1  EXEC DSNNOTC,VOLSER=CKPTR1
//STETP1  EXEC DSNNOTC,VOLSER=CKPTR2
//STETP1  EXEC DSNNOTC,VOLSER=CKPTS1
//STETP1  EXEC DSNNOTC,VOLSER=CKPTS2
//STETP1  EXEC DSNNOTC,VOLSER=CPAC1S
//STETP1  EXEC DSNNOTC,VOLSER=DBDC00
//STETP1  EXEC DSNNOTC,VOLSER=DBDC01
//STETP1  EXEC DSNNOTC,VOLSER=DEVLO0
//STETP1  EXEC DSNNOTC,VOLSER=DEVLO1
//STETP1  EXEC DSNNOTC,VOLSER=DEVL01
//STETP1  EXEC DSNNOTC,VOLSER=DEVL02
//STETP1  EXEC DSNNOTC,VOLSER=DEVL03
//STETP1  EXEC DSNNOTC,VOLSER=DEVL04
//STETP1  EXEC DSNNOTC,VOLSER=DEVL05
//STETP1  EXEC DSNNOTC,VOLSER=DEVL06
//STETP1  EXEC DSNNOTC,VOLSER=DEVL07
//STETP1  EXEC DSNNOTC,VOLSER=DEVL08
//STETP1  EXEC DSNNOTC,VOLSER=DEVL09
//STETP1  EXEC DSNNOTC,VOLSER=DEVL10
//STETP1  EXEC DSNNOTC,VOLSER=DEVL11
//STETP1  EXEC DSNNOTC,VOLSER=DEVL12
//STETP1  EXEC DSNNOTC,VOLSER=DEVL13
//STETP1  EXEC DSNNOTC,VOLSER=DEVL14
//STETP1  EXEC DSNNOTC,VOLSER=DEVL18
//STETP1  EXEC DSNNOTC,VOLSER=DEVL19
//STETP1  EXEC DSNNOTC,VOLSER=DEVL20
//STETP1  EXEC DSNNOTC,VOLSER=DEVPO0
//STETP1  EXEC DSNNOTC,VOLSER=DEVPO1
//STETP1  EXEC DSNNOTC,VOLSER=DEVPO2
//STETP1  EXEC DSNNOTC,VOLSER=DEVP01
//STETP1  EXEC DSNNOTC,VOLSER=DEVP02
//STETP1  EXEC DSNNOTC,VOLSER=DEVP03
//STETP1  EXEC DSNNOTC,VOLSER=DEVP04
//STETP1  EXEC DSNNOTC,VOLSER=DEVP05
//STETP1  EXEC DSNNOTC,VOLSER=DEVP06
//STETP1  EXEC DSNNOTC,VOLSER=DEVP07
//STETP1  EXEC DSNNOTC,VOLSER=DEVP08
//STETP1  EXEC DSNNOTC,VOLSER=DEVP09
//STETP1  EXEC DSNNOTC,VOLSER=DEVP10
//STETP1  EXEC DSNNOTC,VOLSER=DEVP11
//STETP1  EXEC DSNNOTC,VOLSER=DEVP12
//STETP1  EXEC DSNNOTC,VOLSER=DEVP13
//STETP1  EXEC DSNNOTC,VOLSER=DEVP14
//STETP1  EXEC DSNNOTC,VOLSER=DEVP15
//STETP1  EXEC DSNNOTC,VOLSER=DEVP16
//STETP1  EXEC DSNNOTC,VOLSER=DEVP17
//STETP1  EXEC DSNNOTC,VOLSER=DEVP18
//STETP1  EXEC DSNNOTC,VOLSER=DEVP19
//STETP1  EXEC DSNNOTC,VOLSER=DEVP20
//STETP1  EXEC DSNNOTC,VOLSER=DEVP21
//STETP1  EXEC DSNNOTC,VOLSER=DEVP22
//STETP1  EXEC DSNNOTC,VOLSER=DEVP23
//STETP1  EXEC DSNNOTC,VOLSER=DEVP24
//STETP1  EXEC DSNNOTC,VOLSER=DEVP25
//STETP1  EXEC DSNNOTC,VOLSER=DEVP26
//STETP1  EXEC DSNNOTC,VOLSER=DEVP27
//STETP1  EXEC DSNNOTC,VOLSER=DEVP28
//STETP1  EXEC DSNNOTC,VOLSER=DEVP29
//STETP1  EXEC DSNNOTC,VOLSER=DEVP30
//STETP1  EXEC DSNNOTC,VOLSER=DEVP31
//STETP1  EXEC DSNNOTC,VOLSER=DEVP32
//STETP1  EXEC DSNNOTC,VOLSER=DEVP33
//STETP1  EXEC DSNNOTC,VOLSER=DEVP34
//STETP1  EXEC DSNNOTC,VOLSER=DEVP35
//STETP1  EXEC DSNNOTC,VOLSER=DEVP36
//STETP1  EXEC DSNNOTC,VOLSER=DEVP37
//STETP1  EXEC DSNNOTC,VOLSER=DEVV00
//STETP1  EXEC DSNNOTC,VOLSER=DEVV01
//STETP1  EXEC DSNNOTC,VOLSER=DEV001
//STETP1  EXEC DSNNOTC,VOLSER=DEV002
//STETP1  EXEC DSNNOTC,VOLSER=DEV003
//STETP1  EXEC DSNNOTC,VOLSER=DEV004
//STETP1  EXEC DSNNOTC,VOLSER=DEV005
//STETP1  EXEC DSNNOTC,VOLSER=DEV006
//STETP1  EXEC DSNNOTC,VOLSER=DEV007
//STETP1  EXEC DSNNOTC,VOLSER=DEV008
//STETP1  EXEC DSNNOTC,VOLSER=DEV009
//STETP1  EXEC DSNNOTC,VOLSER=DEV010
//STETP1  EXEC DSNNOTC,VOLSER=DEV011
//STETP1  EXEC DSNNOTC,VOLSER=DEV012
//STETP1  EXEC DSNNOTC,VOLSER=DEV013
//STETP1  EXEC DSNNOTC,VOLSER=DEV014
//STETP1  EXEC DSNNOTC,VOLSER=DEV015
//STETP1  EXEC DSNNOTC,VOLSER=DEV016
//STETP1  EXEC DSNNOTC,VOLSER=DEV017
//STETP1  EXEC DSNNOTC,VOLSER=DEV018
//STETP1  EXEC DSNNOTC,VOLSER=DEV019
//STETP1  EXEC DSNNOTC,VOLSER=DEV020
//STETP1  EXEC DSNNOTC,VOLSER=DEV021
//STETP1  EXEC DSNNOTC,VOLSER=DEV022
//STETP1  EXEC DSNNOTC,VOLSER=DEV023
//STETP1  EXEC DSNNOTC,VOLSER=DEV024
//STETP1  EXEC DSNNOTC,VOLSER=DEV025
//STETP1  EXEC DSNNOTC,VOLSER=DEV026
//STETP1  EXEC DSNNOTC,VOLSER=DEV027
//STETP1  EXEC DSNNOTC,VOLSER=DEV028
//STETP1  EXEC DSNNOTC,VOLSER=DEV029
//STETP1  EXEC DSNNOTC,VOLSER=DEV030
//STETP1  EXEC DSNNOTC,VOLSER=DEV031
//STETP1  EXEC DSNNOTC,VOLSER=DEV032
//STETP1  EXEC DSNNOTC,VOLSER=DEV033
//STETP1  EXEC DSNNOTC,VOLSER=DEV034
//STETP1  EXEC DSNNOTC,VOLSER=DEV035
//STETP1  EXEC DSNNOTC,VOLSER=DEV036
//STETP1  EXEC DSNNOTC,VOLSER=DEV037
//STETP1  EXEC DSNNOTC,VOLSER=DEV038
//STETP1  EXEC DSNNOTC,VOLSER=DEV039
//STETP1  EXEC DSNNOTC,VOLSER=DEV040
//STETP1  EXEC DSNNOTC,VOLSER=DEV041
//STETP1  EXEC DSNNOTC,VOLSER=DEV042
//STETP1  EXEC DSNNOTC,VOLSER=DEV043
//STETP1  EXEC DSNNOTC,VOLSER=DEV044
//STETP1  EXEC DSNNOTC,VOLSER=DEV045
//STETP1  EXEC DSNNOTC,VOLSER=DEV046
//STETP1  EXEC DSNNOTC,VOLSER=DEV047
//STETP1  EXEC DSNNOTC,VOLSER=DEV048
//STETP1  EXEC DSNNOTC,VOLSER=DEV049
//STETP1  EXEC DSNNOTC,VOLSER=DEV050
//STETP1  EXEC DSNNOTC,VOLSER=DEV051
//STETP1  EXEC DSNNOTC,VOLSER=DEV052
//STETP1  EXEC DSNNOTC,VOLSER=DEV053
//STETP1  EXEC DSNNOTC,VOLSER=DEV054
//STETP1  EXEC DSNNOTC,VOLSER=DEV055
//STETP1  EXEC DSNNOTC,VOLSER=DEV056
//STETP1  EXEC DSNNOTC,VOLSER=DEV057
//STETP1  EXEC DSNNOTC,VOLSER=DEV058
//STETP1  EXEC DSNNOTC,VOLSER=DEV059
//STETP1  EXEC DSNNOTC,VOLSER=DEV060
//STETP1  EXEC DSNNOTC,VOLSER=DEV061
//STETP1  EXEC DSNNOTC,VOLSER=DEV062
//STETP1  EXEC DSNNOTC,VOLSER=DEV063
//STETP1  EXEC DSNNOTC,VOLSER=DEV064
//STETP1  EXEC DSNNOTC,VOLSER=DEV065
//STETP1  EXEC DSNNOTC,VOLSER=DEV066
//STETP1  EXEC DSNNOTC,VOLSER=DEV067
//STETP1  EXEC DSNNOTC,VOLSER=DEV068
//STETP1  EXEC DSNNOTC,VOLSER=DEV600
//STETP1  EXEC DSNNOTC,VOLSER=DEV601
//STETP1  EXEC DSNNOTC,VOLSER=DEV602
//STETP1  EXEC DSNNOTC,VOLSER=DEV603
//STETP1  EXEC DSNNOTC,VOLSER=DEV604
//STETP1  EXEC DSNNOTC,VOLSER=DEV605
//STETP1  EXEC DSNNOTC,VOLSER=DEV606
//STETP1  EXEC DSNNOTC,VOLSER=DEV607
//STETP1  EXEC DSNNOTC,VOLSER=DEV608
//STETP1  EXEC DSNNOTC,VOLSER=DEV609
//STETP1  EXEC DSNNOTC,VOLSER=DEV610
//STETP1  EXEC DSNNOTC,VOLSER=DEV611
//STETP1  EXEC DSNNOTC,VOLSER=DISP0A
//STETP1  EXEC DSNNOTC,VOLSER=DISP0B
//STETP1  EXEC DSNNOTC,VOLSER=DISP0C
//STETP1  EXEC DSNNOTC,VOLSER=DISP0D
//STETP1  EXEC DSNNOTC,VOLSER=DISP1A
//STETP1  EXEC DSNNOTC,VOLSER=DISP1B
//STETP1  EXEC DSNNOTC,VOLSER=DISP1C
//STETP1  EXEC DSNNOTC,VOLSER=DISP1D
//STETP1  EXEC DSNNOTC,VOLSER=DISP2A
//STETP1  EXEC DSNNOTC,VOLSER=DLIB00
//STETP1  EXEC DSNNOTC,VOLSER=DLIB01
//STETP1  EXEC DSNNOTC,VOLSER=DLIB02
//STETP1  EXEC DSNNOTC,VOLSER=DLIB03
//STETP1  EXEC DSNNOTC,VOLSER=DLIB04
//STETP1  EXEC DSNNOTC,VOLSER=DLIB05
//STETP1  EXEC DSNNOTC,VOLSER=DLIB06
//STETP1  EXEC DSNNOTC,VOLSER=DLIB07
//STETP1  EXEC DSNNOTC,VOLSER=DLIB08
//STETP1  EXEC DSNNOTC,VOLSER=DLIB09
//STETP1  EXEC DSNNOTC,VOLSER=DLIB10
//STETP1  EXEC DSNNOTC,VOLSER=DLIB11
//STETP1  EXEC DSNNOTC,VOLSER=DLIB12
//STETP1  EXEC DSNNOTC,VOLSER=DLIB13
//STETP1  EXEC DSNNOTC,VOLSER=DLIB14
//STETP1  EXEC DSNNOTC,VOLSER=DLIB15
//STETP1  EXEC DSNNOTC,VOLSER=DLIB16
//STETP1  EXEC DSNNOTC,VOLSER=DLIB17
//STETP1  EXEC DSNNOTC,VOLSER=DLIB18
//STETP1  EXEC DSNNOTC,VOLSER=DLIB19
//STETP1  EXEC DSNNOTC,VOLSER=DLIB20
//STETP1  EXEC DSNNOTC,VOLSER=DLIB21
//STETP1  EXEC DSNNOTC,VOLSER=DLIB22
//STETP1  EXEC DSNNOTC,VOLSER=DLIB23
//STETP1  EXEC DSNNOTC,VOLSER=DLIB24
//STETP1  EXEC DSNNOTC,VOLSER=DLIB25
//STETP1  EXEC DSNNOTC,VOLSER=DLIB26
//STETP1  EXEC DSNNOTC,VOLSER=DLIB27
//STETP1  EXEC DSNNOTC,VOLSER=DLIB28
//STETP1  EXEC DSNNOTC,VOLSER=DLIB29
//STETP1  EXEC DSNNOTC,VOLSER=DLZ24A
//STETP1  EXEC DSNNOTC,VOLSER=DLZ24B
//STETP1  EXEC DSNNOTC,VOLSER=DLZ24C
//STETP1  EXEC DSNNOTC,VOLSER=DLZ24D
//STETP1  EXEC DSNNOTC,VOLSER=DLZ24E
//STETP1  EXEC DSNNOTC,VOLSER=DLZ25A
//STETP1  EXEC DSNNOTC,VOLSER=DLZ25B
//STETP1  EXEC DSNNOTC,VOLSER=DLZ25C
//STETP1  EXEC DSNNOTC,VOLSER=DLZ25D
//STETP1  EXEC DSNNOTC,VOLSER=DLZ25E
//STETP1  EXEC DSNNOTC,VOLSER=DMPZ00
//STETP1  EXEC DSNNOTC,VOLSER=DMP00A
//STETP1  EXEC DSNNOTC,VOLSER=DMP000
//STETP1  EXEC DSNNOTC,VOLSER=DMP001
//STETP1  EXEC DSNNOTC,VOLSER=DMP002
//STETP1  EXEC DSNNOTC,VOLSER=DMP003
//STETP1  EXEC DSNNOTC,VOLSER=DMP004
//STETP1  EXEC DSNNOTC,VOLSER=DMP005
//STETP1  EXEC DSNNOTC,VOLSER=DMP006
//STETP1  EXEC DSNNOTC,VOLSER=DMP007
//STETP1  EXEC DSNNOTC,VOLSER=DMP008
//STETP1  EXEC DSNNOTC,VOLSER=DMP009
//STETP1  EXEC DSNNOTC,VOLSER=DMP010
//STETP1  EXEC DSNNOTC,VOLSER=DMP011
//STETP1  EXEC DSNNOTC,VOLSER=DMP012
//STETP1  EXEC DSNNOTC,VOLSER=DSDF01
//STETP1  EXEC DSNNOTC,VOLSER=DSTK00
//STETP1  EXEC DSNNOTC,VOLSER=DSTK01
//STETP1  EXEC DSNNOTC,VOLSER=DSTK03
//STETP1  EXEC DSNNOTC,VOLSER=DUMPP1
//STETP1  EXEC DSNNOTC,VOLSER=DUMPP2
//STETP1  EXEC DSNNOTC,VOLSER=DUMPQ1
//STETP1  EXEC DSNNOTC,VOLSER=DUMPQ2
//STETP1  EXEC DSNNOTC,VOLSER=DUMPR1
//STETP1  EXEC DSNNOTC,VOLSER=DUMPR2
//STETP1  EXEC DSNNOTC,VOLSER=DUMPS1
//STETP1  EXEC DSNNOTC,VOLSER=DUMPS2
//STETP1  EXEC DSNNOTC,VOLSER=DUMP00
//STETP1  EXEC DSNNOTC,VOLSER=DZFS01
//STETP1  EXEC DSNNOTC,VOLSER=DZFS02
//STETP1  EXEC DSNNOTC,VOLSER=DZFS03
//STETP1  EXEC DSNNOTC,VOLSER=DZFS04
//STETP1  EXEC DSNNOTC,VOLSER=DZFS05
//STETP1  EXEC DSNNOTC,VOLSER=DZFS06
//STETP1  EXEC DSNNOTC,VOLSER=ESA2M2
//STETP1  EXEC DSNNOTC,VOLSER=EXPF00
//STETP1  EXEC DSNNOTC,VOLSER=EXPF01
//STETP1  EXEC DSNNOTC,VOLSER=EXPF02
//STETP1  EXEC DSNNOTC,VOLSER=EXPF03
//STETP1  EXEC DSNNOTC,VOLSER=EXPF04
//STETP1  EXEC DSNNOTC,VOLSER=EXPF9A
//STETP1  EXEC DSNNOTC,VOLSER=EXPF9B
//STETP1  EXEC DSNNOTC,VOLSER=EXPF9C
//STETP1  EXEC DSNNOTC,VOLSER=EXPF9D
//STETP1  EXEC DSNNOTC,VOLSER=EXPF9E
//STETP1  EXEC DSNNOTC,VOLSER=EXPF9F
//STETP1  EXEC DSNNOTC,VOLSER=EXPF9G
//STETP1  EXEC DSNNOTC,VOLSER=EXPF9H
//STETP1  EXEC DSNNOTC,VOLSER=EXPF90
//STETP1  EXEC DSNNOTC,VOLSER=EXPF91
//STETP1  EXEC DSNNOTC,VOLSER=EXPF92
//STETP1  EXEC DSNNOTC,VOLSER=EXPF93
//STETP1  EXEC DSNNOTC,VOLSER=EXPF94
//STETP1  EXEC DSNNOTC,VOLSER=EXPF95
//STETP1  EXEC DSNNOTC,VOLSER=EXPF96
//STETP1  EXEC DSNNOTC,VOLSER=EXPF97
//STETP1  EXEC DSNNOTC,VOLSER=EXPI06
//STETP1  EXEC DSNNOTC,VOLSER=EXPI07
//STETP1  EXEC DSNNOTC,VOLSER=EXPI08
//STETP1  EXEC DSNNOTC,VOLSER=EXPI09
//STETP1  EXEC DSNNOTC,VOLSER=EXPI10
//STETP1  EXEC DSNNOTC,VOLSER=EXPI11
//STETP1  EXEC DSNNOTC,VOLSER=EXPI12
//STETP1  EXEC DSNNOTC,VOLSER=EXPI13
//STETP1  EXEC DSNNOTC,VOLSER=EXPI14
//STETP1  EXEC DSNNOTC,VOLSER=EXPI15
//STETP1  EXEC DSNNOTC,VOLSER=EXPI16
//STETP1  EXEC DSNNOTC,VOLSER=EXPI17
//STETP1  EXEC DSNNOTC,VOLSER=EXPI18
//STETP1  EXEC DSNNOTC,VOLSER=EXPI19
//STETP1  EXEC DSNNOTC,VOLSER=EXPI20
//STETP1  EXEC DSNNOTC,VOLSER=EXPI21
//STETP1  EXEC DSNNOTC,VOLSER=EXPI22
//STETP1  EXEC DSNNOTC,VOLSER=EXPI23
//STETP1  EXEC DSNNOTC,VOLSER=EXPI24
//STETP1  EXEC DSNNOTC,VOLSER=EXPI25
//STETP1  EXEC DSNNOTC,VOLSER=EXPI26
//STETP1  EXEC DSNNOTC,VOLSER=EXPI27
//STETP1  EXEC DSNNOTC,VOLSER=EXPI28
//STETP1  EXEC DSNNOTC,VOLSER=EXPI29
//STETP1  EXEC DSNNOTC,VOLSER=EXPI30
//STETP1  EXEC DSNNOTC,VOLSER=EXPI31
//STETP1  EXEC DSNNOTC,VOLSER=EXPI32
//STETP1  EXEC DSNNOTC,VOLSER=EXPI33
//STETP1  EXEC DSNNOTC,VOLSER=EXPL01
//STETP1  EXEC DSNNOTC,VOLSER=EXPL02
//STETP1  EXEC DSNNOTC,VOLSER=EXPL03
//STETP1  EXEC DSNNOTC,VOLSER=EXPL04
//STETP1  EXEC DSNNOTC,VOLSER=EXPL05
//STETP1  EXEC DSNNOTC,VOLSER=EXPL06
//STETP1  EXEC DSNNOTC,VOLSER=EXPL10
//STETP1  EXEC DSNNOTC,VOLSER=EXPL12
//STETP1  EXEC DSNNOTC,VOLSER=EXPL13
//STETP1  EXEC DSNNOTC,VOLSER=EXPL16
//STETP1  EXEC DSNNOTC,VOLSER=EXPL18
//STETP1  EXEC DSNNOTC,VOLSER=EXPL22
//STETP1  EXEC DSNNOTC,VOLSER=EXPL23
//STETP1  EXEC DSNNOTC,VOLSER=EXPL24
//STETP1  EXEC DSNNOTC,VOLSER=EXPL25
//STETP1  EXEC DSNNOTC,VOLSER=EXPL26
//STETP1  EXEC DSNNOTC,VOLSER=EXPL39
//STETP1  EXEC DSNNOTC,VOLSER=EXPL40
//STETP1  EXEC DSNNOTC,VOLSER=EXPL50
//STETP1  EXEC DSNNOTC,VOLSER=EXPL52
//STETP1  EXEC DSNNOTC,VOLSER=EXPL53
//STETP1  EXEC DSNNOTC,VOLSER=EXPL55
//STETP1  EXEC DSNNOTC,VOLSER=EXPL57
//STETP1  EXEC DSNNOTC,VOLSER=EXPL58
//STETP1  EXEC DSNNOTC,VOLSER=EXPL61
//STETP1  EXEC DSNNOTC,VOLSER=EXPL73
//STETP1  EXEC DSNNOTC,VOLSER=EXPL76
//STETP1  EXEC DSNNOTC,VOLSER=EXPL79
//STETP1  EXEC DSNNOTC,VOLSER=EXPT01
//STETP1  EXEC DSNNOTC,VOLSER=EXPT02
//STETP1  EXEC DSNNOTC,VOLSER=EXPT03
//STETP1  EXEC DSNNOTC,VOLSER=EXPT04
//STETP1  EXEC DSNNOTC,VOLSER=EXPT05
//STETP1  EXEC DSNNOTC,VOLSER=EXPT06
//STETP1  EXEC DSNNOTC,VOLSER=EXPT07
//STETP1  EXEC DSNNOTC,VOLSER=EXPT08
//STETP1  EXEC DSNNOTC,VOLSER=EXPT09
//STETP1  EXEC DSNNOTC,VOLSER=EXPT10
//STETP1  EXEC DSNNOTC,VOLSER=EXPT11
//STETP1  EXEC DSNNOTC,VOLSER=EXPT12
//STETP1  EXEC DSNNOTC,VOLSER=EXPT13
//STETP1  EXEC DSNNOTC,VOLSER=EXPT14
//STETP1  EXEC DSNNOTC,VOLSER=EXPT15
//STETP1  EXEC DSNNOTC,VOLSER=EXPT16
//STETP1  EXEC DSNNOTC,VOLSER=EXPT17
//STETP1  EXEC DSNNOTC,VOLSER=EXPT18
//STETP1  EXEC DSNNOTC,VOLSER=EXPT19
//STETP1  EXEC DSNNOTC,VOLSER=EXPT20
//STETP1  EXEC DSNNOTC,VOLSER=EXPT21
//STETP1  EXEC DSNNOTC,VOLSER=EXPT22
//STETP1  EXEC DSNNOTC,VOLSER=EXPT23
//STETP1  EXEC DSNNOTC,VOLSER=EXPT24
//STETP1  EXEC DSNNOTC,VOLSER=EXPT25
//STETP1  EXEC DSNNOTC,VOLSER=EXPT26
//STETP1  EXEC DSNNOTC,VOLSER=EXPT27
//STETP1  EXEC DSNNOTC,VOLSER=EXPT28
//STETP1  EXEC DSNNOTC,VOLSER=EXPT29
//STETP1  EXEC DSNNOTC,VOLSER=EXPT30
//STETP1  EXEC DSNNOTC,VOLSER=EXPT31
//STETP1  EXEC DSNNOTC,VOLSER=EXPT32
//STETP1  EXEC DSNNOTC,VOLSER=EXPT33
//STETP1  EXEC DSNNOTC,VOLSER=EXP1AA
//STETP1  EXEC DSNNOTC,VOLSER=EXP1AB
//STETP1  EXEC DSNNOTC,VOLSER=EXP1AC
//STETP1  EXEC DSNNOTC,VOLSER=EXP1AD
//STETP1  EXEC DSNNOTC,VOLSER=EXP1AE
//STETP1  EXEC DSNNOTC,VOLSER=EXP1AF
//STETP1  EXEC DSNNOTC,VOLSER=EXP1AG
//STETP1  EXEC DSNNOTC,VOLSER=EXP1AH
//STETP1  EXEC DSNNOTC,VOLSER=EXP1AI
//STETP1  EXEC DSNNOTC,VOLSER=EXP1AJ
//STETP1  EXEC DSNNOTC,VOLSER=EXP1A0
//STETP1  EXEC DSNNOTC,VOLSER=EXP1A1
//STETP1  EXEC DSNNOTC,VOLSER=EXP1A2
//STETP1  EXEC DSNNOTC,VOLSER=EXP1A3
//STETP1  EXEC DSNNOTC,VOLSER=EXP1A4
//STETP1  EXEC DSNNOTC,VOLSER=EXP1A5
//STETP1  EXEC DSNNOTC,VOLSER=EXP1A6
//STETP1  EXEC DSNNOTC,VOLSER=EXP1A7
//STETP1  EXEC DSNNOTC,VOLSER=EXP1A8
//STETP1  EXEC DSNNOTC,VOLSER=EXP1A9
//STETP1  EXEC DSNNOTC,VOLSER=EXP1B0
//STETP1  EXEC DSNNOTC,VOLSER=EXP1B1
//STETP1  EXEC DSNNOTC,VOLSER=EXP1B2
//STETP1  EXEC DSNNOTC,VOLSER=EXP1B3
//STETP1  EXEC DSNNOTC,VOLSER=EXP1B4
//STETP1  EXEC DSNNOTC,VOLSER=EXP1B5
//STETP1  EXEC DSNNOTC,VOLSER=EXP1B6
//STETP1  EXEC DSNNOTC,VOLSER=EXP1B7
//STETP1  EXEC DSNNOTC,VOLSER=EXP1B8
//STETP1  EXEC DSNNOTC,VOLSER=EXP1B9
//STETP1  EXEC DSNNOTC,VOLSER=EXP1C0
//STETP1  EXEC DSNNOTC,VOLSER=EXP1C1
//STETP1  EXEC DSNNOTC,VOLSER=EXP1C2
//STETP1  EXEC DSNNOTC,VOLSER=EXP1C3
//STETP1  EXEC DSNNOTC,VOLSER=EXP1C4
//STETP1  EXEC DSNNOTC,VOLSER=EXP1C5
//STETP1  EXEC DSNNOTC,VOLSER=EXP1C6
//STETP1  EXEC DSNNOTC,VOLSER=EXP1C7
//STETP1  EXEC DSNNOTC,VOLSER=EXP1C8
//STETP1  EXEC DSNNOTC,VOLSER=EXP1C9
//STETP1  EXEC DSNNOTC,VOLSER=EXP1D1
//STETP1  EXEC DSNNOTC,VOLSER=EXP1D2
//STETP1  EXEC DSNNOTC,VOLSER=EXP1D3
//STETP1  EXEC DSNNOTC,VOLSER=EXP1D4
//STETP1  EXEC DSNNOTC,VOLSER=EXP1D5
//STETP1  EXEC DSNNOTC,VOLSER=EXP1D6
//STETP1  EXEC DSNNOTC,VOLSER=EXP1D7
//STETP1  EXEC DSNNOTC,VOLSER=EXP1D8
//STETP1  EXEC DSNNOTC,VOLSER=EXP1D9
//STETP1  EXEC DSNNOTC,VOLSER=EXP1E1
//STETP1  EXEC DSNNOTC,VOLSER=EXP1E2
//STETP1  EXEC DSNNOTC,VOLSER=EXP1E3
//STETP1  EXEC DSNNOTC,VOLSER=EXP1E4
//STETP1  EXEC DSNNOTC,VOLSER=EXP1E5
//STETP1  EXEC DSNNOTC,VOLSER=EXP1E6
//STETP1  EXEC DSNNOTC,VOLSER=EXP1E7
//STETP1  EXEC DSNNOTC,VOLSER=EXP1E8
//STETP1  EXEC DSNNOTC,VOLSER=EXP1E9
//STETP1  EXEC DSNNOTC,VOLSER=EXP1F1
//STETP1  EXEC DSNNOTC,VOLSER=EXP1F2
//STETP1  EXEC DSNNOTC,VOLSER=EXP1F3
//STETP1  EXEC DSNNOTC,VOLSER=EXP1F4
//STETP1  EXEC DSNNOTC,VOLSER=EXP1F5
//STETP1  EXEC DSNNOTC,VOLSER=EXP1F6
//STETP1  EXEC DSNNOTC,VOLSER=EXP1F7
//STETP1  EXEC DSNNOTC,VOLSER=EXP1F8
//STETP1  EXEC DSNNOTC,VOLSER=EXP1F9
//STETP1  EXEC DSNNOTC,VOLSER=EXP1G1
//STETP1  EXEC DSNNOTC,VOLSER=EXP1G2
//STETP1  EXEC DSNNOTC,VOLSER=EXP1G3
//STETP1  EXEC DSNNOTC,VOLSER=EXP1G4
//STETP1  EXEC DSNNOTC,VOLSER=EXP1G5
//STETP1  EXEC DSNNOTC,VOLSER=EXP1G6
//STETP1  EXEC DSNNOTC,VOLSER=EXP1G7
//STETP1  EXEC DSNNOTC,VOLSER=EXP1G8
//STETP1  EXEC DSNNOTC,VOLSER=EXP1G9
//STETP1  EXEC DSNNOTC,VOLSER=EXP1H0
//STETP1  EXEC DSNNOTC,VOLSER=EXP1H1
//STETP1  EXEC DSNNOTC,VOLSER=EXP1H2
//STETP1  EXEC DSNNOTC,VOLSER=EXP1H3
//STETP1  EXEC DSNNOTC,VOLSER=EXP1H4
//STETP1  EXEC DSNNOTC,VOLSER=EXP1H5
//STETP1  EXEC DSNNOTC,VOLSER=EXP1H6
//STETP1  EXEC DSNNOTC,VOLSER=EXP1H7
//STETP1  EXEC DSNNOTC,VOLSER=EXP1H8
//STETP1  EXEC DSNNOTC,VOLSER=EXP1H9
//STETP1  EXEC DSNNOTC,VOLSER=EXP1I0
//STETP1  EXEC DSNNOTC,VOLSER=EXP1I1
//STETP1  EXEC DSNNOTC,VOLSER=EXP1I2
//STETP1  EXEC DSNNOTC,VOLSER=EXP1I3
//STETP1  EXEC DSNNOTC,VOLSER=EXP1I4
//STETP1  EXEC DSNNOTC,VOLSER=EXP1I5
//STETP1  EXEC DSNNOTC,VOLSER=EXP1I6
//STETP1  EXEC DSNNOTC,VOLSER=EXP1I7
//STETP1  EXEC DSNNOTC,VOLSER=EXP1I8
//STETP1  EXEC DSNNOTC,VOLSER=EXP1I9
//STETP1  EXEC DSNNOTC,VOLSER=EXP1J0
//STETP1  EXEC DSNNOTC,VOLSER=EXP1J1
//STETP1  EXEC DSNNOTC,VOLSER=EXP1J2
//STETP1  EXEC DSNNOTC,VOLSER=EXP1J3
//STETP1  EXEC DSNNOTC,VOLSER=EXP1J4
//STETP1  EXEC DSNNOTC,VOLSER=EXP1J5
//STETP1  EXEC DSNNOTC,VOLSER=EXP1J6
//STETP1  EXEC DSNNOTC,VOLSER=EXP1J7
//STETP1  EXEC DSNNOTC,VOLSER=EXP1J8
//STETP1  EXEC DSNNOTC,VOLSER=EXP1J9
//STETP1  EXEC DSNNOTC,VOLSER=EXP1K0
//STETP1  EXEC DSNNOTC,VOLSER=EXP1K1
//STETP1  EXEC DSNNOTC,VOLSER=EXP1K2
//STETP1  EXEC DSNNOTC,VOLSER=EXP1K3
//STETP1  EXEC DSNNOTC,VOLSER=EXP1K4
//STETP1  EXEC DSNNOTC,VOLSER=EXP1K5
//STETP1  EXEC DSNNOTC,VOLSER=EXP1K6
//STETP1  EXEC DSNNOTC,VOLSER=EXP1K7
//STETP1  EXEC DSNNOTC,VOLSER=EXP1K8
//STETP1  EXEC DSNNOTC,VOLSER=EXP1LA
//STETP1  EXEC DSNNOTC,VOLSER=EXP1LB
//STETP1  EXEC DSNNOTC,VOLSER=EXP1LC
//STETP1  EXEC DSNNOTC,VOLSER=EXP1L0
//STETP1  EXEC DSNNOTC,VOLSER=EXP1L1
//STETP1  EXEC DSNNOTC,VOLSER=EXP1L2
//STETP1  EXEC DSNNOTC,VOLSER=EXP1L3
//STETP1  EXEC DSNNOTC,VOLSER=EXP1L4
//STETP1  EXEC DSNNOTC,VOLSER=EXP1L5
//STETP1  EXEC DSNNOTC,VOLSER=EXP1L6
//STETP1  EXEC DSNNOTC,VOLSER=EXP1L7
//STETP1  EXEC DSNNOTC,VOLSER=EXP1L8
//STETP1  EXEC DSNNOTC,VOLSER=EXP1L9
//STETP1  EXEC DSNNOTC,VOLSER=EXP1M0
//STETP1  EXEC DSNNOTC,VOLSER=EXP1M1
//STETP1  EXEC DSNNOTC,VOLSER=EXP1M2
//STETP1  EXEC DSNNOTC,VOLSER=EXP1M3
//STETP1  EXEC DSNNOTC,VOLSER=EXP1M4
//STETP1  EXEC DSNNOTC,VOLSER=EXP1M5
//STETP1  EXEC DSNNOTC,VOLSER=EXP1M6
//STETP1  EXEC DSNNOTC,VOLSER=EXP1M7
//STETP1  EXEC DSNNOTC,VOLSER=EXP1M8
//STETP1  EXEC DSNNOTC,VOLSER=EXP1M9
//STETP1  EXEC DSNNOTC,VOLSER=EXP10A
//STETP1  EXEC DSNNOTC,VOLSER=EXP10B
//STETP1  EXEC DSNNOTC,VOLSER=EXP10C
//STETP1  EXEC DSNNOTC,VOLSER=EXP10D
//STETP1  EXEC DSNNOTC,VOLSER=EXP10E
//STETP1  EXEC DSNNOTC,VOLSER=EXP10F
//STETP1  EXEC DSNNOTC,VOLSER=EXP100
//STETP1  EXEC DSNNOTC,VOLSER=EXP101
//STETP1  EXEC DSNNOTC,VOLSER=EXP102
//STETP1  EXEC DSNNOTC,VOLSER=EXP103
//STETP1  EXEC DSNNOTC,VOLSER=EXP104
//STETP1  EXEC DSNNOTC,VOLSER=EXP105
//STETP1  EXEC DSNNOTC,VOLSER=EXP106
//STETP1  EXEC DSNNOTC,VOLSER=EXP107
//STETP1  EXEC DSNNOTC,VOLSER=EXP108
//STETP1  EXEC DSNNOTC,VOLSER=EXP109
//STETP1  EXEC DSNNOTC,VOLSER=EXP11A
//STETP1  EXEC DSNNOTC,VOLSER=EXP11B
//STETP1  EXEC DSNNOTC,VOLSER=EXP11C
//STETP1  EXEC DSNNOTC,VOLSER=EXP11D
//STETP1  EXEC DSNNOTC,VOLSER=EXP11E
//STETP1  EXEC DSNNOTC,VOLSER=EXP11F
//STETP1  EXEC DSNNOTC,VOLSER=EXP110
//STETP1  EXEC DSNNOTC,VOLSER=EXP111
//STETP1  EXEC DSNNOTC,VOLSER=EXP112
//STETP1  EXEC DSNNOTC,VOLSER=EXP113
//STETP1  EXEC DSNNOTC,VOLSER=EXP114
//STETP1  EXEC DSNNOTC,VOLSER=EXP115
//STETP1  EXEC DSNNOTC,VOLSER=EXP116
//STETP1  EXEC DSNNOTC,VOLSER=EXP117
//STETP1  EXEC DSNNOTC,VOLSER=EXP118
//STETP1  EXEC DSNNOTC,VOLSER=EXP119
//STETP1  EXEC DSNNOTC,VOLSER=EXP12A
//STETP1  EXEC DSNNOTC,VOLSER=EXP12B
//STETP1  EXEC DSNNOTC,VOLSER=EXP12C
//STETP1  EXEC DSNNOTC,VOLSER=EXP12D
//STETP1  EXEC DSNNOTC,VOLSER=EXP12E
//STETP1  EXEC DSNNOTC,VOLSER=EXP12F
//STETP1  EXEC DSNNOTC,VOLSER=EXP120
//STETP1  EXEC DSNNOTC,VOLSER=EXP121
//STETP1  EXEC DSNNOTC,VOLSER=EXP122
//STETP1  EXEC DSNNOTC,VOLSER=EXP123
//STETP1  EXEC DSNNOTC,VOLSER=EXP124
//STETP1  EXEC DSNNOTC,VOLSER=EXP125
//STETP1  EXEC DSNNOTC,VOLSER=EXP126
//STETP1  EXEC DSNNOTC,VOLSER=EXP127
//STETP1  EXEC DSNNOTC,VOLSER=EXP128
//STETP1  EXEC DSNNOTC,VOLSER=EXP129
//STETP1  EXEC DSNNOTC,VOLSER=EXP13A
//STETP1  EXEC DSNNOTC,VOLSER=EXP13B
//STETP1  EXEC DSNNOTC,VOLSER=EXP13C
//STETP1  EXEC DSNNOTC,VOLSER=EXP13D
//STETP1  EXEC DSNNOTC,VOLSER=EXP13E
//STETP1  EXEC DSNNOTC,VOLSER=EXP13F
//STETP1  EXEC DSNNOTC,VOLSER=EXP130
//STETP1  EXEC DSNNOTC,VOLSER=EXP131
//STETP1  EXEC DSNNOTC,VOLSER=EXP132
//STETP1  EXEC DSNNOTC,VOLSER=EXP133
//STETP1  EXEC DSNNOTC,VOLSER=EXP134
//STETP1  EXEC DSNNOTC,VOLSER=EXP135
//STETP1  EXEC DSNNOTC,VOLSER=EXP136
//STETP1  EXEC DSNNOTC,VOLSER=EXP137
//STETP1  EXEC DSNNOTC,VOLSER=EXP138
//STETP1  EXEC DSNNOTC,VOLSER=EXP139
//STETP1  EXEC DSNNOTC,VOLSER=EXP14A
//STETP1  EXEC DSNNOTC,VOLSER=EXP14B
//STETP1  EXEC DSNNOTC,VOLSER=EXP14C
//STETP1  EXEC DSNNOTC,VOLSER=EXP14D
//STETP1  EXEC DSNNOTC,VOLSER=EXP14E
//STETP1  EXEC DSNNOTC,VOLSER=EXP14F
//STETP1  EXEC DSNNOTC,VOLSER=EXP140
//STETP1  EXEC DSNNOTC,VOLSER=EXP141
//STETP1  EXEC DSNNOTC,VOLSER=EXP142
//STETP1  EXEC DSNNOTC,VOLSER=EXP143
//STETP1  EXEC DSNNOTC,VOLSER=EXP144
//STETP1  EXEC DSNNOTC,VOLSER=EXP145
//STETP1  EXEC DSNNOTC,VOLSER=EXP146
//STETP1  EXEC DSNNOTC,VOLSER=EXP147
//STETP1  EXEC DSNNOTC,VOLSER=EXP148
//STETP1  EXEC DSNNOTC,VOLSER=EXP149
//STETP1  EXEC DSNNOTC,VOLSER=EXP15A
//STETP1  EXEC DSNNOTC,VOLSER=EXP15B
//STETP1  EXEC DSNNOTC,VOLSER=EXP15C
//STETP1  EXEC DSNNOTC,VOLSER=EXP15D
//STETP1  EXEC DSNNOTC,VOLSER=EXP15E
//STETP1  EXEC DSNNOTC,VOLSER=EXP15F
//STETP1  EXEC DSNNOTC,VOLSER=EXP150
//STETP1  EXEC DSNNOTC,VOLSER=EXP151
//STETP1  EXEC DSNNOTC,VOLSER=EXP152
//STETP1  EXEC DSNNOTC,VOLSER=EXP153
//STETP1  EXEC DSNNOTC,VOLSER=EXP154
//STETP1  EXEC DSNNOTC,VOLSER=EXP155
//STETP1  EXEC DSNNOTC,VOLSER=EXP156
//STETP1  EXEC DSNNOTC,VOLSER=EXP157
//STETP1  EXEC DSNNOTC,VOLSER=EXP158
//STETP1  EXEC DSNNOTC,VOLSER=EXP159
//STETP1  EXEC DSNNOTC,VOLSER=EXP160
//STETP1  EXEC DSNNOTC,VOLSER=EXP161
//STETP1  EXEC DSNNOTC,VOLSER=EXP162
//STETP1  EXEC DSNNOTC,VOLSER=EXP163
//STETP1  EXEC DSNNOTC,VOLSER=EXP164
//STETP1  EXEC DSNNOTC,VOLSER=EXP165
//STETP1  EXEC DSNNOTC,VOLSER=EXP166
//STETP1  EXEC DSNNOTC,VOLSER=EXP167
//STETP1  EXEC DSNNOTC,VOLSER=EXP168
//STETP1  EXEC DSNNOTC,VOLSER=EXP169
//STETP1  EXEC DSNNOTC,VOLSER=EXP17A
//STETP1  EXEC DSNNOTC,VOLSER=EXP17B
//STETP1  EXEC DSNNOTC,VOLSER=EXP17C
//STETP1  EXEC DSNNOTC,VOLSER=EXP17D
//STETP1  EXEC DSNNOTC,VOLSER=EXP17E
//STETP1  EXEC DSNNOTC,VOLSER=EXP17F
//STETP1  EXEC DSNNOTC,VOLSER=EXP18A
//STETP1  EXEC DSNNOTC,VOLSER=EXP18B
//STETP1  EXEC DSNNOTC,VOLSER=EXP18C
//STETP1  EXEC DSNNOTC,VOLSER=EXP18D
//STETP1  EXEC DSNNOTC,VOLSER=EXP18E
//STETP1  EXEC DSNNOTC,VOLSER=EXP18F
//STETP1  EXEC DSNNOTC,VOLSER=EXP19A
//STETP1  EXEC DSNNOTC,VOLSER=EXP19B
//STETP1  EXEC DSNNOTC,VOLSER=EXP19C
//STETP1  EXEC DSNNOTC,VOLSER=EXP19D
//STETP1  EXEC DSNNOTC,VOLSER=EXP19E
//STETP1  EXEC DSNNOTC,VOLSER=EXP19F
//STETP1  EXEC DSNNOTC,VOLSER=EXP200
//STETP1  EXEC DSNNOTC,VOLSER=EXP201
//STETP1  EXEC DSNNOTC,VOLSER=EXP202
//STETP1  EXEC DSNNOTC,VOLSER=EXP203
//STETP1  EXEC DSNNOTC,VOLSER=EXP204
//STETP1  EXEC DSNNOTC,VOLSER=EXP205
//STETP1  EXEC DSNNOTC,VOLSER=EXP206
//STETP1  EXEC DSNNOTC,VOLSER=EXP207
//STETP1  EXEC DSNNOTC,VOLSER=EXP208
//STETP1  EXEC DSNNOTC,VOLSER=EXP209
//STETP1  EXEC DSNNOTC,VOLSER=EXP210
//STETP1  EXEC DSNNOTC,VOLSER=EXP211
//STETP1  EXEC DSNNOTC,VOLSER=EXP212
//STETP1  EXEC DSNNOTC,VOLSER=EXP213
//STETP1  EXEC DSNNOTC,VOLSER=EXP214
//STETP1  EXEC DSNNOTC,VOLSER=EXP215
//STETP1  EXEC DSNNOTC,VOLSER=EXP216
//STETP1  EXEC DSNNOTC,VOLSER=EXP217
//STETP1  EXEC DSNNOTC,VOLSER=EXP218
//STETP1  EXEC DSNNOTC,VOLSER=EXP219
//STETP1  EXEC DSNNOTC,VOLSER=EXP220
//STETP1  EXEC DSNNOTC,VOLSER=EXP221
//STETP1  EXEC DSNNOTC,VOLSER=EXP222
//STETP1  EXEC DSNNOTC,VOLSER=EXP223
//STETP1  EXEC DSNNOTC,VOLSER=EXP224
//STETP1  EXEC DSNNOTC,VOLSER=EXP225
//STETP1  EXEC DSNNOTC,VOLSER=EXP226
//STETP1  EXEC DSNNOTC,VOLSER=EXP227
//STETP1  EXEC DSNNOTC,VOLSER=EXP228
//STETP1  EXEC DSNNOTC,VOLSER=EXP229
//STETP1  EXEC DSNNOTC,VOLSER=EXP230
//STETP1  EXEC DSNNOTC,VOLSER=EXP231
//STETP1  EXEC DSNNOTC,VOLSER=EXP232
//STETP1  EXEC DSNNOTC,VOLSER=EXP233
//STETP1  EXEC DSNNOTC,VOLSER=EXP234
//STETP1  EXEC DSNNOTC,VOLSER=EXP235
//STETP1  EXEC DSNNOTC,VOLSER=EXP236
//STETP1  EXEC DSNNOTC,VOLSER=EXP237
//STETP1  EXEC DSNNOTC,VOLSER=EXP238
//STETP1  EXEC DSNNOTC,VOLSER=EXP239
//STETP1  EXEC DSNNOTC,VOLSER=EXP240
//STETP1  EXEC DSNNOTC,VOLSER=EXP241
//STETP1  EXEC DSNNOTC,VOLSER=EXP242
//STETP1  EXEC DSNNOTC,VOLSER=EXP243
//STETP1  EXEC DSNNOTC,VOLSER=EXP244
//STETP1  EXEC DSNNOTC,VOLSER=EXP245
//STETP1  EXEC DSNNOTC,VOLSER=EXP246
//STETP1  EXEC DSNNOTC,VOLSER=EXP247
//STETP1  EXEC DSNNOTC,VOLSER=EXP248
//STETP1  EXEC DSNNOTC,VOLSER=EXP249
//STETP1  EXEC DSNNOTC,VOLSER=EXP250
//STETP1  EXEC DSNNOTC,VOLSER=EXP251
//STETP1  EXEC DSNNOTC,VOLSER=EXP252
//STETP1  EXEC DSNNOTC,VOLSER=EXP253
//STETP1  EXEC DSNNOTC,VOLSER=EXP254
//STETP1  EXEC DSNNOTC,VOLSER=EXP255
//STETP1  EXEC DSNNOTC,VOLSER=EXP256
//STETP1  EXEC DSNNOTC,VOLSER=EXP257
//STETP1  EXEC DSNNOTC,VOLSER=EXP258
//STETP1  EXEC DSNNOTC,VOLSER=EXP259
//STETP1  EXEC DSNNOTC,VOLSER=EXP260
//STETP1  EXEC DSNNOTC,VOLSER=EXP261
//STETP1  EXEC DSNNOTC,VOLSER=EXP262
//STETP1  EXEC DSNNOTC,VOLSER=EXP263
//STETP1  EXEC DSNNOTC,VOLSER=EXP264
//STETP1  EXEC DSNNOTC,VOLSER=EXP265
//STETP1  EXEC DSNNOTC,VOLSER=EXP300
//STETP1  EXEC DSNNOTC,VOLSER=EXP301
//STETP1  EXEC DSNNOTC,VOLSER=EXP302
//STETP1  EXEC DSNNOTC,VOLSER=EXP303
//STETP1  EXEC DSNNOTC,VOLSER=EXP304
//STETP1  EXEC DSNNOTC,VOLSER=EXP305
//STETP1  EXEC DSNNOTC,VOLSER=EXP306
//STETP1  EXEC DSNNOTC,VOLSER=EXP307
//STETP1  EXEC DSNNOTC,VOLSER=EXP308
//STETP1  EXEC DSNNOTC,VOLSER=EXP309
//STETP1  EXEC DSNNOTC,VOLSER=EXP310
//STETP1  EXEC DSNNOTC,VOLSER=EXP311
//STETP1  EXEC DSNNOTC,VOLSER=EXP312
//STETP1  EXEC DSNNOTC,VOLSER=EXP313
//STETP1  EXEC DSNNOTC,VOLSER=EXP314
//STETP1  EXEC DSNNOTC,VOLSER=EXP315
//STETP1  EXEC DSNNOTC,VOLSER=EXP316
//STETP1  EXEC DSNNOTC,VOLSER=EXP317
//STETP1  EXEC DSNNOTC,VOLSER=EXP318
//STETP1  EXEC DSNNOTC,VOLSER=EXP319
//STETP1  EXEC DSNNOTC,VOLSER=EXP320
//STETP1  EXEC DSNNOTC,VOLSER=EXP321
//STETP1  EXEC DSNNOTC,VOLSER=EXP322
//STETP1  EXEC DSNNOTC,VOLSER=EXP323
//STETP1  EXEC DSNNOTC,VOLSER=EXP324
//STETP1  EXEC DSNNOTC,VOLSER=EXP325
//STETP1  EXEC DSNNOTC,VOLSER=EXP326
//STETP1  EXEC DSNNOTC,VOLSER=EXP327
//STETP1  EXEC DSNNOTC,VOLSER=EXP328
//STETP1  EXEC DSNNOTC,VOLSER=EXP329
//STETP1  EXEC DSNNOTC,VOLSER=EXP330
//STETP1  EXEC DSNNOTC,VOLSER=EXP331
//STETP1  EXEC DSNNOTC,VOLSER=EXP332
//STETP1  EXEC DSNNOTC,VOLSER=EXP333
//STETP1  EXEC DSNNOTC,VOLSER=EXP334
//STETP1  EXEC DSNNOTC,VOLSER=EXP335
//STETP1  EXEC DSNNOTC,VOLSER=EXP336
//STETP1  EXEC DSNNOTC,VOLSER=EXP337
//STETP1  EXEC DSNNOTC,VOLSER=EXP338
//STETP1  EXEC DSNNOTC,VOLSER=EXP339
//STETP1  EXEC DSNNOTC,VOLSER=EXP340
//STETP1  EXEC DSNNOTC,VOLSER=EXP341
//STETP1  EXEC DSNNOTC,VOLSER=EXP342
//STETP1  EXEC DSNNOTC,VOLSER=EXP343
//STETP1  EXEC DSNNOTC,VOLSER=EXP344
//STETP1  EXEC DSNNOTC,VOLSER=EXP345
//STETP1  EXEC DSNNOTC,VOLSER=EXP346
//STETP1  EXEC DSNNOTC,VOLSER=EXP347
//STETP1  EXEC DSNNOTC,VOLSER=EXP348
//STETP1  EXEC DSNNOTC,VOLSER=EXP349
//STETP1  EXEC DSNNOTC,VOLSER=EXP350
//STETP1  EXEC DSNNOTC,VOLSER=EXP351
//STETP1  EXEC DSNNOTC,VOLSER=EXP352
//STETP1  EXEC DSNNOTC,VOLSER=EXP353
//STETP1  EXEC DSNNOTC,VOLSER=EXP354
//STETP1  EXEC DSNNOTC,VOLSER=EXP355
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AA
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AB
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AC
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AD
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AE
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AF
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AG
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AH
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AI
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AJ
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AK
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AL
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AM
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AN
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AO
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AP
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AQ
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AR
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AS
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AT
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AU
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AV
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AW
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AX
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AY
//STETP1  EXEC DSNNOTC,VOLSER=EXP4AZ
//STETP1  EXEC DSNNOTC,VOLSER=EXP4A0
//STETP1  EXEC DSNNOTC,VOLSER=EXP4A1
//STETP1  EXEC DSNNOTC,VOLSER=EXP4A2
//STETP1  EXEC DSNNOTC,VOLSER=EXP4A3
//STETP1  EXEC DSNNOTC,VOLSER=EXP4A4
//STETP1  EXEC DSNNOTC,VOLSER=EXP4A5
//STETP1  EXEC DSNNOTC,VOLSER=EXP4A6
//STETP1  EXEC DSNNOTC,VOLSER=EXP4A7
//STETP1  EXEC DSNNOTC,VOLSER=EXP4A8
//STETP1  EXEC DSNNOTC,VOLSER=EXP4A9
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BA
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BB
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BC
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BD
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BE
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BF
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BG
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BH
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BI
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BJ
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BK
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BL
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BM
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BN
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BO
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BP
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BQ
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BR
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BS
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BT
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BU
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BV
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BW
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BX
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BY
//STETP1  EXEC DSNNOTC,VOLSER=EXP4BZ
//STETP1  EXEC DSNNOTC,VOLSER=EXP4B0
//STETP1  EXEC DSNNOTC,VOLSER=EXP4B1
//STETP1  EXEC DSNNOTC,VOLSER=EXP4B2
//STETP1  EXEC DSNNOTC,VOLSER=EXP4B3
//STETP1  EXEC DSNNOTC,VOLSER=EXP4B4
//STETP1  EXEC DSNNOTC,VOLSER=EXP4B5
//STETP1  EXEC DSNNOTC,VOLSER=EXP4B6
//STETP1  EXEC DSNNOTC,VOLSER=EXP4B7
//STETP1  EXEC DSNNOTC,VOLSER=EXP4B8
//STETP1  EXEC DSNNOTC,VOLSER=EXP4B9
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CA
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CB
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CC
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CD
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CE
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CF
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CG
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CH
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CI
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CJ
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CK
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CL
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CM
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CN
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CO
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CP
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CQ
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CR
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CS
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CT
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CU
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CV
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CW
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CX
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CY
//STETP1  EXEC DSNNOTC,VOLSER=EXP4CZ
//STETP1  EXEC DSNNOTC,VOLSER=EXP4C0
//STETP1  EXEC DSNNOTC,VOLSER=EXP4C1
//STETP1  EXEC DSNNOTC,VOLSER=EXP4C2
//STETP1  EXEC DSNNOTC,VOLSER=EXP4C3
//STETP1  EXEC DSNNOTC,VOLSER=EXP4C4
//STETP1  EXEC DSNNOTC,VOLSER=EXP4C5
//STETP1  EXEC DSNNOTC,VOLSER=EXP4C6
//STETP1  EXEC DSNNOTC,VOLSER=EXP4C7
//STETP1  EXEC DSNNOTC,VOLSER=EXP4C8
//STETP1  EXEC DSNNOTC,VOLSER=EXP4C9
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DA
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DB
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DC
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DD
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DE
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DF
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DG
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DH
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DI
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DJ
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DK
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DL
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DM
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DN
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DO
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DP
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DQ
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DR
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DS
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DT
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DU
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DV
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DW
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DX
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DY
//STETP1  EXEC DSNNOTC,VOLSER=EXP4DZ
//STETP1  EXEC DSNNOTC,VOLSER=EXP4D0
//STETP1  EXEC DSNNOTC,VOLSER=EXP4D1
//STETP1  EXEC DSNNOTC,VOLSER=EXP4D2
//STETP1  EXEC DSNNOTC,VOLSER=EXP4D3
//STETP1  EXEC DSNNOTC,VOLSER=EXP4D4
//STETP1  EXEC DSNNOTC,VOLSER=EXP4D5
//STETP1  EXEC DSNNOTC,VOLSER=EXP4D6
//STETP1  EXEC DSNNOTC,VOLSER=EXP4D7
//STETP1  EXEC DSNNOTC,VOLSER=EXP4D8
//STETP1  EXEC DSNNOTC,VOLSER=EXP4D9
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EA
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EB
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EC
//STETP1  EXEC DSNNOTC,VOLSER=EXP4ED
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EE
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EF
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EG
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EH
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EI
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EJ
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EK
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EL
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EM
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EN
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EO
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EP
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EQ
//STETP1  EXEC DSNNOTC,VOLSER=EXP4ER
//STETP1  EXEC DSNNOTC,VOLSER=EXP4ES
//STETP1  EXEC DSNNOTC,VOLSER=EXP4ET
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EU
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EV
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EW
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EX
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EY
//STETP1  EXEC DSNNOTC,VOLSER=EXP4EZ
//STETP1  EXEC DSNNOTC,VOLSER=EXP4E1
//STETP1  EXEC DSNNOTC,VOLSER=EXP4E2
//STETP1  EXEC DSNNOTC,VOLSER=EXP4E3
//STETP1  EXEC DSNNOTC,VOLSER=EXP4E4
//STETP1  EXEC DSNNOTC,VOLSER=EXP4E5
//STETP1  EXEC DSNNOTC,VOLSER=EXP4E6
//STETP1  EXEC DSNNOTC,VOLSER=EXP4E7
//STETP1  EXEC DSNNOTC,VOLSER=EXP4E8
//STETP1  EXEC DSNNOTC,VOLSER=EXP4E9
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FA
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FB
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FC
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FD
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FE
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FF
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FG
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FH
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FI
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FJ
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FK
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FL
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FM
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FN
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FO
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FP
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FQ
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FR
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FS
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FT
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FU
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FV
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FW
//STETP1  EXEC DSNNOTC,VOLSER=EXP4FX
//STETP1  EXEC DSNNOTC,VOLSER=EXP40A
//STETP1  EXEC DSNNOTC,VOLSER=EXP40B
//STETP1  EXEC DSNNOTC,VOLSER=EXP40C
//STETP1  EXEC DSNNOTC,VOLSER=EXP40D
//STETP1  EXEC DSNNOTC,VOLSER=EXP40E
//STETP1  EXEC DSNNOTC,VOLSER=EXP40F
//STETP1  EXEC DSNNOTC,VOLSER=EXP400
//STETP1  EXEC DSNNOTC,VOLSER=EXP401
//STETP1  EXEC DSNNOTC,VOLSER=EXP402
//STETP1  EXEC DSNNOTC,VOLSER=EXP403
//STETP1  EXEC DSNNOTC,VOLSER=EXP404
//STETP1  EXEC DSNNOTC,VOLSER=EXP405
//STETP1  EXEC DSNNOTC,VOLSER=EXP406
//STETP1  EXEC DSNNOTC,VOLSER=EXP407
//STETP1  EXEC DSNNOTC,VOLSER=EXP408
//STETP1  EXEC DSNNOTC,VOLSER=EXP409
//STETP1  EXEC DSNNOTC,VOLSER=EXP41A
//STETP1  EXEC DSNNOTC,VOLSER=EXP41B
//STETP1  EXEC DSNNOTC,VOLSER=EXP41C
//STETP1  EXEC DSNNOTC,VOLSER=EXP41D
//STETP1  EXEC DSNNOTC,VOLSER=EXP41E
//STETP1  EXEC DSNNOTC,VOLSER=EXP41F
//STETP1  EXEC DSNNOTC,VOLSER=EXP410
//STETP1  EXEC DSNNOTC,VOLSER=EXP411
//STETP1  EXEC DSNNOTC,VOLSER=EXP412
//STETP1  EXEC DSNNOTC,VOLSER=EXP413
//STETP1  EXEC DSNNOTC,VOLSER=EXP414
//STETP1  EXEC DSNNOTC,VOLSER=EXP415
//STETP1  EXEC DSNNOTC,VOLSER=EXP416
//STETP1  EXEC DSNNOTC,VOLSER=EXP417
//STETP1  EXEC DSNNOTC,VOLSER=EXP418
//STETP1  EXEC DSNNOTC,VOLSER=EXP419
//STETP1  EXEC DSNNOTC,VOLSER=EXP42A
//STETP1  EXEC DSNNOTC,VOLSER=EXP42B
//STETP1  EXEC DSNNOTC,VOLSER=EXP42C
//STETP1  EXEC DSNNOTC,VOLSER=EXP42D
//STETP1  EXEC DSNNOTC,VOLSER=EXP42E
//STETP1  EXEC DSNNOTC,VOLSER=EXP42F
//STETP1  EXEC DSNNOTC,VOLSER=EXP420
//STETP1  EXEC DSNNOTC,VOLSER=EXP421
//STETP1  EXEC DSNNOTC,VOLSER=EXP422
//STETP1  EXEC DSNNOTC,VOLSER=EXP423
//STETP1  EXEC DSNNOTC,VOLSER=EXP424
//STETP1  EXEC DSNNOTC,VOLSER=EXP425
//STETP1  EXEC DSNNOTC,VOLSER=EXP426
//STETP1  EXEC DSNNOTC,VOLSER=EXP427
//STETP1  EXEC DSNNOTC,VOLSER=EXP428
//STETP1  EXEC DSNNOTC,VOLSER=EXP429
//STETP1  EXEC DSNNOTC,VOLSER=EXP43A
//STETP1  EXEC DSNNOTC,VOLSER=EXP43B
//STETP1  EXEC DSNNOTC,VOLSER=EXP43C
//STETP1  EXEC DSNNOTC,VOLSER=EXP43D
//STETP1  EXEC DSNNOTC,VOLSER=EXP43E
//STETP1  EXEC DSNNOTC,VOLSER=EXP43F
//STETP1  EXEC DSNNOTC,VOLSER=EXP430
//STETP1  EXEC DSNNOTC,VOLSER=EXP431
//STETP1  EXEC DSNNOTC,VOLSER=EXP432
//STETP1  EXEC DSNNOTC,VOLSER=EXP433
//STETP1  EXEC DSNNOTC,VOLSER=EXP434
//STETP1  EXEC DSNNOTC,VOLSER=EXP435
//STETP1  EXEC DSNNOTC,VOLSER=EXP436
//STETP1  EXEC DSNNOTC,VOLSER=EXP437
//STETP1  EXEC DSNNOTC,VOLSER=EXP438
//STETP1  EXEC DSNNOTC,VOLSER=EXP439
//STETP1  EXEC DSNNOTC,VOLSER=EXP44A
//STETP1  EXEC DSNNOTC,VOLSER=EXP44B
//STETP1  EXEC DSNNOTC,VOLSER=EXP44C
//STETP1  EXEC DSNNOTC,VOLSER=EXP44D
//STETP1  EXEC DSNNOTC,VOLSER=EXP44E
//STETP1  EXEC DSNNOTC,VOLSER=EXP44F
//STETP1  EXEC DSNNOTC,VOLSER=EXP440
//STETP1  EXEC DSNNOTC,VOLSER=EXP441
//STETP1  EXEC DSNNOTC,VOLSER=EXP442
//STETP1  EXEC DSNNOTC,VOLSER=EXP443
//STETP1  EXEC DSNNOTC,VOLSER=EXP444
//STETP1  EXEC DSNNOTC,VOLSER=EXP445
//STETP1  EXEC DSNNOTC,VOLSER=EXP446
//STETP1  EXEC DSNNOTC,VOLSER=EXP447
//STETP1  EXEC DSNNOTC,VOLSER=EXP448
//STETP1  EXEC DSNNOTC,VOLSER=EXP449
//STETP1  EXEC DSNNOTC,VOLSER=EXP45A
//STETP1  EXEC DSNNOTC,VOLSER=EXP45B
//STETP1  EXEC DSNNOTC,VOLSER=EXP45C
//STETP1  EXEC DSNNOTC,VOLSER=EXP45D
//STETP1  EXEC DSNNOTC,VOLSER=EXP45E
//STETP1  EXEC DSNNOTC,VOLSER=EXP45F
//STETP1  EXEC DSNNOTC,VOLSER=EXP450
//STETP1  EXEC DSNNOTC,VOLSER=EXP451
//STETP1  EXEC DSNNOTC,VOLSER=EXP452
//STETP1  EXEC DSNNOTC,VOLSER=EXP453
//STETP1  EXEC DSNNOTC,VOLSER=EXP454
//STETP1  EXEC DSNNOTC,VOLSER=EXP455
//STETP1  EXEC DSNNOTC,VOLSER=EXP456
//STETP1  EXEC DSNNOTC,VOLSER=EXP457
//STETP1  EXEC DSNNOTC,VOLSER=EXP458
//STETP1  EXEC DSNNOTC,VOLSER=EXP459
//STETP1  EXEC DSNNOTC,VOLSER=EXP46A
//STETP1  EXEC DSNNOTC,VOLSER=EXP46B
//STETP1  EXEC DSNNOTC,VOLSER=EXP46C
//STETP1  EXEC DSNNOTC,VOLSER=EXP46D
//STETP1  EXEC DSNNOTC,VOLSER=EXP46E
//STETP1  EXEC DSNNOTC,VOLSER=EXP46F
//STETP1  EXEC DSNNOTC,VOLSER=EXP460
//STETP1  EXEC DSNNOTC,VOLSER=EXP461
//STETP1  EXEC DSNNOTC,VOLSER=EXP462
//STETP1  EXEC DSNNOTC,VOLSER=EXP463
//STETP1  EXEC DSNNOTC,VOLSER=EXP464
//STETP1  EXEC DSNNOTC,VOLSER=EXP465
//STETP1  EXEC DSNNOTC,VOLSER=EXP466
//STETP1  EXEC DSNNOTC,VOLSER=EXP467
//STETP1  EXEC DSNNOTC,VOLSER=EXP468
//STETP1  EXEC DSNNOTC,VOLSER=EXP469
//STETP1  EXEC DSNNOTC,VOLSER=EXP47A
//STETP1  EXEC DSNNOTC,VOLSER=EXP47B
//STETP1  EXEC DSNNOTC,VOLSER=EXP47C
//STETP1  EXEC DSNNOTC,VOLSER=EXP47D
//STETP1  EXEC DSNNOTC,VOLSER=EXP47E
//STETP1  EXEC DSNNOTC,VOLSER=EXP47F
//STETP1  EXEC DSNNOTC,VOLSER=EXP470
//STETP1  EXEC DSNNOTC,VOLSER=EXP471
//STETP1  EXEC DSNNOTC,VOLSER=EXP472
//STETP1  EXEC DSNNOTC,VOLSER=EXP473
//STETP1  EXEC DSNNOTC,VOLSER=EXP474
//STETP1  EXEC DSNNOTC,VOLSER=EXP475
//STETP1  EXEC DSNNOTC,VOLSER=EXP476
//STETP1  EXEC DSNNOTC,VOLSER=EXP477
//STETP1  EXEC DSNNOTC,VOLSER=EXP478
//STETP1  EXEC DSNNOTC,VOLSER=EXP479
//STETP1  EXEC DSNNOTC,VOLSER=EXP48A
//STETP1  EXEC DSNNOTC,VOLSER=EXP48B
//STETP1  EXEC DSNNOTC,VOLSER=EXP48C
//STETP1  EXEC DSNNOTC,VOLSER=EXP48D
//STETP1  EXEC DSNNOTC,VOLSER=EXP48E
//STETP1  EXEC DSNNOTC,VOLSER=EXP48F
//STETP1  EXEC DSNNOTC,VOLSER=EXP480
//STETP1  EXEC DSNNOTC,VOLSER=EXP481
//STETP1  EXEC DSNNOTC,VOLSER=EXP482
//STETP1  EXEC DSNNOTC,VOLSER=EXP483
//STETP1  EXEC DSNNOTC,VOLSER=EXP484
//STETP1  EXEC DSNNOTC,VOLSER=EXP485
//STETP1  EXEC DSNNOTC,VOLSER=EXP486
//STETP1  EXEC DSNNOTC,VOLSER=EXP487
//STETP1  EXEC DSNNOTC,VOLSER=EXP488
//STETP1  EXEC DSNNOTC,VOLSER=EXP489
//STETP1  EXEC DSNNOTC,VOLSER=EXP49A
//STETP1  EXEC DSNNOTC,VOLSER=EXP49B
//STETP1  EXEC DSNNOTC,VOLSER=EXP49C
//STETP1  EXEC DSNNOTC,VOLSER=EXP49D
//STETP1  EXEC DSNNOTC,VOLSER=EXP49E
//STETP1  EXEC DSNNOTC,VOLSER=EXP49F
//STETP1  EXEC DSNNOTC,VOLSER=EXP490
//STETP1  EXEC DSNNOTC,VOLSER=EXP491
//STETP1  EXEC DSNNOTC,VOLSER=EXP492
//STETP1  EXEC DSNNOTC,VOLSER=EXP493
//STETP1  EXEC DSNNOTC,VOLSER=EXP494
//STETP1  EXEC DSNNOTC,VOLSER=EXP495
//STETP1  EXEC DSNNOTC,VOLSER=EXP496
//STETP1  EXEC DSNNOTC,VOLSER=EXP497
//STETP1  EXEC DSNNOTC,VOLSER=EXP498
//STETP1  EXEC DSNNOTC,VOLSER=EXP499
//STETP1  EXEC DSNNOTC,VOLSER=EXP500
//STETP1  EXEC DSNNOTC,VOLSER=EXP600
//STETP1  EXEC DSNNOTC,VOLSER=EXP601
//STETP1  EXEC DSNNOTC,VOLSER=EXP602
//STETP1  EXEC DSNNOTC,VOLSER=EXP603
//STETP1  EXEC DSNNOTC,VOLSER=EXP604
//STETP1  EXEC DSNNOTC,VOLSER=EXP605
//STETP1  EXEC DSNNOTC,VOLSER=EXP606
//STETP1  EXEC DSNNOTC,VOLSER=EXP607
//STETP1  EXEC DSNNOTC,VOLSER=EXP608
//STETP1  EXEC DSNNOTC,VOLSER=EXP609
//STETP1  EXEC DSNNOTC,VOLSER=EXP610
//STETP1  EXEC DSNNOTC,VOLSER=EXP611
//STETP1  EXEC DSNNOTC,VOLSER=EXP612
//STETP1  EXEC DSNNOTC,VOLSER=EXP613
//STETP1  EXEC DSNNOTC,VOLSER=EXP614
//STETP1  EXEC DSNNOTC,VOLSER=EXP615
//STETP1  EXEC DSNNOTC,VOLSER=EXP616
//STETP1  EXEC DSNNOTC,VOLSER=EXP617
//STETP1  EXEC DSNNOTC,VOLSER=EXP618
//STETP1  EXEC DSNNOTC,VOLSER=EXP700
//STETP1  EXEC DSNNOTC,VOLSER=EXP701
//STETP1  EXEC DSNNOTC,VOLSER=EXP702
//STETP1  EXEC DSNNOTC,VOLSER=EXP703
//STETP1  EXEC DSNNOTC,VOLSER=EXP704
//STETP1  EXEC DSNNOTC,VOLSER=EXP705
//STETP1  EXEC DSNNOTC,VOLSER=EXP706
//STETP1  EXEC DSNNOTC,VOLSER=EXP707
//STETP1  EXEC DSNNOTC,VOLSER=EXP708
//STETP1  EXEC DSNNOTC,VOLSER=EXP709
//STETP1  EXEC DSNNOTC,VOLSER=EXP710
//STETP1  EXEC DSNNOTC,VOLSER=EXP711
//STETP1  EXEC DSNNOTC,VOLSER=EXP712
//STETP1  EXEC DSNNOTC,VOLSER=EXP80A
//STETP1  EXEC DSNNOTC,VOLSER=EXP80B
//STETP1  EXEC DSNNOTC,VOLSER=EXP80C
//STETP1  EXEC DSNNOTC,VOLSER=EXP80D
//STETP1  EXEC DSNNOTC,VOLSER=EXP80E
//STETP1  EXEC DSNNOTC,VOLSER=EXP800
//STETP1  EXEC DSNNOTC,VOLSER=EXP801
//STETP1  EXEC DSNNOTC,VOLSER=EXP802
//STETP1  EXEC DSNNOTC,VOLSER=EXP803
//STETP1  EXEC DSNNOTC,VOLSER=EXP804
//STETP1  EXEC DSNNOTC,VOLSER=EXP805
//STETP1  EXEC DSNNOTC,VOLSER=EXP806
//STETP1  EXEC DSNNOTC,VOLSER=EXP807
//STETP1  EXEC DSNNOTC,VOLSER=EXP808
//STETP1  EXEC DSNNOTC,VOLSER=EXP809
//STETP1  EXEC DSNNOTC,VOLSER=EXP810
//STETP1  EXEC DSNNOTC,VOLSER=EXP811
//STETP1  EXEC DSNNOTC,VOLSER=EXP812
//STETP1  EXEC DSNNOTC,VOLSER=EXP813
//STETP1  EXEC DSNNOTC,VOLSER=EXP814
//STETP1  EXEC DSNNOTC,VOLSER=EXP815
//STETP1  EXEC DSNNOTC,VOLSER=EXP816
//STETP1  EXEC DSNNOTC,VOLSER=EXP817
//STETP1  EXEC DSNNOTC,VOLSER=EXP818
//STETP1  EXEC DSNNOTC,VOLSER=EXP819
//STETP1  EXEC DSNNOTC,VOLSER=EXP820
//STETP1  EXEC DSNNOTC,VOLSER=EXP821
//STETP1  EXEC DSNNOTC,VOLSER=EXP822
//STETP1  EXEC DSNNOTC,VOLSER=EXP823
//STETP1  EXEC DSNNOTC,VOLSER=EXP824
//STETP1  EXEC DSNNOTC,VOLSER=EXP825
//STETP1  EXEC DSNNOTC,VOLSER=EXP826
//STETP1  EXEC DSNNOTC,VOLSER=EXP827
//STETP1  EXEC DSNNOTC,VOLSER=EXP828
//STETP1  EXEC DSNNOTC,VOLSER=EXP829
//STETP1  EXEC DSNNOTC,VOLSER=EXP830
//STETP1  EXEC DSNNOTC,VOLSER=EXP831
//STETP1  EXEC DSNNOTC,VOLSER=EXP832
//STETP1  EXEC DSNNOTC,VOLSER=EXP833
//STETP1  EXEC DSNNOTC,VOLSER=EXP834
//STETP1  EXEC DSNNOTC,VOLSER=EXP835
//STETP1  EXEC DSNNOTC,VOLSER=EXP836
//STETP1  EXEC DSNNOTC,VOLSER=EXP837
//STETP1  EXEC DSNNOTC,VOLSER=EXP838
//STETP1  EXEC DSNNOTC,VOLSER=EXP839
//STETP1  EXEC DSNNOTC,VOLSER=EXP840
//STETP1  EXEC DSNNOTC,VOLSER=EXP841
//STETP1  EXEC DSNNOTC,VOLSER=EXP842
//STETP1  EXEC DSNNOTC,VOLSER=EXP843
//STETP1  EXEC DSNNOTC,VOLSER=EXP844
//STETP1  EXEC DSNNOTC,VOLSER=EXP845
//STETP1  EXEC DSNNOTC,VOLSER=EXP846
//STETP1  EXEC DSNNOTC,VOLSER=EXP847
//STETP1  EXEC DSNNOTC,VOLSER=EXP850
//STETP1  EXEC DSNNOTC,VOLSER=EXP851
//STETP1  EXEC DSNNOTC,VOLSER=EXP852
//STETP1  EXEC DSNNOTC,VOLSER=EXP853
//STETP1  EXEC DSNNOTC,VOLSER=EXP854
//STETP1  EXEC DSNNOTC,VOLSER=EXP855
//STETP1  EXEC DSNNOTC,VOLSER=EXP90A
//STETP1  EXEC DSNNOTC,VOLSER=EXP90B
//STETP1  EXEC DSNNOTC,VOLSER=EXP90C
//STETP1  EXEC DSNNOTC,VOLSER=EXP90D
//STETP1  EXEC DSNNOTC,VOLSER=EXP90E
//STETP1  EXEC DSNNOTC,VOLSER=EXP90F
//STETP1  EXEC DSNNOTC,VOLSER=EXP900
//STETP1  EXEC DSNNOTC,VOLSER=EXP901
//STETP1  EXEC DSNNOTC,VOLSER=EXP902
//STETP1  EXEC DSNNOTC,VOLSER=EXP903
//STETP1  EXEC DSNNOTC,VOLSER=EXP904
//STETP1  EXEC DSNNOTC,VOLSER=EXP905
//STETP1  EXEC DSNNOTC,VOLSER=EXP906
//STETP1  EXEC DSNNOTC,VOLSER=EXP907
//STETP1  EXEC DSNNOTC,VOLSER=EXP908
//STETP1  EXEC DSNNOTC,VOLSER=EXP909
//STETP1  EXEC DSNNOTC,VOLSER=EXP91A
//STETP1  EXEC DSNNOTC,VOLSER=EXP91B
//STETP1  EXEC DSNNOTC,VOLSER=EXP91C
//STETP1  EXEC DSNNOTC,VOLSER=EXP91D
//STETP1  EXEC DSNNOTC,VOLSER=EXP91E
//STETP1  EXEC DSNNOTC,VOLSER=EXP91F
//STETP1  EXEC DSNNOTC,VOLSER=EXP910
//STETP1  EXEC DSNNOTC,VOLSER=EXP911
//STETP1  EXEC DSNNOTC,VOLSER=EXP912
//STETP1  EXEC DSNNOTC,VOLSER=EXP913
//STETP1  EXEC DSNNOTC,VOLSER=EXP914
//STETP1  EXEC DSNNOTC,VOLSER=EXP915
//STETP1  EXEC DSNNOTC,VOLSER=EXP916
//STETP1  EXEC DSNNOTC,VOLSER=EXP917
//STETP1  EXEC DSNNOTC,VOLSER=EXP918
//STETP1  EXEC DSNNOTC,VOLSER=EXP919
//STETP1  EXEC DSNNOTC,VOLSER=EXP92A
//STETP1  EXEC DSNNOTC,VOLSER=EXP92B
//STETP1  EXEC DSNNOTC,VOLSER=EXP92C
//STETP1  EXEC DSNNOTC,VOLSER=EXP92D
//STETP1  EXEC DSNNOTC,VOLSER=EXP92E
//STETP1  EXEC DSNNOTC,VOLSER=EXP92F
//STETP1  EXEC DSNNOTC,VOLSER=EXP920
//STETP1  EXEC DSNNOTC,VOLSER=EXP921
//STETP1  EXEC DSNNOTC,VOLSER=EXP922
//STETP1  EXEC DSNNOTC,VOLSER=EXP923
//STETP1  EXEC DSNNOTC,VOLSER=EXP924
//STETP1  EXEC DSNNOTC,VOLSER=EXP925
//STETP1  EXEC DSNNOTC,VOLSER=EXP926
//STETP1  EXEC DSNNOTC,VOLSER=EXP927
//STETP1  EXEC DSNNOTC,VOLSER=EXP928
//STETP1  EXEC DSNNOTC,VOLSER=EXP929
//STETP1  EXEC DSNNOTC,VOLSER=EXP93A
//STETP1  EXEC DSNNOTC,VOLSER=EXP93B
//STETP1  EXEC DSNNOTC,VOLSER=EXP93C
//STETP1  EXEC DSNNOTC,VOLSER=EXP93D
//STETP1  EXEC DSNNOTC,VOLSER=EXP93E
//STETP1  EXEC DSNNOTC,VOLSER=EXP93F
//STETP1  EXEC DSNNOTC,VOLSER=EXP930
//STETP1  EXEC DSNNOTC,VOLSER=EXP931
//STETP1  EXEC DSNNOTC,VOLSER=EXP932
//STETP1  EXEC DSNNOTC,VOLSER=EXP933
//STETP1  EXEC DSNNOTC,VOLSER=EXP934
//STETP1  EXEC DSNNOTC,VOLSER=EXP935
//STETP1  EXEC DSNNOTC,VOLSER=EXP936
//STETP1  EXEC DSNNOTC,VOLSER=EXP937
//STETP1  EXEC DSNNOTC,VOLSER=EXP938
//STETP1  EXEC DSNNOTC,VOLSER=EXP939
//STETP1  EXEC DSNNOTC,VOLSER=EXP94A
//STETP1  EXEC DSNNOTC,VOLSER=EXP94B
//STETP1  EXEC DSNNOTC,VOLSER=EXP94C
//STETP1  EXEC DSNNOTC,VOLSER=EXP94D
//STETP1  EXEC DSNNOTC,VOLSER=EXP94E
//STETP1  EXEC DSNNOTC,VOLSER=EXP94F
//STETP1  EXEC DSNNOTC,VOLSER=EXP940
//STETP1  EXEC DSNNOTC,VOLSER=EXP941
//STETP1  EXEC DSNNOTC,VOLSER=EXP942
//STETP1  EXEC DSNNOTC,VOLSER=EXP943
//STETP1  EXEC DSNNOTC,VOLSER=EXP944
//STETP1  EXEC DSNNOTC,VOLSER=EXP945
//STETP1  EXEC DSNNOTC,VOLSER=EXP946
//STETP1  EXEC DSNNOTC,VOLSER=EXP947
//STETP1  EXEC DSNNOTC,VOLSER=EXP948
//STETP1  EXEC DSNNOTC,VOLSER=EXP949
//STETP1  EXEC DSNNOTC,VOLSER=EXP95B
//STETP1  EXEC DSNNOTC,VOLSER=EXP95C
//STETP1  EXEC DSNNOTC,VOLSER=EXP95D
//STETP1  EXEC DSNNOTC,VOLSER=EXP95E
//STETP1  EXEC DSNNOTC,VOLSER=EXP95F
//STETP1  EXEC DSNNOTC,VOLSER=EXP950
//STETP1  EXEC DSNNOTC,VOLSER=EXP951
//STETP1  EXEC DSNNOTC,VOLSER=EXP952
//STETP1  EXEC DSNNOTC,VOLSER=EXP953
//STETP1  EXEC DSNNOTC,VOLSER=EXP954
//STETP1  EXEC DSNNOTC,VOLSER=EXP955
//STETP1  EXEC DSNNOTC,VOLSER=EXP956
//STETP1  EXEC DSNNOTC,VOLSER=EXP957
//STETP1  EXEC DSNNOTC,VOLSER=EXP958
//STETP1  EXEC DSNNOTC,VOLSER=EXP959
//STETP1  EXEC DSNNOTC,VOLSER=EXP96A
//STETP1  EXEC DSNNOTC,VOLSER=EXP96B
//STETP1  EXEC DSNNOTC,VOLSER=EXP96C
//STETP1  EXEC DSNNOTC,VOLSER=EXP96D
//STETP1  EXEC DSNNOTC,VOLSER=EXP96E
//STETP1  EXEC DSNNOTC,VOLSER=EXP96F
//STETP1  EXEC DSNNOTC,VOLSER=EXP960
//STETP1  EXEC DSNNOTC,VOLSER=EXP961
//STETP1  EXEC DSNNOTC,VOLSER=EXP962
//STETP1  EXEC DSNNOTC,VOLSER=EXP963
//STETP1  EXEC DSNNOTC,VOLSER=EXP964
//STETP1  EXEC DSNNOTC,VOLSER=EXP965
//STETP1  EXEC DSNNOTC,VOLSER=EXP966
//STETP1  EXEC DSNNOTC,VOLSER=EXP967
//STETP1  EXEC DSNNOTC,VOLSER=EXP968
//STETP1  EXEC DSNNOTC,VOLSER=EXP969
//STETP1  EXEC DSNNOTC,VOLSER=EXP97A
//STETP1  EXEC DSNNOTC,VOLSER=EXP97B
//STETP1  EXEC DSNNOTC,VOLSER=EXP97C
//STETP1  EXEC DSNNOTC,VOLSER=EXP97D
//STETP1  EXEC DSNNOTC,VOLSER=EXP97E
//STETP1  EXEC DSNNOTC,VOLSER=EXP970
//STETP1  EXEC DSNNOTC,VOLSER=EXP971
//STETP1  EXEC DSNNOTC,VOLSER=EXP972
//STETP1  EXEC DSNNOTC,VOLSER=EXP973
//STETP1  EXEC DSNNOTC,VOLSER=EXP974
//STETP1  EXEC DSNNOTC,VOLSER=EXP975
//STETP1  EXEC DSNNOTC,VOLSER=EXP976
//STETP1  EXEC DSNNOTC,VOLSER=EXP977
//STETP1  EXEC DSNNOTC,VOLSER=EXP978
//STETP1  EXEC DSNNOTC,VOLSER=EXP979
//STETP1  EXEC DSNNOTC,VOLSER=EXP98A
//STETP1  EXEC DSNNOTC,VOLSER=EXP98B
//STETP1  EXEC DSNNOTC,VOLSER=EXP98C
//STETP1  EXEC DSNNOTC,VOLSER=EXP980
//STETP1  EXEC DSNNOTC,VOLSER=EXP981
//STETP1  EXEC DSNNOTC,VOLSER=EXP982
//STETP1  EXEC DSNNOTC,VOLSER=EXP983
//STETP1  EXEC DSNNOTC,VOLSER=EXP984
//STETP1  EXEC DSNNOTC,VOLSER=EXP985
//STETP1  EXEC DSNNOTC,VOLSER=EXP986
//STETP1  EXEC DSNNOTC,VOLSER=EXP987
//STETP1  EXEC DSNNOTC,VOLSER=EXP988
//STETP1  EXEC DSNNOTC,VOLSER=EXP989
//STETP1  EXEC DSNNOTC,VOLSER=EXP990
//STETP1  EXEC DSNNOTC,VOLSER=EXP991
//STETP1  EXEC DSNNOTC,VOLSER=EXP992
//STETP1  EXEC DSNNOTC,VOLSER=EXP993
//STETP1  EXEC DSNNOTC,VOLSER=EXP994
//STETP1  EXEC DSNNOTC,VOLSER=EXP995
//STETP1  EXEC DSNNOTC,VOLSER=EXP996
//STETP1  EXEC DSNNOTC,VOLSER=EXP997
//STETP1  EXEC DSNNOTC,VOLSER=EXP998
//STETP1  EXEC DSNNOTC,VOLSER=FXAB01
//STETP1  EXEC DSNNOTC,VOLSER=FXAB02
//STETP1  EXEC DSNNOTC,VOLSER=FXAB03
//STETP1  EXEC DSNNOTC,VOLSER=FXAB04
//STETP1  EXEC DSNNOTC,VOLSER=FXAB05
//STETP1  EXEC DSNNOTC,VOLSER=FXA904
//STETP1  EXEC DSNNOTC,VOLSER=FXA905
//STETP1  EXEC DSNNOTC,VOLSER=FXCA04
//STETP1  EXEC DSNNOTC,VOLSER=FXDA01
//STETP1  EXEC DSNNOTC,VOLSER=FXDA03
//STETP1  EXEC DSNNOTC,VOLSER=FXDA05
//STETP1  EXEC DSNNOTC,VOLSER=FXDB05
//STETP1  EXEC DSNNOTC,VOLSER=FXD703
//STETP1  EXEC DSNNOTC,VOLSER=FXD705
//STETP1  EXEC DSNNOTC,VOLSER=FXD805
//STETP1  EXEC DSNNOTC,VOLSER=FXD903
//STETP1  EXEC DSNNOTC,VOLSER=FXD904
//STETP1  EXEC DSNNOTC,VOLSER=FXD905
//STETP1  EXEC DSNNOTC,VOLSER=HCD000
//STETP1  EXEC DSNNOTC,VOLSER=HFSTMP
//STETP1  EXEC DSNNOTC,VOLSER=HSMQ01
//STETP1  EXEC DSNNOTC,VOLSER=HSMR01
//STETP1  EXEC DSNNOTC,VOLSER=HSMR02
//STETP1  EXEC DSNNOTC,VOLSER=HSMSR1
//STETP1  EXEC DSNNOTC,VOLSER=HSMSR2
//STETP1  EXEC DSNNOTC,VOLSER=HSM001
//STETP1  EXEC DSNNOTC,VOLSER=HSM002
//STETP1  EXEC DSNNOTC,VOLSER=HSM003
//STETP1  EXEC DSNNOTC,VOLSER=HSM004
//STETP1  EXEC DSNNOTC,VOLSER=HSM005
//STETP1  EXEC DSNNOTC,VOLSER=HSM006
//STETP1  EXEC DSNNOTC,VOLSER=HSM007
//STETP1  EXEC DSNNOTC,VOLSER=HSM008
//STETP1  EXEC DSNNOTC,VOLSER=HSM009
//STETP1  EXEC DSNNOTC,VOLSER=HSM010
//STETP1  EXEC DSNNOTC,VOLSER=HSM011
//STETP1  EXEC DSNNOTC,VOLSER=HSM012
//STETP1  EXEC DSNNOTC,VOLSER=HSM013
//STETP1  EXEC DSNNOTC,VOLSER=HSM014
//STETP1  EXEC DSNNOTC,VOLSER=HSM015
//STETP1  EXEC DSNNOTC,VOLSER=HSM016
//STETP1  EXEC DSNNOTC,VOLSER=HSM017
//STETP1  EXEC DSNNOTC,VOLSER=HSM018
//STETP1  EXEC DSNNOTC,VOLSER=I$AB76
//STETP1  EXEC DSNNOTC,VOLSER=I$AB77
//STETP1  EXEC DSNNOTC,VOLSER=I$AB78
//STETP1  EXEC DSNNOTC,VOLSER=I$A036
//STETP1  EXEC DSNNOTC,VOLSER=I$A331
//STETP1  EXEC DSNNOTC,VOLSER=I$A36E
//STETP1  EXEC DSNNOTC,VOLSER=I$A36F
//STETP1  EXEC DSNNOTC,VOLSER=IA3025
//STETP1  EXEC DSNNOTC,VOLSER=IA500B
//STETP1  EXEC DSNNOTC,VOLSER=IA500C
//STETP1  EXEC DSNNOTC,VOLSER=IA500D
//STETP1  EXEC DSNNOTC,VOLSER=IA500E
//STETP1  EXEC DSNNOTC,VOLSER=IA500F
//STETP1  EXEC DSNNOTC,VOLSER=IA501A
//STETP1  EXEC DSNNOTC,VOLSER=IA501B
//STETP1  EXEC DSNNOTC,VOLSER=IA501C
//STETP1  EXEC DSNNOTC,VOLSER=IA501D
//STETP1  EXEC DSNNOTC,VOLSER=IA501E
//STETP1  EXEC DSNNOTC,VOLSER=IA501F
//STETP1  EXEC DSNNOTC,VOLSER=IA5015
//STETP1  EXEC DSNNOTC,VOLSER=IA5016
//STETP1  EXEC DSNNOTC,VOLSER=IA5017
//STETP1  EXEC DSNNOTC,VOLSER=IA5018
//STETP1  EXEC DSNNOTC,VOLSER=IA5019
//STETP1  EXEC DSNNOTC,VOLSER=IA502A
//STETP1  EXEC DSNNOTC,VOLSER=IA502B
//STETP1  EXEC DSNNOTC,VOLSER=IA502C
//STETP1  EXEC DSNNOTC,VOLSER=IA502D
//STETP1  EXEC DSNNOTC,VOLSER=IA502E
//STETP1  EXEC DSNNOTC,VOLSER=IA502F
//STETP1  EXEC DSNNOTC,VOLSER=IA5020
//STETP1  EXEC DSNNOTC,VOLSER=IA5021
//STETP1  EXEC DSNNOTC,VOLSER=IA5022
//STETP1  EXEC DSNNOTC,VOLSER=IA5023
//STETP1  EXEC DSNNOTC,VOLSER=IA5024
//STETP1  EXEC DSNNOTC,VOLSER=IA5025
//STETP1  EXEC DSNNOTC,VOLSER=IA5026
//STETP1  EXEC DSNNOTC,VOLSER=IA5027
//STETP1  EXEC DSNNOTC,VOLSER=IA5028
//STETP1  EXEC DSNNOTC,VOLSER=IA5029
//STETP1  EXEC DSNNOTC,VOLSER=IBAA2F
//STETP1  EXEC DSNNOTC,VOLSER=IBAA3C
//STETP1  EXEC DSNNOTC,VOLSER=IBAA3D
//STETP1  EXEC DSNNOTC,VOLSER=IBAA3E
//STETP1  EXEC DSNNOTC,VOLSER=IBAA3F
//STETP1  EXEC DSNNOTC,VOLSER=IBAA5C
//STETP1  EXEC DSNNOTC,VOLSER=IBAA5D
//STETP1  EXEC DSNNOTC,VOLSER=IBAA5E
//STETP1  EXEC DSNNOTC,VOLSER=IBAA5F
//STETP1  EXEC DSNNOTC,VOLSER=IBAA6A
//STETP1  EXEC DSNNOTC,VOLSER=IBAA6B
//STETP1  EXEC DSNNOTC,VOLSER=IBAA6C
//STETP1  EXEC DSNNOTC,VOLSER=IBAA6D
//STETP1  EXEC DSNNOTC,VOLSER=IBAA6E
//STETP1  EXEC DSNNOTC,VOLSER=IBAA6F
//STETP1  EXEC DSNNOTC,VOLSER=IBAA65
//STETP1  EXEC DSNNOTC,VOLSER=IBAA66
//STETP1  EXEC DSNNOTC,VOLSER=IBAA67
//STETP1  EXEC DSNNOTC,VOLSER=IBAA68
//STETP1  EXEC DSNNOTC,VOLSER=IBAA69
//STETP1  EXEC DSNNOTC,VOLSER=IBAA70
//STETP1  EXEC DSNNOTC,VOLSER=IBAA71
//STETP1  EXEC DSNNOTC,VOLSER=IBAB3D
//STETP1  EXEC DSNNOTC,VOLSER=IBAB3E
//STETP1  EXEC DSNNOTC,VOLSER=IBAB3F
//STETP1  EXEC DSNNOTC,VOLSER=IBAB4A
//STETP1  EXEC DSNNOTC,VOLSER=IBAB4B
//STETP1  EXEC DSNNOTC,VOLSER=IBAB4C
//STETP1  EXEC DSNNOTC,VOLSER=IBAB4D
//STETP1  EXEC DSNNOTC,VOLSER=IBAB4E
//STETP1  EXEC DSNNOTC,VOLSER=IBAB4F
//STETP1  EXEC DSNNOTC,VOLSER=IBAB46
//STETP1  EXEC DSNNOTC,VOLSER=IBAB47
//STETP1  EXEC DSNNOTC,VOLSER=IBAB48
//STETP1  EXEC DSNNOTC,VOLSER=IBAB49
//STETP1  EXEC DSNNOTC,VOLSER=IBAB5A
//STETP1  EXEC DSNNOTC,VOLSER=IBAB5B
//STETP1  EXEC DSNNOTC,VOLSER=IBAB5C
//STETP1  EXEC DSNNOTC,VOLSER=IBAB5D
//STETP1  EXEC DSNNOTC,VOLSER=IBAB5E
//STETP1  EXEC DSNNOTC,VOLSER=IBAB5F
//STETP1  EXEC DSNNOTC,VOLSER=IBAB50
//STETP1  EXEC DSNNOTC,VOLSER=IBAB51
//STETP1  EXEC DSNNOTC,VOLSER=IBAB52
//STETP1  EXEC DSNNOTC,VOLSER=IBAB53
//STETP1  EXEC DSNNOTC,VOLSER=IBAB54
//STETP1  EXEC DSNNOTC,VOLSER=IBAB55
//STETP1  EXEC DSNNOTC,VOLSER=IBAB56
//STETP1  EXEC DSNNOTC,VOLSER=IBAB57
//STETP1  EXEC DSNNOTC,VOLSER=IBAB58
//STETP1  EXEC DSNNOTC,VOLSER=IBAB59
//STETP1  EXEC DSNNOTC,VOLSER=IBAB6A
//STETP1  EXEC DSNNOTC,VOLSER=IBAB6B
//STETP1  EXEC DSNNOTC,VOLSER=IBAB6C
//STETP1  EXEC DSNNOTC,VOLSER=IBAB6D
//STETP1  EXEC DSNNOTC,VOLSER=IBAB6E
//STETP1  EXEC DSNNOTC,VOLSER=IBAB6F
//STETP1  EXEC DSNNOTC,VOLSER=IBAB60
//STETP1  EXEC DSNNOTC,VOLSER=IBAB61
//STETP1  EXEC DSNNOTC,VOLSER=IBAB62
//STETP1  EXEC DSNNOTC,VOLSER=IBAB63
//STETP1  EXEC DSNNOTC,VOLSER=IBAB64
//STETP1  EXEC DSNNOTC,VOLSER=IBAB65
//STETP1  EXEC DSNNOTC,VOLSER=IBAB66
//STETP1  EXEC DSNNOTC,VOLSER=IBAB67
//STETP1  EXEC DSNNOTC,VOLSER=IBAB68
//STETP1  EXEC DSNNOTC,VOLSER=IBAB69
//STETP1  EXEC DSNNOTC,VOLSER=IBAB70
//STETP1  EXEC DSNNOTC,VOLSER=IBAB71
//STETP1  EXEC DSNNOTC,VOLSER=IBAB72
//STETP1  EXEC DSNNOTC,VOLSER=IBA358
//STETP1  EXEC DSNNOTC,VOLSER=IBA42F
//STETP1  EXEC DSNNOTC,VOLSER=IBA44D
//STETP1  EXEC DSNNOTC,VOLSER=IBA459
//STETP1  EXEC DSNNOTC,VOLSER=IBA472
//STETP1  EXEC DSNNOTC,VOLSER=IBA532
//STETP1  EXEC DSNNOTC,VOLSER=IBA55C
//STETP1  EXEC DSNNOTC,VOLSER=IBA55D
//STETP1  EXEC DSNNOTC,VOLSER=IBA55E
//STETP1  EXEC DSNNOTC,VOLSER=IBA55F
//STETP1  EXEC DSNNOTC,VOLSER=IBA555
//STETP1  EXEC DSNNOTC,VOLSER=IBA570
//STETP1  EXEC DSNNOTC,VOLSER=IBA571
//STETP1  EXEC DSNNOTC,VOLSER=IBA572
//STETP1  EXEC DSNNOTC,VOLSER=IBA60B
//STETP1  EXEC DSNNOTC,VOLSER=IBA647
//STETP1  EXEC DSNNOTC,VOLSER=IBA65C
//STETP1  EXEC DSNNOTC,VOLSER=IBA65D
//STETP1  EXEC DSNNOTC,VOLSER=IBA65E
//STETP1  EXEC DSNNOTC,VOLSER=IBA65F
//STETP1  EXEC DSNNOTC,VOLSER=IBA651
//STETP1  EXEC DSNNOTC,VOLSER=IBA652
//STETP1  EXEC DSNNOTC,VOLSER=IBA66F
//STETP1  EXEC DSNNOTC,VOLSER=IBA670
//STETP1  EXEC DSNNOTC,VOLSER=IBA671
//STETP1  EXEC DSNNOTC,VOLSER=IBA672
//STETP1  EXEC DSNNOTC,VOLSER=IBA734
//STETP1  EXEC DSNNOTC,VOLSER=IBA735
//STETP1  EXEC DSNNOTC,VOLSER=IBA740
//STETP1  EXEC DSNNOTC,VOLSER=IBA747
//STETP1  EXEC DSNNOTC,VOLSER=IBA751
//STETP1  EXEC DSNNOTC,VOLSER=IBA752
//STETP1  EXEC DSNNOTC,VOLSER=IBA753
//STETP1  EXEC DSNNOTC,VOLSER=IBA757
//STETP1  EXEC DSNNOTC,VOLSER=IBA758
//STETP1  EXEC DSNNOTC,VOLSER=IBA83B
//STETP1  EXEC DSNNOTC,VOLSER=IBA83C
//STETP1  EXEC DSNNOTC,VOLSER=IBA838
//STETP1  EXEC DSNNOTC,VOLSER=IBA847
//STETP1  EXEC DSNNOTC,VOLSER=IBA85A
//STETP1  EXEC DSNNOTC,VOLSER=IBA85B
//STETP1  EXEC DSNNOTC,VOLSER=IBA85C
//STETP1  EXEC DSNNOTC,VOLSER=IBA85D
//STETP1  EXEC DSNNOTC,VOLSER=IBA85E
//STETP1  EXEC DSNNOTC,VOLSER=IBA85F
//STETP1  EXEC DSNNOTC,VOLSER=IBA851
//STETP1  EXEC DSNNOTC,VOLSER=IBA852
//STETP1  EXEC DSNNOTC,VOLSER=IBA857
//STETP1  EXEC DSNNOTC,VOLSER=IBA858
//STETP1  EXEC DSNNOTC,VOLSER=IBA93B
//STETP1  EXEC DSNNOTC,VOLSER=IBA93C
//STETP1  EXEC DSNNOTC,VOLSER=IBA93D
//STETP1  EXEC DSNNOTC,VOLSER=IBA93E
//STETP1  EXEC DSNNOTC,VOLSER=IBA93F
//STETP1  EXEC DSNNOTC,VOLSER=IBA94A
//STETP1  EXEC DSNNOTC,VOLSER=IBA94B
//STETP1  EXEC DSNNOTC,VOLSER=IBA94C
//STETP1  EXEC DSNNOTC,VOLSER=IBA94D
//STETP1  EXEC DSNNOTC,VOLSER=IBA94E
//STETP1  EXEC DSNNOTC,VOLSER=IBA94F
//STETP1  EXEC DSNNOTC,VOLSER=IBA940
//STETP1  EXEC DSNNOTC,VOLSER=IBA941
//STETP1  EXEC DSNNOTC,VOLSER=IBA942
//STETP1  EXEC DSNNOTC,VOLSER=IBA943
//STETP1  EXEC DSNNOTC,VOLSER=IBA944
//STETP1  EXEC DSNNOTC,VOLSER=IBA945
//STETP1  EXEC DSNNOTC,VOLSER=IBA946
//STETP1  EXEC DSNNOTC,VOLSER=IBA947
//STETP1  EXEC DSNNOTC,VOLSER=IBA948
//STETP1  EXEC DSNNOTC,VOLSER=IBA949
//STETP1  EXEC DSNNOTC,VOLSER=IBA95A
//STETP1  EXEC DSNNOTC,VOLSER=IBA95B
//STETP1  EXEC DSNNOTC,VOLSER=IBA95C
//STETP1  EXEC DSNNOTC,VOLSER=IBA95D
//STETP1  EXEC DSNNOTC,VOLSER=IBA95E
//STETP1  EXEC DSNNOTC,VOLSER=IBA95F
//STETP1  EXEC DSNNOTC,VOLSER=IBA950
//STETP1  EXEC DSNNOTC,VOLSER=IBA951
//STETP1  EXEC DSNNOTC,VOLSER=IBA952
//STETP1  EXEC DSNNOTC,VOLSER=IBA953
//STETP1  EXEC DSNNOTC,VOLSER=IBA954
//STETP1  EXEC DSNNOTC,VOLSER=IBA955
//STETP1  EXEC DSNNOTC,VOLSER=IBA956
//STETP1  EXEC DSNNOTC,VOLSER=IBA957
//STETP1  EXEC DSNNOTC,VOLSER=IBA958
//STETP1  EXEC DSNNOTC,VOLSER=IBA959
//STETP1  EXEC DSNNOTC,VOLSER=IBA96A
//STETP1  EXEC DSNNOTC,VOLSER=IBA96B
//STETP1  EXEC DSNNOTC,VOLSER=IBA96C
//STETP1  EXEC DSNNOTC,VOLSER=IBA96D
//STETP1  EXEC DSNNOTC,VOLSER=IBA96E
//STETP1  EXEC DSNNOTC,VOLSER=IBA96F
//STETP1  EXEC DSNNOTC,VOLSER=IBA960
//STETP1  EXEC DSNNOTC,VOLSER=IBA961
//STETP1  EXEC DSNNOTC,VOLSER=IBA962
//STETP1  EXEC DSNNOTC,VOLSER=IBA963
//STETP1  EXEC DSNNOTC,VOLSER=IBA964
//STETP1  EXEC DSNNOTC,VOLSER=IBA965
//STETP1  EXEC DSNNOTC,VOLSER=IBA966
//STETP1  EXEC DSNNOTC,VOLSER=IBA967
//STETP1  EXEC DSNNOTC,VOLSER=IBA968
//STETP1  EXEC DSNNOTC,VOLSER=IBA969
//STETP1  EXEC DSNNOTC,VOLSER=IBA970
//STETP1  EXEC DSNNOTC,VOLSER=IBA971
//STETP1  EXEC DSNNOTC,VOLSER=IBA972
//STETP1  EXEC DSNNOTC,VOLSER=IBDA09
//STETP1  EXEC DSNNOTC,VOLSER=IBDA1F
//STETP1  EXEC DSNNOTC,VOLSER=IBDA20
//STETP1  EXEC DSNNOTC,VOLSER=IBDA3B
//STETP1  EXEC DSNNOTC,VOLSER=IBDA3C
//STETP1  EXEC DSNNOTC,VOLSER=IBDA3D
//STETP1  EXEC DSNNOTC,VOLSER=IBDA3E
//STETP1  EXEC DSNNOTC,VOLSER=IBDA6A
//STETP1  EXEC DSNNOTC,VOLSER=IBDA6B
//STETP1  EXEC DSNNOTC,VOLSER=IBDA60
//STETP1  EXEC DSNNOTC,VOLSER=IBDA61
//STETP1  EXEC DSNNOTC,VOLSER=IBDA62
//STETP1  EXEC DSNNOTC,VOLSER=IBDA63
//STETP1  EXEC DSNNOTC,VOLSER=IBDA64
//STETP1  EXEC DSNNOTC,VOLSER=IBDA65
//STETP1  EXEC DSNNOTC,VOLSER=IBDA66
//STETP1  EXEC DSNNOTC,VOLSER=IBDA67
//STETP1  EXEC DSNNOTC,VOLSER=IBDA68
//STETP1  EXEC DSNNOTC,VOLSER=IBDA69
//STETP1  EXEC DSNNOTC,VOLSER=IBDB4F
//STETP1  EXEC DSNNOTC,VOLSER=IBDB5C
//STETP1  EXEC DSNNOTC,VOLSER=IBDB5D
//STETP1  EXEC DSNNOTC,VOLSER=IBDB5E
//STETP1  EXEC DSNNOTC,VOLSER=IBDB5F
//STETP1  EXEC DSNNOTC,VOLSER=IBDB6A
//STETP1  EXEC DSNNOTC,VOLSER=IBDB6B
//STETP1  EXEC DSNNOTC,VOLSER=IBDB6C
//STETP1  EXEC DSNNOTC,VOLSER=IBDB6D
//STETP1  EXEC DSNNOTC,VOLSER=IBDB6E
//STETP1  EXEC DSNNOTC,VOLSER=IBDB6F
//STETP1  EXEC DSNNOTC,VOLSER=IBD41E
//STETP1  EXEC DSNNOTC,VOLSER=IBD41F
//STETP1  EXEC DSNNOTC,VOLSER=IBD418
//STETP1  EXEC DSNNOTC,VOLSER=IBD52A
//STETP1  EXEC DSNNOTC,VOLSER=IBD529
//STETP1  EXEC DSNNOTC,VOLSER=IBD535
//STETP1  EXEC DSNNOTC,VOLSER=IBD566
//STETP1  EXEC DSNNOTC,VOLSER=IBD568
//STETP1  EXEC DSNNOTC,VOLSER=IBD62F
//STETP1  EXEC DSNNOTC,VOLSER=IBD63F
//STETP1  EXEC DSNNOTC,VOLSER=IBD64C
//STETP1  EXEC DSNNOTC,VOLSER=IBD64D
//STETP1  EXEC DSNNOTC,VOLSER=IBD64E
//STETP1  EXEC DSNNOTC,VOLSER=IBD64F
//STETP1  EXEC DSNNOTC,VOLSER=IBD645
//STETP1  EXEC DSNNOTC,VOLSER=IBD646
//STETP1  EXEC DSNNOTC,VOLSER=IBD65C
//STETP1  EXEC DSNNOTC,VOLSER=IBD65D
//STETP1  EXEC DSNNOTC,VOLSER=IBD650
//STETP1  EXEC DSNNOTC,VOLSER=IBD66F
//STETP1  EXEC DSNNOTC,VOLSER=IBD670
//STETP1  EXEC DSNNOTC,VOLSER=IBD671
//STETP1  EXEC DSNNOTC,VOLSER=IBD70C
//STETP1  EXEC DSNNOTC,VOLSER=IBD708
//STETP1  EXEC DSNNOTC,VOLSER=IBD709
//STETP1  EXEC DSNNOTC,VOLSER=IBD74A
//STETP1  EXEC DSNNOTC,VOLSER=IBD74B
//STETP1  EXEC DSNNOTC,VOLSER=IBD74C
//STETP1  EXEC DSNNOTC,VOLSER=IBD747
//STETP1  EXEC DSNNOTC,VOLSER=IBD749
//STETP1  EXEC DSNNOTC,VOLSER=IBD75C
//STETP1  EXEC DSNNOTC,VOLSER=IBD750
//STETP1  EXEC DSNNOTC,VOLSER=IBD80A
//STETP1  EXEC DSNNOTC,VOLSER=IBD806
//STETP1  EXEC DSNNOTC,VOLSER=IBD810
//STETP1  EXEC DSNNOTC,VOLSER=IBD84A
//STETP1  EXEC DSNNOTC,VOLSER=IBD84B
//STETP1  EXEC DSNNOTC,VOLSER=IBD84C
//STETP1  EXEC DSNNOTC,VOLSER=IBD844
//STETP1  EXEC DSNNOTC,VOLSER=IBD845
//STETP1  EXEC DSNNOTC,VOLSER=IBD85C
//STETP1  EXEC DSNNOTC,VOLSER=IBD850
//STETP1  EXEC DSNNOTC,VOLSER=IBD86F
//STETP1  EXEC DSNNOTC,VOLSER=IBD870
//STETP1  EXEC DSNNOTC,VOLSER=IBD872
//STETP1  EXEC DSNNOTC,VOLSER=IBD93F
//STETP1  EXEC DSNNOTC,VOLSER=IBD94A
//STETP1  EXEC DSNNOTC,VOLSER=IBD94E
//STETP1  EXEC DSNNOTC,VOLSER=IBD94F
//STETP1  EXEC DSNNOTC,VOLSER=IBD946
//STETP1  EXEC DSNNOTC,VOLSER=IBD947
//STETP1  EXEC DSNNOTC,VOLSER=IBD948
//STETP1  EXEC DSNNOTC,VOLSER=IBD949
//STETP1  EXEC DSNNOTC,VOLSER=IBD95C
//STETP1  EXEC DSNNOTC,VOLSER=IBD96E
//STETP1  EXEC DSNNOTC,VOLSER=IBD96F
//STETP1  EXEC DSNNOTC,VOLSER=IBD970
//STETP1  EXEC DSNNOTC,VOLSER=IBD972
//STETP1  EXEC DSNNOTC,VOLSER=I1AA00
//STETP1  EXEC DSNNOTC,VOLSER=I1AB00
//STETP1  EXEC DSNNOTC,VOLSER=I1AC00
//STETP1  EXEC DSNNOTC,VOLSER=I1AC01
//STETP1  EXEC DSNNOTC,VOLSER=I1AD00
//STETP1  EXEC DSNNOTC,VOLSER=I1AF00
//STETP1  EXEC DSNNOTC,VOLSER=I1A100
//STETP1  EXEC DSNNOTC,VOLSER=I1A200
//STETP1  EXEC DSNNOTC,VOLSER=I1A204
//STETP1  EXEC DSNNOTC,VOLSER=I1A205
//STETP1  EXEC DSNNOTC,VOLSER=I1A300
//STETP1  EXEC DSNNOTC,VOLSER=I1A400
//STETP1  EXEC DSNNOTC,VOLSER=I1A500
//STETP1  EXEC DSNNOTC,VOLSER=I1A505
//STETP1  EXEC DSNNOTC,VOLSER=I1A600
//STETP1  EXEC DSNNOTC,VOLSER=I1A603
//STETP1  EXEC DSNNOTC,VOLSER=I1A700
//STETP1  EXEC DSNNOTC,VOLSER=I1A800
//STETP1  EXEC DSNNOTC,VOLSER=I1A900
//STETP1  EXEC DSNNOTC,VOLSER=I1CA00
//STETP1  EXEC DSNNOTC,VOLSER=I1CB00
//STETP1  EXEC DSNNOTC,VOLSER=I1CC00
//STETP1  EXEC DSNNOTC,VOLSER=I1CD00
//STETP1  EXEC DSNNOTC,VOLSER=I1CF00
//STETP1  EXEC DSNNOTC,VOLSER=I1CF02
//STETP1  EXEC DSNNOTC,VOLSER=I1CF03
//STETP1  EXEC DSNNOTC,VOLSER=I1C100
//STETP1  EXEC DSNNOTC,VOLSER=I1C102
//STETP1  EXEC DSNNOTC,VOLSER=I1C200
//STETP1  EXEC DSNNOTC,VOLSER=I1C300
//STETP1  EXEC DSNNOTC,VOLSER=I1C400
//STETP1  EXEC DSNNOTC,VOLSER=I1C405
//STETP1  EXEC DSNNOTC,VOLSER=I1C500
//STETP1  EXEC DSNNOTC,VOLSER=I1C600
//STETP1  EXEC DSNNOTC,VOLSER=I1C700
//STETP1  EXEC DSNNOTC,VOLSER=I1C800
//STETP1  EXEC DSNNOTC,VOLSER=I1C900
//STETP1  EXEC DSNNOTC,VOLSER=I1DC01
//STETP1  EXEC DSNNOTC,VOLSER=I1DD01
//STETP1  EXEC DSNNOTC,VOLSER=I3AB3B
//STETP1  EXEC DSNNOTC,VOLSER=I3AB3C
//STETP1  EXEC DSNNOTC,VOLSER=I3A206
//STETP1  EXEC DSNNOTC,VOLSER=I3A207
//STETP1  EXEC DSNNOTC,VOLSER=I3A218
//STETP1  EXEC DSNNOTC,VOLSER=I3A306
//STETP1  EXEC DSNNOTC,VOLSER=I3A33D
//STETP1  EXEC DSNNOTC,VOLSER=I3A355
//STETP1  EXEC DSNNOTC,VOLSER=I3A36B
//STETP1  EXEC DSNNOTC,VOLSER=I3A36C
//STETP1  EXEC DSNNOTC,VOLSER=I3A369
//STETP1  EXEC DSNNOTC,VOLSER=I3A406
//STETP1  EXEC DSNNOTC,VOLSER=I3A408
//STETP1  EXEC DSNNOTC,VOLSER=I3A413
//STETP1  EXEC DSNNOTC,VOLSER=I3A455
//STETP1  EXEC DSNNOTC,VOLSER=I3A506
//STETP1  EXEC DSNNOTC,VOLSER=I3A509
//STETP1  EXEC DSNNOTC,VOLSER=I3A513
//STETP1  EXEC DSNNOTC,VOLSER=I3A517
//STETP1  EXEC DSNNOTC,VOLSER=I3A542
//STETP1  EXEC DSNNOTC,VOLSER=I3A553
//STETP1  EXEC DSNNOTC,VOLSER=I3A606
//STETP1  EXEC DSNNOTC,VOLSER=I3A61B
//STETP1  EXEC DSNNOTC,VOLSER=I3A610
//STETP1  EXEC DSNNOTC,VOLSER=I3A615
//STETP1  EXEC DSNNOTC,VOLSER=I3A616
//STETP1  EXEC DSNNOTC,VOLSER=I3A617
//STETP1  EXEC DSNNOTC,VOLSER=I3A642
//STETP1  EXEC DSNNOTC,VOLSER=I3A653
//STETP1  EXEC DSNNOTC,VOLSER=I3A655
//STETP1  EXEC DSNNOTC,VOLSER=I3A661
//STETP1  EXEC DSNNOTC,VOLSER=I3A662
//STETP1  EXEC DSNNOTC,VOLSER=I3A663
//STETP1  EXEC DSNNOTC,VOLSER=I3A706
//STETP1  EXEC DSNNOTC,VOLSER=I3A707
//STETP1  EXEC DSNNOTC,VOLSER=I3A710
//STETP1  EXEC DSNNOTC,VOLSER=I3A712
//STETP1  EXEC DSNNOTC,VOLSER=I3A754
//STETP1  EXEC DSNNOTC,VOLSER=I3A755
//STETP1  EXEC DSNNOTC,VOLSER=I3A80A
//STETP1  EXEC DSNNOTC,VOLSER=I3A80B
//STETP1  EXEC DSNNOTC,VOLSER=I3A80C
//STETP1  EXEC DSNNOTC,VOLSER=I3A806
//STETP1  EXEC DSNNOTC,VOLSER=I3A811
//STETP1  EXEC DSNNOTC,VOLSER=I3A845
//STETP1  EXEC DSNNOTC,VOLSER=I3A854
//STETP1  EXEC DSNNOTC,VOLSER=I3A91D
//STETP1  EXEC DSNNOTC,VOLSER=I3A91E
//STETP1  EXEC DSNNOTC,VOLSER=I3A91F
//STETP1  EXEC DSNNOTC,VOLSER=I3CA0A
//STETP1  EXEC DSNNOTC,VOLSER=I3CA3A
//STETP1  EXEC DSNNOTC,VOLSER=I3CA6C
//STETP1  EXEC DSNNOTC,VOLSER=I3CA6D
//STETP1  EXEC DSNNOTC,VOLSER=I3CA6E
//STETP1  EXEC DSNNOTC,VOLSER=I3CA6F
//STETP1  EXEC DSNNOTC,VOLSER=I3CB47
//STETP1  EXEC DSNNOTC,VOLSER=I3C35F
//STETP1  EXEC DSNNOTC,VOLSER=I3C372
//STETP1  EXEC DSNNOTC,VOLSER=I3C42E
//STETP1  EXEC DSNNOTC,VOLSER=I3C42F
//STETP1  EXEC DSNNOTC,VOLSER=I3C43B
//STETP1  EXEC DSNNOTC,VOLSER=I3C43C
//STETP1  EXEC DSNNOTC,VOLSER=I3C43D
//STETP1  EXEC DSNNOTC,VOLSER=I3C43E
//STETP1  EXEC DSNNOTC,VOLSER=I3C43F
//STETP1  EXEC DSNNOTC,VOLSER=I3C430
//STETP1  EXEC DSNNOTC,VOLSER=I3C44E
//STETP1  EXEC DSNNOTC,VOLSER=I3C44F
//STETP1  EXEC DSNNOTC,VOLSER=I3C449
//STETP1  EXEC DSNNOTC,VOLSER=I3C45A
//STETP1  EXEC DSNNOTC,VOLSER=I3C45B
//STETP1  EXEC DSNNOTC,VOLSER=I3C45C
//STETP1  EXEC DSNNOTC,VOLSER=I3C45D
//STETP1  EXEC DSNNOTC,VOLSER=I3C45E
//STETP1  EXEC DSNNOTC,VOLSER=I3C450
//STETP1  EXEC DSNNOTC,VOLSER=I3C451
//STETP1  EXEC DSNNOTC,VOLSER=I3C452
//STETP1  EXEC DSNNOTC,VOLSER=I3C453
//STETP1  EXEC DSNNOTC,VOLSER=I3C454
//STETP1  EXEC DSNNOTC,VOLSER=I3C460
//STETP1  EXEC DSNNOTC,VOLSER=I3C461
//STETP1  EXEC DSNNOTC,VOLSER=I3C462
//STETP1  EXEC DSNNOTC,VOLSER=I3C463
//STETP1  EXEC DSNNOTC,VOLSER=I3C471
//STETP1  EXEC DSNNOTC,VOLSER=I3C472
//STETP1  EXEC DSNNOTC,VOLSER=I3C53A
//STETP1  EXEC DSNNOTC,VOLSER=I3C53B
//STETP1  EXEC DSNNOTC,VOLSER=I3C53C
//STETP1  EXEC DSNNOTC,VOLSER=I3C53D
//STETP1  EXEC DSNNOTC,VOLSER=I3C539
//STETP1  EXEC DSNNOTC,VOLSER=I3C606
//STETP1  EXEC DSNNOTC,VOLSER=I3C607
//STETP1  EXEC DSNNOTC,VOLSER=I3C608
//STETP1  EXEC DSNNOTC,VOLSER=I3C609
//STETP1  EXEC DSNNOTC,VOLSER=I3C62A
//STETP1  EXEC DSNNOTC,VOLSER=I3C62B
//STETP1  EXEC DSNNOTC,VOLSER=I3C62C
//STETP1  EXEC DSNNOTC,VOLSER=I3C62D
//STETP1  EXEC DSNNOTC,VOLSER=I3C626
//STETP1  EXEC DSNNOTC,VOLSER=I3C627
//STETP1  EXEC DSNNOTC,VOLSER=I3C628
//STETP1  EXEC DSNNOTC,VOLSER=I3C629
//STETP1  EXEC DSNNOTC,VOLSER=I3C633
//STETP1  EXEC DSNNOTC,VOLSER=I3C634
//STETP1  EXEC DSNNOTC,VOLSER=I3C635
//STETP1  EXEC DSNNOTC,VOLSER=I3C636
//STETP1  EXEC DSNNOTC,VOLSER=I3C637
//STETP1  EXEC DSNNOTC,VOLSER=I3C672
//STETP1  EXEC DSNNOTC,VOLSER=I3C740
//STETP1  EXEC DSNNOTC,VOLSER=I3C741
//STETP1  EXEC DSNNOTC,VOLSER=I3C748
//STETP1  EXEC DSNNOTC,VOLSER=I3C86E
//STETP1  EXEC DSNNOTC,VOLSER=I3C871
//STETP1  EXEC DSNNOTC,VOLSER=I3C92A
//STETP1  EXEC DSNNOTC,VOLSER=I3C92B
//STETP1  EXEC DSNNOTC,VOLSER=I3C92C
//STETP1  EXEC DSNNOTC,VOLSER=I3C925
//STETP1  EXEC DSNNOTC,VOLSER=I3C926
//STETP1  EXEC DSNNOTC,VOLSER=I3C927
//STETP1  EXEC DSNNOTC,VOLSER=I3C928
//STETP1  EXEC DSNNOTC,VOLSER=I3C929
//STETP1  EXEC DSNNOTC,VOLSER=I3C945
//STETP1  EXEC DSNNOTC,VOLSER=I3C971
//STETP1  EXEC DSNNOTC,VOLSER=I3DD02
//STETP1  EXEC DSNNOTC,VOLSER=I3D809
//STETP1  EXEC DSNNOTC,VOLSER=I7A739
//STETP1  EXEC DSNNOTC,VOLSER=I7A75C
//STETP1  EXEC DSNNOTC,VOLSER=I7A75D
//STETP1  EXEC DSNNOTC,VOLSER=I7A75E
//STETP1  EXEC DSNNOTC,VOLSER=I7A75F
//STETP1  EXEC DSNNOTC,VOLSER=I7A839
//STETP1  EXEC DSNNOTC,VOLSER=I7CD20
//STETP1  EXEC DSNNOTC,VOLSER=I7CD21
//STETP1  EXEC DSNNOTC,VOLSER=I7313A
//STETP1  EXEC DSNNOTC,VOLSER=I7313B
//STETP1  EXEC DSNNOTC,VOLSER=I7313C
//STETP1  EXEC DSNNOTC,VOLSER=I7313D
//STETP1  EXEC DSNNOTC,VOLSER=I7313E
//STETP1  EXEC DSNNOTC,VOLSER=I7313F
//STETP1  EXEC DSNNOTC,VOLSER=I73138
//STETP1  EXEC DSNNOTC,VOLSER=I73139
//STETP1  EXEC DSNNOTC,VOLSER=I7314A
//STETP1  EXEC DSNNOTC,VOLSER=I7314B
//STETP1  EXEC DSNNOTC,VOLSER=I7314C
//STETP1  EXEC DSNNOTC,VOLSER=I7314D
//STETP1  EXEC DSNNOTC,VOLSER=I7314E
//STETP1  EXEC DSNNOTC,VOLSER=I7314F
//STETP1  EXEC DSNNOTC,VOLSER=I73140
//STETP1  EXEC DSNNOTC,VOLSER=I73141
//STETP1  EXEC DSNNOTC,VOLSER=I73142
//STETP1  EXEC DSNNOTC,VOLSER=I73143
//STETP1  EXEC DSNNOTC,VOLSER=I73144
//STETP1  EXEC DSNNOTC,VOLSER=I73145
//STETP1  EXEC DSNNOTC,VOLSER=I73146
//STETP1  EXEC DSNNOTC,VOLSER=I73147
//STETP1  EXEC DSNNOTC,VOLSER=I73148
//STETP1  EXEC DSNNOTC,VOLSER=I73149
//STETP1  EXEC DSNNOTC,VOLSER=I7315A
//STETP1  EXEC DSNNOTC,VOLSER=I7315B
//STETP1  EXEC DSNNOTC,VOLSER=I7315C
//STETP1  EXEC DSNNOTC,VOLSER=I7315D
//STETP1  EXEC DSNNOTC,VOLSER=I7315E
//STETP1  EXEC DSNNOTC,VOLSER=I7315F
//STETP1  EXEC DSNNOTC,VOLSER=I73150
//STETP1  EXEC DSNNOTC,VOLSER=I73151
//STETP1  EXEC DSNNOTC,VOLSER=I73152
//STETP1  EXEC DSNNOTC,VOLSER=I73153
//STETP1  EXEC DSNNOTC,VOLSER=I73154
//STETP1  EXEC DSNNOTC,VOLSER=I73155
//STETP1  EXEC DSNNOTC,VOLSER=I73156
//STETP1  EXEC DSNNOTC,VOLSER=I73157
//STETP1  EXEC DSNNOTC,VOLSER=I73158
//STETP1  EXEC DSNNOTC,VOLSER=I73159
//STETP1  EXEC DSNNOTC,VOLSER=I9AB75
//STETP1  EXEC DSNNOTC,VOLSER=I9CA70
//STETP1  EXEC DSNNOTC,VOLSER=I9CA8A
//STETP1  EXEC DSNNOTC,VOLSER=I9CA84
//STETP1  EXEC DSNNOTC,VOLSER=I9CA85
//STETP1  EXEC DSNNOTC,VOLSER=I9CA92
//STETP1  EXEC DSNNOTC,VOLSER=I9CA93
//STETP1  EXEC DSNNOTC,VOLSER=I9CA94
//STETP1  EXEC DSNNOTC,VOLSER=I9CA95
//STETP1  EXEC DSNNOTC,VOLSER=I9CA96
//STETP1  EXEC DSNNOTC,VOLSER=I9CA97
//STETP1  EXEC DSNNOTC,VOLSER=I9CA98
//STETP1  EXEC DSNNOTC,VOLSER=I9CB71
//STETP1  EXEC DSNNOTC,VOLSER=I9CB72
//STETP1  EXEC DSNNOTC,VOLSER=I9CB73
//STETP1  EXEC DSNNOTC,VOLSER=I9CB74
//STETP1  EXEC DSNNOTC,VOLSER=I9CB75
//STETP1  EXEC DSNNOTC,VOLSER=I9CB76
//STETP1  EXEC DSNNOTC,VOLSER=I9CB78
//STETP1  EXEC DSNNOTC,VOLSER=I9CB8A
//STETP1  EXEC DSNNOTC,VOLSER=I9CB8B
//STETP1  EXEC DSNNOTC,VOLSER=I9CB8C
//STETP1  EXEC DSNNOTC,VOLSER=I9CB8D
//STETP1  EXEC DSNNOTC,VOLSER=I9CB8E
//STETP1  EXEC DSNNOTC,VOLSER=I9CB8F
//STETP1  EXEC DSNNOTC,VOLSER=I9CB80
//STETP1  EXEC DSNNOTC,VOLSER=I9CB81
//STETP1  EXEC DSNNOTC,VOLSER=I9CB82
//STETP1  EXEC DSNNOTC,VOLSER=I9CB83
//STETP1  EXEC DSNNOTC,VOLSER=I9CB84
//STETP1  EXEC DSNNOTC,VOLSER=I9CB85
//STETP1  EXEC DSNNOTC,VOLSER=I9CB86
//STETP1  EXEC DSNNOTC,VOLSER=I9CB87
//STETP1  EXEC DSNNOTC,VOLSER=I9CB88
//STETP1  EXEC DSNNOTC,VOLSER=I9CB89
//STETP1  EXEC DSNNOTC,VOLSER=I9CB90
//STETP1  EXEC DSNNOTC,VOLSER=I9CB91
//STETP1  EXEC DSNNOTC,VOLSER=I9CB92
//STETP1  EXEC DSNNOTC,VOLSER=I9CB93
//STETP1  EXEC DSNNOTC,VOLSER=I9CB94
//STETP1  EXEC DSNNOTC,VOLSER=I9CB95
//STETP1  EXEC DSNNOTC,VOLSER=I9C35D
//STETP1  EXEC DSNNOTC,VOLSER=I9C43A
//STETP1  EXEC DSNNOTC,VOLSER=I9C47F
//STETP1  EXEC DSNNOTC,VOLSER=I9C58B
//STETP1  EXEC DSNNOTC,VOLSER=I9C58C
//STETP1  EXEC DSNNOTC,VOLSER=I9C58D
//STETP1  EXEC DSNNOTC,VOLSER=I9C597
//STETP1  EXEC DSNNOTC,VOLSER=I9C683
//STETP1  EXEC DSNNOTC,VOLSER=I9C684
//STETP1  EXEC DSNNOTC,VOLSER=I9C693
//STETP1  EXEC DSNNOTC,VOLSER=I9C79C
//STETP1  EXEC DSNNOTC,VOLSER=I9C87E
//STETP1  EXEC DSNNOTC,VOLSER=I9C87F
//STETP1  EXEC DSNNOTC,VOLSER=I9C878
//STETP1  EXEC DSNNOTC,VOLSER=I9C880
//STETP1  EXEC DSNNOTC,VOLSER=I9C89A
//STETP1  EXEC DSNNOTC,VOLSER=I9C89B
//STETP1  EXEC DSNNOTC,VOLSER=I9C893
//STETP1  EXEC DSNNOTC,VOLSER=I9C895
//STETP1  EXEC DSNNOTC,VOLSER=I9C976
//STETP1  EXEC DSNNOTC,VOLSER=I9C98C
//STETP1  EXEC DSNNOTC,VOLSER=I9C98F
//STETP1  EXEC DSNNOTC,VOLSER=I9C99B
//STETP1  EXEC DSNNOTC,VOLSER=I9C99D
//STETP1  EXEC DSNNOTC,VOLSER=I9C991
//STETP1  EXEC DSNNOTC,VOLSER=I9DD03
//STETP1  EXEC DSNNOTC,VOLSER=LOGQ0A
//STETP1  EXEC DSNNOTC,VOLSER=LOGQ0B
//STETP1  EXEC DSNNOTC,VOLSER=LOGR0A
//STETP1  EXEC DSNNOTC,VOLSER=LOGR0B
//STETP1  EXEC DSNNOTC,VOLSER=LOGR01
//STETP1  EXEC DSNNOTC,VOLSER=LOGS0A
//STETP1  EXEC DSNNOTC,VOLSER=LOGS0B
//STETP1  EXEC DSNNOTC,VOLSER=LOG5S0
//STETP1  EXEC DSNNOTC,VOLSER=MANP01
//STETP1  EXEC DSNNOTC,VOLSER=MANP02
//STETP1  EXEC DSNNOTC,VOLSER=MANP03
//STETP1  EXEC DSNNOTC,VOLSER=MANP04
//STETP1  EXEC DSNNOTC,VOLSER=MANQ01
//STETP1  EXEC DSNNOTC,VOLSER=MANQ02
//STETP1  EXEC DSNNOTC,VOLSER=MANQ03
//STETP1  EXEC DSNNOTC,VOLSER=MANR01
//STETP1  EXEC DSNNOTC,VOLSER=MANR02
//STETP1  EXEC DSNNOTC,VOLSER=MANR03
//STETP1  EXEC DSNNOTC,VOLSER=MANS01
//STETP1  EXEC DSNNOTC,VOLSER=MANS02
//STETP1  EXEC DSNNOTC,VOLSER=MCA23P
//STETP1  EXEC DSNNOTC,VOLSER=MCA23Q
//STETP1  EXEC DSNNOTC,VOLSER=MCA23R
//STETP1  EXEC DSNNOTC,VOLSER=MCA23S
//STETP1  EXEC DSNNOTC,VOLSER=MCA24P
//STETP1  EXEC DSNNOTC,VOLSER=MCA24Q
//STETP1  EXEC DSNNOTC,VOLSER=MCA24R
//STETP1  EXEC DSNNOTC,VOLSER=MCA24S
//STETP1  EXEC DSNNOTC,VOLSER=MCA25P
//STETP1  EXEC DSNNOTC,VOLSER=MCA25Q
//STETP1  EXEC DSNNOTC,VOLSER=MCA25R
//STETP1  EXEC DSNNOTC,VOLSER=MCA25S
//STETP1  EXEC DSNNOTC,VOLSER=METH01
//STETP1  EXEC DSNNOTC,VOLSER=METH02
//STETP1  EXEC DSNNOTC,VOLSER=METH03
//STETP1  EXEC DSNNOTC,VOLSER=METH04
//STETP1  EXEC DSNNOTC,VOLSER=METH05
//STETP1  EXEC DSNNOTC,VOLSER=METH06
//STETP1  EXEC DSNNOTC,VOLSER=METH07
//STETP1  EXEC DSNNOTC,VOLSER=METH08
//STETP1  EXEC DSNNOTC,VOLSER=METH09
//STETP1  EXEC DSNNOTC,VOLSER=METH10
//STETP1  EXEC DSNNOTC,VOLSER=METH11
//STETP1  EXEC DSNNOTC,VOLSER=METH12
//STETP1  EXEC DSNNOTC,VOLSER=METH13
//STETP1  EXEC DSNNOTC,VOLSER=METH14
//STETP1  EXEC DSNNOTC,VOLSER=METH15
//STETP1  EXEC DSNNOTC,VOLSER=METH16
//STETP1  EXEC DSNNOTC,VOLSER=METH17
//STETP1  EXEC DSNNOTC,VOLSER=METH18
//STETP1  EXEC DSNNOTC,VOLSER=METH19
//STETP1  EXEC DSNNOTC,VOLSER=METH20
//STETP1  EXEC DSNNOTC,VOLSER=METH21
//STETP1  EXEC DSNNOTC,VOLSER=METH22
//STETP1  EXEC DSNNOTC,VOLSER=METH23
//STETP1  EXEC DSNNOTC,VOLSER=METH24
//STETP1  EXEC DSNNOTC,VOLSER=METH25
//STETP1  EXEC DSNNOTC,VOLSER=METH26
//STETP1  EXEC DSNNOTC,VOLSER=METH27
//STETP1  EXEC DSNNOTC,VOLSER=METH28
//STETP1  EXEC DSNNOTC,VOLSER=METH29
//STETP1  EXEC DSNNOTC,VOLSER=METH30
//STETP1  EXEC DSNNOTC,VOLSER=METH31
//STETP1  EXEC DSNNOTC,VOLSER=METH40
//STETP1  EXEC DSNNOTC,VOLSER=METH41
//STETP1  EXEC DSNNOTC,VOLSER=METH42
//STETP1  EXEC DSNNOTC,VOLSER=METH43
//STETP1  EXEC DSNNOTC,VOLSER=METH44
//STETP1  EXEC DSNNOTC,VOLSER=METH45
//STETP1  EXEC DSNNOTC,VOLSER=METH46
//STETP1  EXEC DSNNOTC,VOLSER=METH47
//STETP1  EXEC DSNNOTC,VOLSER=METH48
//STETP1  EXEC DSNNOTC,VOLSER=METH49
//STETP1  EXEC DSNNOTC,VOLSER=METH50
//STETP1  EXEC DSNNOTC,VOLSER=METH51
//STETP1  EXEC DSNNOTC,VOLSER=METH52
//STETP1  EXEC DSNNOTC,VOLSER=METH53
//STETP1  EXEC DSNNOTC,VOLSER=METH54
//STETP1  EXEC DSNNOTC,VOLSER=MVS100
//STETP1  EXEC DSNNOTC,VOLSER=MVS101
//STETP1  EXEC DSNNOTC,VOLSER=MVS102
//STETP1  EXEC DSNNOTC,VOLSER=MVS103
//STETP1  EXEC DSNNOTC,VOLSER=MVS105
//STETP1  EXEC DSNNOTC,VOLSER=MVS107
//STETP1  EXEC DSNNOTC,VOLSER=OMBRPA
//STETP1  EXEC DSNNOTC,VOLSER=OMBRPB
//STETP1  EXEC DSNNOTC,VOLSER=OMBRPC
//STETP1  EXEC DSNNOTC,VOLSER=OMBRQA
//STETP1  EXEC DSNNOTC,VOLSER=OMBRQB
//STETP1  EXEC DSNNOTC,VOLSER=OMBRQC
//STETP1  EXEC DSNNOTC,VOLSER=OMBRRA
//STETP1  EXEC DSNNOTC,VOLSER=OMBRRB
//STETP1  EXEC DSNNOTC,VOLSER=OMBRRC
//STETP1  EXEC DSNNOTC,VOLSER=OMBRSA
//STETP1  EXEC DSNNOTC,VOLSER=OMBRSB
//STETP1  EXEC DSNNOTC,VOLSER=OMBRSC
//STETP1  EXEC DSNNOTC,VOLSER=OMVR0A
//STETP1  EXEC DSNNOTC,VOLSER=OMVR0B
//STETP1  EXEC DSNNOTC,VOLSER=OMVR0C
//STETP1  EXEC DSNNOTC,VOLSER=OMVSP0
//STETP1  EXEC DSNNOTC,VOLSER=OMVSQ0
//STETP1  EXEC DSNNOTC,VOLSER=OMVSR0
//STETP1  EXEC DSNNOTC,VOLSER=OMV201
//STETP1  EXEC DSNNOTC,VOLSER=OMV204
//STETP1  EXEC DSNNOTC,VOLSER=OMV205
//STETP1  EXEC DSNNOTC,VOLSER=OMV238
//STETP1  EXEC DSNNOTC,VOLSER=OSBP2A
//STETP1  EXEC DSNNOTC,VOLSER=OSBRPA
//STETP1  EXEC DSNNOTC,VOLSER=OSBRPB
//STETP1  EXEC DSNNOTC,VOLSER=OSBRPC
//STETP1  EXEC DSNNOTC,VOLSER=OSBRQA
//STETP1  EXEC DSNNOTC,VOLSER=OSBRQB
//STETP1  EXEC DSNNOTC,VOLSER=OSBRQC
//STETP1  EXEC DSNNOTC,VOLSER=OSBRRA
//STETP1  EXEC DSNNOTC,VOLSER=OSBRRB
//STETP1  EXEC DSNNOTC,VOLSER=OSBRRC
//STETP1  EXEC DSNNOTC,VOLSER=OSBRSA
//STETP1  EXEC DSNNOTC,VOLSER=OSBRSB
//STETP1  EXEC DSNNOTC,VOLSER=OSBRSC
//STETP1  EXEC DSNNOTC,VOLSER=OSILSI
//STETP1  EXEC DSNNOTC,VOLSER=OSSOSB
//STETP1  EXEC DSNNOTC,VOLSER=PAGEP4
//STETP1  EXEC DSNNOTC,VOLSER=PAGEQ4
//STETP1  EXEC DSNNOTC,VOLSER=PAGER4
//STETP1  EXEC DSNNOTC,VOLSER=PAGP00
//STETP1  EXEC DSNNOTC,VOLSER=PAGP01
//STETP1  EXEC DSNNOTC,VOLSER=PAGP02
//STETP1  EXEC DSNNOTC,VOLSER=PAGP03
//STETP1  EXEC DSNNOTC,VOLSER=PAGP04
//STETP1  EXEC DSNNOTC,VOLSER=PAGP05
//STETP1  EXEC DSNNOTC,VOLSER=PAGQ00
//STETP1  EXEC DSNNOTC,VOLSER=PAGQ01
//STETP1  EXEC DSNNOTC,VOLSER=PAGQ02
//STETP1  EXEC DSNNOTC,VOLSER=PAGQ03
//STETP1  EXEC DSNNOTC,VOLSER=PAGQ04
//STETP1  EXEC DSNNOTC,VOLSER=PAGR00
//STETP1  EXEC DSNNOTC,VOLSER=PAGR01
//STETP1  EXEC DSNNOTC,VOLSER=PAGR02
//STETP1  EXEC DSNNOTC,VOLSER=PAGR03
//STETP1  EXEC DSNNOTC,VOLSER=PAGR04
//STETP1  EXEC DSNNOTC,VOLSER=PAGR05
//STETP1  EXEC DSNNOTC,VOLSER=PAGSCO
//STETP1  EXEC DSNNOTC,VOLSER=PAGSPL
//STETP1  EXEC DSNNOTC,VOLSER=PAGS00
//STETP1  EXEC DSNNOTC,VOLSER=PAGS01
//STETP1  EXEC DSNNOTC,VOLSER=PAGS02
//STETP1  EXEC DSNNOTC,VOLSER=PAGS03
//STETP1  EXEC DSNNOTC,VOLSER=PPRCPM
//STETP1  EXEC DSNNOTC,VOLSER=PRINTS
//STETP1  EXEC DSNNOTC,VOLSER=QALF04
//STETP1  EXEC DSNNOTC,VOLSER=QALF05
//STETP1  EXEC DSNNOTC,VOLSER=QALF06
//STETP1  EXEC DSNNOTC,VOLSER=QALF07
//STETP1  EXEC DSNNOTC,VOLSER=QALF08
//STETP1  EXEC DSNNOTC,VOLSER=QALF09
//STETP1  EXEC DSNNOTC,VOLSER=QALF10
//STETP1  EXEC DSNNOTC,VOLSER=QALF11
//STETP1  EXEC DSNNOTC,VOLSER=QALF12
//STETP1  EXEC DSNNOTC,VOLSER=QALF13
//STETP1  EXEC DSNNOTC,VOLSER=QALF14
//STETP1  EXEC DSNNOTC,VOLSER=QALF15
//STETP1  EXEC DSNNOTC,VOLSER=QALF16
//STETP1  EXEC DSNNOTC,VOLSER=QAL1A0
//STETP1  EXEC DSNNOTC,VOLSER=QAL1A1
//STETP1  EXEC DSNNOTC,VOLSER=QAL1A2
//STETP1  EXEC DSNNOTC,VOLSER=QAL1A3
//STETP1  EXEC DSNNOTC,VOLSER=QAL1A4
//STETP1  EXEC DSNNOTC,VOLSER=QAL1A5
//STETP1  EXEC DSNNOTC,VOLSER=QAL1A6
//STETP1  EXEC DSNNOTC,VOLSER=QAL1A7
//STETP1  EXEC DSNNOTC,VOLSER=QAL1A8
//STETP1  EXEC DSNNOTC,VOLSER=QAL1A9
//STETP1  EXEC DSNNOTC,VOLSER=QAL1B0
//STETP1  EXEC DSNNOTC,VOLSER=QAL1B1
//STETP1  EXEC DSNNOTC,VOLSER=QAL1B2
//STETP1  EXEC DSNNOTC,VOLSER=QAL1B3
//STETP1  EXEC DSNNOTC,VOLSER=QAL1B4
//STETP1  EXEC DSNNOTC,VOLSER=QAL1B5
//STETP1  EXEC DSNNOTC,VOLSER=QAL1B6
//STETP1  EXEC DSNNOTC,VOLSER=QAL1B7
//STETP1  EXEC DSNNOTC,VOLSER=QAL1B8
//STETP1  EXEC DSNNOTC,VOLSER=QAL1B9
//STETP1  EXEC DSNNOTC,VOLSER=QAL1C0
//STETP1  EXEC DSNNOTC,VOLSER=QAL1C1
//STETP1  EXEC DSNNOTC,VOLSER=QAL1C2
//STETP1  EXEC DSNNOTC,VOLSER=QAL1C3
//STETP1  EXEC DSNNOTC,VOLSER=QAL1C4
//STETP1  EXEC DSNNOTC,VOLSER=QAL1C5
//STETP1  EXEC DSNNOTC,VOLSER=QAL1C6
//STETP1  EXEC DSNNOTC,VOLSER=QAL1C7
//STETP1  EXEC DSNNOTC,VOLSER=QAL1C8
//STETP1  EXEC DSNNOTC,VOLSER=QAL1C9
//STETP1  EXEC DSNNOTC,VOLSER=QAL10A
//STETP1  EXEC DSNNOTC,VOLSER=QAL10B
//STETP1  EXEC DSNNOTC,VOLSER=QAL10C
//STETP1  EXEC DSNNOTC,VOLSER=QAL10D
//STETP1  EXEC DSNNOTC,VOLSER=QAL10E
//STETP1  EXEC DSNNOTC,VOLSER=QAL10F
//STETP1  EXEC DSNNOTC,VOLSER=QAL10G
//STETP1  EXEC DSNNOTC,VOLSER=QAL10H
//STETP1  EXEC DSNNOTC,VOLSER=QAL10I
//STETP1  EXEC DSNNOTC,VOLSER=QAL10J
//STETP1  EXEC DSNNOTC,VOLSER=QAL10K
//STETP1  EXEC DSNNOTC,VOLSER=QAL10L
//STETP1  EXEC DSNNOTC,VOLSER=QAL10M
//STETP1  EXEC DSNNOTC,VOLSER=QAL10N
//STETP1  EXEC DSNNOTC,VOLSER=QAL10O
//STETP1  EXEC DSNNOTC,VOLSER=QAL10P
//STETP1  EXEC DSNNOTC,VOLSER=QAL10Q
//STETP1  EXEC DSNNOTC,VOLSER=QAL10R
//STETP1  EXEC DSNNOTC,VOLSER=QAL10S
//STETP1  EXEC DSNNOTC,VOLSER=QAL10T
//STETP1  EXEC DSNNOTC,VOLSER=QAL10U
//STETP1  EXEC DSNNOTC,VOLSER=QAL10V
//STETP1  EXEC DSNNOTC,VOLSER=QAL10W
//STETP1  EXEC DSNNOTC,VOLSER=QAL10X
//STETP1  EXEC DSNNOTC,VOLSER=QAL10Y
//STETP1  EXEC DSNNOTC,VOLSER=QAL10Z
//STETP1  EXEC DSNNOTC,VOLSER=QAL100
//STETP1  EXEC DSNNOTC,VOLSER=QAL101
//STETP1  EXEC DSNNOTC,VOLSER=QAL102
//STETP1  EXEC DSNNOTC,VOLSER=QAL103
//STETP1  EXEC DSNNOTC,VOLSER=QAL104
//STETP1  EXEC DSNNOTC,VOLSER=QAL105
//STETP1  EXEC DSNNOTC,VOLSER=QAL106
//STETP1  EXEC DSNNOTC,VOLSER=QAL107
//STETP1  EXEC DSNNOTC,VOLSER=QAL108
//STETP1  EXEC DSNNOTC,VOLSER=QAL109
//STETP1  EXEC DSNNOTC,VOLSER=QAL11A
//STETP1  EXEC DSNNOTC,VOLSER=QAL11B
//STETP1  EXEC DSNNOTC,VOLSER=QAL11C
//STETP1  EXEC DSNNOTC,VOLSER=QAL11D
//STETP1  EXEC DSNNOTC,VOLSER=QAL11E
//STETP1  EXEC DSNNOTC,VOLSER=QAL11F
//STETP1  EXEC DSNNOTC,VOLSER=QAL11G
//STETP1  EXEC DSNNOTC,VOLSER=QAL11H
//STETP1  EXEC DSNNOTC,VOLSER=QAL11I
//STETP1  EXEC DSNNOTC,VOLSER=QAL11J
//STETP1  EXEC DSNNOTC,VOLSER=QAL11K
//STETP1  EXEC DSNNOTC,VOLSER=QAL11L
//STETP1  EXEC DSNNOTC,VOLSER=QAL11M
//STETP1  EXEC DSNNOTC,VOLSER=QAL11N
//STETP1  EXEC DSNNOTC,VOLSER=QAL11O
//STETP1  EXEC DSNNOTC,VOLSER=QAL11P
//STETP1  EXEC DSNNOTC,VOLSER=QAL11Q
//STETP1  EXEC DSNNOTC,VOLSER=QAL11R
//STETP1  EXEC DSNNOTC,VOLSER=QAL11S
//STETP1  EXEC DSNNOTC,VOLSER=QAL11T
//STETP1  EXEC DSNNOTC,VOLSER=QAL11U
//STETP1  EXEC DSNNOTC,VOLSER=QAL11V
//STETP1  EXEC DSNNOTC,VOLSER=QAL11W
//STETP1  EXEC DSNNOTC,VOLSER=QAL11X
//STETP1  EXEC DSNNOTC,VOLSER=QAL11Y
//STETP1  EXEC DSNNOTC,VOLSER=QAL11Z
//STETP1  EXEC DSNNOTC,VOLSER=QAL110
//STETP1  EXEC DSNNOTC,VOLSER=QAL111
//STETP1  EXEC DSNNOTC,VOLSER=QAL112
//STETP1  EXEC DSNNOTC,VOLSER=QAL113
//STETP1  EXEC DSNNOTC,VOLSER=QAL114
//STETP1  EXEC DSNNOTC,VOLSER=QAL115
//STETP1  EXEC DSNNOTC,VOLSER=QAL116
//STETP1  EXEC DSNNOTC,VOLSER=QAL117
//STETP1  EXEC DSNNOTC,VOLSER=QAL118
//STETP1  EXEC DSNNOTC,VOLSER=QAL119
//STETP1  EXEC DSNNOTC,VOLSER=QAL12A
//STETP1  EXEC DSNNOTC,VOLSER=QAL12B
//STETP1  EXEC DSNNOTC,VOLSER=QAL12C
//STETP1  EXEC DSNNOTC,VOLSER=QAL12D
//STETP1  EXEC DSNNOTC,VOLSER=QAL12E
//STETP1  EXEC DSNNOTC,VOLSER=QAL12F
//STETP1  EXEC DSNNOTC,VOLSER=QAL12G
//STETP1  EXEC DSNNOTC,VOLSER=QAL12H
//STETP1  EXEC DSNNOTC,VOLSER=QAL12I
//STETP1  EXEC DSNNOTC,VOLSER=QAL12J
//STETP1  EXEC DSNNOTC,VOLSER=QAL12K
//STETP1  EXEC DSNNOTC,VOLSER=QAL12L
//STETP1  EXEC DSNNOTC,VOLSER=QAL12M
//STETP1  EXEC DSNNOTC,VOLSER=QAL12N
//STETP1  EXEC DSNNOTC,VOLSER=QAL12R
//STETP1  EXEC DSNNOTC,VOLSER=QAL12S
//STETP1  EXEC DSNNOTC,VOLSER=QAL12T
//STETP1  EXEC DSNNOTC,VOLSER=QAL12U
//STETP1  EXEC DSNNOTC,VOLSER=QAL12V
//STETP1  EXEC DSNNOTC,VOLSER=QAL12W
//STETP1  EXEC DSNNOTC,VOLSER=QAL12X
//STETP1  EXEC DSNNOTC,VOLSER=QAL12Y
//STETP1  EXEC DSNNOTC,VOLSER=QAL12Z
//STETP1  EXEC DSNNOTC,VOLSER=QAL120
//STETP1  EXEC DSNNOTC,VOLSER=QAL121
//STETP1  EXEC DSNNOTC,VOLSER=QAL122
//STETP1  EXEC DSNNOTC,VOLSER=QAL123
//STETP1  EXEC DSNNOTC,VOLSER=QAL124
//STETP1  EXEC DSNNOTC,VOLSER=QAL125
//STETP1  EXEC DSNNOTC,VOLSER=QAL126
//STETP1  EXEC DSNNOTC,VOLSER=QAL127
//STETP1  EXEC DSNNOTC,VOLSER=QAL128
//STETP1  EXEC DSNNOTC,VOLSER=QAL129
//STETP1  EXEC DSNNOTC,VOLSER=QAL13A
//STETP1  EXEC DSNNOTC,VOLSER=QAL13B
//STETP1  EXEC DSNNOTC,VOLSER=QAL13C
//STETP1  EXEC DSNNOTC,VOLSER=QAL13D
//STETP1  EXEC DSNNOTC,VOLSER=QAL13E
//STETP1  EXEC DSNNOTC,VOLSER=QAL13F
//STETP1  EXEC DSNNOTC,VOLSER=QAL13G
//STETP1  EXEC DSNNOTC,VOLSER=QAL13H
//STETP1  EXEC DSNNOTC,VOLSER=QAL13K
//STETP1  EXEC DSNNOTC,VOLSER=QAL13L
//STETP1  EXEC DSNNOTC,VOLSER=QAL13M
//STETP1  EXEC DSNNOTC,VOLSER=QAL13N
//STETP1  EXEC DSNNOTC,VOLSER=QAL13O
//STETP1  EXEC DSNNOTC,VOLSER=QAL13P
//STETP1  EXEC DSNNOTC,VOLSER=QAL13Q
//STETP1  EXEC DSNNOTC,VOLSER=QAL13R
//STETP1  EXEC DSNNOTC,VOLSER=QAL13S
//STETP1  EXEC DSNNOTC,VOLSER=QAL13T
//STETP1  EXEC DSNNOTC,VOLSER=QAL13U
//STETP1  EXEC DSNNOTC,VOLSER=QAL13V
//STETP1  EXEC DSNNOTC,VOLSER=QAL13W
//STETP1  EXEC DSNNOTC,VOLSER=QAL13X
//STETP1  EXEC DSNNOTC,VOLSER=QAL13Y
//STETP1  EXEC DSNNOTC,VOLSER=QAL130
//STETP1  EXEC DSNNOTC,VOLSER=QAL131
//STETP1  EXEC DSNNOTC,VOLSER=QAL132
//STETP1  EXEC DSNNOTC,VOLSER=QAL133
//STETP1  EXEC DSNNOTC,VOLSER=QAL134
//STETP1  EXEC DSNNOTC,VOLSER=QAL135
//STETP1  EXEC DSNNOTC,VOLSER=QAL136
//STETP1  EXEC DSNNOTC,VOLSER=QAL137
//STETP1  EXEC DSNNOTC,VOLSER=QAL138
//STETP1  EXEC DSNNOTC,VOLSER=QAL139
//STETP1  EXEC DSNNOTC,VOLSER=QAL14A
//STETP1  EXEC DSNNOTC,VOLSER=QAL14B
//STETP1  EXEC DSNNOTC,VOLSER=QAL14C
//STETP1  EXEC DSNNOTC,VOLSER=QAL14D
//STETP1  EXEC DSNNOTC,VOLSER=QAL14E
//STETP1  EXEC DSNNOTC,VOLSER=QAL14F
//STETP1  EXEC DSNNOTC,VOLSER=QAL14G
//STETP1  EXEC DSNNOTC,VOLSER=QAL14H
//STETP1  EXEC DSNNOTC,VOLSER=QAL14I
//STETP1  EXEC DSNNOTC,VOLSER=QAL14J
//STETP1  EXEC DSNNOTC,VOLSER=QAL14K
//STETP1  EXEC DSNNOTC,VOLSER=QAL14L
//STETP1  EXEC DSNNOTC,VOLSER=QAL140
//STETP1  EXEC DSNNOTC,VOLSER=QAL141
//STETP1  EXEC DSNNOTC,VOLSER=QAL142
//STETP1  EXEC DSNNOTC,VOLSER=QAL143
//STETP1  EXEC DSNNOTC,VOLSER=QAL144
//STETP1  EXEC DSNNOTC,VOLSER=QAL145
//STETP1  EXEC DSNNOTC,VOLSER=QAL146
//STETP1  EXEC DSNNOTC,VOLSER=QAL147
//STETP1  EXEC DSNNOTC,VOLSER=QAL148
//STETP1  EXEC DSNNOTC,VOLSER=QAL149
//STETP1  EXEC DSNNOTC,VOLSER=QAL15A
//STETP1  EXEC DSNNOTC,VOLSER=QAL15B
//STETP1  EXEC DSNNOTC,VOLSER=QAL15C
//STETP1  EXEC DSNNOTC,VOLSER=QAL15D
//STETP1  EXEC DSNNOTC,VOLSER=QAL15E
//STETP1  EXEC DSNNOTC,VOLSER=QAL15F
//STETP1  EXEC DSNNOTC,VOLSER=QAL15G
//STETP1  EXEC DSNNOTC,VOLSER=QAL15H
//STETP1  EXEC DSNNOTC,VOLSER=QAL15I
//STETP1  EXEC DSNNOTC,VOLSER=QAL150
//STETP1  EXEC DSNNOTC,VOLSER=QAL151
//STETP1  EXEC DSNNOTC,VOLSER=QAL152
//STETP1  EXEC DSNNOTC,VOLSER=QAL153
//STETP1  EXEC DSNNOTC,VOLSER=QAL154
//STETP1  EXEC DSNNOTC,VOLSER=QAL155
//STETP1  EXEC DSNNOTC,VOLSER=QAL156
//STETP1  EXEC DSNNOTC,VOLSER=QAL157
//STETP1  EXEC DSNNOTC,VOLSER=QAL158
//STETP1  EXEC DSNNOTC,VOLSER=QAL159
//STETP1  EXEC DSNNOTC,VOLSER=QAL16A
//STETP1  EXEC DSNNOTC,VOLSER=QAL16B
//STETP1  EXEC DSNNOTC,VOLSER=QAL16C
//STETP1  EXEC DSNNOTC,VOLSER=QAL16D
//STETP1  EXEC DSNNOTC,VOLSER=QAL16E
//STETP1  EXEC DSNNOTC,VOLSER=QAL16F
//STETP1  EXEC DSNNOTC,VOLSER=QAL160
//STETP1  EXEC DSNNOTC,VOLSER=QAL161
//STETP1  EXEC DSNNOTC,VOLSER=QAL162
//STETP1  EXEC DSNNOTC,VOLSER=QAL163
//STETP1  EXEC DSNNOTC,VOLSER=QAL164
//STETP1  EXEC DSNNOTC,VOLSER=QAL165
//STETP1  EXEC DSNNOTC,VOLSER=QAL166
//STETP1  EXEC DSNNOTC,VOLSER=QAL167
//STETP1  EXEC DSNNOTC,VOLSER=QAL168
//STETP1  EXEC DSNNOTC,VOLSER=QAL169
//STETP1  EXEC DSNNOTC,VOLSER=QAL17A
//STETP1  EXEC DSNNOTC,VOLSER=QAL17B
//STETP1  EXEC DSNNOTC,VOLSER=QAL17C
//STETP1  EXEC DSNNOTC,VOLSER=QAL17D
//STETP1  EXEC DSNNOTC,VOLSER=QAL17E
//STETP1  EXEC DSNNOTC,VOLSER=QAL17F
//STETP1  EXEC DSNNOTC,VOLSER=QAL170
//STETP1  EXEC DSNNOTC,VOLSER=QAL171
//STETP1  EXEC DSNNOTC,VOLSER=QAL172
//STETP1  EXEC DSNNOTC,VOLSER=QAL173
//STETP1  EXEC DSNNOTC,VOLSER=QAL174
//STETP1  EXEC DSNNOTC,VOLSER=QAL175
//STETP1  EXEC DSNNOTC,VOLSER=QAL176
//STETP1  EXEC DSNNOTC,VOLSER=QAL177
//STETP1  EXEC DSNNOTC,VOLSER=QAL178
//STETP1  EXEC DSNNOTC,VOLSER=QAL179
//STETP1  EXEC DSNNOTC,VOLSER=QAL18A
//STETP1  EXEC DSNNOTC,VOLSER=QAL18B
//STETP1  EXEC DSNNOTC,VOLSER=QAL18C
//STETP1  EXEC DSNNOTC,VOLSER=QAL18D
//STETP1  EXEC DSNNOTC,VOLSER=QAL18E
//STETP1  EXEC DSNNOTC,VOLSER=QAL18F
//STETP1  EXEC DSNNOTC,VOLSER=QAL180
//STETP1  EXEC DSNNOTC,VOLSER=QAL181
//STETP1  EXEC DSNNOTC,VOLSER=QAL182
//STETP1  EXEC DSNNOTC,VOLSER=QAL183
//STETP1  EXEC DSNNOTC,VOLSER=QAL184
//STETP1  EXEC DSNNOTC,VOLSER=QAL185
//STETP1  EXEC DSNNOTC,VOLSER=QAL186
//STETP1  EXEC DSNNOTC,VOLSER=QAL187
//STETP1  EXEC DSNNOTC,VOLSER=QAL188
//STETP1  EXEC DSNNOTC,VOLSER=QAL189
//STETP1  EXEC DSNNOTC,VOLSER=QAL19A
//STETP1  EXEC DSNNOTC,VOLSER=QAL19B
//STETP1  EXEC DSNNOTC,VOLSER=QAL19C
//STETP1  EXEC DSNNOTC,VOLSER=QAL19D
//STETP1  EXEC DSNNOTC,VOLSER=QAL19E
//STETP1  EXEC DSNNOTC,VOLSER=QAL19F
//STETP1  EXEC DSNNOTC,VOLSER=QAL190
//STETP1  EXEC DSNNOTC,VOLSER=QAL191
//STETP1  EXEC DSNNOTC,VOLSER=QAL192
//STETP1  EXEC DSNNOTC,VOLSER=QAL193
//STETP1  EXEC DSNNOTC,VOLSER=QAL194
//STETP1  EXEC DSNNOTC,VOLSER=QAL195
//STETP1  EXEC DSNNOTC,VOLSER=QAL196
//STETP1  EXEC DSNNOTC,VOLSER=QAL197
//STETP1  EXEC DSNNOTC,VOLSER=QAL198
//STETP1  EXEC DSNNOTC,VOLSER=QAL199
//STETP1  EXEC DSNNOTC,VOLSER=QAL30A
//STETP1  EXEC DSNNOTC,VOLSER=QAL30B
//STETP1  EXEC DSNNOTC,VOLSER=QAL30C
//STETP1  EXEC DSNNOTC,VOLSER=QAL30D
//STETP1  EXEC DSNNOTC,VOLSER=QAL30E
//STETP1  EXEC DSNNOTC,VOLSER=QAL30F
//STETP1  EXEC DSNNOTC,VOLSER=QAL300
//STETP1  EXEC DSNNOTC,VOLSER=QAL301
//STETP1  EXEC DSNNOTC,VOLSER=QAL302
//STETP1  EXEC DSNNOTC,VOLSER=QAL303
//STETP1  EXEC DSNNOTC,VOLSER=QAL304
//STETP1  EXEC DSNNOTC,VOLSER=QAL305
//STETP1  EXEC DSNNOTC,VOLSER=QAL306
//STETP1  EXEC DSNNOTC,VOLSER=QAL307
//STETP1  EXEC DSNNOTC,VOLSER=QAL308
//STETP1  EXEC DSNNOTC,VOLSER=QAL309
//STETP1  EXEC DSNNOTC,VOLSER=QAL31A
//STETP1  EXEC DSNNOTC,VOLSER=QAL31B
//STETP1  EXEC DSNNOTC,VOLSER=QAL31C
//STETP1  EXEC DSNNOTC,VOLSER=QAL31D
//STETP1  EXEC DSNNOTC,VOLSER=QAL31E
//STETP1  EXEC DSNNOTC,VOLSER=QAL31F
//STETP1  EXEC DSNNOTC,VOLSER=QAL310
//STETP1  EXEC DSNNOTC,VOLSER=QAL311
//STETP1  EXEC DSNNOTC,VOLSER=QAL312
//STETP1  EXEC DSNNOTC,VOLSER=QAL313
//STETP1  EXEC DSNNOTC,VOLSER=QAL314
//STETP1  EXEC DSNNOTC,VOLSER=QAL315
//STETP1  EXEC DSNNOTC,VOLSER=QAL316
//STETP1  EXEC DSNNOTC,VOLSER=QAL317
//STETP1  EXEC DSNNOTC,VOLSER=QAL318
//STETP1  EXEC DSNNOTC,VOLSER=QAL319
//STETP1  EXEC DSNNOTC,VOLSER=QAL32A
//STETP1  EXEC DSNNOTC,VOLSER=QAL32B
//STETP1  EXEC DSNNOTC,VOLSER=QAL32C
//STETP1  EXEC DSNNOTC,VOLSER=QAL32D
//STETP1  EXEC DSNNOTC,VOLSER=QAL32E
//STETP1  EXEC DSNNOTC,VOLSER=QAL320
//STETP1  EXEC DSNNOTC,VOLSER=QAL321
//STETP1  EXEC DSNNOTC,VOLSER=QAL322
//STETP1  EXEC DSNNOTC,VOLSER=QAL323
//STETP1  EXEC DSNNOTC,VOLSER=QAL324
//STETP1  EXEC DSNNOTC,VOLSER=QAL325
//STETP1  EXEC DSNNOTC,VOLSER=QAL326
//STETP1  EXEC DSNNOTC,VOLSER=QAL327
//STETP1  EXEC DSNNOTC,VOLSER=QAL328
//STETP1  EXEC DSNNOTC,VOLSER=QAL329
//STETP1  EXEC DSNNOTC,VOLSER=QAL33A
//STETP1  EXEC DSNNOTC,VOLSER=QAL33B
//STETP1  EXEC DSNNOTC,VOLSER=QAL33C
//STETP1  EXEC DSNNOTC,VOLSER=QAL33D
//STETP1  EXEC DSNNOTC,VOLSER=QAL33E
//STETP1  EXEC DSNNOTC,VOLSER=QAL33F
//STETP1  EXEC DSNNOTC,VOLSER=QAL330
//STETP1  EXEC DSNNOTC,VOLSER=QAL331
//STETP1  EXEC DSNNOTC,VOLSER=QAL332
//STETP1  EXEC DSNNOTC,VOLSER=QAL333
//STETP1  EXEC DSNNOTC,VOLSER=QAL334
//STETP1  EXEC DSNNOTC,VOLSER=QAL335
//STETP1  EXEC DSNNOTC,VOLSER=QAL336
//STETP1  EXEC DSNNOTC,VOLSER=QAL337
//STETP1  EXEC DSNNOTC,VOLSER=QAL338
//STETP1  EXEC DSNNOTC,VOLSER=QAL339
//STETP1  EXEC DSNNOTC,VOLSER=QAL34A
//STETP1  EXEC DSNNOTC,VOLSER=QAL34B
//STETP1  EXEC DSNNOTC,VOLSER=QAL34C
//STETP1  EXEC DSNNOTC,VOLSER=QAL34D
//STETP1  EXEC DSNNOTC,VOLSER=QAL34E
//STETP1  EXEC DSNNOTC,VOLSER=QAL340
//STETP1  EXEC DSNNOTC,VOLSER=QAL341
//STETP1  EXEC DSNNOTC,VOLSER=QAL342
//STETP1  EXEC DSNNOTC,VOLSER=QAL343
//STETP1  EXEC DSNNOTC,VOLSER=QAL344
//STETP1  EXEC DSNNOTC,VOLSER=QAL345
//STETP1  EXEC DSNNOTC,VOLSER=QAL346
//STETP1  EXEC DSNNOTC,VOLSER=QAL347
//STETP1  EXEC DSNNOTC,VOLSER=QAL348
//STETP1  EXEC DSNNOTC,VOLSER=QAL349
//STETP1  EXEC DSNNOTC,VOLSER=QAL35A
//STETP1  EXEC DSNNOTC,VOLSER=QAL35B
//STETP1  EXEC DSNNOTC,VOLSER=QAL35C
//STETP1  EXEC DSNNOTC,VOLSER=QAL35D
//STETP1  EXEC DSNNOTC,VOLSER=QAL350
//STETP1  EXEC DSNNOTC,VOLSER=QAL351
//STETP1  EXEC DSNNOTC,VOLSER=QAL352
//STETP1  EXEC DSNNOTC,VOLSER=QAL353
//STETP1  EXEC DSNNOTC,VOLSER=QAL354
//STETP1  EXEC DSNNOTC,VOLSER=QAL355
//STETP1  EXEC DSNNOTC,VOLSER=QAL356
//STETP1  EXEC DSNNOTC,VOLSER=QAL357
//STETP1  EXEC DSNNOTC,VOLSER=QAL358
//STETP1  EXEC DSNNOTC,VOLSER=QAL359
//STETP1  EXEC DSNNOTC,VOLSER=QAL360
//STETP1  EXEC DSNNOTC,VOLSER=QAL361
//STETP1  EXEC DSNNOTC,VOLSER=QAL362
//STETP1  EXEC DSNNOTC,VOLSER=QAL363
//STETP1  EXEC DSNNOTC,VOLSER=QAL364
//STETP1  EXEC DSNNOTC,VOLSER=QAL365
//STETP1  EXEC DSNNOTC,VOLSER=QAL366
//STETP1  EXEC DSNNOTC,VOLSER=QAL369
//STETP1  EXEC DSNNOTC,VOLSER=QAL370
//STETP1  EXEC DSNNOTC,VOLSER=QAL373
//STETP1  EXEC DSNNOTC,VOLSER=QAL374
//STETP1  EXEC DSNNOTC,VOLSER=QAL375
//STETP1  EXEC DSNNOTC,VOLSER=QAL376
//STETP1  EXEC DSNNOTC,VOLSER=QAL381
//STETP1  EXEC DSNNOTC,VOLSER=QAL382
//STETP1  EXEC DSNNOTC,VOLSER=QAL383
//STETP1  EXEC DSNNOTC,VOLSER=QAL384
//STETP1  EXEC DSNNOTC,VOLSER=QAL385
//STETP1  EXEC DSNNOTC,VOLSER=QAL386
//STETP1  EXEC DSNNOTC,VOLSER=QAL387
//STETP1  EXEC DSNNOTC,VOLSER=QAL388
//STETP1  EXEC DSNNOTC,VOLSER=QAL389
//STETP1  EXEC DSNNOTC,VOLSER=QAL390
//STETP1  EXEC DSNNOTC,VOLSER=QAL391
//STETP1  EXEC DSNNOTC,VOLSER=QAL40A
//STETP1  EXEC DSNNOTC,VOLSER=QAL40B
//STETP1  EXEC DSNNOTC,VOLSER=QAL40C
//STETP1  EXEC DSNNOTC,VOLSER=QAL40D
//STETP1  EXEC DSNNOTC,VOLSER=QAL40E
//STETP1  EXEC DSNNOTC,VOLSER=QAL40F
//STETP1  EXEC DSNNOTC,VOLSER=QAL400
//STETP1  EXEC DSNNOTC,VOLSER=QAL401
//STETP1  EXEC DSNNOTC,VOLSER=QAL402
//STETP1  EXEC DSNNOTC,VOLSER=QAL403
//STETP1  EXEC DSNNOTC,VOLSER=QAL404
//STETP1  EXEC DSNNOTC,VOLSER=QAL405
//STETP1  EXEC DSNNOTC,VOLSER=QAL406
//STETP1  EXEC DSNNOTC,VOLSER=QAL407
//STETP1  EXEC DSNNOTC,VOLSER=QAL408
//STETP1  EXEC DSNNOTC,VOLSER=QAL409
//STETP1  EXEC DSNNOTC,VOLSER=QAL41A
//STETP1  EXEC DSNNOTC,VOLSER=QAL41B
//STETP1  EXEC DSNNOTC,VOLSER=QAL41C
//STETP1  EXEC DSNNOTC,VOLSER=QAL41D
//STETP1  EXEC DSNNOTC,VOLSER=QAL41E
//STETP1  EXEC DSNNOTC,VOLSER=QAL41F
//STETP1  EXEC DSNNOTC,VOLSER=QAL410
//STETP1  EXEC DSNNOTC,VOLSER=QAL411
//STETP1  EXEC DSNNOTC,VOLSER=QAL412
//STETP1  EXEC DSNNOTC,VOLSER=QAL413
//STETP1  EXEC DSNNOTC,VOLSER=QAL414
//STETP1  EXEC DSNNOTC,VOLSER=QAL415
//STETP1  EXEC DSNNOTC,VOLSER=QAL416
//STETP1  EXEC DSNNOTC,VOLSER=QAL417
//STETP1  EXEC DSNNOTC,VOLSER=QAL418
//STETP1  EXEC DSNNOTC,VOLSER=QAL419
//STETP1  EXEC DSNNOTC,VOLSER=QAL42A
//STETP1  EXEC DSNNOTC,VOLSER=QAL42B
//STETP1  EXEC DSNNOTC,VOLSER=QAL42C
//STETP1  EXEC DSNNOTC,VOLSER=QAL42D
//STETP1  EXEC DSNNOTC,VOLSER=QAL42E
//STETP1  EXEC DSNNOTC,VOLSER=QAL42F
//STETP1  EXEC DSNNOTC,VOLSER=QAL420
//STETP1  EXEC DSNNOTC,VOLSER=QAL421
//STETP1  EXEC DSNNOTC,VOLSER=QAL422
//STETP1  EXEC DSNNOTC,VOLSER=QAL423
//STETP1  EXEC DSNNOTC,VOLSER=QAL424
//STETP1  EXEC DSNNOTC,VOLSER=QAL425
//STETP1  EXEC DSNNOTC,VOLSER=QAL426
//STETP1  EXEC DSNNOTC,VOLSER=QAL427
//STETP1  EXEC DSNNOTC,VOLSER=QAL428
//STETP1  EXEC DSNNOTC,VOLSER=QAL429
//STETP1  EXEC DSNNOTC,VOLSER=QAL43A
//STETP1  EXEC DSNNOTC,VOLSER=QAL43B
//STETP1  EXEC DSNNOTC,VOLSER=QAL43C
//STETP1  EXEC DSNNOTC,VOLSER=QAL43D
//STETP1  EXEC DSNNOTC,VOLSER=QAL43E
//STETP1  EXEC DSNNOTC,VOLSER=QAL43F
//STETP1  EXEC DSNNOTC,VOLSER=QAL430
//STETP1  EXEC DSNNOTC,VOLSER=QAL431
//STETP1  EXEC DSNNOTC,VOLSER=QAL432
//STETP1  EXEC DSNNOTC,VOLSER=QAL433
//STETP1  EXEC DSNNOTC,VOLSER=QAL434
//STETP1  EXEC DSNNOTC,VOLSER=QAL435
//STETP1  EXEC DSNNOTC,VOLSER=QAL436
//STETP1  EXEC DSNNOTC,VOLSER=QAL437
//STETP1  EXEC DSNNOTC,VOLSER=QAL438
//STETP1  EXEC DSNNOTC,VOLSER=QAL439
//STETP1  EXEC DSNNOTC,VOLSER=QAL44A
//STETP1  EXEC DSNNOTC,VOLSER=QAL44B
//STETP1  EXEC DSNNOTC,VOLSER=QAL44C
//STETP1  EXEC DSNNOTC,VOLSER=QAL44D
//STETP1  EXEC DSNNOTC,VOLSER=QAL44E
//STETP1  EXEC DSNNOTC,VOLSER=QAL44F
//STETP1  EXEC DSNNOTC,VOLSER=QAL440
//STETP1  EXEC DSNNOTC,VOLSER=QAL441
//STETP1  EXEC DSNNOTC,VOLSER=QAL442
//STETP1  EXEC DSNNOTC,VOLSER=QAL443
//STETP1  EXEC DSNNOTC,VOLSER=QAL444
//STETP1  EXEC DSNNOTC,VOLSER=QAL445
//STETP1  EXEC DSNNOTC,VOLSER=QAL446
//STETP1  EXEC DSNNOTC,VOLSER=QAL447
//STETP1  EXEC DSNNOTC,VOLSER=QAL448
//STETP1  EXEC DSNNOTC,VOLSER=QAL449
//STETP1  EXEC DSNNOTC,VOLSER=QAL45A
//STETP1  EXEC DSNNOTC,VOLSER=QAL45B
//STETP1  EXEC DSNNOTC,VOLSER=QAL45C
//STETP1  EXEC DSNNOTC,VOLSER=QAL45D
//STETP1  EXEC DSNNOTC,VOLSER=QAL45E
//STETP1  EXEC DSNNOTC,VOLSER=QAL45F
//STETP1  EXEC DSNNOTC,VOLSER=QAL450
//STETP1  EXEC DSNNOTC,VOLSER=QAL451
//STETP1  EXEC DSNNOTC,VOLSER=QAL452
//STETP1  EXEC DSNNOTC,VOLSER=QAL453
//STETP1  EXEC DSNNOTC,VOLSER=QAL454
//STETP1  EXEC DSNNOTC,VOLSER=QAL455
//STETP1  EXEC DSNNOTC,VOLSER=QAL456
//STETP1  EXEC DSNNOTC,VOLSER=QAL457
//STETP1  EXEC DSNNOTC,VOLSER=QAL458
//STETP1  EXEC DSNNOTC,VOLSER=QAL459
//STETP1  EXEC DSNNOTC,VOLSER=QAL46A
//STETP1  EXEC DSNNOTC,VOLSER=QAL46B
//STETP1  EXEC DSNNOTC,VOLSER=QAL46C
//STETP1  EXEC DSNNOTC,VOLSER=QAL46D
//STETP1  EXEC DSNNOTC,VOLSER=QAL46E
//STETP1  EXEC DSNNOTC,VOLSER=QAL460
//STETP1  EXEC DSNNOTC,VOLSER=QAL461
//STETP1  EXEC DSNNOTC,VOLSER=QAL462
//STETP1  EXEC DSNNOTC,VOLSER=QAL463
//STETP1  EXEC DSNNOTC,VOLSER=QAL464
//STETP1  EXEC DSNNOTC,VOLSER=QAL465
//STETP1  EXEC DSNNOTC,VOLSER=QAL466
//STETP1  EXEC DSNNOTC,VOLSER=QAL467
//STETP1  EXEC DSNNOTC,VOLSER=QAL468
//STETP1  EXEC DSNNOTC,VOLSER=QAL469
//STETP1  EXEC DSNNOTC,VOLSER=QAL47A
//STETP1  EXEC DSNNOTC,VOLSER=QAL47B
//STETP1  EXEC DSNNOTC,VOLSER=QAL47C
//STETP1  EXEC DSNNOTC,VOLSER=QAL47D
//STETP1  EXEC DSNNOTC,VOLSER=QAL47E
//STETP1  EXEC DSNNOTC,VOLSER=QAL47F
//STETP1  EXEC DSNNOTC,VOLSER=QAL470
//STETP1  EXEC DSNNOTC,VOLSER=QAL471
//STETP1  EXEC DSNNOTC,VOLSER=QAL472
//STETP1  EXEC DSNNOTC,VOLSER=QAL473
//STETP1  EXEC DSNNOTC,VOLSER=QAL474
//STETP1  EXEC DSNNOTC,VOLSER=QAL475
//STETP1  EXEC DSNNOTC,VOLSER=QAL476
//STETP1  EXEC DSNNOTC,VOLSER=QAL477
//STETP1  EXEC DSNNOTC,VOLSER=QAL478
//STETP1  EXEC DSNNOTC,VOLSER=QAL479
//STETP1  EXEC DSNNOTC,VOLSER=QAL48A
//STETP1  EXEC DSNNOTC,VOLSER=QAL48B
//STETP1  EXEC DSNNOTC,VOLSER=QAL48C
//STETP1  EXEC DSNNOTC,VOLSER=QAL48D
//STETP1  EXEC DSNNOTC,VOLSER=QAL48E
//STETP1  EXEC DSNNOTC,VOLSER=QAL480
//STETP1  EXEC DSNNOTC,VOLSER=QAL481
//STETP1  EXEC DSNNOTC,VOLSER=QAL482
//STETP1  EXEC DSNNOTC,VOLSER=QAL483
//STETP1  EXEC DSNNOTC,VOLSER=QAL484
//STETP1  EXEC DSNNOTC,VOLSER=QAL485
//STETP1  EXEC DSNNOTC,VOLSER=QAL486
//STETP1  EXEC DSNNOTC,VOLSER=QAL487
//STETP1  EXEC DSNNOTC,VOLSER=QAL488
//STETP1  EXEC DSNNOTC,VOLSER=QAL489
//STETP1  EXEC DSNNOTC,VOLSER=QAL49A
//STETP1  EXEC DSNNOTC,VOLSER=QAL490
//STETP1  EXEC DSNNOTC,VOLSER=QAL491
//STETP1  EXEC DSNNOTC,VOLSER=QAL492
//STETP1  EXEC DSNNOTC,VOLSER=QAL493
//STETP1  EXEC DSNNOTC,VOLSER=QAL494
//STETP1  EXEC DSNNOTC,VOLSER=QAL495
//STETP1  EXEC DSNNOTC,VOLSER=QAL496
//STETP1  EXEC DSNNOTC,VOLSER=QAL497
//STETP1  EXEC DSNNOTC,VOLSER=QAL498
//STETP1  EXEC DSNNOTC,VOLSER=QAL499
//STETP1  EXEC DSNNOTC,VOLSER=QAL600
//STETP1  EXEC DSNNOTC,VOLSER=QAL601
//STETP1  EXEC DSNNOTC,VOLSER=QAL602
//STETP1  EXEC DSNNOTC,VOLSER=QAL603
//STETP1  EXEC DSNNOTC,VOLSER=QAL604
//STETP1  EXEC DSNNOTC,VOLSER=QAL605
//STETP1  EXEC DSNNOTC,VOLSER=QAL606
//STETP1  EXEC DSNNOTC,VOLSER=QAL607
//STETP1  EXEC DSNNOTC,VOLSER=QAL608
//STETP1  EXEC DSNNOTC,VOLSER=QAL609
//STETP1  EXEC DSNNOTC,VOLSER=QAL610
//STETP1  EXEC DSNNOTC,VOLSER=QAL613
//STETP1  EXEC DSNNOTC,VOLSER=QAL614
//STETP1  EXEC DSNNOTC,VOLSER=QAL704
//STETP1  EXEC DSNNOTC,VOLSER=QAL705
//STETP1  EXEC DSNNOTC,VOLSER=QAL706
//STETP1  EXEC DSNNOTC,VOLSER=QAL707
//STETP1  EXEC DSNNOTC,VOLSER=QAL708
//STETP1  EXEC DSNNOTC,VOLSER=QAL709
//STETP1  EXEC DSNNOTC,VOLSER=QAL710
//STETP1  EXEC DSNNOTC,VOLSER=QAL800
//STETP1  EXEC DSNNOTC,VOLSER=QAL801
//STETP1  EXEC DSNNOTC,VOLSER=QAL802
//STETP1  EXEC DSNNOTC,VOLSER=QAL803
//STETP1  EXEC DSNNOTC,VOLSER=QAL804
//STETP1  EXEC DSNNOTC,VOLSER=QAL805
//STETP1  EXEC DSNNOTC,VOLSER=QAL806
//STETP1  EXEC DSNNOTC,VOLSER=QAL807
//STETP1  EXEC DSNNOTC,VOLSER=QAL808
//STETP1  EXEC DSNNOTC,VOLSER=QAL809
//STETP1  EXEC DSNNOTC,VOLSER=QAL810
//STETP1  EXEC DSNNOTC,VOLSER=QAL811
//STETP1  EXEC DSNNOTC,VOLSER=QAL812
//STETP1  EXEC DSNNOTC,VOLSER=QAL813
//STETP1  EXEC DSNNOTC,VOLSER=QAL814
//STETP1  EXEC DSNNOTC,VOLSER=QAL815
//STETP1  EXEC DSNNOTC,VOLSER=QAL816
//STETP1  EXEC DSNNOTC,VOLSER=QAL817
//STETP1  EXEC DSNNOTC,VOLSER=QAL818
//STETP1  EXEC DSNNOTC,VOLSER=QAL819
//STETP1  EXEC DSNNOTC,VOLSER=QAL820
//STETP1  EXEC DSNNOTC,VOLSER=QAL821
//STETP1  EXEC DSNNOTC,VOLSER=QAL822
//STETP1  EXEC DSNNOTC,VOLSER=QAL850
//STETP1  EXEC DSNNOTC,VOLSER=QAL851
//STETP1  EXEC DSNNOTC,VOLSER=QAL852
//STETP1  EXEC DSNNOTC,VOLSER=RACFP1
//STETP1  EXEC DSNNOTC,VOLSER=RACFP2
//STETP1  EXEC DSNNOTC,VOLSER=RACFQ1
//STETP1  EXEC DSNNOTC,VOLSER=RACFQ2
//STETP1  EXEC DSNNOTC,VOLSER=RACFR1
//STETP1  EXEC DSNNOTC,VOLSER=RACFR2
//STETP1  EXEC DSNNOTC,VOLSER=RACFS1
//STETP1  EXEC DSNNOTC,VOLSER=RACFS2
//STETP1  EXEC DSNNOTC,VOLSER=RACF1P
//STETP1  EXEC DSNNOTC,VOLSER=RACF1Q
//STETP1  EXEC DSNNOTC,VOLSER=RACF1R
//STETP1  EXEC DSNNOTC,VOLSER=RACF1S
//STETP1  EXEC DSNNOTC,VOLSER=RACF2P
//STETP1  EXEC DSNNOTC,VOLSER=RACF2Q
//STETP1  EXEC DSNNOTC,VOLSER=RACF2R
//STETP1  EXEC DSNNOTC,VOLSER=RACF2S
//STETP1  EXEC DSNNOTC,VOLSER=RCCF00
//STETP1  EXEC DSNNOTC,VOLSER=RCCF01
//STETP1  EXEC DSNNOTC,VOLSER=RCC10A
//STETP1  EXEC DSNNOTC,VOLSER=RCC10B
//STETP1  EXEC DSNNOTC,VOLSER=RCC10C
//STETP1  EXEC DSNNOTC,VOLSER=RCC10D
//STETP1  EXEC DSNNOTC,VOLSER=RCC10E
//STETP1  EXEC DSNNOTC,VOLSER=RCC10F
//STETP1  EXEC DSNNOTC,VOLSER=RCC10G
//STETP1  EXEC DSNNOTC,VOLSER=RCC10H
//STETP1  EXEC DSNNOTC,VOLSER=RCC10I
//STETP1  EXEC DSNNOTC,VOLSER=RCC10J
//STETP1  EXEC DSNNOTC,VOLSER=RCC10K
//STETP1  EXEC DSNNOTC,VOLSER=RCC100
//STETP1  EXEC DSNNOTC,VOLSER=RCC101
//STETP1  EXEC DSNNOTC,VOLSER=RCC102
//STETP1  EXEC DSNNOTC,VOLSER=RCC103
//STETP1  EXEC DSNNOTC,VOLSER=RCC104
//STETP1  EXEC DSNNOTC,VOLSER=RCC105
//STETP1  EXEC DSNNOTC,VOLSER=RCC106
//STETP1  EXEC DSNNOTC,VOLSER=RCC107
//STETP1  EXEC DSNNOTC,VOLSER=RCC108
//STETP1  EXEC DSNNOTC,VOLSER=RCC109
//STETP1  EXEC DSNNOTC,VOLSER=RCC11A
//STETP1  EXEC DSNNOTC,VOLSER=RCC11B
//STETP1  EXEC DSNNOTC,VOLSER=RCC11C
//STETP1  EXEC DSNNOTC,VOLSER=RCC11D
//STETP1  EXEC DSNNOTC,VOLSER=RCC11E
//STETP1  EXEC DSNNOTC,VOLSER=RCC11F
//STETP1  EXEC DSNNOTC,VOLSER=RCC110
//STETP1  EXEC DSNNOTC,VOLSER=RCC111
//STETP1  EXEC DSNNOTC,VOLSER=RCC112
//STETP1  EXEC DSNNOTC,VOLSER=RCC113
//STETP1  EXEC DSNNOTC,VOLSER=RCC114
//STETP1  EXEC DSNNOTC,VOLSER=RCC115
//STETP1  EXEC DSNNOTC,VOLSER=RCC116
//STETP1  EXEC DSNNOTC,VOLSER=RCC117
//STETP1  EXEC DSNNOTC,VOLSER=RCC118
//STETP1  EXEC DSNNOTC,VOLSER=RCC119
//STETP1  EXEC DSNNOTC,VOLSER=RCC12A
//STETP1  EXEC DSNNOTC,VOLSER=RCC12B
//STETP1  EXEC DSNNOTC,VOLSER=RCC12C
//STETP1  EXEC DSNNOTC,VOLSER=RCC12D
//STETP1  EXEC DSNNOTC,VOLSER=RCC12E
//STETP1  EXEC DSNNOTC,VOLSER=RCC12F
//STETP1  EXEC DSNNOTC,VOLSER=RCC120
//STETP1  EXEC DSNNOTC,VOLSER=RCC121
//STETP1  EXEC DSNNOTC,VOLSER=RCC122
//STETP1  EXEC DSNNOTC,VOLSER=RCC123
//STETP1  EXEC DSNNOTC,VOLSER=RCC124
//STETP1  EXEC DSNNOTC,VOLSER=RCC125
//STETP1  EXEC DSNNOTC,VOLSER=RCC126
//STETP1  EXEC DSNNOTC,VOLSER=RCC127
//STETP1  EXEC DSNNOTC,VOLSER=RCC128
//STETP1  EXEC DSNNOTC,VOLSER=RCC129
//STETP1  EXEC DSNNOTC,VOLSER=RCC13A
//STETP1  EXEC DSNNOTC,VOLSER=RCC13B
//STETP1  EXEC DSNNOTC,VOLSER=RCC13C
//STETP1  EXEC DSNNOTC,VOLSER=RCC13D
//STETP1  EXEC DSNNOTC,VOLSER=RCC130
//STETP1  EXEC DSNNOTC,VOLSER=RCC131
//STETP1  EXEC DSNNOTC,VOLSER=RCC132
//STETP1  EXEC DSNNOTC,VOLSER=RCC133
//STETP1  EXEC DSNNOTC,VOLSER=RCC134
//STETP1  EXEC DSNNOTC,VOLSER=RCC135
//STETP1  EXEC DSNNOTC,VOLSER=RCC136
//STETP1  EXEC DSNNOTC,VOLSER=RCC137
//STETP1  EXEC DSNNOTC,VOLSER=RCC138
//STETP1  EXEC DSNNOTC,VOLSER=RCC139
//STETP1  EXEC DSNNOTC,VOLSER=RCC14A
//STETP1  EXEC DSNNOTC,VOLSER=RCC14B
//STETP1  EXEC DSNNOTC,VOLSER=RCC14C
//STETP1  EXEC DSNNOTC,VOLSER=RCC140
//STETP1  EXEC DSNNOTC,VOLSER=RCC141
//STETP1  EXEC DSNNOTC,VOLSER=RCC142
//STETP1  EXEC DSNNOTC,VOLSER=RCC143
//STETP1  EXEC DSNNOTC,VOLSER=RCC144
//STETP1  EXEC DSNNOTC,VOLSER=RCC145
//STETP1  EXEC DSNNOTC,VOLSER=RCC146
//STETP1  EXEC DSNNOTC,VOLSER=RCC147
//STETP1  EXEC DSNNOTC,VOLSER=RCC148
//STETP1  EXEC DSNNOTC,VOLSER=RCC149
//STETP1  EXEC DSNNOTC,VOLSER=RCC150
//STETP1  EXEC DSNNOTC,VOLSER=RCC151
//STETP1  EXEC DSNNOTC,VOLSER=RCC152
//STETP1  EXEC DSNNOTC,VOLSER=RCC153
//STETP1  EXEC DSNNOTC,VOLSER=RCC154
//STETP1  EXEC DSNNOTC,VOLSER=RCC155
//STETP1  EXEC DSNNOTC,VOLSER=RCC156
//STETP1  EXEC DSNNOTC,VOLSER=RCC157
//STETP1  EXEC DSNNOTC,VOLSER=RCC158
//STETP1  EXEC DSNNOTC,VOLSER=RCC159
//STETP1  EXEC DSNNOTC,VOLSER=RCC160
//STETP1  EXEC DSNNOTC,VOLSER=RCC161
//STETP1  EXEC DSNNOTC,VOLSER=RCC162
//STETP1  EXEC DSNNOTC,VOLSER=RCC163
//STETP1  EXEC DSNNOTC,VOLSER=RCC164
//STETP1  EXEC DSNNOTC,VOLSER=RCC165
//STETP1  EXEC DSNNOTC,VOLSER=RCC166
//STETP1  EXEC DSNNOTC,VOLSER=RCC167
//STETP1  EXEC DSNNOTC,VOLSER=RCC168
//STETP1  EXEC DSNNOTC,VOLSER=RCC169
//STETP1  EXEC DSNNOTC,VOLSER=RCC170
//STETP1  EXEC DSNNOTC,VOLSER=RCC171
//STETP1  EXEC DSNNOTC,VOLSER=RCC172
//STETP1  EXEC DSNNOTC,VOLSER=RCC173
//STETP1  EXEC DSNNOTC,VOLSER=RCC174
//STETP1  EXEC DSNNOTC,VOLSER=RCC175
//STETP1  EXEC DSNNOTC,VOLSER=RCC176
//STETP1  EXEC DSNNOTC,VOLSER=RCC177
//STETP1  EXEC DSNNOTC,VOLSER=RCC178
//STETP1  EXEC DSNNOTC,VOLSER=RCC179
//STETP1  EXEC DSNNOTC,VOLSER=RCC180
//STETP1  EXEC DSNNOTC,VOLSER=RCC181
//STETP1  EXEC DSNNOTC,VOLSER=RCC182
//STETP1  EXEC DSNNOTC,VOLSER=RCC183
//STETP1  EXEC DSNNOTC,VOLSER=RCC184
//STETP1  EXEC DSNNOTC,VOLSER=RCC185
//STETP1  EXEC DSNNOTC,VOLSER=RCC186
//STETP1  EXEC DSNNOTC,VOLSER=RCC187
//STETP1  EXEC DSNNOTC,VOLSER=RCC188
//STETP1  EXEC DSNNOTC,VOLSER=RCC189
//STETP1  EXEC DSNNOTC,VOLSER=RCC190
//STETP1  EXEC DSNNOTC,VOLSER=RCC191
//STETP1  EXEC DSNNOTC,VOLSER=RCC192
//STETP1  EXEC DSNNOTC,VOLSER=RCC193
//STETP1  EXEC DSNNOTC,VOLSER=RCC194
//STETP1  EXEC DSNNOTC,VOLSER=RCC195
//STETP1  EXEC DSNNOTC,VOLSER=RCC196
//STETP1  EXEC DSNNOTC,VOLSER=RCC197
//STETP1  EXEC DSNNOTC,VOLSER=RCC198
//STETP1  EXEC DSNNOTC,VOLSER=RCC199
//STETP1  EXEC DSNNOTC,VOLSER=RCC200
//STETP1  EXEC DSNNOTC,VOLSER=RCC201
//STETP1  EXEC DSNNOTC,VOLSER=RCC202
//STETP1  EXEC DSNNOTC,VOLSER=RCC203
//STETP1  EXEC DSNNOTC,VOLSER=RCC204
//STETP1  EXEC DSNNOTC,VOLSER=RCC205
//STETP1  EXEC DSNNOTC,VOLSER=RCC206
//STETP1  EXEC DSNNOTC,VOLSER=RCC207
//STETP1  EXEC DSNNOTC,VOLSER=RCC30A
//STETP1  EXEC DSNNOTC,VOLSER=RCC30B
//STETP1  EXEC DSNNOTC,VOLSER=RCC30C
//STETP1  EXEC DSNNOTC,VOLSER=RCC30D
//STETP1  EXEC DSNNOTC,VOLSER=RCC30E
//STETP1  EXEC DSNNOTC,VOLSER=RCC30F
//STETP1  EXEC DSNNOTC,VOLSER=RCC300
//STETP1  EXEC DSNNOTC,VOLSER=RCC301
//STETP1  EXEC DSNNOTC,VOLSER=RCC302
//STETP1  EXEC DSNNOTC,VOLSER=RCC303
//STETP1  EXEC DSNNOTC,VOLSER=RCC304
//STETP1  EXEC DSNNOTC,VOLSER=RCC305
//STETP1  EXEC DSNNOTC,VOLSER=RCC306
//STETP1  EXEC DSNNOTC,VOLSER=RCC307
//STETP1  EXEC DSNNOTC,VOLSER=RCC308
//STETP1  EXEC DSNNOTC,VOLSER=RCC309
//STETP1  EXEC DSNNOTC,VOLSER=RCC31A
//STETP1  EXEC DSNNOTC,VOLSER=RCC31B
//STETP1  EXEC DSNNOTC,VOLSER=RCC31C
//STETP1  EXEC DSNNOTC,VOLSER=RCC31D
//STETP1  EXEC DSNNOTC,VOLSER=RCC31E
//STETP1  EXEC DSNNOTC,VOLSER=RCC31F
//STETP1  EXEC DSNNOTC,VOLSER=RCC310
//STETP1  EXEC DSNNOTC,VOLSER=RCC311
//STETP1  EXEC DSNNOTC,VOLSER=RCC312
//STETP1  EXEC DSNNOTC,VOLSER=RCC313
//STETP1  EXEC DSNNOTC,VOLSER=RCC32A
//STETP1  EXEC DSNNOTC,VOLSER=RCC32B
//STETP1  EXEC DSNNOTC,VOLSER=RCC32C
//STETP1  EXEC DSNNOTC,VOLSER=RCC32D
//STETP1  EXEC DSNNOTC,VOLSER=RCC32E
//STETP1  EXEC DSNNOTC,VOLSER=RCC32F
//STETP1  EXEC DSNNOTC,VOLSER=RCC33A
//STETP1  EXEC DSNNOTC,VOLSER=RCC33B
//STETP1  EXEC DSNNOTC,VOLSER=RCC33C
//STETP1  EXEC DSNNOTC,VOLSER=RCC33D
//STETP1  EXEC DSNNOTC,VOLSER=RCC33E
//STETP1  EXEC DSNNOTC,VOLSER=RCC33F
//STETP1  EXEC DSNNOTC,VOLSER=RCC340
//STETP1  EXEC DSNNOTC,VOLSER=RCC341
//STETP1  EXEC DSNNOTC,VOLSER=RCC342
//STETP1  EXEC DSNNOTC,VOLSER=RCC343
//STETP1  EXEC DSNNOTC,VOLSER=RCC344
//STETP1  EXEC DSNNOTC,VOLSER=RCC346
//STETP1  EXEC DSNNOTC,VOLSER=RCC347
//STETP1  EXEC DSNNOTC,VOLSER=RCC348
//STETP1  EXEC DSNNOTC,VOLSER=RCC400
//STETP1  EXEC DSNNOTC,VOLSER=RCC401
//STETP1  EXEC DSNNOTC,VOLSER=RCC402
//STETP1  EXEC DSNNOTC,VOLSER=RCC403
//STETP1  EXEC DSNNOTC,VOLSER=RCC404
//STETP1  EXEC DSNNOTC,VOLSER=RCC405
//STETP1  EXEC DSNNOTC,VOLSER=RCC406
//STETP1  EXEC DSNNOTC,VOLSER=RCC407
//STETP1  EXEC DSNNOTC,VOLSER=RCC408
//STETP1  EXEC DSNNOTC,VOLSER=RCC409
//STETP1  EXEC DSNNOTC,VOLSER=RCC410
//STETP1  EXEC DSNNOTC,VOLSER=RCC411
//STETP1  EXEC DSNNOTC,VOLSER=RCC412
//STETP1  EXEC DSNNOTC,VOLSER=RCC413
//STETP1  EXEC DSNNOTC,VOLSER=RCC414
//STETP1  EXEC DSNNOTC,VOLSER=RCC415
//STETP1  EXEC DSNNOTC,VOLSER=RCC416
//STETP1  EXEC DSNNOTC,VOLSER=RCC417
//STETP1  EXEC DSNNOTC,VOLSER=RCC418
//STETP1  EXEC DSNNOTC,VOLSER=RCC419
//STETP1  EXEC DSNNOTC,VOLSER=RCC420
//STETP1  EXEC DSNNOTC,VOLSER=RCC421
//STETP1  EXEC DSNNOTC,VOLSER=RCC422
//STETP1  EXEC DSNNOTC,VOLSER=RCC423
//STETP1  EXEC DSNNOTC,VOLSER=RCC424
//STETP1  EXEC DSNNOTC,VOLSER=RCC425
//STETP1  EXEC DSNNOTC,VOLSER=RCC426
//STETP1  EXEC DSNNOTC,VOLSER=RCC427
//STETP1  EXEC DSNNOTC,VOLSER=RCC428
//STETP1  EXEC DSNNOTC,VOLSER=RCC429
//STETP1  EXEC DSNNOTC,VOLSER=RCC430
//STETP1  EXEC DSNNOTC,VOLSER=RCC431
//STETP1  EXEC DSNNOTC,VOLSER=RCC432
//STETP1  EXEC DSNNOTC,VOLSER=RCC433
//STETP1  EXEC DSNNOTC,VOLSER=RCC434
//STETP1  EXEC DSNNOTC,VOLSER=RCC435
//STETP1  EXEC DSNNOTC,VOLSER=RCC436
//STETP1  EXEC DSNNOTC,VOLSER=RCC437
//STETP1  EXEC DSNNOTC,VOLSER=RCC438
//STETP1  EXEC DSNNOTC,VOLSER=RCC439
//STETP1  EXEC DSNNOTC,VOLSER=RCC440
//STETP1  EXEC DSNNOTC,VOLSER=RCC441
//STETP1  EXEC DSNNOTC,VOLSER=RCC442
//STETP1  EXEC DSNNOTC,VOLSER=RCC443
//STETP1  EXEC DSNNOTC,VOLSER=RCC444
//STETP1  EXEC DSNNOTC,VOLSER=RCC445
//STETP1  EXEC DSNNOTC,VOLSER=RCC446
//STETP1  EXEC DSNNOTC,VOLSER=RCC447
//STETP1  EXEC DSNNOTC,VOLSER=RCC448
//STETP1  EXEC DSNNOTC,VOLSER=RCC449
//STETP1  EXEC DSNNOTC,VOLSER=RCC450
//STETP1  EXEC DSNNOTC,VOLSER=RCC451
//STETP1  EXEC DSNNOTC,VOLSER=RCC452
//STETP1  EXEC DSNNOTC,VOLSER=RCC453
//STETP1  EXEC DSNNOTC,VOLSER=RCC454
//STETP1  EXEC DSNNOTC,VOLSER=RCC455
//STETP1  EXEC DSNNOTC,VOLSER=RCC456
//STETP1  EXEC DSNNOTC,VOLSER=RCC457
//STETP1  EXEC DSNNOTC,VOLSER=RCC458
//STETP1  EXEC DSNNOTC,VOLSER=RCC459
//STETP1  EXEC DSNNOTC,VOLSER=RCC460
//STETP1  EXEC DSNNOTC,VOLSER=RCC461
//STETP1  EXEC DSNNOTC,VOLSER=RCC462
//STETP1  EXEC DSNNOTC,VOLSER=RCC463
//STETP1  EXEC DSNNOTC,VOLSER=RCC464
//STETP1  EXEC DSNNOTC,VOLSER=RCC465
//STETP1  EXEC DSNNOTC,VOLSER=RCC466
//STETP1  EXEC DSNNOTC,VOLSER=RCC467
//STETP1  EXEC DSNNOTC,VOLSER=RCC468
//STETP1  EXEC DSNNOTC,VOLSER=RCC469
//STETP1  EXEC DSNNOTC,VOLSER=RCC600
//STETP1  EXEC DSNNOTC,VOLSER=RCC601
//STETP1  EXEC DSNNOTC,VOLSER=RCC602
//STETP1  EXEC DSNNOTC,VOLSER=RCC603
//STETP1  EXEC DSNNOTC,VOLSER=RCC604
//STETP1  EXEC DSNNOTC,VOLSER=RCC605
//STETP1  EXEC DSNNOTC,VOLSER=RCC606
//STETP1  EXEC DSNNOTC,VOLSER=RCC607
//STETP1  EXEC DSNNOTC,VOLSER=RCC608
//STETP1  EXEC DSNNOTC,VOLSER=RCC609
//STETP1  EXEC DSNNOTC,VOLSER=RCC610
//STETP1  EXEC DSNNOTC,VOLSER=RCC611
//STETP1  EXEC DSNNOTC,VOLSER=RCC612
//STETP1  EXEC DSNNOTC,VOLSER=RCC613
//STETP1  EXEC DSNNOTC,VOLSER=RCC614
//STETP1  EXEC DSNNOTC,VOLSER=RCC615
//STETP1  EXEC DSNNOTC,VOLSER=RCC850
//STETP1  EXEC DSNNOTC,VOLSER=RCC851
//STETP1  EXEC DSNNOTC,VOLSER=RCC852
//STETP1  EXEC DSNNOTC,VOLSER=RCOF00
//STETP1  EXEC DSNNOTC,VOLSER=RCO101
//STETP1  EXEC DSNNOTC,VOLSER=RCO102
//STETP1  EXEC DSNNOTC,VOLSER=RCO103
//STETP1  EXEC DSNNOTC,VOLSER=RCO104
//STETP1  EXEC DSNNOTC,VOLSER=RCO105
//STETP1  EXEC DSNNOTC,VOLSER=RCO106
//STETP1  EXEC DSNNOTC,VOLSER=RCO107
//STETP1  EXEC DSNNOTC,VOLSER=RCO108
//STETP1  EXEC DSNNOTC,VOLSER=RCO109
//STETP1  EXEC DSNNOTC,VOLSER=RCO110
//STETP1  EXEC DSNNOTC,VOLSER=RCO111
//STETP1  EXEC DSNNOTC,VOLSER=RCO112
//STETP1  EXEC DSNNOTC,VOLSER=RCO113
//STETP1  EXEC DSNNOTC,VOLSER=RCO114
//STETP1  EXEC DSNNOTC,VOLSER=RCO115
//STETP1  EXEC DSNNOTC,VOLSER=RCO116
//STETP1  EXEC DSNNOTC,VOLSER=RCO117
//STETP1  EXEC DSNNOTC,VOLSER=RCO118
//STETP1  EXEC DSNNOTC,VOLSER=RCO119
//STETP1  EXEC DSNNOTC,VOLSER=RCO120
//STETP1  EXEC DSNNOTC,VOLSER=RCO121
//STETP1  EXEC DSNNOTC,VOLSER=RCO122
//STETP1  EXEC DSNNOTC,VOLSER=RCO123
//STETP1  EXEC DSNNOTC,VOLSER=RCO124
//STETP1  EXEC DSNNOTC,VOLSER=RCO125
//STETP1  EXEC DSNNOTC,VOLSER=RCO126
//STETP1  EXEC DSNNOTC,VOLSER=RCO127
//STETP1  EXEC DSNNOTC,VOLSER=RCO128
//STETP1  EXEC DSNNOTC,VOLSER=RCO129
//STETP1  EXEC DSNNOTC,VOLSER=RCO130
//STETP1  EXEC DSNNOTC,VOLSER=RCO131
//STETP1  EXEC DSNNOTC,VOLSER=RCO132
//STETP1  EXEC DSNNOTC,VOLSER=RCO133
//STETP1  EXEC DSNNOTC,VOLSER=RCO134
//STETP1  EXEC DSNNOTC,VOLSER=RCO135
//STETP1  EXEC DSNNOTC,VOLSER=RCO136
//STETP1  EXEC DSNNOTC,VOLSER=RCO137
//STETP1  EXEC DSNNOTC,VOLSER=RCO138
//STETP1  EXEC DSNNOTC,VOLSER=RCO139
//STETP1  EXEC DSNNOTC,VOLSER=RCO140
//STETP1  EXEC DSNNOTC,VOLSER=RCO141
//STETP1  EXEC DSNNOTC,VOLSER=RCO142
//STETP1  EXEC DSNNOTC,VOLSER=RCO143
//STETP1  EXEC DSNNOTC,VOLSER=RCO144
//STETP1  EXEC DSNNOTC,VOLSER=RCO145
//STETP1  EXEC DSNNOTC,VOLSER=RCO200
//STETP1  EXEC DSNNOTC,VOLSER=RCO201
//STETP1  EXEC DSNNOTC,VOLSER=RCO202
//STETP1  EXEC DSNNOTC,VOLSER=RCO300
//STETP1  EXEC DSNNOTC,VOLSER=RCO302
//STETP1  EXEC DSNNOTC,VOLSER=RCO400
//STETP1  EXEC DSNNOTC,VOLSER=RCO401
//STETP1  EXEC DSNNOTC,VOLSER=RCO402
//STETP1  EXEC DSNNOTC,VOLSER=RCO403
//STETP1  EXEC DSNNOTC,VOLSER=RCO404
//STETP1  EXEC DSNNOTC,VOLSER=RCO600
//STETP1  EXEC DSNNOTC,VOLSER=RCO601
//STETP1  EXEC DSNNOTC,VOLSER=RCO602
//STETP1  EXEC DSNNOTC,VOLSER=RCP100
//STETP1  EXEC DSNNOTC,VOLSER=RCP101
//STETP1  EXEC DSNNOTC,VOLSER=RCP102
//STETP1  EXEC DSNNOTC,VOLSER=RCP103
//STETP1  EXEC DSNNOTC,VOLSER=RCP104
//STETP1  EXEC DSNNOTC,VOLSER=RCP105
//STETP1  EXEC DSNNOTC,VOLSER=RCP106
//STETP1  EXEC DSNNOTC,VOLSER=RCP107
//STETP1  EXEC DSNNOTC,VOLSER=RCP200
//STETP1  EXEC DSNNOTC,VOLSER=RCP201
//STETP1  EXEC DSNNOTC,VOLSER=RCP202
//STETP1  EXEC DSNNOTC,VOLSER=RCP203
//STETP1  EXEC DSNNOTC,VOLSER=RCP300
//STETP1  EXEC DSNNOTC,VOLSER=RCP301
//STETP1  EXEC DSNNOTC,VOLSER=RCP302
//STETP1  EXEC DSNNOTC,VOLSER=RCP303
//STETP1  EXEC DSNNOTC,VOLSER=RCP304
//STETP1  EXEC DSNNOTC,VOLSER=RCP400
//STETP1  EXEC DSNNOTC,VOLSER=RCP401
//STETP1  EXEC DSNNOTC,VOLSER=RCP402
//STETP1  EXEC DSNNOTC,VOLSER=RCP403
//STETP1  EXEC DSNNOTC,VOLSER=RCP404
//STETP1  EXEC DSNNOTC,VOLSER=RCP405
//STETP1  EXEC DSNNOTC,VOLSER=RCP406
//STETP1  EXEC DSNNOTC,VOLSER=RCP407
//STETP1  EXEC DSNNOTC,VOLSER=RCP408
//STETP1  EXEC DSNNOTC,VOLSER=RCP500
//STETP1  EXEC DSNNOTC,VOLSER=RCP501
//STETP1  EXEC DSNNOTC,VOLSER=RCP502
//STETP1  EXEC DSNNOTC,VOLSER=RCR200
//STETP1  EXEC DSNNOTC,VOLSER=RCR201
//STETP1  EXEC DSNNOTC,VOLSER=RCR202
//STETP1  EXEC DSNNOTC,VOLSER=RCR203
//STETP1  EXEC DSNNOTC,VOLSER=RCR204
//STETP1  EXEC DSNNOTC,VOLSER=RCR205
//STETP1  EXEC DSNNOTC,VOLSER=RCR206
//STETP1  EXEC DSNNOTC,VOLSER=RCR207
//STETP1  EXEC DSNNOTC,VOLSER=RCR208
//STETP1  EXEC DSNNOTC,VOLSER=RCR209
//STETP1  EXEC DSNNOTC,VOLSER=RCR210
//STETP1  EXEC DSNNOTC,VOLSER=RCR211
//STETP1  EXEC DSNNOTC,VOLSER=RCR212
//STETP1  EXEC DSNNOTC,VOLSER=RCR213
//STETP1  EXEC DSNNOTC,VOLSER=RCR214
//STETP1  EXEC DSNNOTC,VOLSER=RCR215
//STETP1  EXEC DSNNOTC,VOLSER=RCR216
//STETP1  EXEC DSNNOTC,VOLSER=RCR217
//STETP1  EXEC DSNNOTC,VOLSER=RCR218
//STETP1  EXEC DSNNOTC,VOLSER=RCR300
//STETP1  EXEC DSNNOTC,VOLSER=RCR301
//STETP1  EXEC DSNNOTC,VOLSER=RCR302
//STETP1  EXEC DSNNOTC,VOLSER=RCR303
//STETP1  EXEC DSNNOTC,VOLSER=RCR304
//STETP1  EXEC DSNNOTC,VOLSER=RCR305
//STETP1  EXEC DSNNOTC,VOLSER=RCR306
//STETP1  EXEC DSNNOTC,VOLSER=RCR307
//STETP1  EXEC DSNNOTC,VOLSER=RCR308
//STETP1  EXEC DSNNOTC,VOLSER=RCR309
//STETP1  EXEC DSNNOTC,VOLSER=RCR310
//STETP1  EXEC DSNNOTC,VOLSER=RCR311
//STETP1  EXEC DSNNOTC,VOLSER=RCR312
//STETP1  EXEC DSNNOTC,VOLSER=RCR313
//STETP1  EXEC DSNNOTC,VOLSER=RCR800
//STETP1  EXEC DSNNOTC,VOLSER=RCR801
//STETP1  EXEC DSNNOTC,VOLSER=RCR802
//STETP1  EXEC DSNNOTC,VOLSER=RCR803
//STETP1  EXEC DSNNOTC,VOLSER=RCR804
//STETP1  EXEC DSNNOTC,VOLSER=RCR805
//STETP1  EXEC DSNNOTC,VOLSER=RCR806
//STETP1  EXEC DSNNOTC,VOLSER=RCR807
//STETP1  EXEC DSNNOTC,VOLSER=RCR808
//STETP1  EXEC DSNNOTC,VOLSER=RCR809
//STETP1  EXEC DSNNOTC,VOLSER=RCR810
//STETP1  EXEC DSNNOTC,VOLSER=RCR811
//STETP1  EXEC DSNNOTC,VOLSER=RCR812
//STETP1  EXEC DSNNOTC,VOLSER=RCR813
//STETP1  EXEC DSNNOTC,VOLSER=RCR814
//STETP1  EXEC DSNNOTC,VOLSER=RCR815
//STETP1  EXEC DSNNOTC,VOLSER=RCR816
//STETP1  EXEC DSNNOTC,VOLSER=RCR817
//STETP1  EXEC DSNNOTC,VOLSER=RCR818
//STETP1  EXEC DSNNOTC,VOLSER=RCR819
//STETP1  EXEC DSNNOTC,VOLSER=RCR820
//STETP1  EXEC DSNNOTC,VOLSER=REFERA
//STETP1  EXEC DSNNOTC,VOLSER=REFERB
//STETP1  EXEC DSNNOTC,VOLSER=REFERC
//STETP1  EXEC DSNNOTC,VOLSER=RESTO1
//STETP1  EXEC DSNNOTC,VOLSER=RESTO2
//STETP1  EXEC DSNNOTC,VOLSER=RESTO3
//STETP1  EXEC DSNNOTC,VOLSER=RESTO4
//STETP1  EXEC DSNNOTC,VOLSER=RESTO5
//STETP1  EXEC DSNNOTC,VOLSER=SAVP01
//STETP1  EXEC DSNNOTC,VOLSER=SAVP02
//STETP1  EXEC DSNNOTC,VOLSER=SAVQ01
//STETP1  EXEC DSNNOTC,VOLSER=SAVQ02
//STETP1  EXEC DSNNOTC,VOLSER=SAVR01
//STETP1  EXEC DSNNOTC,VOLSER=SAVR02
//STETP1  EXEC DSNNOTC,VOLSER=SDB201
//STETP1  EXEC DSNNOTC,VOLSER=SIMR01
//STETP1  EXEC DSNNOTC,VOLSER=SIMR02
//STETP1  EXEC DSNNOTC,VOLSER=SIMUL1
//STETP1  EXEC DSNNOTC,VOLSER=SIMUL2
//STETP1  EXEC DSNNOTC,VOLSER=SIMUP1
//STETP1  EXEC DSNNOTC,VOLSER=SIMUP2
//STETP1  EXEC DSNNOTC,VOLSER=SIMU01
//STETP1  EXEC DSNNOTC,VOLSER=SIMU02
//STETP1  EXEC DSNNOTC,VOLSER=SIMU03
//STETP1  EXEC DSNNOTC,VOLSER=SIMU04
//STETP1  EXEC DSNNOTC,VOLSER=SIMU05
//STETP1  EXEC DSNNOTC,VOLSER=SMSR01
//STETP1  EXEC DSNNOTC,VOLSER=SMSR02
//STETP1  EXEC DSNNOTC,VOLSER=SMSR03
//STETP1  EXEC DSNNOTC,VOLSER=SMS001
//STETP1  EXEC DSNNOTC,VOLSER=SPLQU1
//STETP1  EXEC DSNNOTC,VOLSER=SPLQU2
//STETP1  EXEC DSNNOTC,VOLSER=SPLQU3
//STETP1  EXEC DSNNOTC,VOLSER=SPLQU4
//STETP1  EXEC DSNNOTC,VOLSER=SPLQU5
//STETP1  EXEC DSNNOTC,VOLSER=SPLQU6
//STETP1  EXEC DSNNOTC,VOLSER=SPLQU7
//STETP1  EXEC DSNNOTC,VOLSER=SPLRC0
//STETP1  EXEC DSNNOTC,VOLSER=SPLRC1
//STETP1  EXEC DSNNOTC,VOLSER=SPLRC2
//STETP1  EXEC DSNNOTC,VOLSER=SPLRC3
//STETP1  EXEC DSNNOTC,VOLSER=SPLRC4
//STETP1  EXEC DSNNOTC,VOLSER=SPLRC5
//STETP1  EXEC DSNNOTC,VOLSER=SPLRC6
//STETP1  EXEC DSNNOTC,VOLSER=SPLRC7
//STETP1  EXEC DSNNOTC,VOLSER=SPLSY1
//STETP1  EXEC DSNNOTC,VOLSER=SPLSY2
//STETP1  EXEC DSNNOTC,VOLSER=SPLSY3
//STETP1  EXEC DSNNOTC,VOLSER=SPOOLA
//STETP1  EXEC DSNNOTC,VOLSER=SPOOLB
//STETP1  EXEC DSNNOTC,VOLSER=SPOOL1
//STETP1  EXEC DSNNOTC,VOLSER=SPOOL2
//STETP1  EXEC DSNNOTC,VOLSER=SPOOL3
//STETP1  EXEC DSNNOTC,VOLSER=SPOOL4
//STETP1  EXEC DSNNOTC,VOLSER=SPOOL5
//STETP1  EXEC DSNNOTC,VOLSER=SPOOL6
//STETP1  EXEC DSNNOTC,VOLSER=SPOOL7
//STETP1  EXEC DSNNOTC,VOLSER=SPOOL8
//STETP1  EXEC DSNNOTC,VOLSER=SPOOL9
//STETP1  EXEC DSNNOTC,VOLSER=STDALN
//STETP1  EXEC DSNNOTC,VOLSER=STE001
//STETP1  EXEC DSNNOTC,VOLSER=STE002
//STETP1  EXEC DSNNOTC,VOLSER=STKNAN
//STETP1  EXEC DSNNOTC,VOLSER=SYPDB1
//STETP1  EXEC DSNNOTC,VOLSER=SYPDB2
//STETP1  EXEC DSNNOTC,VOLSER=SYPDB3
//STETP1  EXEC DSNNOTC,VOLSER=SYPDB4
//STETP1  EXEC DSNNOTC,VOLSER=SYPDB5
//STETP1  EXEC DSNNOTC,VOLSER=SYQDB1
//STETP1  EXEC DSNNOTC,VOLSER=SYQDB2
//STETP1  EXEC DSNNOTC,VOLSER=SYQDB3
//STETP1  EXEC DSNNOTC,VOLSER=SYQDB4
//STETP1  EXEC DSNNOTC,VOLSER=SYQDB5
//STETP1  EXEC DSNNOTC,VOLSER=SYSCO1
//STETP1  EXEC DSNNOTC,VOLSER=SYSCQ1
//STETP1  EXEC DSNNOTC,VOLSER=SYSCQ2
//STETP1  EXEC DSNNOTC,VOLSER=SYSCQ3
//STETP1  EXEC DSNNOTC,VOLSER=SYSCQ4
//STETP1  EXEC DSNNOTC,VOLSER=SYSCQ5
//STETP1  EXEC DSNNOTC,VOLSER=SYSCQ6
//STETP1  EXEC DSNNOTC,VOLSER=SYSCQ7
//STETP1  EXEC DSNNOTC,VOLSER=SYSCQ8
//STETP1  EXEC DSNNOTC,VOLSER=SYSCR0
//STETP1  EXEC DSNNOTC,VOLSER=SYSCS1
//STETP1  EXEC DSNNOTC,VOLSER=SYSCT1
//STETP1  EXEC DSNNOTC,VOLSER=SYSCVT
//STETP1  EXEC DSNNOTC,VOLSER=SYSC00
//STETP1  EXEC DSNNOTC,VOLSER=SYSC01
//STETP1  EXEC DSNNOTC,VOLSER=SYSC02
//STETP1  EXEC DSNNOTC,VOLSER=SYSC04
//STETP1  EXEC DSNNOTC,VOLSER=SYSC05
//STETP1  EXEC DSNNOTC,VOLSER=SYSC06
//STETP1  EXEC DSNNOTC,VOLSER=SYSC08
//STETP1  EXEC DSNNOTC,VOLSER=SYSC09
//STETP1  EXEC DSNNOTC,VOLSER=SYSC10
//STETP1  EXEC DSNNOTC,VOLSER=SYSC11
//STETP1  EXEC DSNNOTC,VOLSER=SYSC12
//STETP1  EXEC DSNNOTC,VOLSER=SYSC13
//STETP1  EXEC DSNNOTC,VOLSER=SYSC14
//STETP1  EXEC DSNNOTC,VOLSER=SYSC15
//STETP1  EXEC DSNNOTC,VOLSER=SYSC16
//STETP1  EXEC DSNNOTC,VOLSER=SYSC17
//STETP1  EXEC DSNNOTC,VOLSER=SYSC18
//STETP1  EXEC DSNNOTC,VOLSER=SYSC19
//STETP1  EXEC DSNNOTC,VOLSER=SYSC20
//STETP1  EXEC DSNNOTC,VOLSER=SYSC21
//STETP1  EXEC DSNNOTC,VOLSER=SYSC22
//STETP1  EXEC DSNNOTC,VOLSER=SYSC23
//STETP1  EXEC DSNNOTC,VOLSER=SYSC24
//STETP1  EXEC DSNNOTC,VOLSER=SYSC25
//STETP1  EXEC DSNNOTC,VOLSER=SYSC26
//STETP1  EXEC DSNNOTC,VOLSER=SYSC27
//STETP1  EXEC DSNNOTC,VOLSER=SYSC90
//STETP1  EXEC DSNNOTC,VOLSER=SYSC91
//STETP1  EXEC DSNNOTC,VOLSER=SYSC92
//STETP1  EXEC DSNNOTC,VOLSER=SYSC93
//STETP1  EXEC DSNNOTC,VOLSER=SYSC94
//STETP1  EXEC DSNNOTC,VOLSER=SYSC95
//STETP1  EXEC DSNNOTC,VOLSER=SYSC96
//STETP1  EXEC DSNNOTC,VOLSER=SYSDB1
//STETP1  EXEC DSNNOTC,VOLSER=SYSDB2
//STETP1  EXEC DSNNOTC,VOLSER=SYSDB3
//STETP1  EXEC DSNNOTC,VOLSER=SYSDB4
//STETP1  EXEC DSNNOTC,VOLSER=SYSDB5
//STETP1  EXEC DSNNOTC,VOLSER=SYSDB6
//STETP1  EXEC DSNNOTC,VOLSER=SYSDB7
//STETP1  EXEC DSNNOTC,VOLSER=SYSDB8
//STETP1  EXEC DSNNOTC,VOLSER=SYSDMP
//STETP1  EXEC DSNNOTC,VOLSER=SYSDS1
//STETP1  EXEC DSNNOTC,VOLSER=SYSDS2
//STETP1  EXEC DSNNOTC,VOLSER=SYSDS3
//STETP1  EXEC DSNNOTC,VOLSER=SYSDS4
//STETP1  EXEC DSNNOTC,VOLSER=SYSEVT
//STETP1  EXEC DSNNOTC,VOLSER=SYSEX1
//STETP1  EXEC DSNNOTC,VOLSER=SYSEX2
//STETP1  EXEC DSNNOTC,VOLSER=SYSEX3
//STETP1  EXEC DSNNOTC,VOLSER=SYSISA
//STETP1  EXEC DSNNOTC,VOLSER=SYSJVA
//STETP1  EXEC DSNNOTC,VOLSER=SYSJVP
//STETP1  EXEC DSNNOTC,VOLSER=SYSJVQ
//STETP1  EXEC DSNNOTC,VOLSER=SYSJVR
//STETP1  EXEC DSNNOTC,VOLSER=SYSJVS
//STETP1  EXEC DSNNOTC,VOLSER=SYSMON
//STETP1  EXEC DSNNOTC,VOLSER=SYSOSB
//STETP1  EXEC DSNNOTC,VOLSER=SYSOSC
//STETP1  EXEC DSNNOTC,VOLSER=SYSOS0
//STETP1  EXEC DSNNOTC,VOLSER=SYSO00
//STETP1  EXEC DSNNOTC,VOLSER=SYSO01
//STETP1  EXEC DSNNOTC,VOLSER=SYSO02
//STETP1  EXEC DSNNOTC,VOLSER=SYSO03
//STETP1  EXEC DSNNOTC,VOLSER=SYSO04
//STETP1  EXEC DSNNOTC,VOLSER=SYSO05
//STETP1  EXEC DSNNOTC,VOLSER=SYSO06
//STETP1  EXEC DSNNOTC,VOLSER=SYSO07
//STETP1  EXEC DSNNOTC,VOLSER=SYSO08
//STETP1  EXEC DSNNOTC,VOLSER=SYSO09
//STETP1  EXEC DSNNOTC,VOLSER=SYSO10
//STETP1  EXEC DSNNOTC,VOLSER=SYSO11
//STETP1  EXEC DSNNOTC,VOLSER=SYSO12
//STETP1  EXEC DSNNOTC,VOLSER=SYSPH1
//STETP1  EXEC DSNNOTC,VOLSER=SYSPH2
//STETP1  EXEC DSNNOTC,VOLSER=SYSPH3
//STETP1  EXEC DSNNOTC,VOLSER=SYSPH4
//STETP1  EXEC DSNNOTC,VOLSER=SYSPH5
//STETP1  EXEC DSNNOTC,VOLSER=SYSP01
//STETP1  EXEC DSNNOTC,VOLSER=SYSP02
//STETP1  EXEC DSNNOTC,VOLSER=SYSP03
//STETP1  EXEC DSNNOTC,VOLSER=SYSP04
//STETP1  EXEC DSNNOTC,VOLSER=SYSP05
//STETP1  EXEC DSNNOTC,VOLSER=SYSP06
//STETP1  EXEC DSNNOTC,VOLSER=SYSP07
//STETP1  EXEC DSNNOTC,VOLSER=SYSP08
//STETP1  EXEC DSNNOTC,VOLSER=SYSP09
//STETP1  EXEC DSNNOTC,VOLSER=SYSP10
//STETP1  EXEC DSNNOTC,VOLSER=SYSP11
//STETP1  EXEC DSNNOTC,VOLSER=SYSP12
//STETP1  EXEC DSNNOTC,VOLSER=SYSP13
//STETP1  EXEC DSNNOTC,VOLSER=SYSQD1
//STETP1  EXEC DSNNOTC,VOLSER=SYSQD4
//STETP1  EXEC DSNNOTC,VOLSER=SYSQH4
//STETP1  EXEC DSNNOTC,VOLSER=SYSQH5
//STETP1  EXEC DSNNOTC,VOLSER=SYSQH6
//STETP1  EXEC DSNNOTC,VOLSER=SYSQT1
//STETP1  EXEC DSNNOTC,VOLSER=SYSQ01
//STETP1  EXEC DSNNOTC,VOLSER=SYSQ02
//STETP1  EXEC DSNNOTC,VOLSER=SYSQ03
//STETP1  EXEC DSNNOTC,VOLSER=SYSQ04
//STETP1  EXEC DSNNOTC,VOLSER=SYSQ05
//STETP1  EXEC DSNNOTC,VOLSER=SYSQ06
//STETP1  EXEC DSNNOTC,VOLSER=SYSQ07
//STETP1  EXEC DSNNOTC,VOLSER=SYSQ08
//STETP1  EXEC DSNNOTC,VOLSER=SYSRD1
//STETP1  EXEC DSNNOTC,VOLSER=SYSRD2
//STETP1  EXEC DSNNOTC,VOLSER=SYSRD4
//STETP1  EXEC DSNNOTC,VOLSER=SYSREC
//STETP1  EXEC DSNNOTC,VOLSER=SYSRH0
//STETP1  EXEC DSNNOTC,VOLSER=SYSRH1
//STETP1  EXEC DSNNOTC,VOLSER=SYSRT1
//STETP1  EXEC DSNNOTC,VOLSER=SYSRT2
//STETP1  EXEC DSNNOTC,VOLSER=SYSRT3
//STETP1  EXEC DSNNOTC,VOLSER=SYSR01
//STETP1  EXEC DSNNOTC,VOLSER=SYSR02
//STETP1  EXEC DSNNOTC,VOLSER=SYSR03
//STETP1  EXEC DSNNOTC,VOLSER=SYSR04
//STETP1  EXEC DSNNOTC,VOLSER=SYSR05
//STETP1  EXEC DSNNOTC,VOLSER=SYSR06
//STETP1  EXEC DSNNOTC,VOLSER=SYSR07
//STETP1  EXEC DSNNOTC,VOLSER=SYSR08
//STETP1  EXEC DSNNOTC,VOLSER=SYSR09
//STETP1  EXEC DSNNOTC,VOLSER=SYSR10
//STETP1  EXEC DSNNOTC,VOLSER=SYSR11
//STETP1  EXEC DSNNOTC,VOLSER=SYSR12
//STETP1  EXEC DSNNOTC,VOLSER=SYSR13
//STETP1  EXEC DSNNOTC,VOLSER=SYSSYS
//STETP1  EXEC DSNNOTC,VOLSER=SYSTEM
//STETP1  EXEC DSNNOTC,VOLSER=SYSTH1
//STETP1  EXEC DSNNOTC,VOLSER=SYSTH2
//STETP1  EXEC DSNNOTC,VOLSER=SYSTL1
//STETP1  EXEC DSNNOTC,VOLSER=SYSTMP
//STETP1  EXEC DSNNOTC,VOLSER=SYSTQ1
//STETP1  EXEC DSNNOTC,VOLSER=SYSTQ2
//STETP1  EXEC DSNNOTC,VOLSER=SYSTQ3
//STETP1  EXEC DSNNOTC,VOLSER=SYSTQ4
//STETP1  EXEC DSNNOTC,VOLSER=SYSTQ5
//STETP1  EXEC DSNNOTC,VOLSER=SYSTRQ
//STETP1  EXEC DSNNOTC,VOLSER=SYSTR0
//STETP1  EXEC DSNNOTC,VOLSER=SYSTR9
//STETP1  EXEC DSNNOTC,VOLSER=SYST01
//STETP1  EXEC DSNNOTC,VOLSER=SYST02
//STETP1  EXEC DSNNOTC,VOLSER=SYST03
//STETP1  EXEC DSNNOTC,VOLSER=SYST04
//STETP1  EXEC DSNNOTC,VOLSER=SYST05
//STETP1  EXEC DSNNOTC,VOLSER=SYST06
//STETP1  EXEC DSNNOTC,VOLSER=SYST07
//STETP1  EXEC DSNNOTC,VOLSER=SYST08
//STETP1  EXEC DSNNOTC,VOLSER=SYST09
//STETP1  EXEC DSNNOTC,VOLSER=SYST10
//STETP1  EXEC DSNNOTC,VOLSER=SYST11
//STETP1  EXEC DSNNOTC,VOLSER=SYST12
//STETP1  EXEC DSNNOTC,VOLSER=SYST13
//STETP1  EXEC DSNNOTC,VOLSER=SYST14
//STETP1  EXEC DSNNOTC,VOLSER=SYST15
//STETP1  EXEC DSNNOTC,VOLSER=SYST16
//STETP1  EXEC DSNNOTC,VOLSER=SYST17
//STETP1  EXEC DSNNOTC,VOLSER=SYST18
//STETP1  EXEC DSNNOTC,VOLSER=SYST19
//STETP1  EXEC DSNNOTC,VOLSER=SYST20
//STETP1  EXEC DSNNOTC,VOLSER=SYST21
//STETP1  EXEC DSNNOTC,VOLSER=SYST22
//STETP1  EXEC DSNNOTC,VOLSER=SYST23
//STETP1  EXEC DSNNOTC,VOLSER=SYST24
//STETP1  EXEC DSNNOTC,VOLSER=SYST25
//STETP1  EXEC DSNNOTC,VOLSER=SYST26
//STETP1  EXEC DSNNOTC,VOLSER=SYST27
//STETP1  EXEC DSNNOTC,VOLSER=SYST28
//STETP1  EXEC DSNNOTC,VOLSER=SYST29
//STETP1  EXEC DSNNOTC,VOLSER=SYST30
//STETP1  EXEC DSNNOTC,VOLSER=SYST31
//STETP1  EXEC DSNNOTC,VOLSER=SYST33
//STETP1  EXEC DSNNOTC,VOLSER=SYST34
//STETP1  EXEC DSNNOTC,VOLSER=SYST35
//STETP1  EXEC DSNNOTC,VOLSER=SYST36
//STETP1  EXEC DSNNOTC,VOLSER=SYST37
//STETP1  EXEC DSNNOTC,VOLSER=SYST39
//STETP1  EXEC DSNNOTC,VOLSER=SYST40
//STETP1  EXEC DSNNOTC,VOLSER=SYST43
//STETP1  EXEC DSNNOTC,VOLSER=SYST44
//STETP1  EXEC DSNNOTC,VOLSER=SYST47
//STETP1  EXEC DSNNOTC,VOLSER=SYST48
//STETP1  EXEC DSNNOTC,VOLSER=SYST49
//STETP1  EXEC DSNNOTC,VOLSER=SYST50
//STETP1  EXEC DSNNOTC,VOLSER=SYST51
//STETP1  EXEC DSNNOTC,VOLSER=SYST52
//STETP1  EXEC DSNNOTC,VOLSER=SYST53
//STETP1  EXEC DSNNOTC,VOLSER=SYST54
//STETP1  EXEC DSNNOTC,VOLSER=SYST56
//STETP1  EXEC DSNNOTC,VOLSER=SYST87
//STETP1  EXEC DSNNOTC,VOLSER=SYST92
//STETP1  EXEC DSNNOTC,VOLSER=SYST93
//STETP1  EXEC DSNNOTC,VOLSER=SYST95
//STETP1  EXEC DSNNOTC,VOLSER=SYST96
//STETP1  EXEC DSNNOTC,VOLSER=SYST97
//STETP1  EXEC DSNNOTC,VOLSER=SYST98
//STETP1  EXEC DSNNOTC,VOLSER=SYSV00
//STETP1  EXEC DSNNOTC,VOLSER=SYSXQA
//STETP1  EXEC DSNNOTC,VOLSER=SYSXQB
//STETP1  EXEC DSNNOTC,VOLSER=SYSXRA
//STETP1  EXEC DSNNOTC,VOLSER=SYSXRB
//STETP1  EXEC DSNNOTC,VOLSER=SYSX2A
//STETP1  EXEC DSNNOTC,VOLSER=SYSX2B
//STETP1  EXEC DSNNOTC,VOLSER=SYS001
//STETP1  EXEC DSNNOTC,VOLSER=SYS002
//STETP1  EXEC DSNNOTC,VOLSER=SYS003
//STETP1  EXEC DSNNOTC,VOLSER=SYS004
//STETP1  EXEC DSNNOTC,VOLSER=SYS005
//STETP1  EXEC DSNNOTC,VOLSER=SYS006
//STETP1  EXEC DSNNOTC,VOLSER=SYS1MC
//STETP1  EXEC DSNNOTC,VOLSER=SYS2D1
//STETP1  EXEC DSNNOTC,VOLSER=SYS2D4
//STETP1  EXEC DSNNOTC,VOLSER=SYS2T1
//STETP1  EXEC DSNNOTC,VOLSER=SYS2T2
//STETP1  EXEC DSNNOTC,VOLSER=SYS2T3
//STETP1  EXEC DSNNOTC,VOLSER=SYS2T4
//STETP1  EXEC DSNNOTC,VOLSER=SYS200
//STETP1  EXEC DSNNOTC,VOLSER=SYS201
//STETP1  EXEC DSNNOTC,VOLSER=SYS202
//STETP1  EXEC DSNNOTC,VOLSER=SYS203
//STETP1  EXEC DSNNOTC,VOLSER=SYS204
//STETP1  EXEC DSNNOTC,VOLSER=SYS205
//STETP1  EXEC DSNNOTC,VOLSER=SYS5T1
//STETP1  EXEC DSNNOTC,VOLSER=SYS5T2
//STETP1  EXEC DSNNOTC,VOLSER=SYS5T3
//STETP1  EXEC DSNNOTC,VOLSER=SYS700
//STETP1  EXEC DSNNOTC,VOLSER=SYS701
//STETP1  EXEC DSNNOTC,VOLSER=SYS702
//STETP1  EXEC DSNNOTC,VOLSER=SYS703
//STETP1  EXEC DSNNOTC,VOLSER=SYS704
//STETP1  EXEC DSNNOTC,VOLSER=SYS800
//STETP1  EXEC DSNNOTC,VOLSER=SYS801
//STETP1  EXEC DSNNOTC,VOLSER=SYS802
//STETP1  EXEC DSNNOTC,VOLSER=SYS803
//STETP1  EXEC DSNNOTC,VOLSER=SYS804
//STETP1  EXEC DSNNOTC,VOLSER=SYS805
//STETP1  EXEC DSNNOTC,VOLSER=SYS806
//STETP1  EXEC DSNNOTC,VOLSER=SYS90A
//STETP1  EXEC DSNNOTC,VOLSER=SYS90B
//STETP1  EXEC DSNNOTC,VOLSER=SYS90C
//STETP1  EXEC DSNNOTC,VOLSER=SYS90D
//STETP1  EXEC DSNNOTC,VOLSER=SYS90E
//STETP1  EXEC DSNNOTC,VOLSER=SYS90F
//STETP1  EXEC DSNNOTC,VOLSER=SYS90G
//STETP1  EXEC DSNNOTC,VOLSER=SYS900
//STETP1  EXEC DSNNOTC,VOLSER=SYS901
//STETP1  EXEC DSNNOTC,VOLSER=SYS902
//STETP1  EXEC DSNNOTC,VOLSER=SYS903
//STETP1  EXEC DSNNOTC,VOLSER=SYS904
//STETP1  EXEC DSNNOTC,VOLSER=SYS905
//STETP1  EXEC DSNNOTC,VOLSER=SYS906
//STETP1  EXEC DSNNOTC,VOLSER=SYS907
//STETP1  EXEC DSNNOTC,VOLSER=SYS908
//STETP1  EXEC DSNNOTC,VOLSER=SYS909
//STETP1  EXEC DSNNOTC,VOLSER=SYS910
//STETP1  EXEC DSNNOTC,VOLSER=SYS911
//STETP1  EXEC DSNNOTC,VOLSER=SYS912
//STETP1  EXEC DSNNOTC,VOLSER=SYS913
//STETP1  EXEC DSNNOTC,VOLSER=SYS914
//STETP1  EXEC DSNNOTC,VOLSER=SYS915
//STETP1  EXEC DSNNOTC,VOLSER=SYS916
//STETP1  EXEC DSNNOTC,VOLSER=SYS918
//STETP1  EXEC DSNNOTC,VOLSER=SYS919
//STETP1  EXEC DSNNOTC,VOLSER=SYS920
//STETP1  EXEC DSNNOTC,VOLSER=SYS922
//STETP1  EXEC DSNNOTC,VOLSER=SYS923
//STETP1  EXEC DSNNOTC,VOLSER=SYS924
//STETP1  EXEC DSNNOTC,VOLSER=SYS930
//STETP1  EXEC DSNNOTC,VOLSER=SYS931
//STETP1  EXEC DSNNOTC,VOLSER=SYS932
//STETP1  EXEC DSNNOTC,VOLSER=SYS933
//STETP1  EXEC DSNNOTC,VOLSER=SYS934
//STETP1  EXEC DSNNOTC,VOLSER=SYS935
//STETP1  EXEC DSNNOTC,VOLSER=SYS936
//STETP1  EXEC DSNNOTC,VOLSER=SYS937
//STETP1  EXEC DSNNOTC,VOLSER=SYS938
//STETP1  EXEC DSNNOTC,VOLSER=SYS939
//STETP1  EXEC DSNNOTC,VOLSER=SYS940
//STETP1  EXEC DSNNOTC,VOLSER=SYS941
//STETP1  EXEC DSNNOTC,VOLSER=SYS953
//STETP1  EXEC DSNNOTC,VOLSER=SYS990
//STETP1  EXEC DSNNOTC,VOLSER=SYS991
//STETP1  EXEC DSNNOTC,VOLSER=SYS992
//STETP1  EXEC DSNNOTC,VOLSER=SYS993
//STETP1  EXEC DSNNOTC,VOLSER=TFA001
//STETP1  EXEC DSNNOTC,VOLSER=TFA002
//STETP1  EXEC DSNNOTC,VOLSER=TFA003
//STETP1  EXEC DSNNOTC,VOLSER=TFA004
//STETP1  EXEC DSNNOTC,VOLSER=TFA005
//STETP1  EXEC DSNNOTC,VOLSER=TFA006
//STETP1  EXEC DSNNOTC,VOLSER=TFA007
//STETP1  EXEC DSNNOTC,VOLSER=TFA008
//STETP1  EXEC DSNNOTC,VOLSER=TFA009
//STETP1  EXEC DSNNOTC,VOLSER=TFA010
//STETP1  EXEC DSNNOTC,VOLSER=TFA011
//STETP1  EXEC DSNNOTC,VOLSER=TFA012
//STETP1  EXEC DSNNOTC,VOLSER=TFA013
//STETP1  EXEC DSNNOTC,VOLSER=TFA014
//STETP1  EXEC DSNNOTC,VOLSER=TFA015
//STETP1  EXEC DSNNOTC,VOLSER=TFA016
//STETP1  EXEC DSNNOTC,VOLSER=TFA017
//STETP1  EXEC DSNNOTC,VOLSER=TFA018
//STETP1  EXEC DSNNOTC,VOLSER=TFA019
//STETP1  EXEC DSNNOTC,VOLSER=TFA020
//STETP1  EXEC DSNNOTC,VOLSER=TFA021
//STETP1  EXEC DSNNOTC,VOLSER=TFA022
//STETP1  EXEC DSNNOTC,VOLSER=TFA023
//STETP1  EXEC DSNNOTC,VOLSER=TFA024
//STETP1  EXEC DSNNOTC,VOLSER=TFA025
//STETP1  EXEC DSNNOTC,VOLSER=TFA026
//STETP1  EXEC DSNNOTC,VOLSER=TFA027
//STETP1  EXEC DSNNOTC,VOLSER=TFA028
//STETP1  EXEC DSNNOTC,VOLSER=TFA029
//STETP1  EXEC DSNNOTC,VOLSER=TFA030
//STETP1  EXEC DSNNOTC,VOLSER=TFA031
//STETP1  EXEC DSNNOTC,VOLSER=TFA032
//STETP1  EXEC DSNNOTC,VOLSER=TFA033
//STETP1  EXEC DSNNOTC,VOLSER=TFA034
//STETP1  EXEC DSNNOTC,VOLSER=TFA035
//STETP1  EXEC DSNNOTC,VOLSER=TFA036
//STETP1  EXEC DSNNOTC,VOLSER=TFA037
//STETP1  EXEC DSNNOTC,VOLSER=TFA038
//STETP1  EXEC DSNNOTC,VOLSER=TFA039
//STETP1  EXEC DSNNOTC,VOLSER=TFA040
//STETP1  EXEC DSNNOTC,VOLSER=TFA041
//STETP1  EXEC DSNNOTC,VOLSER=TFA042
//STETP1  EXEC DSNNOTC,VOLSER=TFA043
//STETP1  EXEC DSNNOTC,VOLSER=TFA044
//STETP1  EXEC DSNNOTC,VOLSER=TFA045
//STETP1  EXEC DSNNOTC,VOLSER=TFA046
//STETP1  EXEC DSNNOTC,VOLSER=TFA047
//STETP1  EXEC DSNNOTC,VOLSER=TFA048
//STETP1  EXEC DSNNOTC,VOLSER=TFA049
//STETP1  EXEC DSNNOTC,VOLSER=TFA050
//STETP1  EXEC DSNNOTC,VOLSER=TFA051
//STETP1  EXEC DSNNOTC,VOLSER=TFA052
//STETP1  EXEC DSNNOTC,VOLSER=TFA053
//STETP1  EXEC DSNNOTC,VOLSER=TFA054
//STETP1  EXEC DSNNOTC,VOLSER=TFA055
//STETP1  EXEC DSNNOTC,VOLSER=TMPS01
//STETP1  EXEC DSNNOTC,VOLSER=TRANSF
//STETP1  EXEC DSNNOTC,VOLSER=TSOL01
//STETP1  EXEC DSNNOTC,VOLSER=TSOP01
//STETP1  EXEC DSNNOTC,VOLSER=TSOS01
//STETP1  EXEC DSNNOTC,VOLSER=TSO001
//STETP1  EXEC DSNNOTC,VOLSER=TSO002
//STETP1  EXEC DSNNOTC,VOLSER=TSO003
//STETP1  EXEC DSNNOTC,VOLSER=TSO901
//STETP1  EXEC DSNNOTC,VOLSER=TSO902
//STETP1  EXEC DSNNOTC,VOLSER=TSO904
//STETP1  EXEC DSNNOTC,VOLSER=TST200
//STETP1  EXEC DSNNOTC,VOLSER=TST201
//STETP1  EXEC DSNNOTC,VOLSER=VATP01
//STETP1  EXEC DSNNOTC,VOLSER=VATP02
//STETP1  EXEC DSNNOTC,VOLSER=VATP03
//STETP1  EXEC DSNNOTC,VOLSER=VATQ01
//STETP1  EXEC DSNNOTC,VOLSER=VATQ02
//STETP1  EXEC DSNNOTC,VOLSER=VATR01
//STETP1  EXEC DSNNOTC,VOLSER=VATR02
//STETP1  EXEC DSNNOTC,VOLSER=VATS01
//STETP1  EXEC DSNNOTC,VOLSER=VATS02
//STETP1  EXEC DSNNOTC,VOLSER=VATS03
//STETP1  EXEC DSNNOTC,VOLSER=VATS04
//STETP1  EXEC DSNNOTC,VOLSER=VATS05
//STETP1  EXEC DSNNOTC,VOLSER=VATS06
//STETP1  EXEC DSNNOTC,VOLSER=VCATP0
//STETP1  EXEC DSNNOTC,VOLSER=VCATP1
//STETP1  EXEC DSNNOTC,VOLSER=VCATQ0
//STETP1  EXEC DSNNOTC,VOLSER=VCATQ1
//STETP1  EXEC DSNNOTC,VOLSER=VCATR0
//STETP1  EXEC DSNNOTC,VOLSER=VCATR1
//STETP1  EXEC DSNNOTC,VOLSER=VCATS0
//STETP1  EXEC DSNNOTC,VOLSER=WKILSI
//STETP1  EXEC DSNNOTC,VOLSER=WORKBF
//STETP1  EXEC DSNNOTC,VOLSER=WORKB1
//STETP1  EXEC DSNNOTC,VOLSER=WORKB2
//STETP1  EXEC DSNNOTC,VOLSER=WORKB3
//STETP1  EXEC DSNNOTC,VOLSER=WORKB5
//STETP1  EXEC DSNNOTC,VOLSER=WORKC0
//STETP1  EXEC DSNNOTC,VOLSER=WORKC1
//STETP1  EXEC DSNNOTC,VOLSER=WORKC2
//STETP1  EXEC DSNNOTC,VOLSER=WORKC3
//STETP1  EXEC DSNNOTC,VOLSER=WORKC4
//STETP1  EXEC DSNNOTC,VOLSER=WORK01
//STETP1  EXEC DSNNOTC,VOLSER=WORK02
//STETP1  EXEC DSNNOTC,VOLSER=WORK03
//STETP1  EXEC DSNNOTC,VOLSER=WORK04
//STETP1  EXEC DSNNOTC,VOLSER=WORK05
//STETP1  EXEC DSNNOTC,VOLSER=WORK06
//STETP1  EXEC DSNNOTC,VOLSER=WORK07
//STETP1  EXEC DSNNOTC,VOLSER=WORK08
//STETP1  EXEC DSNNOTC,VOLSER=WORK09
//STETP1  EXEC DSNNOTC,VOLSER=WORK10
//STETP1  EXEC DSNNOTC,VOLSER=WORK11
//STETP1  EXEC DSNNOTC,VOLSER=WORK12
//STETP1  EXEC DSNNOTC,VOLSER=WORK13
//STETP1  EXEC DSNNOTC,VOLSER=WORK14
//STETP1  EXEC DSNNOTC,VOLSER=WORK15
//STETP1  EXEC DSNNOTC,VOLSER=WORK16
//STETP1  EXEC DSNNOTC,VOLSER=WORK17
//STETP1  EXEC DSNNOTC,VOLSER=WORK18
//STETP1  EXEC DSNNOTC,VOLSER=WORK19
//STETP1  EXEC DSNNOTC,VOLSER=WORK20
//STETP1  EXEC DSNNOTC,VOLSER=WORK21
//STETP1  EXEC DSNNOTC,VOLSER=WORK22
//STETP1  EXEC DSNNOTC,VOLSER=WORK23
//STETP1  EXEC DSNNOTC,VOLSER=WORK24
//STETP1  EXEC DSNNOTC,VOLSER=WORK25
//STETP1  EXEC DSNNOTC,VOLSER=WORK26
//STETP1  EXEC DSNNOTC,VOLSER=WORK27
//STETP1  EXEC DSNNOTC,VOLSER=WORK28
//STETP1  EXEC DSNNOTC,VOLSER=WORK29
//STETP1  EXEC DSNNOTC,VOLSER=WORK30
//STETP1  EXEC DSNNOTC,VOLSER=WORK31
//STETP1  EXEC DSNNOTC,VOLSER=WORK32
//STETP1  EXEC DSNNOTC,VOLSER=WORK33
//STETP1  EXEC DSNNOTC,VOLSER=WORK34
//STETP1  EXEC DSNNOTC,VOLSER=WORK35
//STETP1  EXEC DSNNOTC,VOLSER=WORK36
//STETP1  EXEC DSNNOTC,VOLSER=WORK37
//STETP1  EXEC DSNNOTC,VOLSER=WORK38
//STETP1  EXEC DSNNOTC,VOLSER=WORK39
//STETP1  EXEC DSNNOTC,VOLSER=WORK40
//STETP1  EXEC DSNNOTC,VOLSER=WORK41
//STETP1  EXEC DSNNOTC,VOLSER=WORK42
//STETP1  EXEC DSNNOTC,VOLSER=WORK43
//STETP1  EXEC DSNNOTC,VOLSER=WORK44
//STETP1  EXEC DSNNOTC,VOLSER=WORK45
//STETP1  EXEC DSNNOTC,VOLSER=WORK46
//STETP1  EXEC DSNNOTC,VOLSER=WORK47
//STETP1  EXEC DSNNOTC,VOLSER=WORK48
//STETP1  EXEC DSNNOTC,VOLSER=WORK49
//STETP1  EXEC DSNNOTC,VOLSER=WORK50
//STETP1  EXEC DSNNOTC,VOLSER=WORK51
//STETP1  EXEC DSNNOTC,VOLSER=WORK52
//STETP1  EXEC DSNNOTC,VOLSER=WORK53
//STETP1  EXEC DSNNOTC,VOLSER=WORK54
//STETP1  EXEC DSNNOTC,VOLSER=WORK55
//STETP1  EXEC DSNNOTC,VOLSER=WORK56
//STETP1  EXEC DSNNOTC,VOLSER=WORK57
//STETP1  EXEC DSNNOTC,VOLSER=WORK58
//STETP1  EXEC DSNNOTC,VOLSER=WORK59
//STETP1  EXEC DSNNOTC,VOLSER=WORK60
//STETP1  EXEC DSNNOTC,VOLSER=WORK61
//STETP1  EXEC DSNNOTC,VOLSER=WORK62
//STETP1  EXEC DSNNOTC,VOLSER=WORK63
//STETP1  EXEC DSNNOTC,VOLSER=WORK64
//STETP1  EXEC DSNNOTC,VOLSER=WORK65
//STETP1  EXEC DSNNOTC,VOLSER=WORK66
//STETP1  EXEC DSNNOTC,VOLSER=WORK67
//STETP1  EXEC DSNNOTC,VOLSER=WORK68
//STETP1  EXEC DSNNOTC,VOLSER=WORK69
//STETP1  EXEC DSNNOTC,VOLSER=WORK70
//STETP1  EXEC DSNNOTC,VOLSER=WORK71
//STETP1  EXEC DSNNOTC,VOLSER=WORK72
//STETP1  EXEC DSNNOTC,VOLSER=WORK73
//STETP1  EXEC DSNNOTC,VOLSER=WORK74
//STETP1  EXEC DSNNOTC,VOLSER=WORK75
//STETP1  EXEC DSNNOTC,VOLSER=WORK76
//STETP1  EXEC DSNNOTC,VOLSER=WORK77
//STETP1  EXEC DSNNOTC,VOLSER=WORK78
//STETP1  EXEC DSNNOTC,VOLSER=WORK79
//STETP1  EXEC DSNNOTC,VOLSER=WORK80
//STETP1  EXEC DSNNOTC,VOLSER=WORK81
//STETP1  EXEC DSNNOTC,VOLSER=WORK82
//STETP1  EXEC DSNNOTC,VOLSER=WORK83
//STETP1  EXEC DSNNOTC,VOLSER=WORK84
//STETP1  EXEC DSNNOTC,VOLSER=WORK85
//STETP1  EXEC DSNNOTC,VOLSER=WORK86
//STETP1  EXEC DSNNOTC,VOLSER=WORK87
//STETP1  EXEC DSNNOTC,VOLSER=WORK88
//STETP1  EXEC DSNNOTC,VOLSER=WORK89
//STETP1  EXEC DSNNOTC,VOLSER=WORK90
//STETP1  EXEC DSNNOTC,VOLSER=WORK91
//STETP1  EXEC DSNNOTC,VOLSER=WORK92
//STETP1  EXEC DSNNOTC,VOLSER=WORK93
//STETP1  EXEC DSNNOTC,VOLSER=WORK94
//STETP1  EXEC DSNNOTC,VOLSER=WORK95
//STETP1  EXEC DSNNOTC,VOLSER=WORK96
//STETP1  EXEC DSNNOTC,VOLSER=WORK97
//STETP1  EXEC DSNNOTC,VOLSER=WORK98
//STETP1  EXEC DSNNOTC,VOLSER=WRKLB1
//STETP1  EXEC DSNNOTC,VOLSER=WRKLB2
//STETP1  EXEC DSNNOTC,VOLSER=WRKLOA
//STETP1  EXEC DSNNOTC,VOLSER=WRKLOB
//STETP1  EXEC DSNNOTC,VOLSER=WRKLOC
//STETP1  EXEC DSNNOTC,VOLSER=WRKLOD
//STETP1  EXEC DSNNOTC,VOLSER=WRKLOE
//STETP1  EXEC DSNNOTC,VOLSER=WRKLOF
//STETP1  EXEC DSNNOTC,VOLSER=WRKQAA
//STETP1  EXEC DSNNOTC,VOLSER=WRKQAB
//STETP1  EXEC DSNNOTC,VOLSER=WRKQAC
//STETP1  EXEC DSNNOTC,VOLSER=WRKQAD
//STETP1  EXEC DSNNOTC,VOLSER=WRKQAE
//STETP1  EXEC DSNNOTC,VOLSER=WRKQAF
//STETP1  EXEC DSNNOTC,VOLSER=WRKQA0
//STETP1  EXEC DSNNOTC,VOLSER=WRKQA1
//STETP1  EXEC DSNNOTC,VOLSER=WRKQA2
//STETP1  EXEC DSNNOTC,VOLSER=WRKQA3
//STETP1  EXEC DSNNOTC,VOLSER=WRKQA4
//STETP1  EXEC DSNNOTC,VOLSER=WRKQA5
//STETP1  EXEC DSNNOTC,VOLSER=WRKQA6
//STETP1  EXEC DSNNOTC,VOLSER=WRKQA7
//STETP1  EXEC DSNNOTC,VOLSER=WRKQA8
//STETP1  EXEC DSNNOTC,VOLSER=WRKQA9
//STETP1  EXEC DSNNOTC,VOLSER=WRKQB1
//STETP1  EXEC DSNNOTC,VOLSER=WRKQB2
//STETP1  EXEC DSNNOTC,VOLSER=WRKQB3
//STETP1  EXEC DSNNOTC,VOLSER=WRKQC1
//STETP1  EXEC DSNNOTC,VOLSER=WRKQC2
//STETP1  EXEC DSNNOTC,VOLSER=WRKQC3
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ00
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ01
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ02
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ03
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ04
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ05
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ06
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ07
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ08
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ09
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ10
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ11
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ12
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ13
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ14
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ15
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ16
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ17
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ18
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ19
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ20
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ21
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ22
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ23
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ24
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ25
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ26
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ27
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ28
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ29
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ30
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ31
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ32
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ33
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ34
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ35
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ36
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ37
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ38
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ39
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ40
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ41
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ42
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ43
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ44
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ45
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ46
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ47
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ48
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ49
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ50
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ51
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ52
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ53
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ54
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ55
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ56
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ57
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ58
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ59
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ60
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ61
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ62
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ63
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ64
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ65
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ66
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ67
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ68
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ69
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ70
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ71
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ72
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ73
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ74
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ75
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ76
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ77
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ78
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ79
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ80
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ82
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ83
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ84
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ85
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ86
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ87
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ88
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ89
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ90
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ91
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ92
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ93
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ94
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ95
//STETP1  EXEC DSNNOTC,VOLSER=WRKQ96
//STETP1  EXEC DSNNOTC,VOLSER=WRKR00
//STETP1  EXEC DSNNOTC,VOLSER=WRKR01
//STETP1  EXEC DSNNOTC,VOLSER=WRKR02
//STETP1  EXEC DSNNOTC,VOLSER=WRKR03
//STETP1  EXEC DSNNOTC,VOLSER=WRKR04
//STETP1  EXEC DSNNOTC,VOLSER=WRKR05
//STETP1  EXEC DSNNOTC,VOLSER=WRKR06
//STETP1  EXEC DSNNOTC,VOLSER=WRKR07
//STETP1  EXEC DSNNOTC,VOLSER=WRKR08
//STETP1  EXEC DSNNOTC,VOLSER=WRKR09
//STETP1  EXEC DSNNOTC,VOLSER=WRKR10
//STETP1  EXEC DSNNOTC,VOLSER=WRKR11
//STETP1  EXEC DSNNOTC,VOLSER=WRKR12
//STETP1  EXEC DSNNOTC,VOLSER=WRKR13
//STETP1  EXEC DSNNOTC,VOLSER=WRKR14
//STETP1  EXEC DSNNOTC,VOLSER=WRKR15
//STETP1  EXEC DSNNOTC,VOLSER=WRKR16
//STETP1  EXEC DSNNOTC,VOLSER=WRKR17
//STETP1  EXEC DSNNOTC,VOLSER=WRKR18
//STETP1  EXEC DSNNOTC,VOLSER=WRKR19
//STETP1  EXEC DSNNOTC,VOLSER=WRKR20
//STETP1  EXEC DSNNOTC,VOLSER=WRKR21
//STETP1  EXEC DSNNOTC,VOLSER=WRKR22
//STETP1  EXEC DSNNOTC,VOLSER=WRKR23
//STETP1  EXEC DSNNOTC,VOLSER=WRKR24
//STETP1  EXEC DSNNOTC,VOLSER=WRKR25
//STETP1  EXEC DSNNOTC,VOLSER=WRKR26
//STETP1  EXEC DSNNOTC,VOLSER=WRKR27
//STETP1  EXEC DSNNOTC,VOLSER=WRKR28
//STETP1  EXEC DSNNOTC,VOLSER=WRKR29
//STETP1  EXEC DSNNOTC,VOLSER=WRKR30
//STETP1  EXEC DSNNOTC,VOLSER=WRKR31
//STETP1  EXEC DSNNOTC,VOLSER=WRKR32
//STETP1  EXEC DSNNOTC,VOLSER=WRKR33
//STETP1  EXEC DSNNOTC,VOLSER=WRKR34
//STETP1  EXEC DSNNOTC,VOLSER=WRKR35
//STETP1  EXEC DSNNOTC,VOLSER=WRKR36
//STETP1  EXEC DSNNOTC,VOLSER=WRKR37
//STETP1  EXEC DSNNOTC,VOLSER=WRKR38
//STETP1  EXEC DSNNOTC,VOLSER=WRKR39
//STETP1  EXEC DSNNOTC,VOLSER=WRKR40
//STETP1  EXEC DSNNOTC,VOLSER=WRKR41
//STETP1  EXEC DSNNOTC,VOLSER=WRKR42
//STETP1  EXEC DSNNOTC,VOLSER=WRKR43
//STETP1  EXEC DSNNOTC,VOLSER=WRKR44
//STETP1  EXEC DSNNOTC,VOLSER=WRKR45
//STETP1  EXEC DSNNOTC,VOLSER=WRKR46
//STETP1  EXEC DSNNOTC,VOLSER=WRKR47
//STETP1  EXEC DSNNOTC,VOLSER=WRKR48
//STETP1  EXEC DSNNOTC,VOLSER=WRKR49
//STETP1  EXEC DSNNOTC,VOLSER=WRKR50
//STETP1  EXEC DSNNOTC,VOLSER=WRKR51
//STETP1  EXEC DSNNOTC,VOLSER=WRKR52
//STETP1  EXEC DSNNOTC,VOLSER=WRKR53
//STETP1  EXEC DSNNOTC,VOLSER=WRKS01
//STETP1  EXEC DSNNOTC,VOLSER=WRKS02
//STETP1  EXEC DSNNOTC,VOLSER=WRKS03
//STETP1  EXEC DSNNOTC,VOLSER=WRK10A
//STETP1  EXEC DSNNOTC,VOLSER=WRK10B
//STETP1  EXEC DSNNOTC,VOLSER=WRK10C
//STETP1  EXEC DSNNOTC,VOLSER=WRK10D
//STETP1  EXEC DSNNOTC,VOLSER=WRK10E
//STETP1  EXEC DSNNOTC,VOLSER=WRK10F
//STETP1  EXEC DSNNOTC,VOLSER=WRK11A
//STETP1  EXEC DSNNOTC,VOLSER=WRK11B
//STETP1  EXEC DSNNOTC,VOLSER=WRK11C
//STETP1  EXEC DSNNOTC,VOLSER=WRK11D
//STETP1  EXEC DSNNOTC,VOLSER=WRK11E
//STETP1  EXEC DSNNOTC,VOLSER=WRK11F
//STETP1  EXEC DSNNOTC,VOLSER=WRK12A
//STETP1  EXEC DSNNOTC,VOLSER=WRK12B
//STETP1  EXEC DSNNOTC,VOLSER=WRK12C
//STETP1  EXEC DSNNOTC,VOLSER=WRK12D
//STETP1  EXEC DSNNOTC,VOLSER=WRK12E
//STETP1  EXEC DSNNOTC,VOLSER=WRK12F
//STETP1  EXEC DSNNOTC,VOLSER=WRK13A
//STETP1  EXEC DSNNOTC,VOLSER=WRK13B
//STETP1  EXEC DSNNOTC,VOLSER=WRK13C
//STETP1  EXEC DSNNOTC,VOLSER=WRK13D
//STETP1  EXEC DSNNOTC,VOLSER=WRK13E
//STETP1  EXEC DSNNOTC,VOLSER=WRK13F
//STETP1  EXEC DSNNOTC,VOLSER=WRK14A
//STETP1  EXEC DSNNOTC,VOLSER=WRK14B
//STETP1  EXEC DSNNOTC,VOLSER=WRK14C
//STETP1  EXEC DSNNOTC,VOLSER=WRK14D
//STETP1  EXEC DSNNOTC,VOLSER=WRK14E
//STETP1  EXEC DSNNOTC,VOLSER=WRK14F
//STETP1  EXEC DSNNOTC,VOLSER=WRK15A
//STETP1  EXEC DSNNOTC,VOLSER=WRK15B
//STETP1  EXEC DSNNOTC,VOLSER=WRK15C
//STETP1  EXEC DSNNOTC,VOLSER=WRK15D
//STETP1  EXEC DSNNOTC,VOLSER=WRK15E
//STETP1  EXEC DSNNOTC,VOLSER=WRK15F
//STETP1  EXEC DSNNOTC,VOLSER=WRK16A
//STETP1  EXEC DSNNOTC,VOLSER=WRK16B
//STETP1  EXEC DSNNOTC,VOLSER=WRK16C
//STETP1  EXEC DSNNOTC,VOLSER=WRK16D
//STETP1  EXEC DSNNOTC,VOLSER=WRK16E
//STETP1  EXEC DSNNOTC,VOLSER=WRK16F
//STETP1  EXEC DSNNOTC,VOLSER=WRK17A
//STETP1  EXEC DSNNOTC,VOLSER=WRK17B
//STETP1  EXEC DSNNOTC,VOLSER=WRK17C
//STETP1  EXEC DSNNOTC,VOLSER=WRK17D
//STETP1  EXEC DSNNOTC,VOLSER=WRK17E
//STETP1  EXEC DSNNOTC,VOLSER=WRK17F
//STETP1  EXEC DSNNOTC,VOLSER=WRK18A
//STETP1  EXEC DSNNOTC,VOLSER=WRK18B
//STETP1  EXEC DSNNOTC,VOLSER=WRK18C
//STETP1  EXEC DSNNOTC,VOLSER=WRK18D
//STETP1  EXEC DSNNOTC,VOLSER=WRK18E
//STETP1  EXEC DSNNOTC,VOLSER=WRK18F
//STETP1  EXEC DSNNOTC,VOLSER=WRK19A
//STETP1  EXEC DSNNOTC,VOLSER=WRK19B
//STETP1  EXEC DSNNOTC,VOLSER=WRK19C
//STETP1  EXEC DSNNOTC,VOLSER=WRK19D
//STETP1  EXEC DSNNOTC,VOLSER=WRK19E
//STETP1  EXEC DSNNOTC,VOLSER=WSFCP1
//STETP1  EXEC DSNNOTC,VOLSER=WSFCP2
//STETP1  EXEC DSNNOTC,VOLSER=WSFCP3
//STETP1  EXEC DSNNOTC,VOLSER=WSFC01
//STETP1  EXEC DSNNOTC,VOLSER=WSFC02
//STETP1  EXEC DSNNOTC,VOLSER=WSFC03
//STETP1  EXEC DSNNOTC,VOLSER=WSFC04
//STETP1  EXEC DSNNOTC,VOLSER=WSFC05
//STETP1  EXEC DSNNOTC,VOLSER=WSFC06
//STETP1  EXEC DSNNOTC,VOLSER=WSFC07
//STETP1  EXEC DSNNOTC,VOLSER=WSFC08
//STETP1  EXEC DSNNOTC,VOLSER=WSFH01
//STETP1  EXEC DSNNOTC,VOLSER=WSFJ01
//STETP1  EXEC DSNNOTC,VOLSER=WSFJ02
//STETP1  EXEC DSNNOTC,VOLSER=WSFJ03
//STETP1  EXEC DSNNOTC,VOLSER=WSFJ04
//STETP1  EXEC DSNNOTC,VOLSER=WSFJ05
//STETP1  EXEC DSNNOTC,VOLSER=WSFJ06
//STETP1  EXEC DSNNOTC,VOLSER=WSFJ07
//STETP1  EXEC DSNNOTC,VOLSER=WSFJ08
//STETP1  EXEC DSNNOTC,VOLSER=WSFLJ1
//STETP1  EXEC DSNNOTC,VOLSER=WSFLJ2
//STETP1  EXEC DSNNOTC,VOLSER=WSFLJ3
//STETP1  EXEC DSNNOTC,VOLSER=WSFL01
//STETP1  EXEC DSNNOTC,VOLSER=WSFL02
//STETP1  EXEC DSNNOTC,VOLSER=WSFL03
//STETP1  EXEC DSNNOTC,VOLSER=WSFL04
//STETP1  EXEC DSNNOTC,VOLSER=WSFL05
//STETP1  EXEC DSNNOTC,VOLSER=WSFL06
//STETP1  EXEC DSNNOTC,VOLSER=WSFL07
//STETP1  EXEC DSNNOTC,VOLSER=WSFL08
//STETP1  EXEC DSNNOTC,VOLSER=WSFL09
//STETP1  EXEC DSNNOTC,VOLSER=WSFL10
//STETP1  EXEC DSNNOTC,VOLSER=WSFL11
//STETP1  EXEC DSNNOTC,VOLSER=WSFL12
//STETP1  EXEC DSNNOTC,VOLSER=WSFL13
//STETP1  EXEC DSNNOTC,VOLSER=WSFL14
//STETP1  EXEC DSNNOTC,VOLSER=WSFL15
//STETP1  EXEC DSNNOTC,VOLSER=WSFL16
//STETP1  EXEC DSNNOTC,VOLSER=WSFL17
//STETP1  EXEC DSNNOTC,VOLSER=WSFL18
//STETP1  EXEC DSNNOTC,VOLSER=WSFL19
//STETP1  EXEC DSNNOTC,VOLSER=WSFL20
//STETP1  EXEC DSNNOTC,VOLSER=WSFL21
//STETP1  EXEC DSNNOTC,VOLSER=WSFL22
//STETP1  EXEC DSNNOTC,VOLSER=WSFL23
//STETP1  EXEC DSNNOTC,VOLSER=WSFL24
//STETP1  EXEC DSNNOTC,VOLSER=WSFL25
//STETP1  EXEC DSNNOTC,VOLSER=WSFL26
//STETP1  EXEC DSNNOTC,VOLSER=WSFL27
//STETP1  EXEC DSNNOTC,VOLSER=WSFL28
//STETP1  EXEC DSNNOTC,VOLSER=WSFL29
//STETP1  EXEC DSNNOTC,VOLSER=WSFL30
//STETP1  EXEC DSNNOTC,VOLSER=WSFL31
//STETP1  EXEC DSNNOTC,VOLSER=WSFL32
//STETP1  EXEC DSNNOTC,VOLSER=WSFL33
//STETP1  EXEC DSNNOTC,VOLSER=WSFL34
//STETP1  EXEC DSNNOTC,VOLSER=WSFL35
//STETP1  EXEC DSNNOTC,VOLSER=WSFL36
//STETP1  EXEC DSNNOTC,VOLSER=WSFL37
//STETP1  EXEC DSNNOTC,VOLSER=WSFL38
//STETP1  EXEC DSNNOTC,VOLSER=WSFL39
//STETP1  EXEC DSNNOTC,VOLSER=WSFL40
//STETP1  EXEC DSNNOTC,VOLSER=WSFL41
//STETP1  EXEC DSNNOTC,VOLSER=WSFL42
//STETP1  EXEC DSNNOTC,VOLSER=WSFL50
//STETP1  EXEC DSNNOTC,VOLSER=WSFL51
//STETP1  EXEC DSNNOTC,VOLSER=WSFL52
//STETP1  EXEC DSNNOTC,VOLSER=WSFL53
//STETP1  EXEC DSNNOTC,VOLSER=WSFL54
//STETP1  EXEC DSNNOTC,VOLSER=WSFL55
//STETP1  EXEC DSNNOTC,VOLSER=WSFL56
//STETP1  EXEC DSNNOTC,VOLSER=WSFL57
//STETP1  EXEC DSNNOTC,VOLSER=WSFL58
//STETP1  EXEC DSNNOTC,VOLSER=WSFL59
//STETP1  EXEC DSNNOTC,VOLSER=WSFL60
//STETP1  EXEC DSNNOTC,VOLSER=WSFL61
//STETP1  EXEC DSNNOTC,VOLSER=WSFO01
//STETP1  EXEC DSNNOTC,VOLSER=WSFO02
//STETP1  EXEC DSNNOTC,VOLSER=WSFO03
//STETP1  EXEC DSNNOTC,VOLSER=WSFO04
//STETP1  EXEC DSNNOTC,VOLSER=WSFO05
//STETP1  EXEC DSNNOTC,VOLSER=WSFO06
//STETP1  EXEC DSNNOTC,VOLSER=WSFO07
//STETP1  EXEC DSNNOTC,VOLSER=WSFO08
//STETP1  EXEC DSNNOTC,VOLSER=WSFO09
//STETP1  EXEC DSNNOTC,VOLSER=WSFO10
//STETP1  EXEC DSNNOTC,VOLSER=WSFO11
//STETP1  EXEC DSNNOTC,VOLSER=WSFO12
//STETP1  EXEC DSNNOTC,VOLSER=WSFO13
//STETP1  EXEC DSNNOTC,VOLSER=WSFO14
//STETP1  EXEC DSNNOTC,VOLSER=WSFO15
//STETP1  EXEC DSNNOTC,VOLSER=WSFO16
//STETP1  EXEC DSNNOTC,VOLSER=WSFO17
//STETP1  EXEC DSNNOTC,VOLSER=WSFO18
//STETP1  EXEC DSNNOTC,VOLSER=WSFO19
//STETP1  EXEC DSNNOTC,VOLSER=WSFO20
//STETP1  EXEC DSNNOTC,VOLSER=WSFO21
//STETP1  EXEC DSNNOTC,VOLSER=WSFP01
//STETP1  EXEC DSNNOTC,VOLSER=WSFP02
//STETP1  EXEC DSNNOTC,VOLSER=WSFP03
//STETP1  EXEC DSNNOTC,VOLSER=WSFP04
//STETP1  EXEC DSNNOTC,VOLSER=WSFP05
//STETP1  EXEC DSNNOTC,VOLSER=WSFP06
//STETP1  EXEC DSNNOTC,VOLSER=WSFRC1
//STETP1  EXEC DSNNOTC,VOLSER=WSFRC2
//STETP1  EXEC DSNNOTC,VOLSER=WSFRC3
//STETP1  EXEC DSNNOTC,VOLSER=WSFRC4
//STETP1  EXEC DSNNOTC,VOLSER=WSFRC5
//STETP1  EXEC DSNNOTC,VOLSER=WSFRC6
//STETP1  EXEC DSNNOTC,VOLSER=WSFRC7
//STETP1  EXEC DSNNOTC,VOLSER=WSFRC8
//STETP1  EXEC DSNNOTC,VOLSER=WSFRC9
//STETP1  EXEC DSNNOTC,VOLSER=WSFRJ0
//STETP1  EXEC DSNNOTC,VOLSER=WSFRJ1
//STETP1  EXEC DSNNOTC,VOLSER=WSFRJ2
//STETP1  EXEC DSNNOTC,VOLSER=WSFRJ3
//STETP1  EXEC DSNNOTC,VOLSER=WSFRJ4
//STETP1  EXEC DSNNOTC,VOLSER=WSFRJ5
//STETP1  EXEC DSNNOTC,VOLSER=WSFRJ6
//STETP1  EXEC DSNNOTC,VOLSER=WSFRJ7
//STETP1  EXEC DSNNOTC,VOLSER=WSFRJ8
//STETP1  EXEC DSNNOTC,VOLSER=WSFRJ9
//STETP1  EXEC DSNNOTC,VOLSER=WSFR10
//STETP1  EXEC DSNNOTC,VOLSER=WSFR11
//STETP1  EXEC DSNNOTC,VOLSER=WSFR12
//STETP1  EXEC DSNNOTC,VOLSER=WSFR13
//STETP1  EXEC DSNNOTC,VOLSER=WSFR14
//STETP1  EXEC DSNNOTC,VOLSER=WSFR15
//STETP1  EXEC DSNNOTC,VOLSER=WSFR16
//STETP1  EXEC DSNNOTC,VOLSER=WSFR17
//STETP1  EXEC DSNNOTC,VOLSER=WSFR18
//STETP1  EXEC DSNNOTC,VOLSER=WSFR19
//STETP1  EXEC DSNNOTC,VOLSER=WSFR20
//STETP1  EXEC DSNNOTC,VOLSER=WSFR21
//STETP1  EXEC DSNNOTC,VOLSER=WSFR22
//STETP1  EXEC DSNNOTC,VOLSER=WSFR23
//STETP1  EXEC DSNNOTC,VOLSER=WSFR24
//STETP1  EXEC DSNNOTC,VOLSER=WSFR25
//STETP1  EXEC DSNNOTC,VOLSER=WSFR26
//STETP1  EXEC DSNNOTC,VOLSER=WSFY01
//STETP1  EXEC DSNNOTC,VOLSER=WSFY02
//STETP1  EXEC DSNNOTC,VOLSER=WSFY03
//STETP1  EXEC DSNNOTC,VOLSER=WSFY04
//STETP1  EXEC DSNNOTC,VOLSER=WSFY05
//STETP1  EXEC DSNNOTC,VOLSER=WSF204
//STETP1  EXEC DSNNOTC,VOLSER=WSF205
//STETP1  EXEC DSNNOTC,VOLSER=WSF206
//STETP1  EXEC DSNNOTC,VOLSER=WSF207
//STETP1  EXEC DSNNOTC,VOLSER=WSF208
//STETP1  EXEC DSNNOTC,VOLSER=WSF209
//STETP1  EXEC DSNNOTC,VOLSER=WSF210
//STETP1  EXEC DSNNOTC,VOLSER=WSF211
//STETP1  EXEC DSNNOTC,VOLSER=WSF212
//STETP1  EXEC DSNNOTC,VOLSER=WSF213
//STETP1  EXEC DSNNOTC,VOLSER=WSF214
//STETP1  EXEC DSNNOTC,VOLSER=WSF215
//STETP1  EXEC DSNNOTC,VOLSER=WSF216
//STETP1  EXEC DSNNOTC,VOLSER=WSF217
//STETP1  EXEC DSNNOTC,VOLSER=WSF218
//STETP1  EXEC DSNNOTC,VOLSER=WSF219
//STETP1  EXEC DSNNOTC,VOLSER=WSF220
//STETP1  EXEC DSNNOTC,VOLSER=WSF221
//STETP1  EXEC DSNNOTC,VOLSER=WSF222
//STETP1  EXEC DSNNOTC,VOLSER=WSF223
//STETP1  EXEC DSNNOTC,VOLSER=WSF224
//STETP1  EXEC DSNNOTC,VOLSER=WSF225
//STETP1  EXEC DSNNOTC,VOLSER=WSF226
//STETP1  EXEC DSNNOTC,VOLSER=WSF227
//STETP1  EXEC DSNNOTC,VOLSER=WSF228
//STETP1  EXEC DSNNOTC,VOLSER=WSF229
//STETP1  EXEC DSNNOTC,VOLSER=WSF230
//STETP1  EXEC DSNNOTC,VOLSER=WSF231
//STETP1  EXEC DSNNOTC,VOLSER=WSF232
//STETP1  EXEC DSNNOTC,VOLSER=WSF233
//STETP1  EXEC DSNNOTC,VOLSER=WSF234
//STETP1  EXEC DSNNOTC,VOLSER=WSF300
//STETP1  EXEC DSNNOTC,VOLSER=WSF301
//STETP1  EXEC DSNNOTC,VOLSER=XCFP01
//STETP1  EXEC DSNNOTC,VOLSER=XCFP02
//STETP1  EXEC DSNNOTC,VOLSER=XCFQ01
//STETP1  EXEC DSNNOTC,VOLSER=XCFQ02
//STETP1  EXEC DSNNOTC,VOLSER=XCFR01
//STETP1  EXEC DSNNOTC,VOLSER=XCFR02
//STETP1  EXEC DSNNOTC,VOLSER=XCFS01
//STETP1  EXEC DSNNOTC,VOLSER=XCFS02
//STETP1  EXEC DSNNOTC,VOLSER=XINFO1
//STETP1  EXEC DSNNOTC,VOLSER=YREPO1
//STETP1  EXEC DSNNOTC,VOLSER=YREPO4
//STETP1  EXEC DSNNOTC,VOLSER=YREPO5
//STETP1  EXEC DSNNOTC,VOLSER=YSYS00
//STETP1  EXEC DSNNOTC,VOLSER=YSYS01
//STETP1  EXEC DSNNOTC,VOLSER=YSYS02
//STETP1  EXEC DSNNOTC,VOLSER=YSYS03
//STETP1  EXEC DSNNOTC,VOLSER=YSYS04
//STETP1  EXEC DSNNOTC,VOLSER=ZCONFP
//STETP1  EXEC DSNNOTC,VOLSER=ZCONFQ
//STETP1  EXEC DSNNOTC,VOLSER=ZCONFR
//STETP1  EXEC DSNNOTC,VOLSER=ZCONFS
//STETP1  EXEC DSNNOTC,VOLSER=ZCXS01
//STETP1  EXEC DSNNOTC,VOLSER=ZFSP01
//STETP1  EXEC DSNNOTC,VOLSER=ZFSP02
//STETP1  EXEC DSNNOTC,VOLSER=ZFSP03
//STETP1  EXEC DSNNOTC,VOLSER=ZFSP04
//STETP1  EXEC DSNNOTC,VOLSER=ZFSQ01
//STETP1  EXEC DSNNOTC,VOLSER=ZFSQ02
//STETP1  EXEC DSNNOTC,VOLSER=ZFSQ03
//STETP1  EXEC DSNNOTC,VOLSER=ZFSQ04
//STETP1  EXEC DSNNOTC,VOLSER=ZFSQ05
//STETP1  EXEC DSNNOTC,VOLSER=ZFSR01
//STETP1  EXEC DSNNOTC,VOLSER=ZFSR02
//STETP1  EXEC DSNNOTC,VOLSER=ZFSR03
//STETP1  EXEC DSNNOTC,VOLSER=ZFSR04
//STETP1  EXEC DSNNOTC,VOLSER=ZOSCFP
//STETP1  EXEC DSNNOTC,VOLSER=ZOSCFQ
//STETP1  EXEC DSNNOTC,VOLSER=ZOSCFR
//STETP1  EXEC DSNNOTC,VOLSER=ZOSCFS
//STETP1  EXEC DSNNOTC,VOLSER=ZOSSOS
//STETP1  EXEC DSNNOTC,VOLSER=ZOS204
//STETP1  EXEC DSNNOTC,VOLSER=ZOS205

./ ADD NAME=DSNREN
//DSNREN    JOB ACCT£,                                                  00010000
//             MVS,                                                     00020000
//             NOTIFY=&SYSUID,                                          00030000
//             MSGCLASS=T                                               00040001
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00050002
//      SYS019.LP2.DB2,                                                 00051002
//      SYS1.SACBCNTL)                                                  00060002
//*DSN RENAME
//STEP1  EXEC  PGM=ADRDSSU,REGION=8M
//*
//SYSPRINT  DD  SYSOUT=*
//OUTVOL1  DD    VOL=SER=VATS07,UNIT=3390,DISP=SHR
//SYSIN    DD    *
 COPY DATASET( -
        INCLUDE( -
                SYS019.SOLVE.** -
                )) -
      CANCELERROR -
      CATALOG -
      OUTDDNAME( -
                OUTVOL1 -
               ) -
      PERCENTUTILIZED( -
                      100 -
                     ) -
      RENAMEUNCONDITIONAL( -
           (SYS019.SOLVE.**, -
            SYS019.SOLVF.**)) -
      TGTALLOC(SOURCE) -
      FASTREP(PREF) -
      WAIT(2,2)
/*

./ ADD NAME=DSNREN1
//SYS019O JOB  (ACCOUNT),'NAME'
//*
//*
//*
//*
//*
//*
//*
//*
//**NOTE - THE REGION SIZE IS MINIMUM AND MAY BE CHANGED
//STEP1  EXEC  PGM=ADRDSSU,REGION=2048K
//*
//*
//SYSPRINT  DD  SYSOUT=*
//OUTVOL1  DD    VOL=SER=VATS01,UNIT=3390,DISP=SHR
//SYSIN    DD    *
 COPY DATASET( -
        INCLUDE( -
                SYST.DFHSM.BRN2.HSMLOGX1 -
                )) -
      CANCELERROR -
      CATALOG -
      OUTDDNAME( -
                OUTVOL1 -
               ) -
      PERCENTUTILIZED( -
                      100 -
                     ) -
      RENAMEUNCONDITIONAL( -
           (SYST.DFHSM.BRN2.HSMLOGX1, -
            SYS019.DFHSM.BRN2.HSMLOGX1)) -
      TGTALLOC(SOURCE) -
      FASTREP(PREF) -
      WAIT(2,2)
/*

./ ADD NAME=DSNREN2
//SYS019P JOB  (ACCOUNT),'NAME'
//*
//*
//*
//*
//*
//*
//*
//*
//**NOTE - THE REGION SIZE IS MINIMUM AND MAY BE CHANGED
//STEP1  EXEC  PGM=ADRDSSU,REGION=2048K
//*
//*
//SYSPRINT  DD  SYSOUT=*
//OUTVOL1  DD    VOL=SER=VATS01,UNIT=3390,DISP=SHR
//SYSIN    DD    *
 COPY DATASET( -
        INCLUDE( -
                SYST.DFHSM.BRN2.HSMLOGY1 -
                )) -
      CANCELERROR -
      CATALOG -
      OUTDDNAME( -
                OUTVOL1 -
               ) -
      PERCENTUTILIZED( -
                      100 -
                     ) -
      RENAMEUNCONDITIONAL( -
           (SYST.DFHSM.BRN2.HSMLOGY1, -
            SYS019.DFHSM.BRN2.HSMLOGX1)) -
      TGTALLOC(SOURCE) -
      FASTREP(PREF) -
      WAIT(2,2)
/*

./ ADD NAME=DSNREN3
//SYS019Q JOB  (ACCOUNT),'NAME'
//*
//*
//*
//*
//*
//*
//*
//*
//**NOTE - THE REGION SIZE IS MINIMUM AND MAY BE CHANGED
//STEP1  EXEC  PGM=ADRDSSU,REGION=2048K
//*
//*
//SYSPRINT  DD  SYSOUT=*
//OUTVOL1  DD    VOL=SER=VATS01,UNIT=3390,DISP=SHR
//SYSIN    DD    *
 COPY DATASET( -
        INCLUDE( -
                SYST.DFHSM.EDITLOG -
                )) -
      CANCELERROR -
      CATALOG -
      OUTDDNAME( -
                OUTVOL1 -
               ) -
      PERCENTUTILIZED( -
                      100 -
                     ) -
      RENAMEUNCONDITIONAL( -
           (SYST.DFHSM.EDITLOG, -
            SYS019.DFHSM.EDITLOG)) -
      TGTALLOC(SOURCE) -
      FASTREP(PREF) -
      WAIT(2,2)
/*

./ ADD NAME=DSNREN4
//SYS019R JOB  (ACCOUNT),'NAME'
//*
//*
//*
//*
//*
//*
//*
//*
//**NOTE - THE REGION SIZE IS MINIMUM AND MAY BE CHANGED
//STEP1  EXEC  PGM=ADRDSSU,REGION=2048K
//*
//*
//SYSPRINT  DD  SYSOUT=*
//OUTVOL1  DD    VOL=SER=VATS01,UNIT=3390,DISP=SHR
//SYSIN    DD    *
 COPY DATASET( -
        INCLUDE( -
                SYST.DFHSM.JOURNAL -
                )) -
      CANCELERROR -
      CATALOG -
      OUTDDNAME( -
                OUTVOL1 -
               ) -
      PERCENTUTILIZED( -
                      100 -
                     ) -
      RENAMEUNCONDITIONAL( -
           (SYST.DFHSM.JOURNAL, -
            SYS019.DFHSM.JOURNAL)) -
      TGTALLOC(SOURCE) -
      FASTREP(PREF) -
      WAIT(2,2)
/*

./ ADD NAME=DSNREN5
//SYS019S JOB  (ACCOUNT),'NAME'
//*
//*
//*
//*
//*
//*
//*
//*
//**NOTE - THE REGION SIZE IS MINIMUM AND MAY BE CHANGED
//STEP1  EXEC  PGM=ADRDSSU,REGION=2048K
//*
//*
//SYSPRINT  DD  SYSOUT=*
//OUTVOL1  DD    VOL=SER=VATS01,UNIT=3390,DISP=SHR
//SYSIN    DD    *
 COPY DATASET( -
        INCLUDE( -
                SYST.DFHSM.JRNL -
                )) -
      CANCELERROR -
      CATALOG -
      OUTDDNAME( -
                OUTVOL1 -
               ) -
      PERCENTUTILIZED( -
                      100 -
                     ) -
      RENAMEUNCONDITIONAL( -
           (SYST.DFHSM.JRNL, -
            SYS019.DFHSM.JRNL)) -
      TGTALLOC(SOURCE) -
      FASTREP(PREF) -
      WAIT(2,2)
/*

./ ADD NAME=DSNREN6
//SYS019T JOB  (ACCOUNT),'NAME'
//*
//*
//*
//*
//*
//*
//*
//*
//**NOTE - THE REGION SIZE IS MINIMUM AND MAY BE CHANGED
//STEP1  EXEC  PGM=ADRDSSU,REGION=2048K
//*
//*
//SYSPRINT  DD  SYSOUT=*
//OUTVOL1  DD    VOL=SER=VATS01,UNIT=3390,DISP=SHR
//SYSIN    DD    *
 COPY DATASET( -
        INCLUDE( -
                SYST.DFHSM.MCDS -
                )) -
      CANCELERROR -
      CATALOG -
      OUTDDNAME( -
                OUTVOL1 -
               ) -
      PERCENTUTILIZED( -
                      100 -
                     ) -
      RENAMEUNCONDITIONAL( -
           (SYST.DFHSM.MCDS, -
            SYS019.DFHSM.MCDS)) -
      TGTALLOC(SOURCE) -
      FASTREP(PREF) -
      WAIT(2,2)
/*

./ ADD NAME=DSNREN7
//SYS019N JOB  (ACCOUNT),'NAME'
//*
//*
//*
//*
//*
//*
//*
//*
//**NOTE - THE REGION SIZE IS MINIMUM AND MAY BE CHANGED
//STEP1  EXEC  PGM=ADRDSSU,REGION=2048K
//*
//*
//SYSPRINT  DD  SYSOUT=*
//OUTVOL1  DD    VOL=SER=VATS01,UNIT=3390,DISP=SHR
//SYSIN    DD    *
 COPY DATASET( -
        INCLUDE( -
                SYST.DFHSM.BCDS -
                )) -
      CANCELERROR -
      CATALOG -
      OUTDDNAME( -
                OUTVOL1 -
               ) -
      PERCENTUTILIZED( -
                      100 -
                     ) -
      RENAMEUNCONDITIONAL( -
           (SYST.DFHSM.BCDS, -
            SYS019.DFHSM.BCDS)) -
      TGTALLOC(SOURCE) -
      FASTREP(PREF) -
      WAIT(2,2)
/*

./ ADD NAME=DSNREST
//DSNREST   JOB ACCT£,
//             MVS,
//             NOTIFY=&SYSUID,
//             MSGCLASS=T
//MYLIB JCLLIB ORDER=(SYS019.&SYSNAME..MVS,
//      SYS019.&SYSNAME..DB2,
//      SYS1.SACBCNTL)
//*DSN RENAME
//STEP1  EXEC  PGM=ADRDSSU,REGION=8M
//INDD1   DD DSN=&SYSUID..&SYSNAME..DUMP,DISP=SHR
//*
//SYSPRINT  DD  SYSOUT=*
//OUTVOL1  DD    VOL=SER=VATS07,UNIT=3390,DISP=SHR
//SYSIN    DD    *
 RESTORE DATASET( -
        INCLUDE( -
                SYS019.BRN2.MVS -
                )) -
      INDDNAME(INDD1) -
      CANCELERROR -
      RENAMEUNCONDITIONAL( -
           (SYS019.BRN2.MVS, -
            SYS019.BRN9.MVS))

./ ADD NAME=DUMPFULL
//SYSPLAT JOB  1,LAPEYRE,MSGLEVEL=(1,1),CLASS=O,                        00028701
//             MSGCLASS=T,NOTIFY=SYSPLA,TIME=1439                       00028800
//MVS102   EXEC PGM=ADRDSSU,REGION=6M
//SYSPRINT DD SYSOUT=T
//IN       DD UNIT=3390,VOL=SER=MVS102,DISP=SHR
//OUT      DD DSN=PSECH.SVOL.MVS102(+1),
//         DISP=(NEW,CATLG,DELETE),
//         UNIT=CTAPE,LABEL=(,SL),
//         DCB=(ODMP.MODEL7,TRTCH=COMP),VOL=(,,,15)
//SYSIN    DD *
  DUMP INDD(IN) OUTDD(OUT) ALLEXCP TOL(ENQF) ADMIN

./ ADD NAME=DUMPNOTS
  DUMP DATASET(INCLUDE(**) -                                            00010000
    BY((CATLG EQ NO))) -                                                00020000
       INDDNAME(DASD1) -                                                00040000
    OUTDDNAME(TAPE)                                                     00050000

./ ADD NAME=DVOLCAT
//SYSALIAS JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=I,                       00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//*********************************************                         00030100
//* PLUS D'ALIAS SUR LE CATALOG GTEST ET GTEST1 SUR G T E S T 2         00030200
//* PLUS D'ALIAS SUR LE CATALOG GPROD ET PROD1: SUR G P R O D 6         00030300
//* PAS D'ALIAS SUR LE CATALOG  GETUD :         SUR G T E S T 2         00030400
//* ALIAS ***1 USERS BRN1 (EX: PROJRO1)         SUR G P U P 1           00030500
//* ALIAS GXXXXX                                SUR G T E S T 2         00030600
//* ALIAS DVXXX                                 SUR G T E S T 2         00030700
//* ALIAS SYSTEME                               SUR G S Y S T 1         00030800
//* ALIAS PACIFICA                              SUR G O P A L E 2       00030900
//* ALIAS DES CICS                              SUR G C I C S X         00031000
//*********************************************                         00031100
//* CATALOGUES EURO/AN 2000 : CATALOG.G S Y S T   (OBJET SYSTEME)       00031200
//*                         : CATALOG.O P ALE   (OBJETS USER)           00031300
//*                         : CATALOG.G T EST1  (OBJETS ETUDES)         00031400
//*********************************************                         00031500
//* CATALAOGUE RECETTE COMMUNE : CATALOG.C S Y S T (OBJET SYSTEME)      00031600
//* CATALAOGUE PRE PROD BRNQ   : CATALOG.L S Y S T (OBJET SYSTEME)      00031700
//*********************************************                         00031800
//*    ATTENTION : CREATION DU PROFILE RACF DE PRODUCTION               00031900
//*                NE PAS EXECUTER RACFID SI PAS PRODUCTION             00032000
//*********************************************                         00032100
//DEFALIAS  EXEC  PGM=IDCAMS,REGION=7M                                  00033000
//SYSPRINT  DD  SYSOUT=*                                                00040000
//SYSIN     DD  *                                                       00050000
    DEFINE  ALIAS  (NAME(PVGS)                 -                        00060000
            RELATE(CATALOG.CSYST))             -                        00070000
    CATALOG(CATALOG.MASTER.OSR10.Y2000)                                 00080000
    DEFINE  ALIAS  (NAME(PVGS)                 -                        00429400
            RELATE(CATALOG.CSYST))             -                        00429500
    CATALOG(CATALOG.MASTER.OSR10.BRN2.BACKUP)                           00429600
    DEFINE  ALIAS  (NAME(PVGS)                 -                        00429700
            RELATE(CATALOG.CSYST))             -                        00429800
    CATALOG(CATALOG.MASTER.OSR10.BRN2)                                  00429900
    DEFINE  ALIAS  (NAME(PVGS)                 -                        00431300
            RELATE(CATALOG.CSYST))             -                        00431400
    CATALOG(CATALOG.MASTER.OSR10.BRN1)                                  00431500
    DEFINE  ALIAS  (NAME(PVGS)                 -                        00431900
            RELATE(CATALOG.CSYST))             -                        00432000
    CATALOG(CATALOG.MASTER.ZOS13.LP2)                                   00432100
    DEFINE  ALIAS  (NAME(PVGS)                 -                        00432200
            RELATE(CATALOG.CSYST))             -                        00432300
    CATALOG(CATALOG.MASTER.ZOS13.BRN1)                                  00432400
    DEFINE  ALIAS  (NAME(PVGS)                 -                        00432500
            RELATE(CATALOG.CSYST))             -                        00432600
    CATALOG(CATALOG.MASTER.ZOS13.BRNQ)                                  00432700
/*                                                                      00432900
//                                                                      00433000
//                                                                      00434000
//                                                                      00435000
//******************************************************************    00451000
//*      CREATION D'UN PROFILE DATASET DANS RACF DATASET                00460000
//*      -----------------------------------------------                00470000
//*    A EXECUTER POUR LES CREATIONS D'ALIAS DE PRODUCTION              00471000
//*    ----------> STCOPAL SI EURO                                      00472000
//*    ----------> STCPRC SI PROD                                       00473000
//******************************************************************    00480000
//RACFID   EXEC PGM=IKJEFT01                                            00490000
//SYSPRINT DD SYSOUT=*                                                  00500000
//SYSTSOUT DD SYSOUT=*                                                  00510000
//SYSTSPRT DD SYSOUT=*                                                  00520000
//SYSTSIN  DD *                                                         00530000
 ADDGROUP PVGS OWNER(PRODMGT) SUPGROUP(PRODMGT)                         00540000
 ADDSD  'PVGS.*' GENERIC OWNER(PRODMGT) UACC(NONE)                      00550000
 PERMIT 'PVGS.*' ACCESS(ALTER) ID(PRODMGT,PREP,SUPTECH,STCPRC,CTRL)     00560000
 PERMIT 'PVGS.*' ACCESS(READ) ID(DEVMGT,PROJ,STCGRP)                    00570000
 LD DA('PVGS.*') AUTHUSER                                               00580000
/*                                                                      00590000

./ ADD NAME=EMPTY0
//EMPTY0    JOB ACCT£,                                                  00001000
//             MVS,                                                     00002000
//             NOTIFY=&SYSUID,                                          00003000
//             MSGLEVEL=(1,1)                                           00004000
//EMPTY0   EXEC PGM=IEBCOPY                                             00010000
//SYSPRINT DD SYSOUT=*                                                  00011001
//*%IP-SYSOUT                                                           00020000
//LIB      DD DSN=SYS019.LP2.MVS1,DISP=SHR                              00030000
//SYSUT3   DD UNIT=WORKDA,SPACE=(CYL,(3))                               00040000
//SYSUT4   DD UNIT=WORKDA,SPACE=(CYL,(3))                               00050000
//SYSIN    DD *                                                         00060000
 COPY   OUTDD=LIB,INDD=LIB                                              00070001

./ ADD NAME=EPILOG
//SYSPGR1  JOB REGION=2M,                                               00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPGR          00011000
//*------------------------------------------------------------         00012000
//*-  EXEMPLE DE BATCH EPILOG                                           00012100
//*-  datastor add rajoute la base niveau - 1  en ligne                 00012202
//*-  ce qui represente entre 15j et un mois en ligne                   00012301
//*------------------------------------------------------------         00012401
//*-  ex: jdas : ressources disques                                     00012501
//*-      rpgn : groupes de perf                                        00012601
//*------------------------------------------------------------         00012700
//STEP1    EXEC EPILOG                                                  00013000
DATASTOR ADD EDS(CANDLE.OMEGAMON.MVSOLD)                                00014000
DIS JDAS(EXPL06) SDATE(92189) EDATE(92189) ST(00) ET(03)                00015000
DIS JDAS(EXPL40) SDATE(92189) EDATE(92189) ST(00) ET(03)                00016000
//                                                                      00021000
//*- moyenne pour le jour 92211-de 9 a 17h des pgn 33 et 203---         00021102
DIS RPGN(33,203) SDATE(92211) EDATE(92211) ST(09) ET(17) combine        00022002
//*- moyenne de 9 a 17h des pgn 33 et 203 pour les jours de semaine     00023002
DIS RPGN(33,203) dayofwk(weekday) ST(09) ET(17) combine                 00024002

./ ADD NAME=EPILOGX
//SYSNVE1  JOB REGION=2M,                                               00010001
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=SYSNVE          00011001
//*------------------------------------------------------------         00012000
//*-  EXEMPLE DE BATCH EPILOG                                           00012100
//*-  datastor add rajoute la base niveau - 1  en ligne                 00012200
//*-  ce qui represente entre 15j et un mois en ligne                   00012300
//*------------------------------------------------------------         00012400
//*-  ex: jdas : ressources disques                                     00012500
//*-      rpgn : groupes de perf                                        00012600
//*------------------------------------------------------------         00012700
//STEP1    EXEC EPILOG                                                  00013000
DATASTOR ADD EDS(CANDLE.OMEGAMON.MVSOLD)                                00014000
DIS RCPU SDATE(02294) EDATE(02294) ST(13) ET(18) COMBINE                00015001
//                                                                      00021000
//*- moyenne pour le jour 92211-de 9 a 17h des pgn 33 et 203---         00021100
DIS RPGN(33,203) SDATE(92211) EDATE(92211) ST(09) ET(17) combine        00022000
//*- moyenne de 9 a 17h des pgn 33 et 203 pour les jours de semaine     00023000
DIS RPGN(33,203) dayofwk(weekday) ST(09) ET(17) combine                 00024000

./ ADD NAME=ESDJCL
//SYSLHUA   JOB (T002550),'IEBCOPY',                                    00001004
//             NOTIFY=&SYSUID,                                          00002000
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00003000
//UNPAXDIR    EXEC PGM=BPXBATCH,                                        00004000
//             PARM='sh cd /u/recprod/ddddd; pax                       X00005004
//             -rvf xxxxx.pax.Z'                                        00005104
//STDOUT      DD SYSOUT=*                                               00006000
//STDERR      DD SYSOUT=*                                               00007000
//*                                                                     00008000
//*--------------------------------------------------------------       00009000
//*  Send an error message to the user if UNPAX step fails to           00009100
//*  complete normally                                                  00009200
//*--------------------------------------------------------------       00009300
//*                                                                     00009400
//UNPAXERR IF (ABEND OR UNPAXDIR.RC GT 0)                               00009500
//         THEN                                                         00009600
//SENDERR   EXEC PGM=IKJEFT01,                                          00009700
//             PARM='SE ''UNPAX - UNPAXING of the ESD Package has      X00009800
//             FAILED ** ERROR **'' USER(SYSLHU) LOGON '                00009903
//STDOUT      DD SYSOUT=*                                               00010000
//STDERR      DD SYSOUT=*                                               00020000
//SYSTSPRT    DD SYSOUT=*                                               00030000
//SYSTSIN     DD DUMMY                                                  00040000
//UNPAXERR ELSE                                                         00050000
//SENDGOOD  EXEC PGM=IKJEFT01,                                          00060000
//             PARM='SE ''UNPAX - SUCCESSFUL UNPAX of the ESD package. X00070000
//             '' USER(SYSLHU) LOGON '                                  00080003
//STDOUT      DD SYSOUT=*                                               00090000
//STDERR      DD SYSOUT=*                                               00100000
//SYSTSPRT    DD SYSOUT=*                                               00110000
//SYSTSIN     DD DUMMY                                                  00120000
//UNPAXERR ENDIF                                                        00130000

./ ADD NAME=EXPDISC
//SYSCAT   JOB 1000,'SYST-GRANIE',REGION=4M,                            00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020002
//********************************************                          00030000
//* DISCONNECT D'UN UCAT A UN MCAT                                      00030000
//********************************************                          00030000
//LISTCAT  EXEC  PGM=IDCAMS                                             00030000
//*STEPCAT  DD DSN=CATALOG.MASTBRN2,DISP=SHR                            00030000
//SYSPRINT DD SYSOUT=*                                                  00040001
//SYSIN    DD *                                                         00040001
    EXPORT   CATALOG.MASTER.ZOS13.IPLMIN -
             DISCONNECT                -
          CAT(CATALOG.MASTER.ZOS16.LP2)
//

./ ADD NAME=FREEEXPE
//SYSALIAS JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=I,                       00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//*----------------------------------------------------------           00030000
//* DANS CE BATCH MANQUE LE CATALOGUE SUR LP2                           00040000
//* POUR TOUS LES CATALOGUES AVEC LP2 VOIR DEFALIA2                     00040100
//*----------------------------------------------------------           00040200
//* ATTENTION !!!! UN 2ND JOB POUR MAJ RACF SUR BRNR                    00042000
//***********************************************************           00050000
//* !!!!!!!! PLUS D'ALIAS SUR LE CATALOG G S Y S T                      00060000
//* !!!!!!!! PLUS D'ALIAS SUR LE CATALOG G P R O D 6                    00070000
//***********************************************************           00080000
//* PLUS D'ALIAS SUR LE CATALOG GTEST ET GTEST SUR G T E S T 2          00090000
//* PLUS D'ALIAS SUR LE CATALOG GPROD ET PROD1: SUR G P R O D 7         00100000
//* PAS D'ALIAS SUR LE CATALOG  GETUD :         SUR G T E S T 2         00110000
//* PAS D'ALIAS SUR LE CATALOG  CRECT1 :        SUR C R E C T 3         00120000
//* ALIAS ***1 USERS BRN1 (EX: PROJRO1)         SUR G P U P 1           00130000
//* ALIAS GXXXXX                                SUR G T E S T 2         00140000
//* ALIAS DVXXX                                 SUR G T E S T 2         00150000
//* ALIAS SYSTEME                               SUR G S Y S T 1         00160000
//* ALIAS PACIFICA                              SUR G O P A L E 2       00170000
//* ALIAS DES CICS                              SUR G C I C S X         00180000
//*********************************************                         00190000
//* CATALOGUES EURO/AN 2000 : CATALOG.G S Y S T   (OBJET SYSTEME)       00200000
//*                         : CATALOG.O P ALE   (OBJETS USER)           00210000
//*                         : CATALOG.G T EST1  (OBJETS ETUDES)         00220000
//*********************************************                         00230000
//* CATALAOGUE RECETTE COMMUNE : CATALOG.C S Y S T (OBJET SYSTEME)      00240000
//*                            : CATALOG.C R E C T 1 (OBJET RECETTE)    00250000
//*                            : CATALOG.C R E C T 2 (OBJET RECETTE)    00260000
//*                            : CATALOG.C R E C T 3 (OBJET RECETTE)    00270000
//* CATALOGUE PRE-PROD CAT     : CATALOG.L Q U A L 4                    00280000
//* CATALAOGUE PRE PROD BRNQ   : CATALOG.L S Y S T (OBJET SYSTEME)      00290000
//*********************************************                         00300000
//*    ATTENTION : CREATION DU PROFILE RACF DE PRODUCTION               00310000
//*                NE PAS EXECUTER RACFID SI PAS PRODUCTION             00320000
//*********************************************                         00330000
//DEFALIAS  EXEC  PGM=IDCAMS,REGION=7M                                  00340000
//SYSPRINT  DD  SYSOUT=*                                                00350000
//SYSIN     DD  *                                                       00360000
    DEFINE  ALIAS  (NAME(MX035)               -                         00451000
            RELATE(CATALOG.GTEST2))            -                        00452000
    CATALOG(CATALOG.MASTER.ZOS18.BRN2)                                  00453000
    DEFINE  ALIAS  (NAME(MX035)                -                        00481000
            RELATE(CATALOG.GTEST2))            -                        00482000
    CATALOG(CATALOG.MASTER.ZOS18.BRN2.BACKUP)                           00483000
    DEFINE  ALIAS  (NAME(MX035)                -                        00511000
            RELATE(CATALOG.GTEST2))            -                        00512000
    CATALOG(CATALOG.MASTER.ZOS18.BRNR)                                  00513000
    DEFINE  ALIAS  (NAME(MX035)                -                        00514000
            RELATE(CATALOG.GTEST2))            -                        00515000
    CATALOG(CATALOG.MASTER.ZOS110.BRNR)                                 00516000
    DEFINE  ALIAS  (NAME(MX035)                -                        00571000
            RELATE(CATALOG.GTEST2))            -                        00572000
    CATALOG(CATALOG.MASTER.ZOS18.BRNQ)                                  00573000
    DEFINE  ALIAS  (NAME(MX035)                -                        00574000
            RELATE(CATALOG.GTEST2))            -                        00575000
    CATALOG(CATALOG.MASTER.ZOS110.BRNQ)                                 00576000
//*                                                                     00580000
//                                                                      00581000
//******************************************************************    00590000
//*      CREATION D'UN PROFILE DATASET DANS RACF DATASET                00600000
//*      -----------------------------------------------                00610000
//*    A EXECUTER POUR LES CREATIONS D'ALIAS DE PRODUCTION              00620000
//*    ----------> STCOPAL SI EURO                                      00630000
//*    ----------> STCPRC SI PROD                                       00640000
//******************************************************************    00650000
//RACFID   EXEC PGM=IKJEFT01                                            00660000
//SYSPRINT DD SYSOUT=*                                                  00670000
//SYSTSOUT DD SYSOUT=*                                                  00680000
//SYSTSPRT DD SYSOUT=*                                                  00690000
//SYSTSIN  DD *                                                         00700000
 ADDGROUP MX035 OWNER(PRODMGT) SUPGROUP(PRODMGT)                        00710000
 ADDSD  'MX035.*' GENERIC OWNER(PRODMGT) UACC(NONE)                     00720000
 PERMIT 'MX035.*' ACCESS(ALTER) ID(PRODMGT,PREP,SUPTECH,STCPRC,CTRL)    00730000
 PERMIT 'MX035.*' ACCESS(READ) ID(DEVMGT,PROJ,STCGRP)                   00740000
 LD DA('MX035.*') AUTHUSER                                              00750000
/*                                                                      00760000

./ ADD NAME=GDGMASTQ
//SYSILEA  JOB 1000,'PH-GRANIE',REGION=2M,
//             COND=(4,LT),
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//JOBLIB    DD DSN=IPO1.LINKLIB,DISP=SHR
//DELET1  EXEC PGM=IEFBR14,REGION=512K
//DD1      DD  DSN=SYSILE.MSTCAT.BRNQ,DISP=(MOD,DELETE),
//             UNIT=WORKDA,SPACE=(TRK,0)
//*
//*********************************************************************
//*
//*  FAIRE UN CATCVTM DANS SYSILE.MSTCAT.XXXX
//*
//*********************************************************************
//ASSEM2  EXEC PGM=ASMBLR,REGION=512K,
//             COND=EVEN,
//             PARM='DECK,NOOBJ'
//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DSN=&&CARD,DISP=(,PASS),
//             UNIT=SYSALLDA,SPACE=(CYL,(1,1))
//SYSIN    DD  *
  PUNCH ' LISTCAT ALL OUTFILE(OUTFILE) -'
  PUNCH '   CAT(CATALOG.MASTER.ZOS16.BRNQ)'
.END     END
/*
//*********************************************************************
//* LIST3    LISTS VSAM SOURCE CATALOG TO BE CONVERTED
//*
//LIST3   EXEC PGM=IDCAMS,REGION=640K,
//             COND=(0,NE,ASSEM2)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DSN=&&CARD,DISP=(OLD,PASS)
//OUTFILE  DD  DSN=&&OUT,DISP=(,PASS),
//             UNIT=SYSALLDA,SPACE=(CYL,(3,3)),
//             DCB=(RECFM=VBA,LRECL=125,BLKSIZE=625)
/*
//*********************************************************************
//*  GENER4:   EXECUTE MCNVTCAT(CBIPO-SUPPLIED PROGRAM)
//*            TO GENERATE IDCAMS CONTROL CARDS FROM
//*            LISTCAT OUTPUT.
//*
//GENER4  EXEC PGM=MCNVTCAT,REGION=512K,                     /* .NU. */
//             PARM='CATALOG.MASTER.ZOS16.BRNQ',
//             COND=((0,NE,ASSEM2))                          /* .RU. */
//SYSEMSG  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//LIST     DD  DSN=&&OUT,DISP=(OLD,PASS)
//CONTR1   DD  DSN=&&CARD1,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR2   DD  DSN=&&CARD2,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR3   DD  DSN=&&CARD3,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR4   DD  DSN=&&CARD4,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR5   DD  DSN=&&CARD5,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR6   DD  DSN=&&CARD6,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR7   DD  DSN=&&CARD7,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTRS   DD  DSN=&&OUTDS,DISP=(NEW,PASS),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//*********************************************************************
//*  CREATE5: CREATES A PARTOTOONED DATA SET FROM GENER4 OUTPUT.
//*
//CREATE5 EXEC PGM=ICEGENER,REGION=512K,
//             COND=EVEN
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=&&OUTDS,DISP=(OLD,PASS)
//SYSUT2   DD  DSN=SYSILE.MSTCAT.BRNQ,DISP=(NEW,CATLG),
//             UNIT=WORKDA,
//             DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB),
//             SPACE=(CYL,(2,2,2)),LABEL=EXPDT=00000
//SYSIN    DD  *
  GENERATE MAXNAME=7,MAXFLDS=7,MAXGPS=7
        MEMBER  NAME=(ALIAS)                          1
ALIAS   RECORD  IDENT=(5,'ALIAS',4),FIELD=(80)        2
        MEMBER  NAME=(IMPORT)                         3
IMPORT  RECORD  IDENT=(6,'IMPORT',4),FIELD=(80)       4
        MEMBER  NAME=(NONVSAM)                        5
NONVSAM RECORD  IDENT=(7,'NONVSAM',4),FIELD=(80)      6
        MEMBER  NAME=(SYSCTLG)                        7
SYSCTLG RECORD  IDENT=(7,'SYSCTLG',4),FIELD=(80)      8
        MEMBER  NAME=(SYS1)                           9
SYS1    RECORD  IDENT=(4,'SYS1',4),FIELD=(80)        10
        MEMBER  NAME=(GDG)                           11
GDG     RECORD  IDENT=(3,'GDG',4),FIELD=(80)         12
        MEMBER  NAME=(MISC)                          13
MISC    RECORD  IDENT=(4,'MISC',4),FIELD=(80)        14
/*
//*
//*-----------------------------------------------------------
//*   COPIE DANS UN FICHIER INTERMEDIAIRE
//*-----------------------------------------------------------
//COPYINT  EXEC PGM=ICEGENER
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=SYSILE.MSTCAT.BRNQ(GDG),DISP=SHR
//SYSUT2   DD  DSN=SYST.LGDG.LIST,DISP=OLD
//*
//*---------------------------------------------------------------------
//* CETTE MACRO ANALYSE LE CONTENU DU MEMBRE GDG
//*---------------------------------------------------------------------
//MACGDG   EXEC PGM=IKJEFT01
//SYSPROC  DD DSN=SYST.ISPF.CLIST,DISP=SHR
//ISPPROF  DD  DSN=&&TOTO,DISP=(NEW,DELETE),UNIT=WORKDA,
//             SPACE=(TRK,(2,2,2)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
//ISPPLIB  DD  DSN=ISP.SISPPENU,DISP=SHR
//ISPSLIB  DD  DSN=ISP.SISPSENU,DISP=SHR
//ISPTLIB  DD  DSN=ISP.SISPTENU,DISP=SHR
//ISPMLIB  DD  DSN=ISP.SISPMENU,DISP=SHR
//SYSUDUMP DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSTSPRT DD  SYSOUT=*
//TRACEAPP DD  SYSOUT=*
//SYSTSIN  DD  DSN=SYST.ISPF.CLIST(GDGMEXL),DISP=SHR
//

./ ADD NAME=GDGMASTR
//SYSILEA  JOB 1000,'PH-GRANIE',REGION=2M,
//             COND=(4,LT),
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//JOBLIB    DD DSN=IPO1.LINKLIB,DISP=SHR
//DELET1  EXEC PGM=IEFBR14,REGION=512K
//DD1      DD  DSN=SYSILE.MSTCAT.BRNR,DISP=(MOD,DELETE),
//             UNIT=WORKDA,SPACE=(TRK,0)
//*
//*********************************************************************
//*
//*  FAIRE UN CATCVTM DANS SYSILE.MSTCAT.XXXX
//*
//*********************************************************************
//ASSEM2  EXEC PGM=ASMBLR,REGION=512K,
//             COND=EVEN,
//             PARM='DECK,NOOBJ'
//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DSN=&&CARD,DISP=(,PASS),
//             UNIT=SYSALLDA,SPACE=(CYL,(1,1))
//SYSIN    DD  *
  PUNCH ' LISTCAT ALL OUTFILE(OUTFILE) -'
  PUNCH '   CAT(CATALOG.MASTER.ZOS16.BRNR)'
.END     END
/*
//*********************************************************************
//* LIST3    LISTS VSAM SOURCE CATALOG TO BE CONVERTED
//*
//LIST3   EXEC PGM=IDCAMS,REGION=640K,
//             COND=(0,NE,ASSEM2)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DSN=&&CARD,DISP=(OLD,PASS)
//OUTFILE  DD  DSN=&&OUT,DISP=(,PASS),
//             UNIT=SYSALLDA,SPACE=(CYL,(3,3)),
//             DCB=(RECFM=VBA,LRECL=125,BLKSIZE=625)
/*
//*********************************************************************
//*  GENER4:   EXECUTE MCNVTCAT(CBIPO-SUPPLIED PROGRAM)
//*            TO GENERATE IDCAMS CONTROL CARDS FROM
//*            LISTCAT OUTPUT.
//*
//GENER4  EXEC PGM=MCNVTCAT,REGION=512K,                     /* .NU. */
//             PARM='CATALOG.MASTER.ZOS16.BRNR',
//             COND=((0,NE,ASSEM2))                          /* .RU. */
//SYSEMSG  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//LIST     DD  DSN=&&OUT,DISP=(OLD,PASS)
//CONTR1   DD  DSN=&&CARD1,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR2   DD  DSN=&&CARD2,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR3   DD  DSN=&&CARD3,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR4   DD  DSN=&&CARD4,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR5   DD  DSN=&&CARD5,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR6   DD  DSN=&&CARD6,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR7   DD  DSN=&&CARD7,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTRS   DD  DSN=&&OUTDS,DISP=(NEW,PASS),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//*********************************************************************
//*  CREATE5: CREATES A PARTOTOONED DATA SET FROM GENER4 OUTPUT.
//*
//CREATE5 EXEC PGM=ICEGENER,REGION=512K,
//             COND=EVEN
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=&&OUTDS,DISP=(OLD,PASS)
//SYSUT2   DD  DSN=SYSILE.MSTCAT.BRNR,DISP=(NEW,CATLG),
//             UNIT=WORKDA,
//             DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB),
//             SPACE=(CYL,(2,2,2)),LABEL=EXPDT=00000
//SYSIN    DD  *
  GENERATE MAXNAME=7,MAXFLDS=7,MAXGPS=7
        MEMBER  NAME=(ALIAS)                          1
ALIAS   RECORD  IDENT=(5,'ALIAS',4),FIELD=(80)        2
        MEMBER  NAME=(IMPORT)                         3
IMPORT  RECORD  IDENT=(6,'IMPORT',4),FIELD=(80)       4
        MEMBER  NAME=(NONVSAM)                        5
NONVSAM RECORD  IDENT=(7,'NONVSAM',4),FIELD=(80)      6
        MEMBER  NAME=(SYSCTLG)                        7
SYSCTLG RECORD  IDENT=(7,'SYSCTLG',4),FIELD=(80)      8
        MEMBER  NAME=(SYS1)                           9
SYS1    RECORD  IDENT=(4,'SYS1',4),FIELD=(80)        10
        MEMBER  NAME=(GDG)                           11
GDG     RECORD  IDENT=(3,'GDG',4),FIELD=(80)         12
        MEMBER  NAME=(MISC)                          13
MISC    RECORD  IDENT=(4,'MISC',4),FIELD=(80)        14
/*
//*
//*-----------------------------------------------------------
//*   COPIE DANS UN FICHIER INTERMEDIAIRE
//*-----------------------------------------------------------
//COPYINT  EXEC PGM=ICEGENER
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=SYSILE.MSTCAT.BRNR(GDG),DISP=SHR
//SYSUT2   DD  DSN=SYST.CGDG.LIST,DISP=OLD
//*
//*---------------------------------------------------------------------
//* CETTE MACRO ANALYSE LE CONTENU DU MEMBRE GDG
//*---------------------------------------------------------------------
//MACGDG   EXEC PGM=IKJEFT01
//SYSPROC  DD DSN=SYST.ISPF.CLIST,DISP=SHR
//ISPPROF  DD  DSN=&&TOTO,DISP=(NEW,DELETE),UNIT=WORKDA,
//             SPACE=(TRK,(2,2,2)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
//ISPPLIB  DD  DSN=ISP.SISPPENU,DISP=SHR
//ISPSLIB  DD  DSN=ISP.SISPSENU,DISP=SHR
//ISPTLIB  DD  DSN=ISP.SISPTENU,DISP=SHR
//ISPMLIB  DD  DSN=ISP.SISPMENU,DISP=SHR
//SYSUDUMP DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSTSPRT DD  SYSOUT=*
//TRACEAPP DD  SYSOUT=*
//SYSTSIN  DD  DSN=SYST.ISPF.CLIST(GDGMEXR),DISP=SHR
//

./ ADD NAME=GDGMAST2
//SYSILEA  JOB 1000,'PH-GRANIE',REGION=2M,
//             COND=(4,LT),
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//JOBLIB    DD DSN=IPO1.LINKLIB,DISP=SHR
//DELET1  EXEC PGM=IEFBR14,REGION=512K
//DD1      DD  DSN=SYSILE.MSTCAT.BRN2,DISP=(MOD,DELETE),
//             UNIT=WORKDA,SPACE=(TRK,0)
//*
//*********************************************************************
//*
//*  FAIRE UN CATCVTM DANS SYSILE.MSTCAT.XXXX
//*
//*********************************************************************
//ASSEM2  EXEC PGM=ASMBLR,REGION=512K,
//             COND=EVEN,
//             PARM='DECK,NOOBJ'
//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DSN=&&CARD,DISP=(,PASS),
//             UNIT=SYSALLDA,SPACE=(CYL,(1,1))
//SYSIN    DD  *
  PUNCH ' LISTCAT ALL OUTFILE(OUTFILE) -'
  PUNCH '   CAT(CATALOG.MASTER.ZOS13.BRN2)'
.END     END
/*
//*********************************************************************
//* LIST3    LISTS VSAM SOURCE CATALOG TO BE CONVERTED
//*
//LIST3   EXEC PGM=IDCAMS,REGION=640K,
//             COND=(0,NE,ASSEM2)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DSN=&&CARD,DISP=(OLD,PASS)
//OUTFILE  DD  DSN=&&OUT,DISP=(,PASS),
//             UNIT=SYSALLDA,SPACE=(CYL,(3,3)),
//             DCB=(RECFM=VBA,LRECL=125,BLKSIZE=625)
/*
//*********************************************************************
//*  GENER4:   EXECUTE MCNVTCAT(CBIPO-SUPPLIED PROGRAM)
//*            TO GENERATE IDCAMS CONTROL CARDS FROM
//*            LISTCAT OUTPUT.
//*
//GENER4  EXEC PGM=MCNVTCAT,REGION=512K,                     /* .NU. */
//             PARM='CATALOG.MASTER.ZOS13.BRN2',
//             COND=((0,NE,ASSEM2))                          /* .RU. */
//SYSEMSG  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//LIST     DD  DSN=&&OUT,DISP=(OLD,PASS)
//CONTR1   DD  DSN=&&CARD1,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR2   DD  DSN=&&CARD2,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR3   DD  DSN=&&CARD3,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR4   DD  DSN=&&CARD4,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR5   DD  DSN=&&CARD5,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR6   DD  DSN=&&CARD6,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTR7   DD  DSN=&&CARD7,DISP=(NEW,DELETE),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//CONTRS   DD  DSN=&&OUTDS,DISP=(NEW,PASS),UNIT=VIO,
//             SPACE=(CYL,(1,1))
//*********************************************************************
//*  CREATE5: CREATES A PARTOTOONED DATA SET FROM GENER4 OUTPUT.
//*
//CREATE5 EXEC PGM=ICEGENER,REGION=512K,
//             COND=EVEN
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=&&OUTDS,DISP=(OLD,PASS)
//SYSUT2   DD  DSN=SYSILE.MSTCAT.BRN2,DISP=(NEW,CATLG),
//             UNIT=WORKDA,
//             DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB),
//             SPACE=(CYL,(2,2,2)),LABEL=EXPDT=00000
//SYSIN    DD  *
  GENERATE MAXNAME=7,MAXFLDS=7,MAXGPS=7
        MEMBER  NAME=(ALIAS)                          1
ALIAS   RECORD  IDENT=(5,'ALIAS',4),FIELD=(80)        2
        MEMBER  NAME=(IMPORT)                         3
IMPORT  RECORD  IDENT=(6,'IMPORT',4),FIELD=(80)       4
        MEMBER  NAME=(NONVSAM)                        5
NONVSAM RECORD  IDENT=(7,'NONVSAM',4),FIELD=(80)      6
        MEMBER  NAME=(SYSCTLG)                        7
SYSCTLG RECORD  IDENT=(7,'SYSCTLG',4),FIELD=(80)      8
        MEMBER  NAME=(SYS1)                           9
SYS1    RECORD  IDENT=(4,'SYS1',4),FIELD=(80)        10
        MEMBER  NAME=(GDG)                           11
GDG     RECORD  IDENT=(3,'GDG',4),FIELD=(80)         12
        MEMBER  NAME=(MISC)                          13
MISC    RECORD  IDENT=(4,'MISC',4),FIELD=(80)        14
/*
//*
//*-----------------------------------------------------------
//*   COPIE DANS UN FICHIER INTERMEDIAIRE
//*-----------------------------------------------------------
//COPYINT  EXEC PGM=ICEGENER
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=SYSILE.MSTCAT.BRN2(GDG),DISP=SHR
//SYSUT2   DD  DSN=SYST.PGDG.LIST,DISP=OLD
//*
//*---------------------------------------------------------------------
//* CETTE MACRO ANALYSE LE CONTENU DU MEMBRE GDG
//*---------------------------------------------------------------------
//MACGDG   EXEC PGM=IKJEFT01
//SYSPROC  DD DSN=SYST.ISPF.CLIST,DISP=SHR
//ISPPROF  DD  DSN=&&TOTO,DISP=(NEW,DELETE),UNIT=WORKDA,
//             SPACE=(TRK,(2,2,2)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
//ISPPLIB  DD  DSN=ISP.SISPPENU,DISP=SHR
//ISPSLIB  DD  DSN=ISP.SISPSENU,DISP=SHR
//ISPTLIB  DD  DSN=ISP.SISPTENU,DISP=SHR
//ISPMLIB  DD  DSN=ISP.SISPMENU,DISP=SHR
//SYSUDUMP DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSTSPRT DD  SYSOUT=*
//TRACEAPP DD  SYSOUT=*
//SYSTSIN  DD  DSN=SYST.ISPF.CLIST(GDGMEXP),DISP=SHR
//

./ ADD NAME=GDGWARNP
//SYSILEA   JOB (T002550),'IEBCOPY',                                    00001003
//             NOTIFY=&SYSUID,                                          00004203
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00005003
//*----------------------------------------------------------------*
//* XMITIP
//*----------------------------------------------------------------*
//STEP10   EXEC PGM=IKJEFT1B,DYNAMNBR=20,REGION=2048K
//STEPLIB  DD  DSN=TCPIBM.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=TCPIBM.XMITIP.EXEC,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SYSTSPRT DD  SYSOUT=*
//MSG      DD  DSN=TCPIBM.XMITIP.PARMUSER(MSGGDGP),DISP=SHR
//SYSTSIN  DD  DSN=TCPIBM.XMITIP.PARMUSER(MSGGDGL),DISP=SHR

./ ADD NAME=GDGWARNQ
//SYSILEA   JOB (T002550),'IEBCOPY',                                    00001003
//             NOTIFY=&SYSUID,                                          00004203
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00005003
//*----------------------------------------------------------------*
//* XMITIP
//*----------------------------------------------------------------*
//STEP10   EXEC PGM=IKJEFT1B,DYNAMNBR=20,REGION=2048K
//STEPLIB  DD  DSN=TCPIBM.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=TCPIBM.XMITIP.EXEC,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SYSTSPRT DD  SYSOUT=*
//MSG      DD  DSN=TCPIBM.XMITIP.PARMUSER(MSGGDGQ),DISP=SHR
//SYSTSIN  DD  DSN=TCPIBM.XMITIP.PARMUSER(MSGGDGL),DISP=SHR

./ ADD NAME=GDGWARNR
//SYSILEA   JOB (T002550),'IEBCOPY',                                    00001003
//             NOTIFY=&SYSUID,                                          00004203
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00005003
//*----------------------------------------------------------------*
//* XMITIP
//*----------------------------------------------------------------*
//STEP10   EXEC PGM=IKJEFT1B,DYNAMNBR=20,REGION=2048K
//STEPLIB  DD  DSN=TCPIBM.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=TCPIBM.XMITIP.EXEC,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SYSTSPRT DD  SYSOUT=*
//MSG      DD  DSN=TCPIBM.XMITIP.PARMUSER(MSGGDGR),DISP=SHR
//SYSTSIN  DD  DSN=TCPIBM.XMITIP.PARMUSER(MSGGDGL),DISP=SHR

./ ADD NAME=GIMUNZIP
//GIMUNZIP JOB (ACCT£),                                                 00010000
//             'PGMRNAME',                                              00020000
//             USER=,                                         /*RACF*/  00030000
//             GROUP=,                                        /*RACF*/  00040000
//             PASSWORD=,                                     /*RACF*/  00050000
//             NOTIFY=,                                                 00060000
//             CLASS=A,                                                 00070000
//             MSGCLASS=X,                                              00080000
//             MSGLEVEL=(1,1)                                           00090000
//*SYS3.FILEMNGR.V151.RIMLIB(UNZIPJCL)                        /*JCTRL*/ 00100001
//*                                                                     00110000
//* 5751-CS3 COPYRIGHT IBM CORPORATION 1985, 2006                       00120000
//*                                                                     00130000
//*                                                                     00140000
//********************************************************************  00150000
//*          DO NOT TURN CAPS ON.  THIS JOB CONTAINS CASE               00160000
//*                    SENSITIVE CONTROL CARDS.                         00170000
//********************************************************************  00180000
//*                                                                     00190000
//* DOC: This job extracts CBPDO non-SMP/E files from archives          00200000
//*      created by the GIMZIP program                                  00210000
//*                                                                     00220000
//*       Change the JOB statement as required to match                 00230000
//*       your installation's requirements.                             00240000
//*                                                                     00250000
//* NOTE 1: Change the HASH value to YES if you require                 00260000
//*         SHA-1 hash checking for the archive files.                  00270000
//*                                                                     00280000
//* NOTE 2: If you are using SMP/E level 34.09 or higher,               00290000
//*         uncomment the SMPJHOME and SMPCPATH DD                      00300000
//*         Statements.  If you are at SMP/E 3.4, it is                 00310000
//*         recommended you be at least 34.09.                          00320000
//*                                                                     00330000
//* NOTE 3: Change the directory name on the SMPDIR DD to               00340000
//*         to match your system's SMPNTS directory name.               00350000
//*         STP63197 is the subdirectory id                             00360000
//*         assigned to your order during the RECEIVE                   00370000
//*         FROMNETWORK (RFNJOB).                                       00380000
//*                                                                     00390000
//* NOTE 4: Replace volser on each volume control statement             00400000
//*         with a valid volume serial number.  Deleting this           00410000
//*         control statement will cause SYSALLDA to be used            00420000
//*         as the unit type.                                           00430000
//*                                                                     00440000
//* NOTE 5: Replace hlq on each newname control statement               00450000
//*         with a valid data set high level qualifer.                  00460000
//*                                                                     00470000
//*                                                                     00480000
//*       Expect RC 00                                                  00490000
//*                                                                     00500000
//*------------------------------------------------------------         00510000
//UNZIP    EXEC PGM=GIMUNZIP,REGION=0M,PARM='HASH=NO'   <=== NOTE 1     00520000
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(50,10))                         00530000
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(CYL,(25,5))                          00540000
//SMPJHOME DD PATH='/usr/lpp/produits/java/J64/'   <===NOTE 2           00550000
//*SMPCPATH DD PATH='/usr/lpp/smp/classes/'           <===NOTE 2        00560000
//SMPOUT   DD SYSOUT=*                                                  00570000
//SYSPRINT DD SYSOUT=*                                                  00580000
//SMPDIR   DD PATH='/u/recprod/FILEMNGR',          <=== NOTE 3          00590000
//            PATHDISP=KEEP                                             00600000
//SYSIN    DD *                                                         00610000
<GIMUNZIP>                                                              00620000
<ARCHDEF                                                                00630000
name="S0001.CSP.STP63197.DOCLIB.pax.Z"                                  00640000
volume="volser"                                                         00650000
newname="hlq.DOCLIB">                                                   00660000
</ARCHDEF>                                                              00670000
<ARCHDEF                                                                00680000
name="S0002.CSP.STP63197.RIMLIB.pax.Z"                                  00690000
volume="volser"                                                         00700000
newname="hlq.RIMLIB">                                                   00710000
</ARCHDEF>                                                              00720000
<ARCHDEF                                                                00730000
name="S0003.CSP.STP63197.PGMDIR.pax.Z"                                  00740000
volume="volser"                                                         00750000
newname="hlq.PGMDIR">                                                   00760000
</ARCHDEF>                                                              00770000
</GIMUNZIP>                                                             00780000
/*                                                                      00790000

./ ADD NAME=GIMUNZIQ
//SYS019UN JOB (ACCT£),                                                 JOB33301
//*UNZIPJCL JOB (ACCT£),
//             'PGMRNAME',
//             USER=,                                         /*RACF*/
//             GROUP=,                                        /*RACF*/
//             PASSWORD=,                                     /*RACF*/
//             NOTIFY=&SYSUID,
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1)
//*SYS3.FILEMNGR.V151.RIMLIB(UNZIPJCL)
//*
//* 5751-CS3 COPYRIGHT IBM CORPORATION 1985, 2006
//*
//*
//*                                                           /*JCTRL*/
//**********************************************************
//*  DO NOT TURN CAPS ON AS PATH NAMES AND SMP/E PARAMETERS
//*  ARE CASE SENSITIVE.
//**********************************************************
//*
//* DOC: This job extracts a products relfile from archives
//*      created by the GIMZIP program
//*
//*       Change the JOB statement as required to match
//*       your installation's requirements.
//*
//* NOTE 1: Change the HASH value to YES if you require
//*         SHA-1 hash checking for the archive files
//*
//* NOTE 2: If you are using SMP/E level 34.09 or higher,
//*         uncomment the SMPJHOME and SMPCPATH DD
//*         Statements.  If you are at SMP/E 3.4, it is
//*         recommended you be at least 34.09.
//*
//* NOTE 3: Change the directory name on the SMPDIR DD to
//*         to match your system's SMPNTS directory name.
//*         STP63197 is the subdirectory id
//*         assigned to your order during the RECEIVE
//*         FROMNETWORK (RFNJOB).
//*
//* NOTE 4: Update parm with the name of the relfile you want
//*         to unload from the SMPRELF directory
//*
//* NOTE 5: Replace volser on the volume control statement
//*         with a valid volume serial number.  Deleting this
//*         control statement will cause SYSALLDA to be used
//*         as the unit type.
//*
//* NOTE 6: Replace hlq.sample.jobs on the newname control
//*         statement with a valid data set name.
//*
//*
//*       Expect RC 00
//*
//*------------------------------------------------------------
//UNZIP    EXEC PGM=GIMUNZIP,REGION=0M,PARM='HASH=NO'
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(10,10))
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(CYL,(15,5))
//*SMPJHOME DD PATH='/usr/lpp/java/J1.4/'           <===NOTE 2
//*SMPCPATH DD PATH='/usr/lpp/smp/classes/'         <===NOTE 2
//SMPOUT   DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPDIR   DD PATH='/u/recprod/FILEMNGR/SMPRELF',   <===NOTE 3
//*SMPDIR   DD PATH='/u/smpe/smpnts/STP63197/SMPRELF/',   <===NOTE 3
//            PATHDISP=KEEP
//SYSIN    DD *
<GIMUNZIP>
<ARCHDEF
name="CBCACHE.IBM.HVWR190.F2.pax.Z"
volume="dlib15"
newname="SYS019.ADFZCC.V190.INSTALL">
</ARCHDEF>
</GIMUNZIP>
/*

./ ADD NAME=GROUBRN2
//*COMMAND 'D XCF,GROUP,AMIRTCSR                                        00001001
//*COMMAND 'D XCF,GROUP,AMIRTCSR(1)    BRN2                             00002001
//*COMMAND 'D XCF,GROUP,AOPLXGRP                                        00003001
//*COMMAND 'D XCF,GROUP,ARCPLEX0(1)    BRN2                             00004001
//*COMMAND 'D XCF,GROUP,ATRRRS                                          00005001
//*COMMAND 'D XCF,GROUP,ATRRRS(1)      BRN2                             00006001
//*COMMAND 'D XCF,GROUP,BBCMF630                                        00007001
//*COMMAND 'D XCF,GROUP,BBCMF630(1)    BRN2                             00008001
//*COMMAND 'D XCF,GROUP,BBGROUP                                         00009001
//*COMMAND 'D XCF,GROUP,BBGROUP(1)     BRN2                             00009101
//*COMMAND 'D XCF,GROUP,BMCAB                                           00009201
//*COMMAND 'D XCF,GROUP,BMCAB(3)       BRN2                             00009301
//*COMMAND 'D XCF,GROUP,BMCAOPLX                                        00009401
//*COMMAND 'D XCF,GROUP,BMCTOMX                                         00009501
//*COMMAND 'D XCF,GROUP,BMCTOMX(1)     BRN2                             00009601
//*COMMAND 'D XCF,GROUP,BRN2(1)        BRN2                             00009701
//*COMMAND 'D XCF,GROUP,BRN5                                            00009801
//*COMMAND 'D XCF,GROUP,DBCPLEX$(1)    BRN2                             00009901
//*COMMAND 'D XCF,GROUP,DBCPLEXL(1)    BRN2                             00010001
//*COMMAND 'D XCF,GROUP,DBCPLEX1                                        00010101
//*COMMAND 'D XCF,GROUP,DBCPLEX1(1)    BRN2                             00010201
//*COMMAND 'D XCF,GROUP,DFHIR000                                        00010301
//*COMMAND 'D XCF,GROUP,DFHIR000(19)   BRN2                             00010401
//*COMMAND 'D XCF,GROUP,EZBTCPCS                                        00010501
//*COMMAND 'D XCF,GROUP,EZBTCPCS(2)    BRN2                             00010601
//*COMMAND 'D XCF,GROUP,HSFIXC                                          00010701
//*COMMAND 'D XCF,GROUP,HSFIXC(1)      BRN2                             00010801
//*COMMAND 'D XCF,GROUP,IDISXCFM                                        00010901
//*COMMAND 'D XCF,GROUP,IGG0CAS                                         00011001
//*COMMAND 'D XCF,GROUP,IGG0CAS(1)     BRN2                             00011101
//*COMMAND 'D XCF,GROUP,ISTCFS01                                        00011201
//*COMMAND 'D XCF,GROUP,ISTCFS01(1)    BRN2                             00012001
//*COMMAND 'D XCF,GROUP,MIMA£I(1)      BRN2                             00020001
//*COMMAND 'D XCF,GROUP,NONE(1)        BRN2                             00030001
//*COMMAND 'D XCF,GROUP,SYSATB01(1)    BRN2                             00040001
//*COMMAND 'D XCF,GROUP,SYSDAE                                          00050001
//*COMMAND 'D XCF,GROUP,SYSDAE(2)      BRN2                             00060001
//*COMMAND 'D XCF,GROUP,SYSIEFTS                                        00070001
//*COMMAND 'D XCF,GROUP,SYSIEFTS(1)    BRN2                             00080001
//*COMMAND 'D XCF,GROUP,SYSIGW00                                        00090001
//*COMMAND 'D XCF,GROUP,SYSIGW00(2)    BRN2                             00100001
//*COMMAND 'D XCF,GROUP,SYSIGW01                                        00110001
//*COMMAND 'D XCF,GROUP,SYSIGW01(1)    BRN2                             00120001
//*COMMAND 'D XCF,GROUP,SYSIKJBC                                        00130001
//*COMMAND 'D XCF,GROUP,SYSIKJBC(1)    BRN2                             00140001
//*COMMAND 'D XCF,GROUP,SYSIOSPX                                        00150001
//*COMMAND 'D XCF,GROUP,SYSIOSPX(1)    BRN2                             00160001
//*COMMAND 'D XCF,GROUP,SYSIOS01                                        00170001
//*COMMAND 'D XCF,GROUP,SYSIOS01(1)    BRN2                             00180001
//*COMMAND 'D XCF,GROUP,SYSJES                                          00190001
//*COMMAND 'D XCF,GROUP,SYSJES(1)      BRN2                             00200001
//*COMMAND 'D XCF,GROUP,SYSJ2$XD                                        00210001
//*COMMAND 'D XCF,GROUP,SYSJ2$XD(1)    BRN2                             00220001
//*COMMAND 'D XCF,GROUP,SYSMCS                                          00230001
//*COMMAND 'D XCF,GROUP,SYSMCS(1)      BRN2                             00240001
//*COMMAND 'D XCF,GROUP,SYSRMF                                          00250001
//*COMMAND 'D XCF,GROUP,SYSRMF(1)      BRN2                             00260001
//*COMMAND 'D XCF,GROUP,SYSTTRC                                         00270001
//*COMMAND 'D XCF,GROUP,SYSTTRC(1)     BRN2                             00280001
//*COMMAND 'D XCF,GROUP,SYSWLM                                          00290001
//*COMMAND 'D XCF,GROUP,SYSWLM(1)      BRN2                             00300001
//*COMMAND 'D XCF,GROUP,SYSXCF                                          00310001
//*COMMAND 'D XCF,GROUP,SYSXCF(1)      BRN2                             00320001
//*COMMAND 'D XCF,GROUP,TOMPLEX                                         00330001
//*COMMAND 'D XCF,GROUP,TOMPLEX(1)     BRN2                             00340001

./ ADD NAME=GRS
//GRSL      JOB ACCT£,                                                  00001001
//             MVS,                                                     00002000
//             NOTIFY=&SYSUID,                                          00003000
//             MSGLEVEL=(1,1)                                           00004000
//**02 IEFC166D REPLY Y/N TO EXECUTE/SUPPRESS COMMAND                   00004101
// COMMAND  'D GRS,RES=(*,SYS1.PARMLIB)'                                00004201
//DELETE   EXEC PGM=IEFBR14                                             00004300

./ ADD NAME=HSM$
ARCPDOX ARC0036E                                                        00001001
SYSJRI.JCL.HSM                                                          00010000
SYSJRI.STATS.HSM                                                        00020000
SYSJRI.SUIVI.HSM                                                        00030000
USERPRO                                                                 00040000
                                                                        00050000
PROHBA.PROJML.USER.HSM                                                  00060000
SYSJRI.FIC.HSM                                                          00070000
SYSJRI.JCL.HSM                                                          00080000
SYSJRI.K7S.HSM                                                          00090000
SYSJRI.LIST.K7.HSM                                                      00100000
SYSJRI.STATS.HSM                                                        00110000
SYSJRI.SUIVI.HSM                                                        00120000
EXPLOIT                                                                 00130000
                                                                        00140000
PTLMS.STATS.HSM                                                         00150000

./ ADD NAME=HSMCMD
//HSENDCMD  JOB ACCT£,                                                  00010023
//             MVS,                                                     00020004
//             NOTIFY=&SYSUID,                                          00030004
//             MSGCLASS=T                                               00040008
//*                                                                     00041032
//  EXEC PGM=IKJEFT01                                                   00050004
//*JOURNAL DD DSN=SYSTR.DFHSM.JOURNAL,DISP=SHR                          00060008
//*BAKCAT  DD DSN=SYSTR.DFHSM.BCDS,DISP=SHR                             00070008
//*MIGCAT  DD DSN=SYSTR.DFHSM.MCDS,DISP=SHR                             00080008
//*OFFCAT  DD DSN=SYSTR.DFHSM.OCDS,DISP=SHR                             00090008
//*ARCLOGX DD DSN=SYSTR.DFHSM.HSMLOGX1,DISP=SHR                         00100008
//*ARCLOGY DD DSN=SYSTR.DFHSM.HSMLOGY1,DISP=SHR                         00110008
//SYSTSPRT DD SYSOUT=*                                                  00120004
//SYSTSIN  DD *                                                         00130004
Causing a dump to be generated if an installation exit abends           00130133
PATCH .MCVT.+2D BITS(.......1) /* dump after installation exit */       00130333
Determining why SMS-managed data sets are not processed                 00130433
PATCH .MGCB.+26 X'FF'                                                   00130533
PATCH .BGCB.+24 X'FF'                                                   00130633
Displaying the last date that automatic primary space management ran    00130733
DISPLAY .MCR.+98 LENGTHS(4)                                             00130833
Displaying the last date migration cleanup ran                          00131033
DISPLAY .MCR.+48 LENGTHS(4)                                             00131133
Displaying the last date automatic backup ran                           00131233
DISPLAY .BCR.+50 LENGTHS(4)                                             00131433
Displaying the last date level 1 functions ran                          00131533
DISPLAY .BCR.+5C LENGTHS(4)                                             00131833
Displaying the last date that automatic dump functions ran              00131933
DISPLAY .DCR.+5A LENGTHS(4)                                             00132133
Displaying the contents of the MCVT                                     00132233
DISPLAY .MCVT.+0 LENGTHS(60)                                            00132433
Displaying a specific MVT element                                       00132533
DISPLAY .MVT.+0 VOLUME(SMS001)                                          00132833
Displaying data and sending the results to an output data set           00132933
DISPLAY .ARCCTL.+0 LEN(120) ODS(USERID.DISPLAY.DATA)                    00133333
Displaying the maintenance level                                        00133433
DISPLAY .ARCBGEN.+0 MODLEVEL                                            00133733
DISPLAY .ARCWOPEN.+0 MOD ABACKUP(agname)                                00134133
Example:This example displays the maintenance levels of all modules in t00134233
DISPLAY .ARCCTL.+0 MODLEVEL(ALL) ODS(USERID.DISPLAY.DATA) LOGONLY       00134533
Displaying the MVT entry                                                00134633
DISPLAY .MVT.+0                                                         00134833
Displaying a storage location within the ABARS secondary address space  00134933
DISPLAY .ARCWCTL.+0 ARECOVER(AGM1.C.C01V0001)                           00135233
HSENDCMD                                                                00135328
AUDIT ABRCTL ( AGNAME ) FRAGMENT B                                      00135426
//*ARC0257I HOST IS NOT CONNECTED TO SPECIFIED COMMON QUEUE.            00135527
HSENDCMD AUDIT CQUEUE(RECALL) NOFIX FIX                                 00135628
         AUDIT CPCTL ( CPNAME ) FRAGMENT B                              00135728
HSENDCMD AUDIT DSCTL(BACKUP)                                            00135828
HSENDCMD AUDIT DSCTL(MIGRATION)                                         00135928
         AUDIT DIRCTL VOLUMES( VOLSER ) FRAGMENT B                      00136028
         AUDIT FLCTL(BACKUP) FRAGMENT F                                 00136128
         AUDIT MEDCTL FRAGMENT C                                        00137028
         AUDIT VOLCTL(BACKUP) FRAGMENT D                                00138028
         AUDIT VOLCTL( MIGRATION RECOVERABLE) FRAGMENT E                00139028
//                                                                      00139125
HSEND SWAPLOG LOG                                                       00140017
HSEND SWAPLOG PDA                                                       00140117
//                                                                      00150015
HSEND WAIT LIST LEVEL(SYS019.LP2.MVS) MCDS SELECT(AGE(365))             00151017
//                                                                      00152017
HSENDCMD HOLD    MIGRATION                                              00160003
HSENDCMD RELEASE                                                        00170011
: PREVENTING AGGREGATE BACKUP....................................       00180011
HSENDCMD HOLD    ABACKUP                                                00190011
: PREVENTING ALL DFSMSHSM FUNCTIONS..................................   00200011
HSENDCMD HOLD    ALL                                                    00210011
: PREVENTING AGGREGATE RECOVERY.................................        00220011
HSENDCMD HOLD    ARECOVER                                               00230010
: ENDING THE AUDIT FUNCTION........................................     00240011
HSENDCMD HOLD    AUDIT                                                  00250010
: PREVENTING DATA SETS FROM EXPIRING......................              00260011
HSENDCMD HOLD    AUTOEXPIRATION                                         00270011
: PREVENTING AUTOMATIC VOLUME AND AUTOMATIC SECONDARY SPACE MANAGEMENT  00280011
HSENDCMD HOLD    AUTOMIGRATION                                          00290011
: PREVENTING BACKUPS..............................................      00300011
HSENDCMD HOLD    BACKUP                                                 00310011
: PREVENTING COMMON QUEUE FUNCTIONS..........................           00320011
HSENDCMD HOLD    COMMONQUEUE                                            00330011
: PREVENTING DUMPS..................................................    00340011
HSENDCMD HOLD    DUMP                                                   00350011
: SPECIFYING WHEN AGGREGATE GROUP PROCESSING SHOULD STOP....            00360011
HSENDCMD HOLD    ENDOFDATASET                                           00370011
: ENDING THE EXPIRE BACKUP FUNCTION.............................        00380011
HSENDCMD HOLD    EXPIREBV                                               00390011
: PREVENTING FAST REPLICATION BACKUP OR DUMP PROCESSING.........        00400011
HSENDCMD HOLD    FRBACKUP                                               00410011
: PREVENTING FAST REPLICATION RECOVERY PROCESSING................       00420011
HSENDCMD HOLD    FRRECOV                                                00430011
: ENDING THE LIST FUNCTION..........................................    00440011
HSENDCMD HOLD    LIST                                                   00450011
: PREVENTING LOGGING.................................................   00460011
HSENDCMD HOLD    LOG                                                    00470011
: PREVENTING SPACE MANAGEMENT..................................         00480011
HSENDCMD HOLD    MIGRATION                                              00490011
: PREVENTING RECALL AND DELETION..................................      00500011
HSENDCMD HOLD    RECALL                                                 00510011
: PREVENTING RECOVERY AND RESTORE................................       00520011
HSENDCMD HOLD    RECOVER                                                00530011
: ENDING THE RECYCLE FUNCTION....................................       00540011
HSENDCMD HOLD    RECYCLE                                                00550011
: ENDING THE REPORT FUNCTION......................................      00560011
HSENDCMD HOLD    REPORT                                                 00570011
: PREVENTING DFSMSHSM FROM COPYING A TAPE.......................        00580011
HSENDCMD HOLD    TAPECOPY                                               00590011
: ENDING THE REPORT FUNCTION......................................      00600011
HSENDCMD HOLD    REPORT                                                 00610011
: PREVENTING DFSMSHSM FROM COPYING A TAPE.......................        00620011
HSENDCMD HOLD    TAPECOPY                                               00630011
: PREVENTING DFSMSHSM FROM REPLACING AN ORIGINAL TAPE VOLUME WIT        00640011
HSENDCMD HOLD    TAPEREPL                                               00650011
//                                                                      00660004
CHAPTER 12. HALTERDS: CHANGING DATA SET PARAMETERS.... 45               00670005
CHAPTER 13. HALTERU: CHANGING UNIX FILE PARAMETERS..... 53              00680005
BACKING UP DATA SETS. 55                                                00690005
   HBACKDS SYS019.BRN2.MVS                                              00700005
CHAPTER 15. HBACKDSU: BACKING UP DATA SETS........ 83                   00710005
CHAPTER 16. HBDELETE: DELETING BACKUP VERSIONS.. 85                     00720005
CHAPTER 17. HBDELETU: DELETING BACKUP VERSIONS.. 95                     00730005
CHAPTER 18. HCANCEL: CANCELING A QUEUED REQUEST97                       00740005
CHAPTER 19. HCANCELU: CANCELING A QUEUED REQUEST ON A FILEMODE DFSMSHSM 00750005
CHAPTER 20. HDELETE: DELETING MIGRATED DATA SETS.........103            00760005
CHAPTER 21. HLIST: LISTING INFORMATION FROM THE BCDS AND MCDS......109  00770005
HLIST                                                                   00780014
HLIST   DSNAME (PAXW.RR05TEMP.TOB)    SYSOUT(T) BOTH                    00790030
HLIST   DSNAME (SYS019.DFHSM.BCDS)    SYSOUT(T) BOTH                    00791030
HLIST   DSNAME (SYS019.DFHSM.MCDS)    SYSOUT(T) BOTH                    00792030
HLIST   DSNAME (SYS019.DFHSM.OCDS)    SYSOUT(T) BOTH                    00793030
HLIST   DSNAME (SYS019.DFHSM.JOURNAL) SYSOUT(T) BOTH                    00794030
HLIST BACKUPVOLUME                                                      00800014
BVOL ( VOLSER )                                                         00810014
FRAGMENT A                                                              00820014
DATASETNAME                                                             00830014
DSNAME ( DSNAME )                                                       00840014
LEVEL                                                                   00850014
( QUALIFIER )                                                           00860014
FRAGMENT B                                                              00870014
MIGRATIONVOLUME                                                         00880014
MVOL                                                                    00890014
MIGRATIONLEVEL1                                                         00900014
ML1                                                                     00910014
MIGRATIONLEVEL2                                                         00920014
ML2 ( DASD                                                              00930014
TAPE                                                                    00940014
)                                                                       00950014
FILENAME                                                                00960014
HOLD                                                                    00970014
CHAPTER 22. HLISTU: LISTING INFORMATION FROM THE BCDS AND MCDS... 141   00980005
   HBACKDS DSNAME(SYS019.BRN2.MVS)                                      00990005
                                                                        01000005
CHAPTER 23. HMIGRATE: MIGRATING DATA SETS                               01010019
HMIGRATE DB2C.ARCHLOG1.B0181637 ML2                                     01011019
HMIGRATE (dsname/password...)                                           01011130
         TRANSITION(MANAGEMENTCLASS(mc1) STORAGECLASS(sc1)              01011230
                    STORAGEGROUP(sgn1,...,sgn15))                       01011330
         MOVE                                                           01011430
         CLOUD(cloudname)                                               01011530
         EXTENDRC                                                       01011630
         MIGRATIONLEVEL2                                                01011730
         WAIT or NOWAIT                                                 01011830
CHAPTER 24. HQUERY: LISTING PENDING REQUESTS                            01020019
CHAPTER 25. HQUERYU: LISTING PENDING REQUESTS ON A FILEMODE DFSMSHSM HOS01030005
CHAPTER 26. HRECALL: RECALLING DATA SETS                                01040019
HRECALL SYS019.LP2.ADZFCC UNIT(3390) VOLUME(VATS07)                     01041020
CHAPTER 27. HRECOVER: RECOVERING DATA SETS OR UNIX FILES                01050019
CHAPTER 28. HRECOVU: RECOVERING DATA SETS OR UNIX FILES                 01060019
//                                                                      01070005
HSENDCMD RELEASE MIGRATION                                              01080005
HSENDCMD QUERY ACTIVE                                                   01081027
//*DISPLAYING THE CONTROL DATA SET MULTIPLE BACKUP SUPPOR               01081130
HSENDCMD QUERY CDSVERSIONBACKUP                                         01082029
//*DISPLAYING CONTROL DATA SET SPACE-USE INFORMATION......              01082130
HSENDCMD QUERY CONTROLDATASETS                                          01083030
HSENDCMD QUERY SETSYS OUTDATASET(SYS019.LP2.SETSYS)                     01090009
HSENDCMD QUERY STARTUP                                                  01101027
ABACKUP: PREVENTING AGGREGATE BACKUP....................................01110005
ALL: PREVENTING ALL DFSMSHSM FUNCTIONS..................................01120005
ARECOVER: PREVENTING AGGREGATE RECOVERY.................................01130005
AUDIT: ENDING THE AUDIT FUNCTION........................................01140005
AUTOEXPIRATION: PREVENTING DATA SETS FROM EXPIRING......................01150005
XXII                                                                    01160005
AUTOMIGRATION: PREVENTING AUTOMATIC VOLUME AND AUTOMATIC SECONDARY SPACE01170005
MANAGEMENT..............................................................01180005
BACKUP: PREVENTING BACKUPS..............................................01190005
COMMONQUEUE: PREVENTING COMMON QUEUE FUNCTIONS..........................01200005
DUMP: PREVENTING DUMPS..................................................01210005
ENDOFDATASET: SPECIFYING WHEN AGGREGATE GROUP PROCESSING SHOULD STOP....01220005
ENDOFDATASET                                                            01230005
                                                                        01240005
/*arcf000_v2r5 zOS 2.5 DFSMShsm Storage Administration                  01270031
F HSM,BACKVOL CDS BACKUPDEVICECATEGORY(dasd                             01280031
F HSM,BACKVOL CDS BACKUPDEVICECATEGORY(tape(PARALELL)) +                01280131
  DATAMOVER(HSM DSS) NULLJOURNALONLY                                    01280231
                                                                        01280331
F HSM,BACKVOL sg DUMP(DUMPCLASS REPDT(NOLIMIT) MAXSTACK(*) +            01280431
  MINSTACK(*)                                                           01280531
                                                                        01280631
F HSM,BACKVOL volumes                                                   01280731
 HSEND WAIT BACKVOL VOLUME(?PRIVOL) UNIT(?PRIUNT) B(TAPE) TOTAL         01281024
 HSEND WAIT BACKVOL VOL(?PRIVOL) DUMP(DUMPCLASS(?DMPCLAS) -             01282024
      RETPD(NOLIMIT)) UNIT(?PRIUNT)                                     01283024
F HSM,EXPIREBV EXECUTE                                                  01290005
F HSM,MIGRATE VOL(EXP802)                                               01300005
F HSM,QUERY STAT      OUTDATASET(SYS019.LP2.HSMSTAT)                    01310016
F HSM,RECYCLE ML2 EXECUTE LIMIT(500)                                    01320001
F HSM,RECYCLE DAILY EXECUTE LIMIT(50)                                   01330001
F HSM,RECYCLE ML2 EXECUTE LIMIT(100)                                    01340001
F HSM,RECYCLE ML2 EXECUTE PERCENTVALID(2) LIMIT(50)                     01350001
F HSM,RECYCLE ALL PERCENTVALID(00) EXECUTE                              01360001
F HSM,RECYCLE ALL PERCENTVALID(10) LIMIT(100) EXECUTE                   01361021
F HSM,REPORT                                                            01370001
HSENDCMD HOLD    MIGRATION                                              01380011
HSENDCMD HOLD                                                           01381031
//*PREVENTING AGGREGATE BACKUP....................................      01390012
                 ABACKUP                                                01400011
//*PREVENTING ALL DFSMSHSM FUNCTIONS..................................  01410012
                 ALL                                                    01420011
//*PREVENTING AGGREGATE RECOVERY.................................       01430012
                 ARECOVER                                               01440011
//*ENDING THE AUDIT FUNCTION........................................    01450012
                 AUDIT                                                  01460011
//*PREVENTING DATA SETS FROM EXPIRING......................             01470012
                 AUTOEXPIRATION                                         01480011
//*PREVENTING AUTOMATIC VOLUME AND AUTOMATIC SECONDARY SPACE            01490012
                 AUTOMIGRATION                                          01500011
//*PREVENTING BACKUPS..............................................     01510012
                 BACKUP                                                 01520011
//*PREVENTING COMMON QUEUE FUNCTIONS..........................          01530012
                 COMMONQUEUE                                            01540011
//*PREVENTING DUMPS..................................................   01550012
                 DUMP                                                   01560011
//*SPECIFYING WHEN AGGREGATE GROUP PROCESSING SHOULD STOP....           01570012
                 ENDOFDATASET                                           01580011
//*ENDING THE EXPIRE BACKUP FUNCTION.............................       01590012
                 EXPIREBV                                               01600011
//*PREVENTING FAST REPLICATION BACKUP OR DUMP PROCESSING.........       01610012
                 FRBACKUP                                               01620011
//*PREVENTING FAST REPLICATION RECOVERY PROCESSING................      01630012
                 FRRECOV                                                01640011
//*ENDING THE LIST FUNCTION..........................................   01650012
                 LIST                                                   01660011
//*PREVENTING LOGGING.................................................  01670012
                 LOG                                                    01680011
//*PREVENTING SPACE MANAGEMENT..................................        01690012
                 MIGRATION                                              01700011
//*PREVENTING RECALL AND DELETION..................................     01710012
                 RECALL                                                 01720011
//*PREVENTING RECOVERY AND RESTORE................................      01730012
                 RECOVER                                                01740011
//*ENDING THE RECYCLE FUNCTION....................................      01750012
                 RECYCLE                                                01760011
//*ENDING THE REPORT FUNCTION......................................     01770012
                 REPORT                                                 01780011
//*PREVENTING DFSMSHSM FROM COPYING A TAPE.......................       01790012
                 TAPECOPY                                               01800011
//*PREVENTING DFSMSHSM FROM REPLACING AN ORIGINAL TAPE VOLUME WIT       01810012
                 TAPEREPL                                               01820011
HSENDCMD RELEASE                                                        01830012
//*RELEASING ALL DFSMSHSM FUNCTIONS                                     01840031
HSENDCMD RELEASE ALL                                                    01850018
//*RELEASING AGGREGATE BACKUP                                           01860031
HSENDCMD RELEASE ABACKUP                                                01870018
//*RELEASING AGGREGATE RECOVERY1011                                     01880012
HSENDCMD RELEASE ARECOVER                                               01890018
//*RELEASING THE AUDIT FUNCTION1012                                     01900012
HSENDCMD RELEASE AUDIT                                                  01910018
//*RELEASING AUTOMATIC EXPIRATION                                       01920031
HSENDCMD RELEASE AUTOEXPIRATION                                         01930018
//*RELEASING ONLY AUTOMATIC VOLUME AND AUTOMATIC SECONDARY S            01940012
HSENDCMD RELEASE AUTOMIGRATION                                          01950018
//*RELEASING BACKUP... 1012                                             01960012
HSENDCMD RELEASE BACKUP                                                 01970018
//*RELEASING HOLDS ON THE COMMON QUEUE                                  01980031
HSENDCMD RELEASE COMMONQUEUE                                            01990018
//*RELEASING DUMP1014                                                   02000012
HSENDCMD RELEASE DUMP                                                   02010018
//*RELEASING INTERVAL AND ON-DEMAND MIGRATION                           02020031
HSENDCMD RELEASE EVENTDRIVENMIGRATION                                   02030018
//*RELEASING THE EXPIRE BACKUP VERSIONS FUNCTION                        02040031
HSENDCMD RELEASE EXPIREBV                                               02050018
//*RELEASING THE FAST REPLICATION BACKUP OR DUMP FUNCTION               02060031
HSENDCMD RELEASE FRBACKUP                                               02070018
//*RELEASING THE FAST REPLICATION RECOVER FUNCTION                      02080031
HSENDCMD RELEASE FRRECOV                                                02090018
//*RELEASING THE ACTIVITY LOGS                                          02100031
HSENDCMD RELEASE HARDCOPY                                               02110018
//*RELEASING THE LIST FUNCTION                                          02120031
HSENDCMD RELEASE LIST                                                   02130018
//*RELEASING LOGGING.1016                                               02140012
HSENDCMD RELEASE LOG                                                    02150018
//*RELEASING SPACE MANAGEMENT                                           02160031
HSENDCMD RELEASE MIGRATION                                              02170018
//*RELEASING RECALL AND DELETION...... 1017                             02180012
HSENDCMD RELEASE RECALL                                                 02190018
//*RELEASING RECOVERY AND RESTORE1018                                   02200012
HSENDCMD RELEASE RECOVER                                                02210018
//*RELEASING THE RECYCLE FUNCTION..1018                                 02220012
HSENDCMD RELEASE RECYCLE                                                02230018
//*RELEASING THE REPORT FUNCTION..... 1018                              02240012
HSENDCMD RELEASE REPORT                                                 02250018
//*RELEASING THE DFSMSRMM FUNCTION. 1019                                02260012
HSENDCMD RELEASE RMM                                                    02270018
//*RELEASING THE TAPE COPY FUNCTION..... 1019                           02280012
HSENDCMD RELEASE TAPECOPY                                               02290018
//*RELEASING THE TAPE REPLACE FUNCTION. 1019                            02300012
HSENDCMD RELEASE TAPEREPL                                               02310018
SETSYS AUTOBACKUPSTART(0945)                                            02320013
hsendcmd                                                                02321032
hsendcmd LIST AGGREGATE: LISTING THE AGGREGATE BACKUP AND RECOVERY ACTIV02330032
hsendcmd LIST BACKUPVOLUME: LISTING BACKUP VOLUME ENTRIES               02340032
         LIST BACKUPVOLUME                                              02341032
         LIST BACKUPVOLUME SELECT(EMPTY)                                02342032
         LIST BACKUPVOLUME(HSM001)                                      02343032
hsendcmd LIST CLOUD: LISTING INFORMATION FROM CLOUD STORAGE.............02350032
//*LISTING INFORMATION FOR EACH VERSION OF A COPY P                     02351032
hsendcmd LIST COPYPOOL                                                  02360032
hsendcmd LIST COPYPOOLBACKUPSTORAGEGROUP: LISTING COPY POOL INFORMATION 02370032
         LIST SPECIFIED COPY POOL BACKUP STORAGE GROUP..................02380032
LISTING DATA SET ENTRIES...................                             02390015
hsendcmd LIST DATASETNAME(PAXW.RR05TEMP.TOB)                            02400032
hsendcmd LIST LEVEL(PAXW.RR05TEMP.TOB)                                  02410032
   LISTING DUMP CLASS PROFILES....................                      02411032
hsendcmd LIST DUMPCLASS(WEEKLy)                                         02420032
   LISTING INFORMATION ABOUT A SINGLE DUMP VOLUME                       02421032
hsendcmd LIST DUMPVOLUME                                                02430032
hsendcmd LIST DUMPVOLUME                                                02431032
hsendcmd LIST DUMPVOLUME SELECT(AVAILABLE)                              02432032
hsendcmd LIST DUMPVOLUME SELECT(UNAVAILABLE)                            02433032
hsendcmd LIST DUMPVOLUME SELECT(EXPIRED)                                02434032
hsendcmd LIST DUMPVOLUME SELECT(UNEXPIRED)                              02435032
hsendcmd LIST DUMPVOLUME SELECT(NORETENTIONLIMIT)                       02436032
hsendcmd LIST DUMPVOLUME SELECT(DUMPCLASS(class))                       02437032
hsendcmd LIST DUMPVOLUME(volser)                                        02438032
hsendcmd LIST FILENAME AND FILELEVEL: LISTING UNIX FILE ENTRIES.........02440032
hsendcmd LIST HOST: LISTING ALL CONTROL DATA SETS SERIALIZED BY THE DFSM02450032
hsendcmd LIST MIGRATIONVOLUME, MIGRATIONLEVEL1, MIGRATIONLEVEL2, AND VOL02460032
hsendcmd LIST MIGRATION VOLUMES.........................................02470032
   LISTING PRIMARY VOLUMES....................                          02471032
hsendcmd LIST PRIMARYVOLUME                                             02480032
hsendcmd LIST TAPETABLEOFCONTENTS: LISTING TAPE VOLUME INFORMATION FROM 02490032
hsendcmd LIST TAPETABLEOFCONTENTS(VOLSER): LISTING TAPE VOLUME INFORMATI02500032
hsendcmd LIST USER: LISTING USER ENTRIES................................02510032

./ ADD NAME=HSMRELEA
//HSMRELEA  JOB ACCT£,                                                  00010000
//             MVS,                                                     00020000
//             NOTIFY=&SYSUID,                                          00030000
//             MSGCLASS=T                                               00040000
//  EXEC PGM=IKJEFT01                                                   00050000
//SYSTSPRT DD SYSOUT=*                                                  00120000
//SYSTSIN  DD *                                                         00130000
HSENDCMD RELEASE ABACKUP                                                01870000
HSENDCMD RELEASE ARECOVER                                               01890000
HSENDCMD RELEASE AUDIT                                                  01910000
HSENDCMD RELEASE AUTOEXPIRATION                                         01930000
HSENDCMD RELEASE AUTOMIGRATION                                          01950000
HSENDCMD RELEASE BACKUP                                                 01970000
HSENDCMD RELEASE COMMONQUEUE                                            01990000
HSENDCMD RELEASE DUMP                                                   02010000
HSENDCMD RELEASE EVENTDRIVENMIGRATION                                   02030000
HSENDCMD RELEASE EXPIREBV                                               02050000
HSENDCMD RELEASE FRBACKUP                                               02070000
HSENDCMD RELEASE FRRECOV                                                02090000
HSENDCMD RELEASE HARDCOPY                                               02110000
HSENDCMD RELEASE LIST                                                   02130000
HSENDCMD RELEASE LOG                                                    02150000
HSENDCMD RELEASE MIGRATION                                              02170000
HSENDCMD RELEASE RECALL                                                 02190000
HSENDCMD RELEASE RECOVER                                                02210000
HSENDCMD RELEASE RECYCLE                                                02230000
HSENDCMD RELEASE REPORT                                                 02250000
HSENDCMD RELEASE RMM                                                    02270000
HSENDCMD RELEASE TAPECOPY                                               02290000

./ ADD NAME=HSMTTOC
//SYSPGRH  JOB 1000,'PH-GRANIE',REGION=2M,                              00001000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00002000
//*------------------------------------------------------------         00003000
//* POUR RESOUDRE UN PROBLEME DE TTOC INCONSISTENT AU START HSM         00003100
//* AUDIT DE LA K7 VNNNNN                                               00003200
//*------------------------------------------------------------         00003300
//CMDTSO   EXEC PGM=IKJEFT01                                            00004000
//SYSTERM  DD SYSOUT=*                                                  00005000
//SYSTSPRT DD SYSOUT=*                                                  00006000
//SYSTSIN  DD *                                                         00007000
    HSEND AUDIT MEDIACONTROLS VOLUMES(V05205) FIX                       00008000
/*                                                                      00009000
//                                                                      00010000

./ ADD NAME=HZSPRINT
//HZSPRINT  JOB ACCT£,                                                  00010000
//             MVS,                                                     00020000
//             NOTIFY=&SYSUID,                                          00030000
//             MSGCLASS=T                                               00040001
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00050002
//      SYS019.LP2.DB2,                                                 00051002
//      SYS1.SACBCNTL)                                                  00060002
//*HZSPRINT JOB
//****************************************************************/
//*                                                              */
//*                                                              */
//*     Sample JCL for the IBM Health checker For z/OS print     */
//*     Utility                                                  */
//*                                                              */
//* PROPRIETARY STATEMENT:                                       */
//*                                                              */
//*     LICENSED MATERIALS - PROPERTY OF IBM                     */
//*     5650-ZOS                                                 */
//*     COPYRIGHT IBM CORP. 2008,2017                            */
//*     STATUS = HBB77B0                                         */
//*                                                              */
//* HZSPRINT utility                                             */
//*   The print utility is used to write the current message     */
//*   buffer for the target check(s) to the specified SYSOUT.    */
//*                                                              */
//* HZSPRINT Parameters                                          */
//*  Can be passed:                                              */
//*  - via the JCL PARM string which is limited to 100 characters*/
//*  - via a JCL PARMDD, which is limited to 256 "effective"     */
//*    character, for HZSPRNT, at this time. Trailing blanks     */
//*    per line do not count though. Do not include any other    */
//*    extra blanks, in particular at the beginning of any line. */
//*  Parameters should be separated from each other by a comma.  */
//*                                                              */
//* Valid parameters are:                                        */
//*   LOGSTREAM(log_stream_name)                                 */
//*     Where log_stream_name is the name of a log stream that   */
//*     is (or was) in use by IBM Health Checker for z/OS.       */
//*     If LOGSTREAM is specified, the message buffers are       */
//*     obtained from the specified log_stream_name.             */
//*     If LOGSTREAM is not specified, the message buffers are   */
//*     obtained from the checks that are currently registered   */
//*     with the IBM Health Checker for z/OS.                    */
//*   SYSNAME(system_name)                                       */
//*     Where system_name is the name of a system where the      */
//*     checks were executed.                                    */
//*     Wildcard characters '*' and '?' may be used if the       */
//*     output of multiple systems is desired.                   */
//*     The SYSNAME keyword is only valid when LOGSTREAM is also */
//*     specified.                                               */
//*     If the SYSNAME keyword is not specified with LOGSTREAM,  */
//*     processing is equivalent to a specification of           */
//*     SYSNAME(*).                                              */
//*   CHECK(check_owner,check_name)                              */
//*     Where check_owner and check_name identify the            */
//*     desired check(s) to print.                               */
//*     Wildcard characters '*' and '?' may be used if the       */
//*     output of multiple checks is desired.                    */
//*     Note that it might not be necessary to surround the      */
//*     CHECK parameter specification with quotes, but it often  */
//*     is and is always safe to do so.                          */
//*     If the CHECK keyword is omitted, processing is           */
//*     equivalent to a specification of CHECK(*,*).             */
//*   EXCEPTIONS                                                 */
//*     If the EXCEPTIONS keyword is specified, the message      */
//*     buffer output is included only if the check resulted     */
//*     in exception(s).                                         */
//*   TIMERANGE(yyy1m1d1h1m1,yyy2m2d2h2m2)                       */
//*     If the TIMERANGE keyword is specified, the message       */
//*     buffer output is included only if the check started      */
//*     running within the time range specified.                 */
//*     Within the specification:                                */
//*       yyy1: the 4-digit year of the start time               */
//*       m1:   the 2-digit month of the start time              */
//*       d1:   the 2-digit day of the start time                */
//*       h1:   the 2-digit hour (0-23) of the start time        */
//*       (second) m1: the 2-digit minute (0-53) of the start    */
//*             time                                             */
//*       yyy2: the 4-digit year of the stop time                */
//*       m2:   the 2-digit month of the stop time               */
//*       d2:   the 2-digit day of the stop time                 */
//*       h2:   the 2-digit hour (0-23) of the stop time         */
//*       (second) m2: the 2-digit minute (0-53) of the stop     */
//*             time                                             */
//*                                                              */
//* SYSOUT DD is the required output for the print command.      */
//* The required attributes for SYSOUT are:                      */
//*   SEQUENTIAL FIXED BLOCK LRECL(256).                         */
//*                                                              */
//* If LOGSTREAM is specified then                               */
//*   RACF authorization to the requested logstream is required. */
//* If LOGSTREAM is not specified then                           */
//*   RACF authorization to the requested check(s) is required.  */
//*                                                              */
//* Authorization details can be found in 'IBM Health Checker    */
//* for z/OS User's Guide'                                       */
//*                                                              */
//* RETURN-CODES                                                 */
//*   RC=0    -- Success                                         */
//*   RC=d'400' -- no matches                                    */
//*   RC=d'401' -- not all messages retrieved                    */
//*   RC=d'402' -- missing records                               */
//*   RC=d'403' -- not all buffers written                       */
//*   RC=d'404' -- empty log stream                              */
//*   RC=d'800' -- no parms                                      */
//*   RC=d'801' -- unknown keyword                               */
//*   RC=d'802' -- invalid check owner                           */
//*   RC=d'803' -- invalid check name                            */
//*   RC=d'804' -- missing comma                                 */
//*   RC=d'805' -- missing close paren                           */
//*   RC=d'806' -- invalid log stream name                       */
//*   RC=d'811' -- no log stream                                 */
//*   RC=d'812' -- bad log stream                                */
//*   RC=d'813' -- bad check                                     */
//*   RC=d'814' -- No SysName                                    */
//*   RC=d'815' -- Invalid SysName                               */
//*   RC=d'816' -- SysName not allowed                           */
//*   RC=d'817' -- Time range not valid                          */
//*   RC=d'818' -- Missing Timerange values                      */
//*   RC=d'899' -- parms too long                                */
//*   RC=d'1200' -- not authorized or XFACILIT not RACLISTed     */
//*   RC=d'1201' -- could not open sysout                        */
//*   RC=d'1202' -- bad lrecl                                    */
//*   RC=d'1203' -- HC not active                                */
//*   RC=d'1204' -- log error                                    */
//*   RC=d'1205' -- sysout is not allocated                      */
//*   RC=d'1206' -- sysout is partitioned                        */
//*   RC=d'1601' -- Bad RC from DSPSERV                          */
//*   RC=d'1602' -- Bad RC from ALESERV                          */
//*   RC=d'1603' -- Bad RC from HZSQUERY                         */
//*                                                              */
//* CHANGE-ACTIVITY:                                             */
//*  $L0=HZSCHECK HZS7720,050217, PDXB: HEALTH CHECKER           */
//*  $L1=HCR10    HBB7750 070601, PDXB: TIMERANGE                */
//*  $L2=HCV2R1   HBB7790 130215, RDUT: PARMDD (up to 256)       */
//*  $L3=HCV2R3   HBB77B0 150827, RDUT: XFACILIT auth prologue   */
//*                                                              */
//****************************************************************/
//HZSPRINT EXEC PGM=HZSPRNT,TIME=1440,REGION=0M,PARMDD=SYSIN
//SYSIN DD *
CHECK(IBMCATALOG,CATALOG_IMBED_REPLICATE)
//SYSOUT   DD SYSOUT=*,DCB=(LRECL=256)
//
CHECK(IBMJES,JES_NJE_SECURITY)
CHECK(IBMJES,JES_NJE_SECURITY_ssname)
,EXCEPTIONS
CHECK(ibmjes2,JES2_CKPT_CONFIG_nodename)
CHECK(ibmjes2,JES2_UPGRADE_CKPT_LEVEL_JES2)

./ ADD NAME=ICEAM1
//SYSPGRTR JOB 1000,'PH-GRANIE',REGION=2M,                              00001004
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00002008
//*------------------------------------------------------------         00003000
//* LMOD ICEAM1 : OPTION DE TRI POUR APPEL DIRECT DANS LE JCL           00003106
//*               (EXEC PGM=SORT)                                       00003201
//*               LMOD EN SYS1.SICELINK                                 00003309
//*------------------------------------------------------------         00003400
//*------------------------------------------------------------         00003500
//  EXEC ASMHCLR                                                        00004000
//*.SYSIN DD   DSN=SYS1.AICESRCE($ICEAM1),DISP=SHR                      00005006
//C.SYSIN DD   DSN=SYSPGR.JCL.CNTL(ICEAM2),DISP=SHR                     00006010
//C.SYSLIB DD DSN=SYS1.SICEUSER,DISP=SHR                                00007010
//L.SYSLMOD DD DSN=SYSPGR.LOAD,DISP=SHR                                 00008007
//*.SYSLMOD DD DSN=SYS1.SICELINK,DISP=SHR                               00009007
//*.SYSLMOD DD DSN=SYS1.LINKLIB,DISP=SHR                                00009107
//L.SYSIN DD *                                                          00010005
 NAME ICEAM2(R)                                                         00020010

./ ADD NAME=ICEAM2
//SYSPGR1A JOB 1000,'PH-GRANIE',REGION=2M,                              00001002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00002002
//*------------------------------------------------------------         00003000
//* LMOD ICEAM2 : OPTION DE TRI INVOQUE INDIRECTEMENT PAR BATCH         00003201
//*               LMOD EN SYS1.LINKLIB                                  00003300
//*------------------------------------------------------------         00003500
//  EXEC ASMHCLR                                                        00004000
//*.SYSIN DD   DSN=SYS1.AICESRCE($ICEAM2),DISP=SHR                      00005002
//C.SYSIN DD   DSN=SYS1.AICESRCE(ICEAM2),DISP=SHR                       00006002
//C.SYSLIB DD DSN=SYS1.ICEMAC,DISP=SHR                                  00007000
//L.SYSLMOD DD DSN=SYSPGR.LOAD,DISP=SHR                                 00008002
//*.SYSLMOD DD DSN=SYS1.SICELINK,DISP=SHR                               00009002
//*.SYSLMOD DD DSN=SYS1.LINKLIB,DISP=SHR                                00009102
//L.SYSIN DD *                                                          00010000
 NAME ICEAM2(R)                                                         00020000

./ ADD NAME=ICETOOL1
//ICETOOL1  JOB ACCT£,                                                  00000101
//             MVS,                                                     00000201
//             NOTIFY=&SYSUID,                                          00000301
//             MSGCLASS=T                                               00000401
//*HTTPS://IBMMAINFRAMES.COM/ABOUT37296.HTML                            00001001
//STEP0100 EXEC PGM=ICEMAN                                              00010000
//SYSOUT   DD SYSOUT=*                                                  00020000
//SORTIN   DD DSN=SYS019.LP2.ICETOOLI,DISP=SHR                          00030001
//SORTOUT  DD DSN=&&T1,DISP=(,PASS),SPACE=(CYL,(1,1),RLSE)              00050000
//SYSIN    DD *                                                         00060000
//SYSIN    DD *                                                         00070000
  OPTION STOPAFT=20                                                     00080000
  SORT FIELDS=COPY                                                      00090000
  OUTREC OVERLAY=(81:SEQNUM,4,ZD)                                       00100000
  OUTFIL BUILD=(01,4,76Z,81:81,4,/,                                     00110000
                05,4,76Z,81:81,4,/,                                     00120000
                09,4,76Z,81:81,4,/,                                     00130000
                13,4,76Z,81:81,4,/,                                     00140000
                17,4,76Z,81:81,4,/,                                     00150000
                21,4,76Z,81:81,4,/,                                     00160000
                25,4,76Z,81:81,4,/,                                     00170000
                29,4,76Z,81:81,4,/,                                     00180000
                29,4,76Z,81:81,4,/,                                     00190000
                33,4,76Z,81:81,4,/,                                     00200000
                37,4,76Z,81:81,4,/,                                     00210000
                41,4,76Z,81:81,4,/,                                     00220000
                45,4,76Z,81:81,4,/,                                     00230000
                49,4,76Z,81:81,4,/,                                     00240000
                53,4,76Z,81:81,4,/,                                     00250000
                57,4,76Z,81:81,4,/,                                     00260000
                61,4,76Z,81:81,4,/,                                     00270000
                65,4,76Z,81:81,4,/,                                     00280000
                69,4,76Z,81:81,4,/,                                     00290000
                73,4,76Z,81:81,4,/,                                     00300000
                77,4,76Z,81:81,4)                                       00310000
//*                                                                     00320000
//STEP0200 EXEC PGM=ICEMAN                                              00330000
//SYSOUT   DD SYSOUT=*                                                  00340000
//SORTIN   DD DSN=&&T1,                                                 00350000
//*SORTIN   DD DSN=&&T1,                                                00351001
//            DISP=SHR                                                  00360000
//SORTOUT  DD DSN=SYS019.LP2.ICETOOLO,DISP=SHR                          00370001
//SYSIN    DD *                                                         00380000
  OPTION EQUALS                                                         00390000
  INREC IFTHEN=(WHEN=INIT,OVERLAY=(85:SEQNUM,4,ZD,RESTART=(81,4))),     00400000
  IFTHEN=(WHEN=(81,4,ZD,EQ,02),OVERLAY=(05:1,4,01:04Z)),                00410000
  IFTHEN=(WHEN=(81,4,ZD,EQ,03),OVERLAY=(09:1,4,01:08Z)),                00420000
  IFTHEN=(WHEN=(81,4,ZD,EQ,04),OVERLAY=(13:1,4,01:12Z)),                00430000
  IFTHEN=(WHEN=(81,4,ZD,EQ,05),OVERLAY=(17:1,4,01:16Z)),                00440000
  IFTHEN=(WHEN=(81,4,ZD,EQ,06),OVERLAY=(21:1,4,01:20Z)),                00450000
  IFTHEN=(WHEN=(81,4,ZD,EQ,07),OVERLAY=(25:1,4,01:24Z)),                00460000
  IFTHEN=(WHEN=(81,4,ZD,EQ,08),OVERLAY=(29:1,4,01:28Z)),                00470000
  IFTHEN=(WHEN=(81,4,ZD,EQ,09),OVERLAY=(33:1,4,01:32Z)),                00480000
  IFTHEN=(WHEN=(81,4,ZD,EQ,10),OVERLAY=(37:1,4,01:36Z)),                00490000
  IFTHEN=(WHEN=(81,4,ZD,EQ,11),OVERLAY=(41:1,4,01:40Z)),                00500000
  IFTHEN=(WHEN=(81,4,ZD,EQ,12),OVERLAY=(45:1,4,01:44Z)),                00510000
  IFTHEN=(WHEN=(81,4,ZD,EQ,13),OVERLAY=(49:1,4,01:48Z)),                00520000
  IFTHEN=(WHEN=(81,4,ZD,EQ,14),OVERLAY=(53:1,4,01:52Z)),                00530000
  IFTHEN=(WHEN=(81,4,ZD,EQ,15),OVERLAY=(57:1,4,01:56Z)),                00540000
  IFTHEN=(WHEN=(81,4,ZD,EQ,16),OVERLAY=(61:1,4,01:60Z)),                00550000
  IFTHEN=(WHEN=(81,4,ZD,EQ,17),OVERLAY=(65:1,4,01:64Z)),                00560000
  IFTHEN=(WHEN=(81,4,ZD,EQ,18),OVERLAY=(69:1,4,01:68Z)),                00570000
  IFTHEN=(WHEN=(81,4,ZD,EQ,19),OVERLAY=(73:1,4,01:72Z)),                00580000
  IFTHEN=(WHEN=(81,4,ZD,EQ,20),OVERLAY=(77:1,4,01:76Z))                 00590000
                                                                        00600000
  SORT FIELDS=(85,4,CH,A)                                               00610000
  SUM FIELDS=(05,8,13,8,21,8,29,8,37,8,45,8,                            00620000
              53,8,61,8,69,8,77,4),FORMAT=BI                            00630000
  OUTREC BUILD=(1,80)                                                   00640000
//*                                                                     00650000

./ ADD NAME=ICETOOL2
//ICETOOL2  JOB ACCT£,                                                  00001000
//             MVS,                                                     00002000
//             NOTIFY=&SYSUID,                                          00003000
//             MSGCLASS=T                                               00004000
//STEP0100 EXEC PGM=ICEMAN                                              00010000
//SYSOUT   DD SYSOUT=*                                                  00020000
//SORTIN   DD DSN=SYS019.LP2.ICETOOLI,DISP=SHR                          00021000
//SORTOUT  DD DSN=SYS019.LP2.ICETOOLO,DISP=SHR                          00022001
//*SORTOUT  DD SYSOUT=*                                                 00050001
//SYSIN    DD *                                                         00060000
  OPTION STOPAFT=20                                                     00070000
  SORT FIELDS=COPY                                                      00080000
  INREC IFTHEN=(WHEN=INIT,BUILD=(1601:1,80,SEQNUM,2,ZD)),               00090000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,01),                           00100000
  RECORDS=20,PUSH=(0001:1601,80)),                                      00110000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,02),                           00120000
  RECORDS=19,PUSH=(0081:1601,80)),                                      00130000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,03),                           00140000
  RECORDS=18,PUSH=(0161:1601,80)),                                      00150000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,04),                           00160000
  RECORDS=17,PUSH=(0241:1601,80)),                                      00170000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,05),                           00180000
  RECORDS=16,PUSH=(0321:1601,80)),                                      00190000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,06),                           00200000
  RECORDS=15,PUSH=(0401:1601,80)),                                      00210000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,07),                           00220000
  RECORDS=14,PUSH=(0481:1601,80)),                                      00230000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,08),                           00240000
  RECORDS=13,PUSH=(0561:1601,80)),                                      00250000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,09),                           00260000
  RECORDS=12,PUSH=(0641:1601,80)),                                      00270000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,10),                           00280000
  RECORDS=11,PUSH=(0721:1601,80)),                                      00290000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,11),                           00300000
  RECORDS=10,PUSH=(0801:1601,80)),                                      00310000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,12),                           00320000
  RECORDS=09,PUSH=(0881:1601,80)),                                      00330000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,13),                           00340000
  RECORDS=08,PUSH=(0961:1601,80)),                                      00350000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,14),                           00360000
  RECORDS=07,PUSH=(1041:1601,80)),                                      00370000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,15),                           00380000
  RECORDS=06,PUSH=(1121:1601,80)),                                      00390000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,16),                           00400000
  RECORDS=05,PUSH=(1201:1601,80)),                                      00410000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,17),                           00420000
  RECORDS=04,PUSH=(1281:1601,80)),                                      00430000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,18),                           00440000
  RECORDS=03,PUSH=(1361:1601,80)),                                      00450000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,19),                           00460000
  RECORDS=02,PUSH=(1441:1601,80)),                                      00470000
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,20),                           00480000
  RECORDS=01,PUSH=(1521:1601,80))                                       00490000
  OUTFIL REMOVECC,NODETAIL,BUILD=(80X),                                 00500000
  TRAILER1=(0001,4,0081,4,0161,4,0241,4,0321,4,                         00510000
            0401,4,0481,4,0561,4,0641,4,0721,4,                         00520000
            0801,4,0881,4,0961,4,1041,4,1121,4,                         00530000
            1201,4,1281,4,1361,4,1441,4,1521,4,/,                       00540000
            0005,4,0085,4,0165,4,0245,4,0325,4,                         00550000
            0405,4,0485,4,0565,4,0645,4,0725,4,                         00560000
            0805,4,0885,4,0965,4,1045,4,1125,4,                         00570000
            1205,4,1285,4,1365,4,1445,4,1525,4,/,                       00580000
            0009,4,0089,4,0169,4,0249,4,0329,4,                         00590000
            0409,4,0489,4,0569,4,0649,4,0729,4,                         00600000
            0809,4,0889,4,0969,4,1049,4,1129,4,                         00610000
            1209,4,1289,4,1369,4,1449,4,1529,4,/,                       00620000
            0013,4,0093,4,0173,4,0253,4,0333,4,                         00630000
            0413,4,0493,4,0573,4,0653,4,0733,4,                         00640000
            0813,4,0893,4,0973,4,1053,4,1133,4,                         00650000
            1213,4,1293,4,1373,4,1453,4,1533,4,/,                       00660000
            0017,4,0097,4,0177,4,0257,4,0337,4,                         00670000
            0417,4,0497,4,0577,4,0657,4,0737,4,                         00680000
            0817,4,0897,4,0977,4,1057,4,1137,4,                         00690000
            1217,4,1297,4,1377,4,1457,4,1537,4,/,                       00700000
            0021,4,0101,4,0181,4,0261,4,0341,4,                         00710000
            0421,4,0501,4,0581,4,0661,4,0741,4,                         00720000
            0821,4,0901,4,0981,4,1061,4,1141,4,                         00730000
            1221,4,1301,4,1381,4,1461,4,1541,4,/,                       00740000
            0025,4,0105,4,0185,4,0265,4,0345,4,                         00750000
            0425,4,0505,4,0585,4,0665,4,0745,4,                         00760000
            0825,4,0905,4,0985,4,1065,4,1145,4,                         00770000
            1225,4,1305,4,1385,4,1465,4,1545,4,/,                       00780000
            0029,4,0109,4,0189,4,0269,4,0349,4,                         00790000
            0429,4,0509,4,0589,4,0669,4,0749,4,                         00800000
            0829,4,0909,4,0989,4,1069,4,1149,4,                         00810000
            1229,4,1309,4,1389,4,1469,4,1549,4,/,                       00820000
            0033,4,0113,4,0193,4,0273,4,0353,4,                         00830000
            0433,4,0513,4,0593,4,0673,4,0753,4,                         00840000
            0833,4,0913,4,0993,4,1073,4,1153,4,                         00850000
            1233,4,1313,4,1393,4,1473,4,1553,4,/,                       00860000
            0037,4,0117,4,0197,4,0277,4,0357,4,                         00870000
            0437,4,0517,4,0597,4,0677,4,0757,4,                         00880000
            0837,4,0917,4,0997,4,1077,4,1157,4,                         00890000
            1237,4,1317,4,1397,4,1477,4,1557,4,/,                       00900000
            0041,4,0121,4,0201,4,0281,4,0361,4,                         00910000
            0441,4,0521,4,0601,4,0681,4,0761,4,                         00920000
            0841,4,0921,4,1001,4,1081,4,1161,4,                         00930000
            1241,4,1321,4,1401,4,1481,4,1561,4,/,                       00940000
            0045,4,0125,4,0205,4,0285,4,0365,4,                         00950000
            0445,4,0525,4,0605,4,0685,4,0765,4,                         00960000
            0845,4,0925,4,1005,4,1085,4,1165,4,                         00970000
            1245,4,1325,4,1405,4,1485,4,1565,4,/,                       00980000
            0049,4,0129,4,0209,4,0289,4,0369,4,                         00990000
            0449,4,0529,4,0609,4,0689,4,0769,4,                         01000000
            0849,4,0929,4,1009,4,1089,4,1169,4,                         01010000
            1249,4,1329,4,1409,4,1489,4,1569,4,/,                       01020000
            0053,4,0133,4,0213,4,0293,4,0373,4,                         01030000
            0453,4,0533,4,0613,4,0693,4,0773,4,                         01040000
            0853,4,0933,4,1013,4,1093,4,1173,4,                         01050000
            1253,4,1333,4,1413,4,1493,4,1573,4,/,                       01060000
            0057,4,0137,4,0217,4,0297,4,0377,4,                         01070000
            0457,4,0537,4,0617,4,0697,4,0777,4,                         01080000
            0857,4,0937,4,1017,4,1097,4,1177,4,                         01090000
            1257,4,1337,4,1417,4,1497,4,1577,4,/,                       01100000
            0061,4,0141,4,0221,4,0301,4,0381,4,                         01110000
            0461,4,0541,4,0621,4,0701,4,0781,4,                         01120000
            0861,4,0941,4,1021,4,1101,4,1181,4,                         01130000
            1261,4,1341,4,1421,4,1501,4,1581,4,/,                       01140000
            0065,4,0145,4,0225,4,0305,4,0385,4,                         01150000
            0465,4,0545,4,0625,4,0705,4,0785,4,                         01160000
            0865,4,0945,4,1025,4,1105,4,1185,4,                         01170000
            1265,4,1345,4,1425,4,1505,4,1585,4,/,                       01180000
            0069,4,0149,4,0229,4,0309,4,0389,4,                         01190000
            0469,4,0549,4,0629,4,0709,4,0789,4,                         01200000
            0869,4,0949,4,1029,4,1109,4,1189,4,                         01210000
            1269,4,1349,4,1429,4,1509,4,1589,4,/,                       01220000
            0073,4,0153,4,0233,4,0313,4,0393,4,                         01230000
            0473,4,0553,4,0633,4,0713,4,0793,4,                         01240000
            0873,4,0953,4,1033,4,1113,4,1193,4,                         01250000
            1273,4,1353,4,1433,4,1513,4,1593,4,/,                       01260000
            0077,4,0157,4,0237,4,0317,4,0397,4,                         01270000
            0477,4,0557,4,0637,4,0717,4,0797,4,                         01280000
            0877,4,0957,4,1037,4,1117,4,1197,4,                         01290000
            1277,4,1357,4,1437,4,1517,4,1597,4)                         01300000
/*                                                                      01310000

./ ADD NAME=ICETOOL3
//ICETOOL3  JOB ACCT£,                                                  00001001
//             MVS,                                                     00002001
//             NOTIFY=&SYSUID,                                          00003001
//             MSGCLASS=T                                               00004001
//STEP0100 EXEC PGM=ICEMAN                                              00005001
//SYSOUT   DD SYSOUT=*                                                  00006001
//SORTIN   DD DSN=SYS019.SOLVE.LP2.COMPONEN.RULE255,DISP=SHR            00007001
//SORTOUT  DD DSN=SYS019.SOLVE.LP2.COMPONEN.RULE256,DISP=SHR            00008001
//*SORTOUT  DD SYSOUT=*                                                 00009001
//SYSIN    DD *                                                         00010001
  OPTION STOPAFT=20                                                     00020001
  SORT FIELDS=COPY                                                      00030001
  INREC IFTHEN=(WHEN=INIT,BUILD=(1601:1,256,SEQNUM,2,ZD)),              00040001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,01),                           00050001
  RECORDS=20,PUSH=(0001:1601,256)),                                     00060001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,02),                           00070001
  RECORDS=19,PUSH=(0081:1601,256)),                                     00080001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,03),                           00090001
  RECORDS=18,PUSH=(0161:1601,256)),                                     00100001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,04),                           00110001
  RECORDS=17,PUSH=(0241:1601,256)),                                     00120001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,05),                           00130001
  RECORDS=16,PUSH=(0321:1601,256)),                                     00140001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,06),                           00150001
  RECORDS=15,PUSH=(0401:1601,256)),                                     00160001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,07),                           00170001
  RECORDS=14,PUSH=(0481:1601,256)),                                     00180001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,08),                           00190001
  RECORDS=13,PUSH=(0561:1601,256)),                                     00200001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,09),                           00210001
  RECORDS=12,PUSH=(0641:1601,256)),                                     00220001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,10),                           00230001
  RECORDS=11,PUSH=(0721:1601,256)),                                     00240001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,11),                           00250001
  RECORDS=10,PUSH=(02561:1601,256)),                                    00260001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,12),                           00270001
  RECORDS=09,PUSH=(0881:1601,256)),                                     00280001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,13),                           00290001
  RECORDS=08,PUSH=(0961:1601,256)),                                     00300001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,14),                           00310001
  RECORDS=07,PUSH=(1041:1601,256)),                                     00320001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,15),                           00330001
  RECORDS=06,PUSH=(1121:1601,256)),                                     00340001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,16),                           00350001
  RECORDS=05,PUSH=(1201:1601,256)),                                     00360001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,17),                           00370001
  RECORDS=04,PUSH=(1281:1601,256)),                                     00380001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,18),                           00390001
  RECORDS=03,PUSH=(1361:1601,256)),                                     00400001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,19),                           00410001
  RECORDS=02,PUSH=(1441:1601,256)),                                     00420001
  IFTHEN=(WHEN=GROUP,BEGIN=(1681,2,ZD,EQ,20),                           00430001
  RECORDS=01,PUSH=(1521:1601,256))                                      00440001
  OUTFIL REMOVECC,NODETAIL,BUILD=(256X),                                00450001
  TRAILER1=(0001,4,0081,4,0161,4,0241,4,0321,4,                         00460001
            0401,4,0481,4,0561,4,0641,4,0721,4,                         00470001
            0801,4,0881,4,0961,4,1041,4,1121,4,                         00480001
            1201,4,1281,4,1361,4,1441,4,1521,4,/,                       00490001
            0005,4,0085,4,0165,4,0245,4,0325,4,                         00500001
            0405,4,0485,4,0565,4,0645,4,0725,4,                         00510001
            0805,4,0885,4,0965,4,1045,4,1125,4,                         00520001
            1205,4,1285,4,1365,4,1445,4,1525,4,/,                       00530001
            0009,4,0089,4,0169,4,0249,4,0329,4,                         00540001
            0409,4,0489,4,0569,4,0649,4,0729,4,                         00550001
            0809,4,0889,4,0969,4,1049,4,1129,4,                         00560001
            1209,4,1289,4,1369,4,1449,4,1529,4,/,                       00570001
            0013,4,0093,4,0173,4,0253,4,0333,4,                         00580001
            0413,4,0493,4,0573,4,0653,4,0733,4,                         00590001
            0813,4,0893,4,0973,4,1053,4,1133,4,                         00600001
            1213,4,1293,4,1373,4,1453,4,1533,4,/,                       00610001
            0017,4,0097,4,0177,4,0257,4,0337,4,                         00620001
            0417,4,0497,4,0577,4,0657,4,0737,4,                         00630001
            0817,4,0897,4,0977,4,1057,4,1137,4,                         00640001
            1217,4,1297,4,1377,4,1457,4,1537,4,/,                       00650001
            0021,4,0101,4,0181,4,0261,4,0341,4,                         00660001
            0421,4,0501,4,0581,4,0661,4,0741,4,                         00670001
            0821,4,0901,4,0981,4,1061,4,1141,4,                         00680001
            1221,4,1301,4,1381,4,1461,4,1541,4,/,                       00690001
            0025,4,0105,4,0185,4,0265,4,0345,4,                         00700001
            0425,4,0505,4,0585,4,0665,4,0745,4,                         00710001
            0825,4,0905,4,0985,4,1065,4,1145,4,                         00720001
            1225,4,1305,4,1385,4,1465,4,1545,4,/,                       00730001
            0029,4,0109,4,0189,4,0269,4,0349,4,                         00740001
            0429,4,0509,4,0589,4,0669,4,0749,4,                         00750001
            0829,4,0909,4,0989,4,1069,4,1149,4,                         00760001
            1229,4,1309,4,1389,4,1469,4,1549,4,/,                       00770001
            0033,4,0113,4,0193,4,0273,4,0353,4,                         00780001
            0433,4,0513,4,0593,4,0673,4,0753,4,                         00790001
            0833,4,0913,4,0993,4,1073,4,1153,4,                         00800001
            1233,4,1313,4,1393,4,1473,4,1553,4,/,                       00810001
            0037,4,0117,4,0197,4,0277,4,0357,4,                         00820001
            0437,4,0517,4,0597,4,0677,4,0757,4,                         00830001
            0837,4,0917,4,0997,4,1077,4,1157,4,                         00840001
            1237,4,1317,4,1397,4,1477,4,1557,4,/,                       00850001
            0041,4,0121,4,0201,4,0281,4,0361,4,                         00860001
            0441,4,0521,4,0601,4,0681,4,0761,4,                         00870001
            0841,4,0921,4,1001,4,1081,4,1161,4,                         00880001
            1241,4,1321,4,1401,4,1481,4,1561,4,/,                       00890001
            0045,4,0125,4,0205,4,0285,4,0365,4,                         00900001
            0445,4,0525,4,0605,4,0685,4,0765,4,                         00910001
            0845,4,0925,4,1005,4,1085,4,1165,4,                         00920001
            1245,4,1325,4,1405,4,1485,4,1565,4,/,                       00930001
            0049,4,0129,4,0209,4,0289,4,0369,4,                         00940001
            0449,4,0529,4,0609,4,0689,4,0769,4,                         00950001
            0849,4,0929,4,1009,4,1089,4,1169,4,                         00960001
            1249,4,1329,4,1409,4,1489,4,1569,4,/,                       00970001
            0053,4,0133,4,0213,4,0293,4,0373,4,                         00980001
            0453,4,0533,4,0613,4,0693,4,0773,4,                         00990001
            0853,4,0933,4,1013,4,1093,4,1173,4,                         01000001
            1253,4,1333,4,1413,4,1493,4,1573,4,/,                       01010001
            0057,4,0137,4,0217,4,0297,4,0377,4,                         01020001
            0457,4,0537,4,0617,4,0697,4,0777,4,                         01030001
            0857,4,0937,4,1017,4,1097,4,1177,4,                         01040001
            1257,4,1337,4,1417,4,1497,4,1577,4,/,                       01050001
            0061,4,0141,4,0221,4,0301,4,0381,4,                         01060001
            0461,4,0541,4,0621,4,0701,4,0781,4,                         01070001
            0861,4,0941,4,1021,4,1101,4,1181,4,                         01080001
            1261,4,1341,4,1421,4,1501,4,1581,4,/,                       01090001
            0065,4,0145,4,0225,4,0305,4,0385,4,                         01100001
            0465,4,0545,4,0625,4,0705,4,0785,4,                         01110001
            0865,4,0945,4,1025,4,1105,4,1185,4,                         01120001
            1265,4,1345,4,1425,4,1505,4,1585,4,/,                       01130001
            0069,4,0149,4,0229,4,0309,4,0389,4,                         01140001
            0469,4,0549,4,0629,4,0709,4,0789,4,                         01150001
            0869,4,0949,4,1029,4,1109,4,1189,4,                         01160001
            1269,4,1349,4,1429,4,1509,4,1589,4,/,                       01170001
            0073,4,0153,4,0233,4,0313,4,0393,4,                         01180001
            0473,4,0553,4,0633,4,0713,4,0793,4,                         01190001
            0873,4,0953,4,1033,4,1113,4,1193,4,                         01200001
            1273,4,1353,4,1433,4,1513,4,1593,4,/,                       01210001
            0077,4,0157,4,0237,4,0317,4,0397,4,                         01220001
            0477,4,0557,4,0637,4,0717,4,0797,4,                         01230001
            0877,4,0957,4,1037,4,1117,4,1197,4,                         01240001
            1277,4,1357,4,1437,4,1517,4,1597,4)                         01250001
/*                                                                      01260001

./ ADD NAME=ICHRFR01
//SYSRACF  JOB 1000,'SYSTEME',REGION=2M,                                00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00021000
//*------------------------------------------------------------         00022000
//******************************************************************//  00023000
//*  RFTABLE:                                                      *//  00024000
//*                                                                *//  00025000
//*      STEP 15 (CONTINUED) OF THE RACF INSTALLATION          àP2C*//  00026000
//*      PROCEDURE:  UPDATE THE RACF ROUTER TABLE.             àP2C*//  00027000
//*                                                                *//  00028000
//*      THIS STEP IS OPTIONAL FOR EXISTING AND NEW INSTALLATIONS  *//  00028100
//*                                                                *//  00028200
//*      THIS MEMBER CONTAINS A JOB WHICH CAN BE USED TO ASSEMBLE  *//  00028300
//*      AND LINK EDIT NEW TABLE ENTRIES TO THE OPTIONAL           *//  00028400
//*      INSTALLATION DEFINED RACF ROUTER TABLE.                   *//  00028500
//*                                                                *//  00028600
//*      MODIFY THIS SAMPLE TO YOUR INSTALLATIONS NEEDS BEFORE     *//  00028700
//*      USING IT.  SEE THE INSTRUCTIONS BELOW ON HOW TO MODIFY    *//  00028800
//*      THIS JOB.                                                 *//  00028900
//*                                                                *//  00029000
//******************************************************************//  00029100
//STEP1     EXEC HLASMCL,PARM.L=(RENT,XREF,LIST,LET,NCAL)               00029200
//C.SYSLIB  DD DSN=SYS1.MODGEN                                          00029300
//C.SYSIN DD   *                                                        00029400
**********************************************************************  00029500
*                                                                    *  00029600
*               SAMPLE RACF ROUTER TABLE JOB                         *  00029700
*                                                                    *  00029800
*   THIS IS A SAMPLE RACF ROUTER TABLE WHICH PROVIDES ACTION CODES   *  00029900
*   FOR INSTALLATION-DEFINED ROUTER TABLE ENTRIES,                   *  00030000
*   TO DETERMINE WHETHER OR NOT RACF IS INVOKED ON BEHALF OF THE     *  00031000
*   RACROUTE MACRO.                                                  *  00031100
*                                                                    *  00031200
*   THIS SAMPLE RACF ROUTER TABLE CAN BE USED TO                     *  00031300
*   ADD, MODIFY OR DELETE ENTRIES AS NEEDED.                         *  00031400
*   NOTE THAT THE ICHRFRTB MACRO NEEDED TO ASSEMBLE THE              *  00031500
*   ICHRFR01 MODULE IS IN SYS1.MODGEN.                               *  00031600
*                                                                    *  00031700
*   TO ACCOMPLISH THIS, USE ONE OF THE FOLLOWING METHODS             *  00031800
*   (THIS JOB IS A SAMPLE FOR THE FIRST METHOD):                     *  00031900
*                                                                    *  00032000
*          - THE RACF ROUTER MACRO, ICHRFRTB, WHICH                  *  00032100
*            HAS BEEN PLACED IN SYS1.MODGEN, IS TO BE INVOKED        *  00032200
*            FOR EACH ENTRY. ASSEMBLE AND LINK                       *  00032300
*            EDIT THE RESULT TO PRODUCE THE LOAD MODULE              *  00032400
*            USED BY RACF.                                           *  00032500
*                                                                    *  00032600
*          - LINKEDIT THE OBJECT MODULE FOR THE ENTRIES              *  00032700
*            BEING ADDED OR MODIFIED TOGETHER WITH AN                *  00032800
*            EXISTING LOAD MODULE ICHRFR01 IN SYS1.LINKLIB           *  00032900
*            TO PRODUCE A NEW LOAD MODULE.  AN ENTRY CAN BE          *  00033000
*            DELETED FROM THE LIST BY SPECIFYING                     *  00033100
*            THE NAME OF THE ENTRY TO BE DELETED USING THE           *  00033200
*            LINKAGE EDITOR REPLACE STATEMENT.  WHEN YOU USE         *  00033300
*            THIS METHOD, YOU CAN ADD OBJECT FOR NEW CLASSES         *  00033400
*            TO THE LOAD MODULE WITHOUT REASSEMBLING.                *  00033500
*                                                                    *  00033600
*                                                                    *  00033700
*                         N O T E                                    *  00033800
*                                                                    *  00033900
*   FOR RACF VERSION 1 RELEASE 7 AND HIGHER, THE IBM-DEFINED RFR     *  00034000
*   ENTRIES ARE CONTAINED IN THE ICHRFR01 LOAD MODULE SUPPLIED WITH  *  00034100
*   THIS PRODUCT.                                                    *  00034200
*                                                                    *  00034300
*   FOR RACF VERSION 1 RELEASE 7 AND HIGHER, THE ICHRFR01 LOAD       *  00034400
*   MODULE SHOULD BE PLACED IN SYS1.LINKLIB.                         *  00034500
*                                                                    *  00034600
*   FOR FURTHER INFORMATION CONCERNING THE ICHRFR01 MODULE AND       *  00034700
*   HOW TO CODE THE ICHRFRTB MACRO, PLEASE REFER TO THE "RACF MACROS *  00034800
*   AND INTERFACES" PUBLICATION.                                     *  00034900
*                                                                    *  00035000
*   THE FOLLOWING IS A SAMPLE INSTALLATION-DEFINED ROUTER TABLE:     *  00035100
*                                                                    *  00035200
*                                                                    *  00035300
**********************************************************************  00035400
**********************************************************************  00035500
*                                                                    *  00035600
ICHRFR01 CSECT                                                          00035700
PAC1     ICHRFRTB CLASS=PAC1,ACTION=RACF                                00035800
PAC2     ICHRFRTB CLASS=PAC2,ACTION=RACF                                00035900
SPI1     ICHRFRTB CLASS=SPI1,ACTION=RACF                                00036000
SPI2     ICHRFRTB CLASS=SPI2,ACTION=RACF                                00036100
DTàYSTEM ICHRFRTB CLASS=DTàYSTEM,ACTION=RACF                            00036200
DTàDMIN  ICHRFRTB CLASS=DTàDMIN,ACTION=RACF                             00036300
DTàABLE  ICHRFRTB CLASS=DTàABLE,ACTION=RACF                             00036400
DTàTIL   ICHRFRTB CLASS=DTàTIL,ACTION=RACF                              00036500
CAàMD    ICHRFRTB CLASS=CAàMD,ACTION=RACF                               00036602
ENDTAB   ICHRFRTB TYPE=END                                              00036800
         END   ICHRFR01                                                 00036900
/*                                                                      00037000
//L.SYSLMOD DD DSN=SYS1.LINKLIB,         ** MUST BE LIBRARY WITH**      00037103
//            DISP=SHR,                                                 00037203
//   UNIT=3390,VOL=SER=ESA3P1               **                 àA2A**   00037303
//*L.SYSLMOD DD DSN=SYSILE.TEST.LOADLIB,DISP=SHR                        00037403
//L.SYSIN   DD *                                                        00037500
      NAME    ICHRFR01(R)                                               00037601
/*                                                                      00038000

./ ADD NAME=ICHRIN03
//SYSICHR  JOB 1,'SYSTEME',REGION=4M,                                   00010000
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00030000
//*******************************************************************// 00033200
//* ATTENTION AU SYSLMOD                                            *// 00033300
//*******************************************************************// 00033400
//* ICHRIN03:                                                       *// 00033500
//*                                                                 *// 00033600
//*   STEP 7 OF THE RACF INSTALLATION PROCEDURE: CREATE/UPDATE THE  *// 00033700
//*   STARTED PROCEDURES TABLE.                                 àA2C*// 00033800
//*                                                                 *// 00033900
//*   NOTE: PLEASE READ THE SECTION TITLED "CODING THE STARTED      *// 00034000
//*         PROCEDURES MODULE ON MVS" IN THE SYSTEM PROGRAMMING     *// 00035000
//*         LIBRARY: RACF.  IT IS IMPORTANT THAT YOU ARE FAMILIAR   *// 00036000
//*         WITH THIS SECTION BEFORE ATTEMPTING TO USE OR MODIFY    *// 00037000
//*         THIS SAMPLE.                                            *// 00038000
//*                                                                 *// 00039000
//*   NOTE: THE 'XXXXXXXX' USERID VALUES AND THE 'YYYYYYYY' GROUP   *// 00040000
//*         VALUES ARE INTENDED AS PLACED HOLDERS AND MUST BE       *// 00050000
//*         REPLACED WITH VALID VALUES.                         à02A*// 00060000
//*                                                                 *// 00070000
//*   THIS STEP IS OPTIONAL FOR EXSISTING AND NEW INSTALLATIONS     *// 00080000
//*                                                                 *// 00090000
//*   THE FOLLOWING IS A SAMPLE JOB WHICH CAN BE USED TO ASSEMBLE   *// 00100000
//*   AND LINK EDIT THE STARTED PROCEDURES TABLE.                   *// 00110000
//*                                                                 *// 00120000
//*   THIS JOB CAN BE USED TO SUPPLY A USERID AND GROUP NAME TO     *// 00130000
//*   STARTED PROCEDURES, AS WELL AS ADD NEW STARTED PROCEDURES.    *// 00140000
//*   BEFORE USING IT, THE FOLLOWING SAMPLE MUST BE MODIFIED TO à02C*// 00150000
//*   MEET YOUR INSTALLATIONS REQUIREMENTS.                         *// 00160000
//*                                                                 *// 00170000
//*   IN ADDITION THE SAMPLE BELOW (WHEN COMPLETED WITH PROPER      *// 00180000
//*   USERID AND GROUP VALUES), MINUS THE 'IRRDPTAB' ENTRY, IS      *// 00190000
//*   THE MINIMAL STARTED PROCEDURES TABLE NECESSARY TO ACHIEVE A   *// 00200000
//*   B1 LEVEL OF SECURITY.                                         *// 00210000
//*                                                                 *// 00220000
//*   A STARTED PROCEDURE TABLE IS NECESSARY BECAUSE STARTED        *// 00230000
//*   PROCEDURES HAVE SYSTEM-GENERATED JOB STATEMENTS THAT DO NOT   *// 00240000
//*   CONTAIN THE USER, GROUP OR PASSWORD PARAMETERS.  AND ONLY     *// 00250000
//*   USERS AND GROUPS CAN BE SPECIFICALLY AUTHORIZED TO ACCESS RACF*// 00260000
//*   PROTECTED RESOURCES.  TO GIVE STARTED PROCEDURES THE SAME     *// 00270000
//*   ABILITY, THE STARTED PROCEDURES TABLE ASSOCIATES USERIDS AND  *// 00280000
//*   GROUPS WITH THE STARTED PROCEDURES.                           *// 00290000
//*                                                                 *// 00300000
//*   THE FORMAT OF THE TABLE IS AS FOLLOWS -                       *// 00310000
//*     . 2 BYTE NUMBER OF ENTRIES FIELD, ZERO IF NO ENTRIES.       *// 00320000
//*       THE VALUE OF THE HIGH ORDER BIT IN THIS FIELD             *// 00330000
//*       INDICATES THE FORMAT OF THE TABLE:                        *// 00340000
//*                 '0'B - OLD TABLE FORMAT                         *// 00350000
//*                 '1'B - NEW TABLE FORMAT                         *// 00360000
//*     . ARRAY OF STARTED PROC/USERID/GROUP NAMES IN FOLLOWING     *// 00370000
//*       FORMAT -                                                  *// 00380000
//*       . 8 CHARACTER STARTED PROC NAME, LEFT JUSTIFIED AND PADDED*// 00390000
//*         ON THE RIGHT WITH BLANKS.                               *// 00400000
//*       . 8 CHARACTER USERID NAME, LEFT JUSTIFIED AND PADDED ON   *// 00410000
//*         THE RIGHT WITH BLANKS.                                  *// 00420000
//*       . 8 CHARACTER GROUP NAME, LEFT JUSTIFIED AND PADDED ON    *// 00430000
//*         RIGHT WITH BLANKS. IF THE DEFAULT GROUP DEFINED IN THE  *// 00440000
//*         USER ENTRY IS TO BE USED, THIS FIELD SHOULD CONTAIN ALL *// 00450000
//*         BLANKS.                                                 *// 00460000
//*                                                                 *// 00470000
//*         THE FOLLOWING FIELDS ARE AVAILABLE ONLY IN THE NEW      *// 00480000
//*         TABLE FORMAT:                                           *// 00490000
//*                                                                 *// 00500000
//*       . ONE BYTE OF FLAGS:                                      *// 00510000
//*             BIT  0   - VALUE OF '1'B INDICATES THIS ENTRY       *// 00520000
//*                        WILL HAVE THE 'PRIVILEGED' ATTRIBUTE.    *// 00530000
//*             BIT  1   - VALUE OF '1'B INDICATES THIS ENTRY       *// 00540000
//*                        WILL HAVE THE 'TRUSTED' ATTRIBUTE.       *// 00550000
//*             BITS 2-7 - RESERVED FLAG BITS. EACH OF THESE BITS   *// 00560000
//*                        MUST HAVE A VALUE OF ZERO.               *// 00570000
//*             NOTE:IF BOTH BIT 0 AND BIT 1 HAVE THE VALUE OF '1'B *// 00580000
//*             THEN THE 'PRIVILEGED' OVERRIDES THE 'TRUSTED'       *// 00590000
//*             ATTRIBUTE.                                          *// 00600000
//*       . 7 BYTES OF RESERVED STORAGE WHICH MUST BE SET TO        *// 00610000
//*         BINARY ZEROES.                                          *// 00620000
//*                                                             àA1A*// 00630000
//*******************************************************************// 00640000
//STEP1     EXEC ASMHCL,PARM.L=(RENT,XREF,LIST,LET,NCAL)     àA2A       00650000
//C.SYSIN DD   *                                                        00660000
ICHRIN03 CSECT                                                          00670000
         TITLE 'ICHRIN03 - STARTED PROCEDURES TABLE'                    00680000
         EJECT                                                          00690000
         DC    XL2'800C'          NEW FORMAT -012 ENTRIES               00700000
*                                                                       00770000
         DC    CL8'RACF    '      PROCNAME - SPECIFY YOUR JES           00780000
         DC    CL8'STCPRC'        USERID                                00790000
         DC    CL8'STCGRP'        GROUP                                 00800000
         DC    XL1'40'            TRUSTED                               00810000
         DC    XL7'00'            RESERVED                              00820000
*                                                                       01370000
         DC    CL8'JES2    '      PROCNAME - SPECIFY YOUR JES           01380000
         DC    CL8'STCPRC'        USERID                                01390000
         DC    CL8'STCGRP'        GROUP                                 01400000
         DC    XL1'40'            TRUSTED                               01410000
         DC    XL7'00'            RESERVED                              01420000
*                                                                       01421000
         DC    CL8'JESR    '      PROCNAME - SPECIFY YOUR JES           01422000
         DC    CL8'STCPRC'        USERID                                01423000
         DC    CL8'STCGRP'        GROUP                                 01424000
         DC    XL1'40'            TRUSTED                               01425000
         DC    XL7'00'            RESERVED                              01426000
*                                                                       01430000
         DC    CL8'HSM     '      PROCNAME - HSM                        01440000
         DC    CL8'STCPRC'        USERID                                01450000
         DC    CL8'STCGRP'        GROUP                                 01460000
         DC    XL1'40'            TRUSTED                               01470000
         DC    XL7'00'            RESERVED                              01480000
*                                                                       01610000
         DC    CL8'NETQ    '      PROCNAME - SPECIFY YOUR               01620000
         DC    CL8'STCPRC'        USERID                                01630000
         DC    CL8'STCGRP'        GROUP                                 01640000
         DC    XL1'40'            TRUSTED                               01650000
         DC    XL7'00'            RESERVED                              01660000
*                                                                       01670000
         DC    CL8'NET2    '      PROCNAME - SPECIFY YOUR               01680000
         DC    CL8'STCPRC'        USERID                                01690000
         DC    CL8'STCGRP'        GROUP                                 01700000
         DC    XL1'40'            TRUSTED                               01710000
         DC    XL7'00'            RESERVED                              01720000
*                                                                       01730000
         DC    CL8'JESB    '      PROCNAME - SPECIFY YOUR JES           01800000
         DC    CL8'STCPRC'        USERID                                01810000
         DC    CL8'STCGRP'        GROUP                                 01820000
         DC    XL1'40'            TRUSTED                               01830000
         DC    XL7'00'            RESERVED                              01840000
*                                                                       01850000
         DC    CL8'JESQ    '      PROCNAME                              02160000
         DC    CL8'STCPRC'        USERID                                02170000
         DC    CL8'STCGRP'        GROUP                                 02180000
         DC    XL1'40'            TRUSTED                               02190000
         DC    XL7'00'            RESERVED                              02200000
*                                                                       02450600
         DC    CL8'NETR'          PROCNAME                              02450700
         DC    CL8'STCPRC'        USERID                                02450800
         DC    CL8'STCGRP'        GROUP                                 02450900
         DC    XL1'40'            TRUSTED                               02451000
         DC    XL7'00'            RESERVED                              02451100
*                                                                       02451200
         DC    CL8'VTAM    '      PROCNAME                              03390000
         DC    CL8'STCPRC'        USERID                                03400000
         DC    CL8'STCGRP'        GROUP                                 03410000
         DC    XL1'40'            TRUSTED                               03420000
         DC    XL7'00'            RESERVED                              03430000
*                                                                       03440000
         DC    CL8'SMF     '      PROCNAME                              03570000
         DC    CL8'STCPRC'        USERID                                03580000
         DC    CL8'STCGRP'        GROUP                                 03590000
         DC    XL1'40'            TRUSTED                               03600000
         DC    XL7'00'            RESERVED                              03610000
*                                                                       03620000
         DC    CL8'*       '      PROCNAME                              05493600
         DC    CL8'STCUSR'        USERID                                05493700
         DC    CL8'STCGRP'        GROUP                                 05493800
         DC    XL1'00'            NEITHER PRIVILEGED NOR TRUSTED        05493900
         DC    XL7'00'            RESERVED                              05494000
         END                                                            05494100
/*                                                                      05494200
//L.SYSLMOD DD DSN=SYS1.LPALIB,          ** MUST BE LIBRARY WITH**      05494300
//           DISP=SHR,                                                  05494400
//   UNIT=3390,VOL=SER=ZOS160               **                 àA2A**   05494500
//*L.SYSLMOD DD DSN=SYSILE.TEST.LOADLIB,  ** MUST BE LIBRARY WITH**     05494600
//*             DISP=SHR                                                05494700
//L.SYSIN   DD  *                                                       05494800
       ENTRY ICHRIN03                                                   05494900
       NAME ICHRIN03                                                    05495000
/*                                                                      05495100
//*                                                                     05496000

./ ADD NAME=ICHRRCDE
//SYSPGR1R JOB 1000,'SYST-GRANIE',REGION=2M,                            00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00030000
//******************************************************************//  00040000
//STEP1     EXEC HLASMCL                                                00050000
//C.SYSLIB  DD DSN=SYS1.MODGEN,DISP=SHR                                 00060000
//C.SYSIN DD   *                                                        00061000
*                                                                       00062000
*               SAMPLE CLASS DESCRIPTOR JOB                             00063000
*                                                                       00064000
*   THIS IS A SAMPLE CLASS DESCRIPTOR TABLE WHICH REPRESENTS            00065000
*   INSTALLATION-DEFINED RESOURCE CLASSES.  EACH                        00066000
*   CLASS DESCRIPTOR ENTRY CONTAINS CONTROL INFORMATION NEEDED          00067000
*   BY RACF TO VALIDATE CLASS NAMES AND IS A CSECT IN THE               00068000
*   LOAD MODULE ICHRRCDE.  THE LAST CSECT IN THE LOAD                   00069000
*   MODULE IS ICHRRCDE AND INDICATES THE END OF THE TABLE.              00070000
*                                                                       00080000
*   THIS SAMPLE CLASS DESCRIPTOR TABLE CAN BE USED TO                   00090000
*   ADD, MODIFY OR DELETE INSTALLATION-DEFINED                          00100000
*   CLASS DESCRIPTOR ENTRIES AS NEEDED.                                 00110000
*   NOTE THAT THE ICHERCDE MACRO NEEDED TO ASSEMBLE THE                 00120000
*   ICHRRCDE MODULE IS IN SYS1.MACLIB.                                  00130000
*                                                                       00140000
*   TO ACCOMPLISH THIS, USE ONE OF THE FOLLOWING METHODS                00150000
*   (THIS JOB IS A SAMPLE FOR THE FIRST METHOD):                        00160000
*                                                                       00170000
*          - INVOKE THE CLASS DESCRIPTOR MACRO, ICHERCDE,               00180000
*            WHICH HAS BEEN PLACED IN SYS1.MACLIB, FOR                  00190000
*            EACH RESOURCE CLASS AND ASSEMBLE.  LINK                    00200000
*            EDIT THE RESULT TO PRODUCE THE LOAD MODULE                 00210000
*            USED BY RACF.  WHEN YOU USE THIS METHOD,                   00220000
*            THE ICHERCDE MACRO CROSS-CHECKS CLASS                      00230000
*            DESCRIPTORS TO ENSURE THAT NO ERRORS EXIST                 00240000
*            (I.E., THE FIRST FOUR CHARACTERS OF CLASS                  00250000
*            NAMES ARE UNIQUE).                                         00260000
*                                                                       00270000
*          - LINKEDIT THE OBJECT MODULE(S) FOR THE CLASS(ES)            00280000
*            BEING ADDED OR MODIFIED TOGETHER WITH ANY                  00290000
*            EXISTING LOAD MODULE ICHRRCDE IN SYS1.LINKLIB              00300000
*            TO PRODUCE A NEW LOAD MODULE.  A CLASS CAN BE              00310000
*            DELETED FROM THE DESCRIPTOR LIST BY SPECIFYING             00320000
*            THE NAME OF THE CLASS TO BE DELETED USING THE              00330000
*            LINKAGE EDITOR REPLACE STATEMENT.  WHEN YOU USE            00340000
*            THIS METHOD, YOU CAN ADD OBJECT FOR NEW CLASSES            00350000
*            TO THE LOAD MODULE WITHOUT REASSEMBLING.                   00360000
*      ++++++THE LAST CSECT IN THE LOAD MUST BE ICHRRCDE+++++           00370000
*                                                                       00380000
*                                                                       00390000
*                         N O T E                                       00400000
*                                                                       00410000
*   FOR RACF VERSION 1 RELEASE 7, THE IBM-DEFINED CDT ENTRIES ARE       00420000
*   CONTAINED IN THE ICHRRCDX LOAD MODULE SUPPLIED WITH THIS PRODUCT.   00430000
*                                                                       00440000
*   FOR RACF VERSION 1 RELEASE 7, THE ICHRRCDE LOAD MODULE SHOULD BE    00450000
*   PLACED IN SYS1.LINKLIB.                                             00460000
*                                                                       00470000
*   FOR FURTHER INFORMATION CONCERNING THE ICHRRCDE MODULE AND          00480000
*   HOW TO CODE THE ICHERCDE MACRO, PLEASE REFER TO THE "SPL: RACF"     00490000
*   PUBLICATION.                                                        00500000
*                                                                       00510000
*                                                                       00520000
*   THE FOLLOWING IS A SAMPLE INSTALLATION-DEFINED CDT:                 00530000
*                                                                       00540000
*                                                                       00550000
PAC1     ICHERCDE CLASS=PAC1,                                          +00560000
               ID=128,                                                 +00570000
               MAXLNTH=4,                                              +00580000
               FIRST=ALPHANUM,                                         +00590000
               OTHER=ANY,                                              +00600000
               POSIT=25,                                               +00610000
               OPER=NO                                                  00620000
PAC2     ICHERCDE CLASS=PAC2,                                          +00630000
               ID=129,                                                 +00640000
               MAXLNTH=4,                                              +00650000
               FIRST=ALPHANUM,                                         +00660000
               OTHER=ANY,                                              +00670000
               POSIT=26,                                               +00680000
               OPER=NO                                                  00690000
SPI1     ICHERCDE CLASS=SPI1,                                          +00700000
               ID=130,                                                 +00710000
               MAXLNTH=8,                                              +00720000
               FIRST=ALPHANUM,                                         +00730000
               OTHER=ANY,                                              +00740000
               POSIT=27,                                               +00750000
               OPER=NO                                                  00760000
SPI2     ICHERCDE CLASS=SPI2,                                          +00770000
               ID=131,                                                 +00780000
               MAXLNTH=8,                                              +00790000
               FIRST=ALPHANUM,                                         +00800000
               OTHER=ANY,                                              +00810000
               POSIT=28,                                               +00820000
               OPER=NO                                                  00830000
DTàYSTEM ICHERCDE CLASS=DTàYSTEM,                                      +00831001
               ID=132,                                                 +00832001
               MAXLNTH=44,                                             +00833001
               FIRST=ALPHANUM,                                         +00834001
               OTHER=ANY,                                              +00835001
               OPER=NO,                                                +00836001
               DFTUACC=NONE,                                           +00837001
               POSIT=29                                                 00838000
DTàDMIN  ICHERCDE CLASS=DTàDMIN,                                       +00839001
               ID=133,                                                 +00839101
               MAXLNTH=44,                                             +00839201
               FIRST=ALPHANUM,                                         +00839301
               OTHER=ANY,                                              +00839401
               OPER=NO,                                                +00839501
               DFTUACC=NONE,                                           +00839601
               POSIT=30                                                 00839701
DTàABLE  ICHERCDE CLASS=DTàABLE,                                       +00839801
               ID=134,                                                 +00839901
               MAXLNTH=44,                                             +00840001
               FIRST=ALPHANUM,                                         +00840101
               OTHER=ANY,                                              +00840201
               OPER=NO,                                                +00840301
               DFTUACC=NONE,                                           +00840401
               POSIT=31                                                 00840501
DTàTIL   ICHERCDE CLASS=DTàTIL,                                        +00840601
               ID=135,                                                 +00840701
               MAXLNTH=44,                                             +00840801
               FIRST=ALPHANUM,                                         +00840901
               OTHER=ANY,                                              +00841001
               OPER=NO,                                                +00841101
               DFTUACC=NONE,                                           +00841201
               POSIT=32                                                 00841300
CAàMD    ICHERCDE CLASS=CAàMD,                                         +00841403
               ID=136,                                                 +00841503
               MAXLNTH=44,                                             +00841603
               FIRST=ALPHANUM,                                         +00841703
               OTHER=ANY,                                              +00841803
               OPER=NO,                                                +00841903
               DFTUACC=NONE,                                           +00842003
               POSIT=33                                                 00842103
         ICHERCDE                                                       00843003
//L.SYSLMOD  DD  DSN=SYS1.LINKLIB,DISP=SHR,VOL=SER=ESA1P1,UNIT=3390     00850004
//*.SYSLMOD  DD  DSN=SYSILE.TEST.LOADLIB,DISP=SHR                       00860003
//L.SYSIN   DD  *                                                       00870000
      ORDER   PAC1                                                      00880000
      ORDER   PAC2                                                      00890000
      ORDER   SPI1                                                      00900000
      ORDER   SPI2                                                      00910000
      ORDER   DTàYSTEM                                                  00911000
      ORDER   DTàDMIN                                                   00912000
      ORDER   DTàABLE                                                   00913000
      ORDER   DTàTIL                                                    00914000
      ORDER   CAàMD                                                     00915003
      ORDER   ICHRRCDE                                                  00920000
      NAME    ICHRRCDE(R)                                               00930000
/*                                                                      00940000
//                                                                      00950000
      ORDER  ****                                                       00960000
      ORDER  ****THE CSECTS CAN BE IN ANY ORDER                         00970000
      ORDER  ****BUT THE ICHRRCDE CSECT MUST BE LAST.                   00980000
      ORDER  ****                       ---- -- ----                    00990000

./ ADD NAME=IDCAMS
//IDCAMS    JOB ACCT£,
//             MVS,
//             NOTIFY=&SYSUID,
//             MSGLEVEL=(1,1)
// SET LLQ=LISTCAT
// SET LLQ=DCOLLECT
//*DELETE  EXEC PGM=IEFBR14
//*SYSPRINT DD DSN=&SYSUID..&SYSNAME..&LLQ.,
//* DISP=(MOD,DELETE,DELETE),
//* SPACE=(TRK,(2,2)),
//* DCB=(LRECL=512,RECFM=FB)
//STEP1    EXEC PGM=IDCAMS
//*LISTCAT DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//*SYSPRINT DD DSN=&SYSUID..&SYSNAME..&LLQ.,
//* DISP=(NEW,CATLG,DELETE),
//* SPACE=(CYL,(2,2)),
//* DCB=(LRECL=512,RECFM=FB)
// DCB=(RECFM=VB,LRECL=644,BLKSIZE=27998),
//SYSIN    DD *
  ALTER     'entryname/password'
            NEWNAME(newname)
            NULLIFY(MASTERPW CONTROLPW UPDATEPW READPW OWNER
                    AUTHORIZATION(MODULE!STRING) RETENTION CODE
                    EXCEPTIONEXIT LOG LOGSTREAMID BWO FRLOG)
            LOCK ! UNLOCK
            ECSHARING ! NOECSHARING
            MASTERPW(password)
            CONTROLPW(password)
            UPDATEPW(password)
            READPW(password)
            UNINHIBIT ! INHIBIT
            CODE(code)
            ATTEMPTS(number)
            AUTHORIZATION(entrypoint string)
            OWNER(ownerid)
            STORAGECLASS(classname)
            MANAGEMENTCLASS(classname)
            CCSID(ccsid-value)
            FILEDATA(TEXT!BINARY)
            REUSE ! NOREUSE
            PURGE ! NOPURGE
            ROLLIN
            LIMIT(maxlimit)
            TO(date) ! FOR(days)
            SHAREOPTIONS(CROSSREGION CROSSSYSTEM)
            ERASE ! NOERASE
            EXCEPTIONEXIT(mname)
            WRITECHECK ! NOWRITECHECK
            RECORDSIZE(average maximum)
            KEYS(length offset)
            UNIQUEKEY ! NONUNIQUEKEY
            FILE(dname)
            FREESPACE(CIpercent CApercent)
            BUFFERSPACE(size)
            ADDVOLUMES(volser ...)
            REMOVEVOLUMES(volser ...)
            UPGRADE ! NOUPGRADE
            UPDATE ! NOUPDATE
            EMPTY ! NOEMPTY
            TYPE(LINEAR)
            SCRATCH ! NOSCRATCH
            BUFND
            BUFNI
            STRNO
            LOG(NONE!UNDO!ALL)
            LOGSTREAMID(name)
            BWO(TYPECICS!TYPEIMS!NO)
            FRLOG(NONE!REDO)
            ACCOUNT(info)
            CATALOG(catname/password)
            LIBRARYENTRY
            LIBRARYID(library id)
            LIBDEVTYPE(library device type)
            LOGICALTYPE(AUTOMATED ! MANUAL)
            NUMBERSLOTS(number of slots)
            NUMBEREMPTYSLOTS(number of empty slots)
            NUMBERSCRATCHVOLUMES(
              MEDIA1(number of scratch volumes)
              MEDIA2(number of scratch volumes)
              MEDIA3(number of scratch volumes)
              MEDIA4(number of scratch volumes))
            SCRATCHTHRESHOLD(
              MEDIA1(scratch volume threshold)
              MEDIA2(scratch volume threshold)
              MEDIA3(scratch volume threshold)
              MEDIA4(scratch volume threshold))
            DESCRIPTION(description)
            CONSOLENAME(console name)
            NULLIFY(LOGICALTYPE LIBDEVTYPE)
            RECORDING(18TRACK!36TRACK!128TRACK!256TRACK!UNKNOWN)
            MEDIATYPE(MEDIA1!MEDIA2!MEDIA3!MEDIA4)
            COMPACTION(YES!IDRC!NO!NONE!UNKNOWN)
            SPECIALATTRIBUTE(READCOMPATIBLE!NONE)
            VOLUMEENTRY
            LIBRARYNAME(library name)
            STORAGEGROUP(storage group name)
            USEATTRIBUTE(SCRATCH ! PRIVATE)
            CHECKPOINT ! NOCHECKPOINT
            WRITEPROTECT ! NOWRITEPROTECT
            LOCATION(LIBRARY ! SHELF)
            SHELFLOCATION(shelf location)
            OWNERINFORMATION(owner information)
            ENTEREJECTDATE(date last entered or ejected)
            EXPIRATIONDATE(expiration date)
            MOUNTDATE(date last mounted)
            WRITEDATE(date last written)
            NULLIFY(ERRORSTATUS)
//
  DEFINE    CLUSTER
            (  NAME('ENTRYNAME')
               FILE('DNAME')
               STORAGECLASS('CLASSNAME')
               MANAGEMENTCLASS('CLASSNAME')
               DATACLASS('CLASSNAME')
               VOLUMES('VOLSER' ...)
               TRACKS('PRIMARY' 'SECONDARY') !
                  CYLINDERS('PRIMARY' 'SECONDARY') !
                  RECORDS('PRIMARY' 'SECONDARY') !
                  KILOBYTES('PRIMARY' 'SECONDARY') !
                  MEGABYTES('PRIMARY' 'SECONDARY')
               RECORDSIZE('AVERAGE' 'MAXIMUM')
               FREESPACE('CIPERCENT' 'CAPERCENT')
               SPANNED ! NONSPANNED
               KEYRANGES(('LOWKEY' 'HIGHKEY') ...)
               ORDERED ! UNORDERED
               BUFFERSPACE('SIZE')
               CONTROLINTERVALSIZE('SIZE')
               OWNER('OWNERID')
               TO('DATE') ! FOR('DAYS')
               SHAREOPTIONS('CROSSREGION' 'CROSSSYSTEM')
               ERASE ! NOERASE
               EXCEPTIONEXIT('MNAME')
               SPEED ! RECOVERY
               WRITECHECK ! NOWRITECHECK
               INDEXED ! NONINDEXED ! NUMBERED
               LOG(UNDO!NONE!ALL)
               LOGSTREAMID('NAME')
               RLSQUIESCE ! RLSENABLE
               BWO(TYPECICS!TYPEIMS!NO)
               FRLOG(NONE!REDO)
               KEYS('LENGTH' 'OFFSET')
               REUSE ! NOREUSE
               LINEAR
               ACCOUNT('INFO')
               RECATALOG ! NORECATALOG
               MODEL('ENTRYNAME' 'CATNAME'))
            DATA('OPTIONS')
            INDEX('OPTIONS')
            CATALOG('CATNAME')
//
  DEFINE    ALIAS                                           +
            (  NAME(SEC023)                               +
               RELATE(CATALOG.SSYST))                     +
            CATALOG(CATALOG.MCA25S)
//
  DEFINE    GENERATIONDATAGROUP                                    +
            (  NAME(&SYSUID..DSMSPERM.ALERT.STOGROUP               +
               LIMIT(5)  )                                         +
            CATALOG(CATALOG.SSYST)
//
  DEFINE    GENERATIONDATAGROUP                                    +
            (  NAME(CSDP.DSMSPERM.SUIVI.STOGROUP)                  +
               LIMIT(5)  )                                         +
            CATALOG(CATALOG.SSYST)
//
  DEFINE    GENERATIONDATAGROUP                                    +
            (  NAME(SYS019.LP2.GDG)                                +
               LIMIT(5)  )                                         +
            CATALOG(CATALOG.SSYST)
//
  DEFINE    GENERATIONDATAGROUP
            (  NAME('ENTRYNAME')
               EXTENDED ! NOEXTENDED
               EMPTY ! NOEMPTY
               FIFO ! LIFO
               SCRATCH ! NOSCRATCH
               PURGE ! NOPURGE
               OWNER('OWNERID')
               LIMIT('LIMIT')  )
            CATALOG('CATNAME/PASSWORD')
//
  DELETE    SYS019.CA.** MASK
//
  DELETE SYS1.IODF01.CLUSTER NOSCRATCH -
    CAT(CATALOG.MASTER.ZOS112.BRN2)
//
  LISTCAT   CATALOG('catname/password')
  LISTCAT   LIBRARY('lib_name')
  LISTCAT   FILE('dname')
  LISTCAT   OUTFILE('dname')
  LISTCAT   LEVEL('level')
  LISTCAT     (NOCDILVL ! CDILVL) !
  LISTCAT   ENTRIES('entryname/password' ...) !
  LISTCAT   LIBRARYENTRIES('library_entryname') !
  LISTCAT   VOLUMEENTRIES('volume_entryname')
  LISTCAT   CREATION('nnnn')
  LISTCAT   EXPIRATION('nnnn')
  LISTCAT   NOTUSABLE
  LISTCAT   CLUSTER
  LISTCAT   DATA
  LISTCAT   INDEX
  LISTCAT   ALIAS
  LISTCAT   SPACE
  LISTCAT   NONVSAM
  LISTCAT   USERCATALOG
  LISTCAT   GENERATIONDATAGROUP
  LISTCAT   PAGESPACE
  LISTCAT   ALTERNATEINDEX
  LISTCAT   PATH
//
  LISTC UCAT ALL
//
  LISTC CAT(CATALOG.GPROD9) all
  LISTC ent(CATALOG.GPROD9) all
  LISTC ent(sys5)           all
  LISTC lvl(sys5)           all
//
  PRINT INDATASET(SYS1.VTOCIX.SYSC26)
  PRINT INDATASET(SYS1.CKPT1.LP2)
//
  REPRO INDATASET(CATALOG.MASTER.ZOS13.LP2) -
       OUTDATASET(CATALOG.GSYST) -
       LEVEL(SMPE) MERGECAT
//
//*IDC11808I ERRORS WERE DETECTED FOR OMVS.SYST.JAVA
//*ERRORS WERE DETECTED FOR DVEXN.BDG.TFA887.CRTST.ORYFAWE5
//*ERRORS WERE DETECTED FOR SYS3.HFS.COPYCAT
//*ERRORS WERE DETECTED FOR SYS005.TP.HFS
//*IDC11808I ERRORS WERE DETECTED FOR OMVS.HIS.RESULHFS.BRN2
//*IDC11808I ERRORS WERE DETECTED FOR SYS3.TP.HFS
//*IDC11808I ERRORS WERE DETECTED FOR SYS4.TP.HFS ON DLIB06
//*IDC11808I ERRORS WERE DETECTED FOR OMVS.TP.HFS ON DLIB06
//*IDC11808I ERRORS WERE DETECTED FOR DVEXN.BDG.TFA887.CRTST.ORYFAWE5
T/*IDC11808I ERRORS WERE DETECTED FOR SYS3.SAVE.FICSYST ON DLIB09
T/*IDC11808I ERRORS WERE DETECTED FOR OMVS.HIS.RESULHFS.BRNQ ON DISQ0B
T/*IDC11808I ERRORS WERE DETECTED FOR OMVS.TMP.BRNQ ON SYS990
T/*IDC11808I ERRORS WERE DETECTED FOR DVEXN.BDG.TFA887.CRTST.ORYFAWE5 ON
//
 IDC11808I ERRORS SYS1.PAGE.VSYST08.LOCAL.DATA ON
 IDC11808I ERRORS OMVS.SYST.JAVA ON SYSJVA - ERROR
 IDC11808I ERRORS DVEXN.BDG.TFA887.CRTST.ORYFAWE5 ON
 IDC11808I ERRORS SYS3.HFS.COPYCAT ON DLIB08 - ERROR
 IDC11808I ERRORS SYS005.TP.HFS ON SYST14 - ERROR BYTE
 IDC11808I ERRORS OMVS.HIS.RESULHFS.BRN2 ON DISP1A -
 IDC11808I ERRORS SYS3.TP.HFS ON DLIB06 - ERROR BYTE
 IDC11808I ERRORS SYS4.TP.HFS ON DLIB06 - ERROR BYTE
 IDC11808I ERRORS OMVS.TP.HFS ON DLIB06 - ERROR BYTE
 IDC11808I ERRORS DVEXN.BDG.TFA887.CRTST.ORYFAWE5 ON
 IDC11808I ERRORS DVEXN.BDG.TFA887.CRTST.ORYFAWE5 ON
 IDC11808I ERRORS SYS3.SAVE.FICSYST ON DLIB09 - ERROR
 IDC11808I ERRORS DVGHU.SAM.LIVRéS.PROD ON DEVP20 -
 IDC11808I ERRORS OMVS.HIS.RESULHFS.BRNQ ON DISQ0B -
 IDC11808I ERRORS OMVS.TMP.BRNQ ON SYS990 - ERROR BYTE
 IDC11808I ERRORS OMVS.USER.BRNQ.SAV ON SYS992 - ERROR
 IDC11808I ERRORS OMVS.TMP.BRNR ON SYS991 - ERROR BYTE
 IDC11808I ERRORS SYS1.MAN3.DATA ON SYS902 - ERROR
 IDC11808I ERRORS SYS1.MAN2.DATA ON SYS902 - ERROR
 IDC11808I ERRORS SYS1.MAN1.DATA ON SYS902 - ERROR
 IDC11808I ERRORS OMVS.ZCOST.ASCV1500.HFS.BRNR ON
 IDC11808I ERRORS OMVS.ZCOST.ASCV1500.WEB.HFS.BRNR ON
 IDC11808I ERRORS DVDCO.SAM.SICO.FéV2003 ON DEV002 -
 IDC11808I ERRORS DVDEM.RéOUV.DU151019 ON DEV065 -
  DCOLLECT  OUTFILE(ddname)                                        +
    VOLUMES(**)                                                    +
    BACKUPDATA                                                     +
    CAPPLANDATA                                                    +
    EXCLUDEVOLUMES(sysjva dlib06 dlib08 devp20 disq0b             +
      sys991 sys990 sys992 sys902 syst14 disp1a dev002 dev065)    +
    MIGRATEDATA                                                    +
    SMSDATA(SCDSNAME(ACTIVE)                                       +
    STORAGEGROUP(sgname[ sgname...])]}

./ ADD NAME=IDCAMSN2
//IDCAMS    JOB ACCT£,
//             MVS,
//             NOTIFY=&SYSUID,
//             MSGCLASS=T
//*DELETE  EXEC PGM=IEFBR14
//*SYSPRINT DD DSN=&SYSUID..&SYSNAME..LISTCAT,
//* DISP=(MOD,DELETE,DELETE),
//* SPACE=(TRK,(2,2)),
//* DCB=(LRECL=512,RECFM=FB)
// EXEC PGM=IDCAMS
//*LISTCAT DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//*SYSPRINT DD DSN=&SYSUID..&SYSNAME..LISTCAT,
//* DISP=(NEW,CATLG,DELETE),
//* SPACE=(CYL,(2,2)),
//* DCB=(LRECL=512,RECFM=FB)
//SYSIN    DD *
  LISTCAT ENT(SYS5) ALL
  LISTCAT LVL(SYS5) ALL
  LISTCAT LVL(SYS5.ADFZCC  ) ALL
  LISTCAT LVL(SYS5.AMIOPS  ) ALL
  LISTCAT LVL(SYS5.APA     ) ALL
  LISTCAT LVL(SYS5.AXWAY   ) ALL
  LISTCAT LVL(SYS5.BACKUP  ) ALL
  LISTCAT LVL(SYS5.BIPE    ) ALL
  LISTCAT LVL(SYS5.BIPECFT ) ALL
  LISTCAT LVL(SYS5.BIPP    ) ALL
  LISTCAT LVL(SYS5.BMC     ) ALL
  LISTCAT LVL(SYS5.BRNQ    ) ALL
  LISTCAT LVL(SYS5.BRN2    ) ALL
  LISTCAT LVL(SYS5.CADB2   ) ALL
  LISTCAT LVL(SYS5.CADB2R19) ALL
  LISTCAT LVL(SYS5.CCS     ) ALL
  LISTCAT LVL(SYS5.CDC     ) ALL
  LISTCAT LVL(SYS5.CERTIF  ) ALL
  LISTCAT LVL(SYS5.CFT     ) ALL
  LISTCAT LVL(SYS5.CFTBRNQ ) ALL
  LISTCAT LVL(SYS5.CFTV0000) ALL
  LISTCAT LVL(SYS5.CICLADMI) ALL
  LISTCAT LVL(SYS5.CICLAGI1) ALL
  LISTCAT LVL(SYS5.CICLAGI2) ALL
  LISTCAT LVL(SYS5.CICLAGI3) ALL
  LISTCAT LVL(SYS5.CICLAPI1) ALL
  LISTCAT LVL(SYS5.CICLBIPE) ALL
  LISTCAT LVL(SYS5.CICLCOPP) ALL
  LISTCAT LVL(SYS5.CICLDATA) ALL
  LISTCAT LVL(SYS5.CICLECLR) ALL
  LISTCAT LVL(SYS5.CICLEXPL) ALL
  LISTCAT LVL(SYS5.CICLGEOD) ALL
  LISTCAT LVL(SYS5.CICLRLT ) ALL
  LISTCAT LVL(SYS5.CICLTORA) ALL
  LISTCAT LVL(SYS5.CICLVIDA) ALL
  LISTCAT LVL(SYS5.CICLVIDO) ALL
  LISTCAT LVL(SYS5.CICLVIDW) ALL
  LISTCAT LVL(SYS5.CICLXPRO) ALL
  LISTCAT LVL(SYS5.CICS    ) ALL
  LISTCAT LVL(SYS5.CICSADMI) ALL
  LISTCAT LVL(SYS5.CICSAGI1) ALL
  LISTCAT LVL(SYS5.CICSAGI2) ALL
  LISTCAT LVL(SYS5.CICSAGI3) ALL
  LISTCAT LVL(SYS5.CICSAPI1) ALL
  LISTCAT LVL(SYS5.CICSBIPE) ALL
  LISTCAT LVL(SYS5.CICSCOPP) ALL
  LISTCAT LVL(SYS5.CICSDATA) ALL
  LISTCAT LVL(SYS5.CICSECLR) ALL
  LISTCAT LVL(SYS5.CICSEXPL) ALL
  LISTCAT LVL(SYS5.CICSGEOD) ALL
  LISTCAT LVL(SYS5.CICSIA  ) ALL
  LISTCAT LVL(SYS5.CICSRLT ) ALL
  LISTCAT LVL(SYS5.CICSTORA) ALL
  LISTCAT LVL(SYS5.CICSVIDA) ALL
  LISTCAT LVL(SYS5.CICSVIDO) ALL
  LISTCAT LVL(SYS5.CICSVIDW) ALL
  LISTCAT LVL(SYS5.CICSXPRO) ALL
  LISTCAT LVL(SYS5.CLSS    ) ALL
  LISTCAT LVL(SYS5.CONVERT ) ALL
  LISTCAT LVL(SYS5.CPSM    ) ALL
  LISTCAT LVL(SYS5.CSF     ) ALL
  LISTCAT LVL(SYS5.CSQF    ) ALL
  LISTCAT LVL(SYS5.CSSMTP  ) ALL
  LISTCAT LVL(SYS5.CTB1    ) ALL
  LISTCAT LVL(SYS5.CTG     ) ALL
  LISTCAT LVL(SYS5.CTT     ) ALL
  LISTCAT LVL(SYS5.DB2     ) ALL
  LISTCAT LVL(SYS5.DB2L    ) ALL
  LISTCAT LVL(SYS5.DB2P    ) ALL
  LISTCAT LVL(SYS5.DB2PTF  ) ALL
  LISTCAT LVL(SYS5.DDIR    ) ALL
  LISTCAT LVL(SYS5.DFSMSC  ) ALL
  LISTCAT LVL(SYS5.DISQUES ) ALL
  LISTCAT LVL(SYS5.EXTRACT ) ALL
  LISTCAT LVL(SYS5.FILEAID ) ALL
  LISTCAT LVL(SYS5.FILEMNGR) ALL
  LISTCAT LVL(SYS5.FLTANAL ) ALL
  LISTCAT LVL(SYS5.ICAN    ) ALL
  LISTCAT LVL(SYS5.ILSI    ) ALL
  LISTCAT LVL(SYS5.IL0SAVE ) ALL
  LISTCAT LVL(SYS5.JCL     ) ALL
  LISTCAT LVL(SYS5.LMS     ) ALL
  LISTCAT LVL(SYS5.MAINVIEW) ALL
  LISTCAT LVL(SYS5.MFE     ) ALL
  LISTCAT LVL(SYS5.MFE2    ) ALL
  LISTCAT LVL(SYS5.MQ      ) ALL
  LISTCAT LVL(SYS5.NFS     ) ALL
  LISTCAT LVL(SYS5.OLD     ) ALL
  LISTCAT LVL(SYS5.PDS     ) ALL
  LISTCAT LVL(SYS5.PDSMAN  ) ALL
  LISTCAT LVL(SYS5.PLEXMASL) ALL
  LISTCAT LVL(SYS5.PLEXMASP) ALL
  LISTCAT LVL(SYS5.PLEXWUIL) ALL
  LISTCAT LVL(SYS5.PLEXWUIP) ALL
  LISTCAT LVL(SYS5.PRODUITS) ALL
  LISTCAT LVL(SYS5.PXXXPERM) ALL
  LISTCAT LVL(SYS5.QMDP    ) ALL
  LISTCAT LVL(SYS5.RACF    ) ALL
  LISTCAT LVL(SYS5.REXX    ) ALL
  LISTCAT LVL(SYS5.SAVE    ) ALL
  LISTCAT LVL(SYS5.SECOP   ) ALL
  LISTCAT LVL(SYS5.SMF     ) ALL
  LISTCAT LVL(SYS5.SMFSILCA) ALL
  LISTCAT LVL(SYS5.SMF110  ) ALL
  LISTCAT LVL(SYS5.SMF30   ) ALL
  LISTCAT LVL(SYS5.SMF7079 ) ALL
  LISTCAT LVL(SYS5.SMF72   ) ALL
  LISTCAT LVL(SYS5.SOFTWARE) ALL
  LISTCAT LVL(SYS5.SPFTEMP9) ALL
  LISTCAT LVL(SYS5.SPITAB  ) ALL
  LISTCAT LVL(SYS5.SYSJRI  ) ALL
  LISTCAT LVL(SYS5.SYSTEME ) ALL
  LISTCAT LVL(SYS5.TCPIP   ) ALL
  LISTCAT LVL(SYS5.TRACE   ) ALL
  LISTCAT LVL(SYS5.TWS     ) ALL
  LISTCAT LVL(SYS5.VSAM    ) ALL
  LISTCAT LVL(SYS5.XMITIP  ) ALL
  LISTCAT LVL(SYS5.ZMG     ) ALL
  LISTCAT LVL(SYS5.ZMG2    ) ALL
  LISTCAT LVL(SYS5.ZMH     ) ALL
  LISTCAT LVL(SYS5.ZM2     ) ALL
  LISTCAT LVL(SYS5.ZOS     ) ALL
  LISTCAT LVL(SYS5.ZOS201  ) ALL
  LISTCAT LVL(SYS5.ZOS204  ) ALL
  LISTCAT LVL(SYS5.ZOS205  ) ALL
  LISTCAT LVL(SYS5.ZWS     ) ALL

./ ADD NAME=IEBCOPY
//IEBCOPY   JOB ACCT£,                                                  00001000
//             MVS,                                                     00002000
//             NOTIFY=&SYSUID,                                          00003000
//             MSGLEVEL=(1,1)                                           00004000
//STEP1    EXEC PGM=IEBCOPY                                             00004600
//SYSPRINT DD SYSOUT=*                                                  00004800
//SYSUT1   DD DSN=SYS1.PROCLIB.&SYSNAME,                                00004900
//  DISP=SHR                                                            00005000
//SYSUT2   DD DSN=&SYSUID..&SYSNAME..PROCLIB,                           00006000
//  DISP=SHR                                                            00007000
//SYSIN    DD DUMMY                                                     00008000
//STEP1    EXEC PGM=IEBCOPY                                             00009000
//SYSPRINT DD SYSOUT=*                                                  00010000
//SYSUT1   DD DSN=SYS1.PROCLIB,                                         00020000
//  DISP=SHR                                                            00030000
//SYSUT2   DD DSN=&SYSUID..&SYSNAME..PROCLIB,                           00040000
//  DISP=SHR                                                            00050000
//SYSIN    DD DUMMY                                                     00060000
//STEP1    EXEC PGM=IEBCOPY                                             00070001
//SYSPRINT DD SYSOUT=*                                                  00080001
//INDD1    DD DSN=USER.PROCLIB,                                         00090001
//  DISP=SHR                                                            00100001
//OUDD1    DD DSN=&SYSUID..&SYSNAME..PROCLIB,                           00110001
//  DISP=SHR                                                            00120001
//SYSIN    DD *                                                         00130001
  COPY OUTDD=OUDD1,INDD=INDD1                                           00140001
  SELECT MEMBER=(($CTC2TPB,RAYMOND,R))                                  00150001
//PARM                                                                  00160002
ALTERMOD OR AM                                                          00170002
IF YOU DIRECT IEBCOPY TO GENERATE A CONTROL STATEMENT, SPECIFY THIS PARA00180002
STATEMENT PERFORM AN ALTERMOD OPERATION INSTEAD OF A COPY OPERATION.    00190002
BYPASS_AUTH                                                             00200002
SPECIFY THIS PARAMETER IF YOU WISH TO DIRECT IEBCOPY TO BYPASS RACF AUTH00210002
A DASD SEQUENTIAL OR PARTITIONED (PDS OR PDSE) DATA SET. THIS OPTION DOE00220002
SPOOLED DATA SETS, WORK DATA SETS, OR DATA SET PASSWORD CHECKING. IF THE00230002
SPECIFIED, IEBCOPY MUST BE INVOKED BY AN APF-AUTHORIZED CALLER. IF THE P00240002
A NON APF-AUTHORIZED CALLER, ABEND 913-80 WILL BE ISSUED.               00250002
CMWA=NK                                                                 00260002
SPECIFY THIS PARAMETER TO INCREASE THE COPYMOD WORK AREA SIZE OF 120K IF00270002
BEING PROCESSED. THIS WILL BE EVIDENT BECAUSE MESSAGE IEB1133E WILL BE I00280002
COMPRESS                                                                00290002
IF YOU DIRECT IEBCOPY TO GENERATE A CONTROL STATEMENT, SPECIFY THIS PARA00300002
STATEMENT PERFORM A COMPRESS-IN-PLACE OPERATION INSTEAD OF A COPY OPERAT00310002
COPY OR C                                                               00320002
IF YOU WISH TO DIRECT IEBCOPY TO GENERATE A CONTROL STATEMENT, SPECIFY T00330002
CONTROL STATEMENT PERFORM A COPY OPERATION.                             00340002
COPYGROUP OR CP                                                         00350002
IF YOU WISH TO DIRECT IEBCOPY TO GENERATE A CONTROL STATEMENT, SPECIFY T00360002
CONTROL STATEMENT PERFORM A COPYGROUP OPERATION.                        00370002
COPYGRP OR CG                                                           00380002
IF YOU WISH TO DIRECT IEBCOPY TO GENERATE A CONTROL STATEMENT, SPECIFY T00390002
CONTROL STATEMENT PERFORM A COPYGRP OPERATION.                          00400002
COPYMOD                                                                 00410002
IF YOU WISH TO DIRECT IEBCOPY TO GENERATE A CONTROL STATEMENT, SPECIFY T00420002
CONTROL STATEMENT PERFORM A COPYMOD OPERATION.                          00430002
LC=N                                                                    00440002
LPP=N                                                                   00450002
LINECOUNT=N                                                             00460002
N IS THE NUMBER OF LINES, INCLUDING HEADINGS, TO PRINT ON EACH PAGE OF T00470002
DEFAULT IS 60.                                                          00480002
LIST=NO                                                                 00490002
LIST=YES                                                                00500002
SETS THE DEFAULT VALUE FOR THE LIST= OPERAND WHEN IT IS OMITTED FROM THE00510002
ALTERMOD STATEMENT. DEFAULT IS LIST=YES.                                00520002
RC4NOREP                                                                00530002
USE OF THIS PARAMETER WILL CAUSE IEBCOPY TO SET A RETURN CODE OF X'04' W00540002
COPIED FROM THE SOURCE DATA SET TO THE TARGET DATA SET BECAUSE REPLACE W00550002
'RC4NOREP' IS SPECIFIED, MESSAGE IEB1067W WILL BE ISSUED FOR EACH MODULE00560002
THE REPLACE OPTION NOT BEING SPECIFIED. NOTE: MESSAGE IEB1067W WILL BE I00570002
THE LIST OPTION REQUESTED.                                              00580002
REPLACE                                                                 00590002
IF YOU WISH TO DIRECT IEBCOPY TO GENERATE A CONTROL STATEMENT, SPECIFY T00600002
CONTROL STATEMENT PERFORM A COPY WITH REPLACE OPERATION.                00610002
SIZE={N|NK|NM}                                                          00620002
SPECIFIES THE MAXIMUM NUMBER OF BYTES OF VIRTUAL STORAGE THAT IEBCOPY MA00630002
IT IS BEST TO LET IEBCOPY CHOOSE BUFFER SIZES BY NOT USING THIS PARAMETE00640002
THE MINIMUM BUFFER SIZE IS APPROXIMATELY 4 TIMES THE LARGEST TRACK SIZE 00650002
USED, PLUS ABOUT 3%. THERE IS NO MAXIMUM FOR THIS VALUE, BUT IEBCOPY CAN00660002
QUANTITY AVAILABLE IN THE WORK AREA.                                    00670002
36 Z/OS: Z/OS DFSMSDFP UTILITIES                                        00680002
THE NUMBER N CAN BE ANY NUMBER OF DIGITS, AND IS SPECIFIED IN DECIMAL. T00690002
TO BE MULTIPLIED BY 1024 BYTES (1 KILOBYTE) AND M CAUSES THE NUMBER TO B00700002
1048576.                                                                00710002
SPCLCMOD                                                                00720002
SPECIFIES THAT WHEN A MEMBER IS FOUND TO BE INELIGIBLE FOR COPYMOD, PROC00730002
THE MODULE IS PAGE ALIGNED) AND THE MODULE IS SCHEDULED FOR PROCESSING A00740002
DETECTION OF A RECORD LARGER THAN THE BLOCKSIZE OF THE TARGET DATA SET W00750002
TO BE TERMINATED (NO FAT BLOCKS WILL BE CREATED).                       00760002
IF THE COPY OPERATION RESULTING FROM COPYMOD INELIGIBILITY IS SUCCESSFUL00770002
OPERATION WILL BE SET TO ZERO INSTEAD OF FOUR (NORMALLY RETURN CODE IS S00780002
COPY INSTEAD OF A COPYMOD WAS DONE FOR THE AFFECTED MODULES, IF LIST=YES00790002
WORK={N|NK|NM|1M}                                                       00800002
SPECIFIES THE NUMBER OF BYTES OF VIRTUAL STORAGE TO REQUEST FOR A WORK A00810002
INTERNAL TABLES, AND I/O BUFFERS. THE DEFAULT REQUEST WILL BE FOR 1M. TH00820002
WILL NOT EXCEED THE SPACE AVAILABLE IN THE REGION.                      00830002
THE NUMBER N CAN BE ANY NUMBER OF DIGITS, AND IS SPECIFIED IN DECIMAL. T00840002
TO BE MULTIPLIED BY 1024 BYTES (1 KILOBYTE) AND M CAUSES THE NUMBER TO B00850002
1048576.                                                                00860002

./ ADD NAME=IEBGENER
//ARRETD1  EXEC PGM=IEBGENER,REGION=8M                                  00010000
//SYSIN    DD   DUMMY                                                   00020000
//SYSPRINT DD SYSOUT=*                                                  00030000
//SYSUT2   DD   SYSOUT=(A,INTRDR)                                       00040000
//SYSUT1   DD   *,DLM=ZZ                                                00050000
/*$VS,'F PEL700OP,ZPEL'                                                 00060000
ZZ                                                                      00070000

./ ADD NAME=IEC608I
IEC608I DADSM FUNCTION DISABLED THE VTOC INDEX ON DEV, SER,CDE,CCHHR    00010000

./ ADD NAME=IEFBR14
//IEFBR14   JOB ACCT£,                                                  00001000
//             IEFBR14,                                                 00002003
//             MSGCLASS=T,                                              00003004
//             NOTIFY=&SYSUID,                                          00003104
//             MSGLEVEL=(1,1)                                           00004000
// COMMAND 'D U,DASD,ONLINE,,9999'                                      00004101
//DELETE   EXEC PGM=IEFBR14                                             00004200
//SYSPRINT DD SYSOUT=*                                                  00004302
//SYSTSPRT DD SYSOUT=*                                                  00004402
//DD      DD DSN=SYS019.ISPF.ISPPROF,DISP=OLD                           00004504
//                                                                      00004604
//ISFOUT  DD DSN=&SYSUID.&SYSNAME..ISFOUT,                              00004703
// DISP=(OLD,DELETE,DELETE),                                            00004802
// SPACE=(TRK,(2,2)),                                                   00004902
// DCB=(LRECL=512,RECFM=FB)                                             00005002

./ ADD NAME=IEHLIST
//IEHLIST   JOB ACCT£,                                                  00001000
//             MVS,                                                     00001100
//             NOTIFY=&SYSUID,                                          00001200
//             MSGCLASS=T                                               00001300
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00001400
//      SYS019.LP2.DB2,                                                 00001500
//      SYS1.SACBCNTL)                                                  00001600
//STEP1 EXEC PGM=IEHLIST                                                00002000
//SYSPRINT DD SYSOUT=*                                                  00003000
//DD1 DD UNIT=diskB,VOLUME=REF=SYS1.NUCLEUS,DISP=OLD                    00004000
//DD2 DD UNIT=diskA,VOLUME=SER=222222,DISP=OLD                          00005000
//SYSIN DD *                                                            00006000
LISTPDS DSNAME=D42.PDSE1,VOL=diskA=222222                               00007000
LISTPDS DSNAME=(name[,name[,...]])                                      00010000
[,VOL=device=serial]                                                    00020000
[,{DUMP|FORMAT}]                                                        00030000
//                                                                      00040000
LISTVTOC FORMAT,                                                        00050000
 ,INDEXDSN=SYS1.VTOCIX.SYSC26                                           00060000
//                                                                      00100000
LISTVTOC FORMAT,VOL=disk=111111                                         00100101
LISTVTOC DUMP,VOL=disk=111111,DSNAME=(SET1,SET2,SET3)                   00100201
//                                                                      00101001
LISTVTOC [{DUMP|FORMAT[,PDSESPACE]}]                                    00110000
[,INDEXDSN=SYS1.VTOCIX.SYSC26                                           00120000
[,DATE={dddyy|dddyyyy}]                                                 00130000
[,VOL=device=serial]                                                    00140000
[,DSNAME=(name[,name                                                    00150000

./ ADD NAME=IFASMFDL
//DUMPX JOB MSGLEVEL=1
//STEP1 EXEC PGM=IFASMFDL,REGION=0M
//OUTDD1 DD DSN=BASCAR.LSDEFLT.RECOR66,DISP=(NEW,CATLG,DELETE),
// UNIT=3390,
// SPACE=(CYL,(1,1),RLSE),DCB=(LRECL=32760,RECFM=VBS,BLKSIZE=0)
//SYSPRINT DD SYSOUT=A
//SYSIN DD *
LSNAME(IFASMF.MULTSYS.STREAM1,OPTIONS(DUMP))
OUTDD(OUTDD1,TYPE(0:255),START(0000),END(2400))
DATE(2007011,2007011)
SID(SY1)
/*
Figure 9. Sample JCL for dumping an SMF log stream to a data set

./ ADD NAME=IFASMFDP
//IFASMFDP  JOB ACCT£,                                                  00001000
//             MVS,                                                     00002000
//             NOTIFY=&SYSUID,                                          00003000
//             MSGCLASS=T                                               00004000
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00005000
//      SYS019.LP2.DB2,                                                 00006000
//      SYS1.SACBCNTL)                                                  00007000
//STEP1 EXEC PGM=IFASMFDP                                               00020000
//DUMPIN DD DSN=SYS1.MAN2,DISP=SHR                                      00030000
//DUMPOUT DD DSN=&SYSUID..SMFDATA,UNIT=3390,                            00040000
// DISP=(NEW,CATLG),                                                    00050000
// SPACE=(CYL,(100,100))                                                00050100
//*LABEL=(,SL),VOL=SER=serial                                           00051000
//SYSPRINT DD SYSOUT=*                                                  00060000
//SYSIN DD *                                                            00070000
INDD(DUMPIN,OPTIONS(DUMP))                                              00090000
OUTDD(DUMPOUT,TYPE(1:255))                                              00110000
//                                                                      00111000
INDD(DUMPIN,OPTIONS(ALL))                                               00111100
INDD(DUMPIN,OPTIONS(CLEAR))                                             00111200
INDD(INDD1,OPTIONS(ALL))                                                00111300
OUTDD(OUTDD1,TYPE(0,2,10,15:40))                                        00112000
OUTDD(OUTDD3,TYPE(10:255))                                              00120000
DATE(92002,92366)                                                       00130000
SID(308A)                                                               00140000
SID(308B)                                                               00150000

./ ADD NAME=IKJEFT01
//IKJEFT01  JOB ACCT£,                                                  00001000
//             MVS,                                                     00002000
//             NOTIFY=&SYSUID,                                          00003000
//             MSGLEVEL=(1,1)                                           00004000
//*DELETE  EXEC PGM=IEFBR14                                             00004100
//*SYSPRINT DD DSN=&SYSUID..&SYSNAME..LISTCAT,                          00004200
//* DISP=(MOD,DELETE,DELETE),                                           00004300
//* SPACE=(TRK,(2,2)),                                                  00004400
//* DCB=(LRECL=512,RECFM=FB)                                            00004500
//  EXEC PGM=IKJEFT01                                                   00004600
//*EXEC PGM=ISFAFD,PARM='256,128'                                       00004700
//*LISTCAT DD SYSOUT=*                                                  00004800
//SYSTSPRT DD SYSOUT=*                                                  00004900
//*SYSTSPRT DD DSN=&SYSUID..&SYSNAME..LISTCAT,                          00005000
//* DISP=(NEW,CATLG,DELETE),                                            00005100
//* SPACE=(CYL,(2,2)),                                                  00006000
//* DCB=(LRECL=512,RECFM=FB)                                            00007000
//SYSTSIN  DD *                                                         00008000
  DSINFO                                                                00009103
//                                                                      00009303
  CANCEL U=SYS019ID                                                     00009403
//                                                                      00009503
  CANCEL SYS019                                                         00009603
  ALU SYS019 NOOPERATION                                                00009703
  SEND 'LOGOFF AMIOPS STP',USER(SYSTME)                                 00010001

./ ADD NAME=IMPCONN
//SYSPGR1C JOB 1000,'GRANIE',REGION=4M,                                 00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020002
//LISTCAT  EXEC  PGM=IDCAMS                                             00030000
//SYSPRINT DD SYSOUT=*                                                  00040001
//SYSIN    DD *                                                         00040001
    IMPORT   OBJ( (CATALOG.RSD                            -
          DEVT(3390    ) VOL(SYSC21))) CONNECT                    -
          CAT(CATALOG.MASTER.ZOS13.BRN2.BACKUP                     )
    IMPORT   OBJ( (CATALOG.RSD                            -
          DEVT(3390    ) VOL(SYSC21))) CONNECT                    -
          CAT(CATALOG.MASTER.ZOS13.BRNR                            )
    IMPORT   OBJ( (CATALOG.RSD                            -
          DEVT(3390    ) VOL(SYSC21))) CONNECT                    -
          CAT(CATALOG.MASTER.ZOS13.BRNQ                            )

./ ADD NAME=INITRVA
//SYSINI2   JOB 1,'SYSTEME',REGION=2M,                                  00000100
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00000200
//INIT1   EXEC PGM=ICKDSF,REGION=2M                                     00020800
//SYSPRINT DD  SYSOUT=*                                                 00020900
//SYSIN    DD  *                                                        00021000
    INIT UNITADDRESS(81C9) -                                            00022004
    OWNERID(SYSTEM) -                                                   00025000
    NOVERIFY        -                                                   00025100
    VOLID(IB81C9)   -                                                   00026004
    VTOC(5,0,75)    -                                                   00028000
    INDEX(0,1,74)                                                       00028100
//                                                                      00080001

./ ADD NAME=INITSPOO
//SYSINIT   JOB 1000,'SYST-GRANIE',REGION=2M,                           00000100
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00000208
//*          INITIALISATION D'UN DISQUE 3390                            00020000
//*         AVEC VTOC INDEXEE, CYL DE LA VTOC A CHOISIR                 00020100
//*------------------------------------------------------               00020200
//*      POUR UN VOLUME D'IPL METTRE VTOC(0,1,14)                       00020300
//*------------------------------------------------------               00020700
//INIT1   EXEC PGM=ICKDSF,REGION=2M                                     00020800
//SYSPRINT DD  SYSOUT=*                                                 00020900
//SYSIN    DD  *                                                        00021000
    INIT UNITADDRESS(5072) -                                            00022012
    OWNERID(SYSTEM) -                                                   00025000
    NVFY   -                                                            00025100
    VOLID(SPOOL4) -                                                     00026012
    VTOC(0,1,14) -                                                      00028001
    INDEX(1,1,14)                                                       00028103
/*                                                                      00029000
//                                                                      00029100

./ ADD NAME=INITWSF2
//SYSINIT   JOB 1,'SYSTEME',MSGLEVEL=(1,1),                             00000101
//             CLASS=O,MSGCLASS=T,NOTIFY=&SYSUID                        00000201
//*          INITIALISATION D'UN DISQUE 3390                            00020000
//*         AVEC VTOC INDEXEE, CYL DE LA VTOC A CHOISIR                 00020100
//*------------------------------------------------------               00020200
//*      POUR UN VOLUME D'IPL METTRE VTOC(0,1,14)                       00020300
//*------------------------------------------------------               00020700
//INIT1   EXEC PGM=ICKDSF,REGION=2M                                     00020800
//SYSPRINT DD  SYSOUT=*                                                 00020900
//SYSIN    DD  *                                                        00021000
    INIT UNITADDRESS(311E) -                                            00022005
    OWNERID(SYSTEM) -                                                   00025000
    NVFY   -                                                            00025100
    VOLID(WSFO01) -                                                     00026005
    VTOC(0,1,14) -                                                      00028000
    INDEX(1,1,14)                                                       00028100
/*                                                                      00029000
//                                                                      00029100

./ ADD NAME=INIT3380
//SYSINIT   JOB 1000,'SYSTEME',REGION=2M,                               00000102
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00000202
//*------------------------------------------------------               00000300
//*          INITIALISATION D'UN DISQUE 3380                            00000400
//*                                                                     00000600
//*   1) LE VOLUME DOIT ETRE OFFLINE AVANT DE LANCER LE JOB             00000700
//*   2) REPLY A LA CONSOLE : REPONDRE 'U' POUR LANCER L'INIT           00000800
//*   3) FAIRE UN V 112,ONLINE APRES LE JOB                             00000900
//*------------------------------------------------------               00001000
//INIT1   EXEC PGM=ICKDSF,REGION=2M                                     00001100
//SYSPRINT DD  SYSOUT=*                                                 00001200
//SYSIN    DD  *                                                        00002000
//                                                                      00002103
    INIT UNITADDRESS(E14) -                                             00003002
    OWNERID(SYSTEM) -                                                   00004000
    NOVERIFY        -                                                   00005000
    VOLID(RESE14) -                                                     00007002
    VTOC(734,0,60) -                                                    00008000
    INDEX(730,0,60)                                                     00009000
/*                                                                      00010000
//                                                                      00020000

./ ADD NAME=INIT3381
//SYSINIT   JOB 1000,'PH-GRANIE',REGION=2M,                             00000100
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPGR          00000200
//*------------------------------------------------------               00000300
//*          INITIALISATION D'UN DISQUE 3380                            00000400
//*                                                                     00000600
//*   1) LE VOLUME DOIT ETRE OFFLINE AVANT DE LANCER LE JOB             00000700
//*   2) REPLY A LA CONSOLE : REPONDRE 'U' POUR LANCER L'INIT           00000800
//*   3) FAIRE UN V 112,ONLINE APRES LE JOB                             00000900
//*------------------------------------------------------               00001000
//INIT1   EXEC PGM=ICKDSF,REGION=2M                                     00001100
//SYSPRINT DD  SYSOUT=*                                                 00001200
//SYSIN    DD  *                                                        00002000
    INIT UNITADDRESS(112) -                                             00003000
    OWNERID(SYSTEM) -                                                   00004000
    NOVERIFY        -                                                   00005000
    STGR            -                                                   00006000
    VOLID(METH01) -                                                     00007000
    VTOC(734,0,60) -                                                    00008000
    INDEX(730,0,60)                                                     00009000
/*                                                                      00010000
//                                                                      00020000

./ ADD NAME=INIT3382
//SYSINIT   JOB 1000,'PH-GRANIE',REGION=2M,                             00000100
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPGR          00000200
//*------------------------------------------------------               00000300
//*          INITIALISATION D'UN DISQUE 3380                            00000400
//*                                                                     00000600
//*   1) LE VOLUME DOIT ETRE OFFLINE AVANT DE LANCER LE JOB             00000700
//*   2) REPLY A LA CONSOLE : REPONDRE 'U' POUR LANCER L'INIT           00000800
//*   3) FAIRE UN V 113,ONLINE APRES LE JOB                             00000901
//*------------------------------------------------------               00001000
//INIT1   EXEC PGM=ICKDSF,REGION=2M                                     00001100
//SYSPRINT DD  SYSOUT=*                                                 00001200
//SYSIN    DD  *                                                        00002000
    INIT UNITADDRESS(113) -                                             00003001
    OWNERID(SYSTEM) -                                                   00004000
    NOVERIFY        -                                                   00005000
    VOLID(PER013) -                                                     00007001
    VTOC(734,0,60) -                                                    00008000
    INDEX(730,0,60)                                                     00009000
/*                                                                      00010000
//                                                                      00020000

./ ADD NAME=INIT3390
//SYSINIT   JOB 1,'SYSTEME',REGION=2M,                                  00000191
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00000235
//*------------------------------------------------------               00000338
//*          INITIALISATION D'UN DISQUE 3390                            00020000
//*         AVEC VTOC INDEXEE, CYL DE LA VTOC A CHOISIR                 00020112
//*------------------------------------------------------               00020212
//*      POUR UN VOLUME D'IPL METTRE VTOC(0,1,14)                       00020313
//*------------------------------------------------------               00020413
//INIT1   EXEC PGM=ICKDSF,REGION=2M                                     00020800
//SYSPRINT DD  SYSOUT=*                                                 00020900
//SYSIN    DD  *                                                        00021000
    INIT UNITADDRESS(8505) -                                            00030099
    OWNERID(SYSTEM) -                                                   00030199
    VERIFY(IB8505)  -                                                   00030299
    VOLID(SYST36)   -                                                   00030499
    VTOC(5,0,75)    -                                                   00030599
    INDEX(0,1,74)                                                       00030699
//                                                                      00038099
    STGR            -                                                   00040099

./ ADD NAME=INSPECT
//SYSINSP  JOB 1000,'LAPEYRE',REGION=2M,                                00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPLA          00020001
//*------------------------------------------------------------         00030003
//S1       EXEC PGM=ICKDSF,REGION=2048K
//SYSPRINT DD SYSOUT=*
//DD1     DD UNIT=3380,DISP=SHR,VOL=SER=METH01
//SYSIN    DD *
 INSPECT DDNAME(DD1)  NVFY -
 TRACKS(X'077C',X'04')     -
 NOCHECK PRESERVE
/*
//
 INSPECT DDNAME(DD1)  NVFY -
 FROMRANGE(X'00D8',X'04') TORANGE(X'00D8',X'04') -
 SKIP MAP
/*
//

./ ADD NAME=INST3390
//SYSICK    JOB 1000,'SYSTEME',REGION=2M,                               00000115
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00000208
//ICKDSF    EXEC PGM=ICKDSF                                             00000300
//SYSUDUMP  DD SYSOUT=*                                                 00000400
//SYSPRINT  DD SYSOUT=*                                                 00000500
//SYSIN     DD *                                                        00000600
  INSTALL UNITADDRESS(21F) NOVERIFY                                     00000715
//                                                                      00000800
//                                                                      00000901
  IF LASTCC<4 -                                                         00001000
      THEN DO                                                           00001100
        INIT UNIT(D23) VOLID(SYST01) NOVALIDATE NOCHECK -               00001200
             VTOC(880,0,60) INDEX(883,0,30)                             00001300
//                                                                      00001400
//*                                                                     00001500
//* UNIT(ADRESSE) VFY(ANCIEN VOLSER) VOLID(NOUVEAU VOLSER)              00001600
//*          VTOC(NO CYL,NO TRK,NB TRK)                                 00001700
//*    NB TRK : 59 POUR UN TRIPLE DENSITE   0,1,59                      00001800
//*             44 POUR UN DOUBLE DENSITE   0,1,44                      00001900
//*             29 POUR UN SIMPLE DENSITE   0,1,29                      00002000
//*                                                                     00002100
//*INIT UNIT(B61) NVFY VOLID(RESB61)  VTOC(0,1,59)  VALIDATE            00002200
//*  POUR NVEAU DSK A INSTALLER SANS VFY MAIS AVEC VALIDATE DE          00002300
//*  TOUTES LES PISTES                                                  00002400
//*                                                                     00002500
//*                                                                     00002600
//*INIT UNIT(B45) NVFY VOLID(RESB45) VTOC(0,1,44)                       00002700
//*INIT UNIT(548) VFY(SSPA4D) VOLID(XSTA4D) VTOC(0,1,49)                00002800
//*  PARAMETRE PERMETTANT DE CHECKER TOUS LE DISQUE                     00002900
//*INIT UNIT(64E) VFY(XDB802) VOLID(XBA830) VTOC(0,1,44)                00003000
//*INIT UNIT(25C) VFY(RESB25C VOLID(XTP915) VTOC(880,0,60)              00004000
//*------------------------------------------------------               00011000
//*          INITIALISATION D'UN DISQUE 3390                            00020000
//*         AVEC VTOC INDEXEE, CYL DE LA VTOC A CHOISIR                 00020100
//*------------------------------------------------------               00020200
//*      POUR UN VOLUME D'IPL METTRE VTOC(0,1,14)                       00020300
//*------------------------------------------------------               00020400
//INIT1   EXEC PGM=ICKDSF,REGION=2M                                     00020800
//SYSPRINT DD  SYSOUT=*                                                 00020900
//SYSIN    DD  *                                                        00021000
    INIT UNITADDRESS(D04) -                                             00022000
    OWNERID(SYSTEM) -                                                   00025000
    NVFY   -                                                            00025100
    VOLID(HDSD04) -                                                     00026000
    VTOC(436,0,45) -                                                    00028000
    INDEX(435,0,15)                                                     00028100
/*                                                                      00029000
//                                                                      00029100

./ ADD NAME=IOCP
         ID    MSG1='IBM9121 du 27.11.96',                             *
               MSG2='BRN1.IODF05 - 1996-11-22 10:44',                  *
               TOK=('IBM9121',0000000162569672104401240096327F00000000,*
               00000000,'96-11-22','10:44:01','BRN1','IODF05')
         CHPID PATH=(00),TYPE=BL
         CHPID PATH=(01),TYPE=BL
         CHPID PATH=(02),TYPE=BL
         CHPID PATH=(03),TYPE=BL
         CHPID PATH=(04),TYPE=BL
         CHPID PATH=(05),TYPE=BL
         CHPID PATH=(06),TYPE=BL
         CHPID PATH=(07),TYPE=BY
         CHPID PATH=(08),TYPE=BL
         CHPID PATH=(09),TYPE=BL
         CHPID PATH=(0A),TYPE=BL
         CHPID PATH=(0B),TYPE=BL
         CHPID PATH=(0C),TYPE=BL
         CHPID PATH=(0D),TYPE=BL
         CHPID PATH=(0E),TYPE=BL
         CHPID PATH=(0F),TYPE=BL
         CHPID PATH=(10),TYPE=BL
         CHPID PATH=(11),TYPE=BL
         CHPID PATH=(12),TYPE=BL
         CHPID PATH=(13),TYPE=BL
         CHPID PATH=(14),TYPE=BL
         CHPID PATH=(15),TYPE=BL
         CHPID PATH=(16),TYPE=BL
         CHPID PATH=(17),TYPE=BL
         CHPID PATH=(18),TYPE=CNC
         CHPID PATH=(19),TYPE=CNC
         CHPID PATH=(1A),TYPE=CNC
         CHPID PATH=(1B),TYPE=CNC
         CHPID PATH=(1C),TYPE=CNC
         CHPID PATH=(1D),TYPE=CNC
         CHPID PATH=(1E),TYPE=CNC
         CHPID PATH=(1F),TYPE=CNC
         CHPID PATH=(40),TYPE=BL
         CHPID PATH=(41),TYPE=BL
         CHPID PATH=(42),TYPE=BL
         CHPID PATH=(43),TYPE=BL
         CHPID PATH=(44),TYPE=BL
         CHPID PATH=(45),TYPE=BL
         CHPID PATH=(46),TYPE=BL
         CHPID PATH=(47),TYPE=BL
         CHPID PATH=(48),TYPE=BL
         CHPID PATH=(49),TYPE=BL
         CHPID PATH=(4A),TYPE=BL
         CHPID PATH=(4B),TYPE=BL
         CHPID PATH=(4C),TYPE=BL
         CHPID PATH=(4D),TYPE=BL
         CHPID PATH=(4E),TYPE=BL
         CHPID PATH=(4F),TYPE=BL
         CHPID PATH=(5C),TYPE=CNC
         CHPID PATH=(5D),TYPE=CNC
         CHPID PATH=(5E),TYPE=CNC
         CHPID PATH=(5F),TYPE=CNC
         CNTLUNIT CUNUMBR=0012,PATH=(07),UNITADD=((12,001),(30,008)),  *
               SHARED=N,UNIT=3705
         CNTLUNIT CUNUMBR=0060,PATH=(07),UNITADD=((60,032)),SHARED=N,  *
               UNIT=3274
         CNTLUNIT CUNUMBR=00E0,PATH=(00),UNITADD=((E0,032)),SHARED=N,  *
               PROTOCL=D,UNIT=3274
         CNTLUNIT CUNUMBR=0101,PATH=(01,0F),UNITADD=((00,064)),        *
               SHARED=N,PROTOCL=S4,UNIT=3990-6
         CNTLUNIT CUNUMBR=0102,PATH=(09,42),UNITADD=((00,064)),        *
               SHARED=N,PROTOCL=S4,UNIT=3990-6
         CNTLUNIT CUNUMBR=0180,PATH=(0B,11),UNITADD=((80,064)),        *
               SHARED=N,PROTOCL=S4,UNIT=3990-6
         CNTLUNIT CUNUMBR=0181,PATH=(43,4C),UNITADD=((80,064)),        *
               SHARED=N,PROTOCL=S4,UNIT=3990-6
         CNTLUNIT CUNUMBR=0201,PATH=(03,05),UNITADD=((00,064)),        *
               SHARED=N,PROTOCL=S4,UNIT=3990-6
         CNTLUNIT CUNUMBR=0202,PATH=(10,44),UNITADD=((00,064)),        *
               SHARED=N,PROTOCL=S4,UNIT=3990-6
         CNTLUNIT CUNUMBR=0280,PATH=(45,4D),UNITADD=((80,064)),        *
               SHARED=N,PROTOCL=S4,UNIT=3990-6
         CNTLUNIT CUNUMBR=0281,PATH=(0C,0D),UNITADD=((80,064)),        *
               SHARED=N,PROTOCL=S4,UNIT=3990-6
         CNTLUNIT CUNUMBR=0401,PATH=(04,0E),UNITADD=((00,064)),        *
               SHARED=N,PROTOCL=S4,UNIT=3990-6
         CNTLUNIT CUNUMBR=0402,PATH=(12,46),UNITADD=((00,064)),        *
               SHARED=N,PROTOCL=S4,UNIT=3990-6
         CNTLUNIT CUNUMBR=0480,PATH=(47,4E),UNITADD=((80,064)),        *
               SHARED=N,PROTOCL=S4,UNIT=3990-6
         CNTLUNIT CUNUMBR=0481,PATH=(0A,40),UNITADD=((80,064)),        *
               SHARED=N,PROTOCL=S4,UNIT=3990-6
         CNTLUNIT CUNUMBR=0620,PATH=(4B),UNITADD=((20,128)),SHARED=Y,  *
               PROTOCL=D,UNIT=3791L
         CNTLUNIT CUNUMBR=06A0,PATH=(4B),UNITADD=((A0,096)),SHARED=Y,  *
               PROTOCL=D,UNIT=3791L
         CNTLUNIT CUNUMBR=071B,PATH=(41),UNITADD=((1B,001)),SHARED=Y,  *
               PROTOCL=D,UNIT=3203
         CNTLUNIT CUNUMBR=071D,PATH=(41),UNITADD=((1D,001)),SHARED=N,  *
               PROTOCL=S,UNIT=AFP1
         CNTLUNIT CUNUMBR=071F,PATH=(41),UNITADD=((1F,001)),SHARED=N,  *
               PROTOCL=S,UNIT=AFP1
         CNTLUNIT CUNUMBR=0790,PATH=(4F),UNITADD=((90,004)),SHARED=Y,  *
               PROTOCL=D,UNIT=3422
         CNTLUNIT CUNUMBR=0830,PATH=(08),UNITADD=((30,001)),SHARED=N,  *
               PROTOCL=S,UNIT=3745
         CNTLUNIT CUNUMBR=0831,PATH=(02),UNITADD=((31,001)),SHARED=N,  *
               PROTOCL=S,UNIT=3745
         CNTLUNIT CUNUMBR=0840,PATH=(08),UNITADD=((40,001)),SHARED=N,  *
               PROTOCL=D,UNIT=3791L
         CNTLUNIT CUNUMBR=0841,PATH=(06),UNITADD=((41,001)),SHARED=N,  *
               PROTOCL=S,UNIT=3745
         CNTLUNIT CUNUMBR=0860,PATH=(08),UNITADD=((60,001)),SHARED=N,  *
               PROTOCL=D,UNIT=3791L
         CNTLUNIT CUNUMBR=0880,PATH=(08),UNITADD=((80,032)),SHARED=N,  *
               PROTOCL=D,UNIT=3274
         CNTLUNIT CUNUMBR=0F00,PATH=(18),UNITADD=((00,016)),UNIT=3490
         CNTLUNIT CUNUMBR=0F01,PATH=(19),UNITADD=((00,016)),UNIT=3490
         CNTLUNIT CUNUMBR=0F02,PATH=(1A),UNITADD=((00,016)),UNIT=3490
         CNTLUNIT CUNUMBR=0F03,PATH=(1B),UNITADD=((00,016)),UNIT=3490
         CNTLUNIT CUNUMBR=0F04,PATH=(1C),UNITADD=((00,016)),UNIT=3490
         CNTLUNIT CUNUMBR=0F05,PATH=(1D),UNITADD=((00,016)),UNIT=3490
         CNTLUNIT CUNUMBR=0F06,PATH=(1E),UNITADD=((00,016)),UNIT=3490
         CNTLUNIT CUNUMBR=0F07,PATH=(1F),UNITADD=((00,016)),UNIT=3490
         CNTLUNIT CUNUMBR=0F08,PATH=(5C),UNITADD=((00,016)),UNIT=3490
         CNTLUNIT CUNUMBR=0F09,PATH=(5D),UNITADD=((00,016)),UNIT=3490
         CNTLUNIT CUNUMBR=0F80,PATH=(4A),UNITADD=((80,016)),SHARED=N,  *
               PROTOCL=S,UNIT=3480
         CNTLUNIT CUNUMBR=0FB0,PATH=(48,49),UNITADD=((B0,016)),        *
               SHARED=N,PROTOCL=S,UNIT=3490
         CNTLUNIT CUNUMBR=1A00,PATH=(13),UNITADD=((00,001)),SHARED=N,  *
               PROTOCL=D,UNIT=3791L
         CNTLUNIT CUNUMBR=1A20,PATH=(13),UNITADD=((20,001)),SHARED=N,  *
               PROTOCL=D,UNIT=3791L
         CNTLUNIT CUNUMBR=1A40,PATH=(13),UNITADD=((40,001)),SHARED=N,  *
               PROTOCL=D,UNIT=3791L
         CNTLUNIT CUNUMBR=1A60,PATH=(13),UNITADD=((60,001)),SHARED=N,  *
               PROTOCL=D,UNIT=3791L
         CNTLUNIT CUNUMBR=1A80,PATH=(13),UNITADD=((80,032)),SHARED=N,  *
               PROTOCL=D,UNIT=3274
         CNTLUNIT CUNUMBR=1AA0,PATH=(13),UNITADD=((A0,001)),SHARED=N,  *
               PROTOCL=D,UNIT=3791L
         CNTLUNIT CUNUMBR=1AC0,PATH=(13),UNITADD=((C0,001)),SHARED=N,  *
               PROTOCL=D,UNIT=3791L
         CNTLUNIT CUNUMBR=1AE0,PATH=(13),UNITADD=((E0,001)),SHARED=N,  *
               PROTOCL=D,UNIT=3791L
         IODEVICE ADDRESS=(012,001),CUNUMBR=(0012),STADET=N,UNIT=3705
         IODEVICE ADDRESS=(030,007),CUNUMBR=(0012),STADET=N,UNIT=TWX
         IODEVICE ADDRESS=(037,001),CUNUMBR=(0012),STADET=N,UNIT=BSC1
         IODEVICE ADDRESS=(060,032),MODEL=2,CUNUMBR=(0060),STADET=Y,   *
               UNIT=3278
         IODEVICE ADDRESS=(0E0,029),MODEL=2,CUNUMBR=(00E0),TIMEOUT=Y,  *
               STADET=N,UNIT=3278
         IODEVICE ADDRESS=(0FD,003),MODEL=2,CUNUMBR=(00E0),TIMEOUT=Y,  *
               STADET=N,UNIT=3286
         IODEVICE ADDRESS=(100,064),CUNUMBR=(0101,0102),TIMEOUT=Y,     *
               STADET=N,UNIT=3390
         IODEVICE ADDRESS=(180,064),CUNUMBR=(0180,0181),TIMEOUT=Y,     *
               STADET=N,UNIT=3390
         IODEVICE ADDRESS=(200,064),CUNUMBR=(0201,0202),TIMEOUT=Y,     *
               STADET=N,UNIT=3390
         IODEVICE ADDRESS=(280,064),CUNUMBR=(0280,0281),TIMEOUT=Y,     *
               STADET=N,UNIT=3390
         IODEVICE ADDRESS=(400,064),CUNUMBR=(0401,0402),TIMEOUT=Y,     *
               STADET=N,UNIT=3390
         IODEVICE ADDRESS=(480,064),CUNUMBR=(0480,0481),TIMEOUT=Y,     *
               STADET=N,UNIT=3390
         IODEVICE ADDRESS=(620,128),CUNUMBR=(0620),TIMEOUT=Y,STADET=N, *
               UNIT=3791L
         IODEVICE ADDRESS=(6A0,096),CUNUMBR=(06A0),TIMEOUT=Y,STADET=N, *
               UNIT=3791L
         IODEVICE ADDRESS=(71B,001),MODEL=4,CUNUMBR=(071B),TIMEOUT=Y,  *
               STADET=N,UNIT=3203
         IODEVICE ADDRESS=(71D,001),MODEL=0,CUNUMBR=(071D),TIMEOUT=Y,  *
               STADET=N,UNIT=AFP1
         IODEVICE ADDRESS=(71F,001),MODEL=0,CUNUMBR=(071F),TIMEOUT=Y,  *
               STADET=N,UNIT=AFP1
         IODEVICE ADDRESS=(790,004),CUNUMBR=(0790),TIMEOUT=Y,STADET=Y, *
               UNIT=3422
         IODEVICE ADDRESS=(831,001),CUNUMBR=(0831),TIMEOUT=Y,STADET=N, *
               UNIT=3745
         IODEVICE ADDRESS=(840,001),CUNUMBR=(0840),TIMEOUT=Y,STADET=N, *
               UNIT=3791L
         IODEVICE ADDRESS=(841,001),CUNUMBR=(0841),TIMEOUT=Y,STADET=N, *
               UNIT=3745
         IODEVICE ADDRESS=(860,001),CUNUMBR=(0860),TIMEOUT=Y,STADET=N, *
               UNIT=3791L
         IODEVICE ADDRESS=(880,032),MODEL=2,CUNUMBR=(0880),TIMEOUT=Y,  *
               STADET=N,UNIT=3278
         IODEVICE ADDRESS=(A00,001),CUNUMBR=(1A00),TIMEOUT=Y,STADET=N, *
               UNIT=3791L
         IODEVICE ADDRESS=(A20,001),CUNUMBR=(1A20),TIMEOUT=Y,STADET=N, *
               UNIT=3791L
         IODEVICE ADDRESS=(A40,001),CUNUMBR=(1A40),TIMEOUT=Y,STADET=N, *
               UNIT=3791L
         IODEVICE ADDRESS=(A60,001),CUNUMBR=(1A60),TIMEOUT=Y,STADET=N, *
               UNIT=3791L
         IODEVICE ADDRESS=(A80,032),MODEL=2,CUNUMBR=(1A80),TIMEOUT=Y,  *
               STADET=N,UNIT=3278
         IODEVICE ADDRESS=(AA0,001),CUNUMBR=(1AA0),TIMEOUT=Y,STADET=N, *
               UNIT=3791L
         IODEVICE ADDRESS=(AC0,001),CUNUMBR=(1AC0),TIMEOUT=Y,STADET=N, *
               UNIT=3791L
         IODEVICE ADDRESS=(AE0,001),CUNUMBR=(1AE0),TIMEOUT=Y,STADET=N, *
               UNIT=3791L
         IODEVICE ADDRESS=(F00,001),CUNUMBR=(0F00),STADET=N,UNIT=3490
         IODEVICE ADDRESS=(F01,001),CUNUMBR=(0F01),STADET=N,UNIT=3490
         IODEVICE ADDRESS=(F02,001),CUNUMBR=(0F02),STADET=N,UNIT=3490
         IODEVICE ADDRESS=(F03,001),CUNUMBR=(0F03),STADET=N,UNIT=3490
         IODEVICE ADDRESS=(F04,001),CUNUMBR=(0F04),STADET=N,UNIT=3490
         IODEVICE ADDRESS=(F05,001),CUNUMBR=(0F05),STADET=N,UNIT=3490
         IODEVICE ADDRESS=(F06,001),CUNUMBR=(0F06),STADET=N,UNIT=3490
         IODEVICE ADDRESS=(F07,001),CUNUMBR=(0F07),STADET=N,UNIT=3490
         IODEVICE ADDRESS=(F08,001),CUNUMBR=(0F08),STADET=N,UNIT=3490
         IODEVICE ADDRESS=(F09,001),CUNUMBR=(0F09),STADET=N,UNIT=3490
         IODEVICE ADDRESS=(F80,002),CUNUMBR=(0F80),TIMEOUT=Y,STADET=N, *
               UNIT=3480
         IODEVICE ADDRESS=(FB0,016),CUNUMBR=(0FB0),TIMEOUT=Y,STADET=N, *
               UNIT=3490

./ ADD NAME=IPCST
//SYSDUMP  JOB 1,'IPCSDUMP',                                            00010000
//             CLASS=O,                                                 00020000
//             NOTIFY=&SYSUID,                                          00030000
//             MSGLEVEL=(1,1),                                          00040000
//             MSGCLASS=T                                               00050000
//*----------------------------------------------------------*          00060000
//* THIS JOB FORMATS A CICS SDUMP BY INVOKING IPCS VIA THE   *          00070000
//* TSO TERMINAL MONITOR PROGRAM IN A BATCH JOB              *          00080000
//*----------------------------------------------------------*          00080100
//IPCSDUMP EXEC PGM=IKJEFT01,REGION=4096K                               00080200
//DFHSDUMP DD  DSN=SYSILE.CTRACE2,DISP=SHR                              00080600
//DFHSNAP  DD  SYSOUT=*                                                 00080700
//IPCSDDIR DD  DSN=SYSILE.IPCSDIR,DISP=SHR                              00080800
//IPCSTOC  DD  SYSOUT=*                                                 00080900
//IPCSPRNT DD  SYSOUT=*                                                 00081000
//*IPCSPRNT DD  DSN=SYSPLA.IPCSPRNT,UNIT=3390,VOL=SER=SYST05,           00082000
//*            DCB=(RECFM=FB,LRECL=133,BLKSIZE=0),                      00083000
//*            SPACE=(CYL,(100,10),RLSE),DISP=(NEW,CATLG)               00084000
//IPCSPARM DD  DSN=SYS1.PARMLIB,DISP=SHR                                00085000
//SYSPROC  DD  DSN=SYS1.SBLSCLI0,DISP=SHR                               00087000
//SYSTSPRT DD  SYSOUT=*                                                 00088000
//IPCSDUMP.SYSTSIN DD *                                                 00089000
IPCS NOPARM                                                             00090000
DROPDUMP DD(DFHSDUMP)                                                   00100000
SETDEF DD(DFHSDUMP) NOPROBLEM NOCONFIRM NOTERMINAL PRINT LIST           00110000
CTRACE COMP(SYSTCPDA) FULL                                              00110102
END                                                                     00110200
/*                                                                      00110300
//                                                                      00110400

./ ADD NAME=IPLTEXT
//IPLTEXT  JOB   (1),                                                   00010000
//         'SYSPGR',                                 /*OPER*/           00020000
//         CLASS=A,                                           /*JCLAS*/ 00030000
//         MSGLEVEL=(1,1),                                              00040000
//         MSGCLASS=T,                                                  00050000
//         NOTIFY=SYSPGR,                                               00060000
//         TIME=30,REGION=4096K                                         00070000
//*                                                                     00140000
//* DOC: IPLTEXT CREATES IPL TEXT ON THE FIRST SYSTEM RESIDENCE         00150000
//*                                                                     00210000
//INSTAL2 EXEC PGM=ICKDSF,REGION=1024K                                  00220000
//*TEPLIB  DD  DSN=SYS1.LINKLIB,VOL=SER=ESA190,UNIT=3390,DISP=SHR       00240000
//SYSPRINT DD  SYSOUT=*                                                 00241000
//IPLVOL   DD  DISP=SHR,VOL=SER=ESA2P2,UNIT=3390                        00250000
//IPLTEXT  DD  DSN=SYS1.SAMPLIB(IPLRECS),                               00260000
//             DISP=SHR,VOL=SER=ESA190,UNIT=3390                        00270000
//         DD  DSN=SYS1.SAMPLIB(IEAIPL00),                              00280000
//             DISP=SHR,VOL=SER=ESA190,UNIT=3390                        00290000
//SYSIN    DD  *                                                        00300000
   REFORMAT  DDNAME(IPLVOL)                                      -      00310000
             IPLDD(IPLTEXT)                                      -      00320000
             NOVERIFY                                            -      00330000
             BOOTSTRAP   /* IPLRECS OF IPLTEXT DD WILL SUPPLY IT */     00340000
/*                                                                      00350000

./ ADD NAME=IPOUPDT
//SYSPGR1  JOB 1000,'SYST-GRANIE',REGION=2M,                            00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPGR          00020000
//*------------------------------------------------------------
//* PARM: CHECK POUR VERIF ET UPDATE POUR REMPLACEMENT DES CHAINES
//* BIBLIO A TRAITER: LE DDNAME  DOIT COMMENCER PAR à
//*------------------------------------------------------------
//UPDAT1  EXEC PGM=IPOUPDTE,PARM='CHECK'
//SYSPRINT DD  SYSOUT=*
//àPROC0   DD  DSN=SYS1.PROCLIB,DISP=SHR
//àPROC1   DD  DSN=IPO1.PROCLIB,DISP=SHR
//àPROC2   DD  DSN=IPO1.PPROCLIB,DISP=SHR
//àPROC3   DD  DSN=MVS1.MVS1.PROCLIB,DISP=SHR
//SYSIN    DD  *
SYST.LOADLIB<SYST.LOADLIB<<
/*

./ ADD NAME=IRA405I
//IRA405I  PROC                                                         00010000
//IKJEF025 EXEC PGM=IKJEFT1B                                            00020000
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR                            00030000
//SYSPROC  DD  DSN=SYS4.XMITIP.EXEC,DISP=SHR                            00040000
//SYSOUT   DD  SYSOUT=*                                                 00050000
//SYSTSPRT DD  SYSOUT=*                                                 00060000
//MSG      DD   *                                                       00070000
<HTML>                                                                  00080000
<HEAD>                                                                  00090000
<TITLE>LP2 - IRA405I</TITLE>                                            00100000
</HEAD>                                                                 00110000
<BODY>                                                                  00120000
UN MESSAGE <B>IRA405I</B> A éTé éMIS SUR LP2.                           00130000
VOIR LA SYSLOG...                                                       00140000
</BODY>                                                                 00150000
</HTML>                                                                 00160000
/*                                                                      00170000
//SYSTSIN  DD *                                                         00180000
%xmitip (systeme.esp@euro-securities-partners.com)                 +    00190001
 HTML                                                              +    00200000
 SUBJECT 'LP2 - IRA405I'                                           +    00210000
 MSGDD MSG                                                              00220000
/*                                                                      00230000

./ ADD NAME=IVP
//I800INIV JOB ,IOA800,MSGCLASS=X,CLASS=A,MSGLEVEL=(1,1)                00010000
//*SYS3.BMC.CTM.JCL(IVP)                                                00020000
//*                                                                     00030000
//         JCLLIB  ORDER=SYS3.BMC.IOA.PROCLIB                           00040000
//         INCLUDE MEMBER=IOASET                                        00050000
//* CCID WM3459; BM10643                                                00060000
//STEP1    EXEC PGM=CTMBLT,REGION=0M                                    00070000
//         INCLUDE MEMBER=&IOAENV                                       00080000
//DAALOCIN DD  DISP=SHR,DSN=&DAALOCIN(ALCMBLT)                          00090000
//DAPRINT  DD  SYSOUT=&OUT                                              00100000
//SYSPRINT DD  SYSOUT=&OUT                                              00110000
//SYSUDUMP DD  SYSOUT=&OUTDUMP                                          00120000
//DAINPRM  DD  *                                                        00130000
LIBRARY=SYS3.BMC.CTM.SCHEDULE      * THE CTM SCHEDULE LIBRARY    *      00140000
MEM-OVERWRITE=ORDER             * ORDER ALL TABLES ON-THE-FLY *         00150000
OPTION=S/Y              * SAVE SCHEDULE DEFS IN CTM SCHEDULE LIB *      00160000
ADD-GLOBAL=Y                                                            00170000
APPL=IVP                * GLOBAL FOR SHOW FILTER (V6.2 AND ABOVE)       00180000
TABLE=IVP0                                                              00190000
  SCHEDULE-TAG=TAG0     * COMMON SCHEDULE TAG FOR ALL JOBS  *           00200000
  TASKTYP=STC           * EXECUTE ALL JOBS AS STARTED TASKS *           00210000
  GROUP-ENTITY=IVPINIT                                                  00220000
   SCHEDULE-TAG=TAG0                                                    00230000
    DAYS=ALL                                                            00240000
   SCHEDULE-TAG=*END                                                    00250000
   OUT=IVP-INIT-STEP                                                    00260000
   DESC='START CMEM MONITOR'                                            00270000
  MEMNAME=IOAOPR                                                        00280000
    MEMLIB=(*,PARM='S CTMCMEM')    * ACTIVATE CMEM MONITOR *            00290000
  MEMNAME=IOATEST                                                       00300000
    MEMLIB=(*,PARM='WAIT=10')        WAIT TO TAKE AFFECT                00310000
TABLE=*END                                                              00320000
  TASKTYP=STC           * EXECUTE ALL JOBS AS STARTED TASKS *           00330000
  SCHEDULE-TAG=TAG0     * COMMON SCHEDULE TAG FOR ALL JOBS  *           00340000
TABLE=IVP1                                                              00350000
  GROUP-ENTITY=IVPCND                                                   00360000
  GROUP=IVPCND              <---- V700 BM10643 FOR IOAVAR GLOBAL NAME   00370000
   SCHEDULE-TAG=TAG0                                                    00380000
    DAYS=ALL                                                            00390000
   SCHEDULE-TAG=*END                                                    00400000
   IN=çTHIS-COND-DOES-NOT-EXIST          * INVERTED COND *              00410000
   IN=IVP-INIT-STEP                                                     00420000
   ONPGM                                                                00430000
    STEP=GROUPEND,CODES=NOTOK                                           00440000
      DO=SHOUT                                                          00450000
        MSG='IVP1 GROUP ENDED NOTOK - DELETE OF CONDS FAILS'            00460000
      DO=COND                                                           00470000
        CONDS=PRE-IOACND-STEP             * ADD COND ON GROUP FAILURE * 00480000
        CONDS=(IVP-INIT-STEP,ODAT,-)                                    00490000
   DESC='ADD/DELETE CONDITIONS VIA UTILITY IOACND'                      00500000
  MEMNAME=IOACND                                                        00510000
    MEMLIB=(*,PARM='ADD COND SHORT-COND STAT')                          00520000
  MEMNAME=IOACND                                                        00530000
    MEMLIB=(*,PARM='ADD COND LONG-CONDITION-XXXXXX STAT')               00540000
  MEMNAME=IOACND                                                        00550000
    MEMLIB=(*,PARM='ADD COND ADD_ANOTHER_LONG_COND STAT')               00560000
  MEMNAME=IOACND                                  * JOB FAILS *         00570000
    SETVAR=(%%..çIOACNDçOID=%%ORDERID)  * GET JOBS OID -PASS TO IVP6 *  00580000
    MEMLIB=(*,PARM='DELETE COND SUPER-GLOBAL-IN WDATE')                 00590000
  MEMNAME=IOACND                                  * JOB FAILS *         00600000
    MEMLIB=(*,PARM='DELETE COND       GLOBAL-IN WDATE')                 00610000
TABLE=*END                                                              00620000
**                                                                      00630000
  MEMLIB=DUMMY                   * SUPER-GLOBAL PARAMETER *             00640000
  IN=SUPER-GLOBAL-IN             * TO BE ADDED IN FOLLOWING TABLE *     00650000
TABLE=IVP2                                                              00660000
  IN=PRE-IOACND-STEP             * COND ADDED BY PREVIOUS JOB *         00670000
  IN=GLOBAL-IN                   * TO BE ADDED IN FOLLOWING TABLE *     00680000
  GROUP-ENTITY=IVP                                                      00690000
   SCHEDULE-TAG=TAG0                                                    00700000
    DAYS=ALL                                                            00710000
   SCHEDULE-TAG=TAG1                                                    00720000
    DCAL=ALLDAYS                                                        00730000
   SCHEDULE-TAG=TAG2                                                    00740000
    WDAYS=2                                                             00750000
   SCHEDULE-TAG=*END                                                    00760000
    ONPGM                                                               00770000
     STEP=GROUPEND,CODES=OK                                             00780000
      DO=SHOUT                                                          00790000
      MSG='IVP2 GROUP ENDED'                                            00800000
   OUT=IVP2-STEP                                                        00810000
   OUT=(SUPER-GLOBAL-IN,ODAT,-)                                         00820000
   OUT=(GLOBAL-IN,ODAT,-)                                               00830000
   OUT=(PRE-IOACND-STEP,ODAT,-)                                         00840000
   DESC='CYCLIC JOB PROCESSING'                                         00850000
  MEMNAME=IVPJOB                                                        00860000
   SCHEDULE-TAG=TAG1                                                    00870000
   PREVENT-NCT2=Y                  * NOT VALID WITH STC *               00880000
   DESC='IVP JOB'                                                       00890000
   MAXWAIT=03                                                           00900000
   PRIORITY=*0                                                          00910000
   RESOURCE=(IVP-INIT,0001)        * TO BE ADDED IN FOLLOWING TABLE *   00920000
   SHOUT-WHEN=OK                   * VARIOUS SHOUTS *                   00930000
    MSG='IVP2 SHOUT-OK JOB ORDERID=%%ORDERID, GROUP=%%GROUP '           00940000
  MEMNAME=CYCJOB                   * CYCLIC JOB *                       00950000
   TASKTYP=CYC                                                          00960000
   MAXRERUN-CYC=3                  * RUN 3 TIMES, 1 MINUTE APART *      00970000
   INTERVAL=1                                                           00980000
   INTERVL-UNIT=M                                                       00990000
   WDAYS=ALL                                                            01000000
   RESOURCE=(IVP-INIT,0001)                                             01010000
   SHOUT-WHEN=OK                                                        01020000
    MSG='IVP2 SHOUT MSG FOR CYCLIC JOB %%JOBNAME, RERUN £=%%RN'         01030000
  MEMNAME=IOATEST                                                       01040000
    SCHEDULE-TAG=TAG0                                                   01050000
    TASKTYP=STC                                                         01060000
    MEMLIB=(*,PARM='WTO=IVP2:DELETE VARIOUS CONDS')                     01070000
    ONPGM                                                               01080000
     STEP=ANYSTEP                                                       01090000
     CODES=OK                                                           01100000
      DO=COND                                                           01110000
       CONDS=(SHORT-COND,STAT,-)                                        01120000
       CONDS=(LONG-CONDITION-XXXXXX,STAT,-)                             01130000
       CONDS=(ADD_ANOTHER_LONG_COND,STAT,-)                             01140000
    SHOUT-WHEN=EXECTIME                                                 01150000
     TIME=<010                                                          01160000
     MSG='IVP2 SHOUT-EXECTIME MSG - JOB RUNS LESS THAN 10 MIN'          01170000
TABLE=*END                                                              01180000
**                                                                      01190000
TABLE=IVP3                                                              01200000
  TASKTYP=STC           * EXECUTE ALL JOBS AS STARTED TASKS *           01210000
  SCHEDULE-TAG=TAG0     * COMMON SCHEDULE TAG FOR ALL JOBS  *           01220000
  GROUP-ENTITY=IVPCND                                                   01230000
   SCHEDULE-TAG=TAG0                                                    01240000
    DAYS=ALL                                                            01250000
   SCHEDULE-TAG=*END                                                    01260000
   IN=PRE-IOACND-STEP                                                   01270000
   OUT=POST-IOACND-STEP                                                 01280000
   DESC='ADD/CHECK TRIGGERING CONDITIONS'                               01290000
  MEMNAME=IOACND                                                        01300000
    MEMLIB=(*,PARM='ADD RESOURCE   IVP-INIT      0001')                 01310000
    ONPGM                                                               01320000
      STEP=ANYSTEP,CODES=C0008,DO=OK   * RESOURCE ALREADY EXISTS - OK * 01330000
  MEMNAME=IOACND                                                        01340000
    MEMLIB=(*,PARM='CHECK COND SHORT-COND STAT')                        01350000
  MEMNAME=IOACND                                                        01360000
   SETVAR=(%%CONDNM1=LONG-CONDITION-XXXXXX)                             01370000
   SETVAR=(%%PRM1='CHECK%%BLANK%%.COND%%BLANK.%%CONDNM1%%BLANK%%.STAT') 01380000
   MEMLIB=(*,PARM=%%PRM1)                                               01390000
  MEMNAME=IOACND                                                        01400000
   SETVAR=(%%CONDNM2=ADD_ANOTHER_LONG_COND)                             01410000
   SETVAR=(%%PRM2='CHECK%%BLANK%%.COND%%BLANK.%%CONDNM2%%BLANK%%.STAT') 01420000
   MEMLIB=(*,PARM=%%PRM2)                                               01430000
  MEMNAME=IOACND                                                        01440000
    MEMLIB=(*,PARM='ADD COND SUPER-GLOBAL-IN WDATE')                    01450000
  MEMNAME=IOACND                                                        01460000
    MEMLIB=(*,PARM='ADD COND       GLOBAL-IN WDATE')                    01470000
TABLE=*END                                                              01480000
**                                                                      01490000
  TASKTYP=STC           * EXECUTE ALL JOBS AS STARTED TASKS *           01500000
  SCHEDULE-TAG=TAG0     * COMMON SCHEDULE TAG FOR ALL JOBS  *           01510000
TABLE=IVP4                                                              01520000
  GROUP-ENTITY=IVPUTILS                                                 01530000
   SCHEDULE-TAG=TAG0                                                    01540000
    DAYS=ALL                                                            01550000
   SCHEDULE-TAG=*END                                                    01560000
   IN=IVP2-STEP                                                         01570000
   IN=POST-IOACND-STEP                                                  01580000
   ONPGM                                                                01590000
    STEP=GROUPEND,CODES=NOTOK                                           01600000
      DO=SHOUT                                                          01610000
        MSG='IVP4 GROUP ENDED NOTOK - IOATEST SETS HIGH RC=16'          01620000
      DO=COND                                                           01630000
        CONDS=IVP4-STEP              * ADD COND ON GROUP FAIL *         01640000
        CONDS=(IVP2-STEP,ODAT,-)                                        01650000
        CONDS=(POST-IOACND-STEP,ODAT,-)                                 01660000
   DESC='ISSUE OPER CMDS, SET JOB RC, RERUNS, IOALOG, REPTS'            01670000
  MEMNAME=IOAOPR                                                        01680000
    MEMLIB=(*,PARM='F CTMTROLM,SHOWPARM')                               01690000
  MEMNAME=IOATEST                                                       01700000
    MEMLIB=(*,PARM='TERM=C0008')                                        01710000
    ONPGM                                                               01720000
      STEP=ANYSTEP,CODES=C0008,DO=OK                                    01730000
  MEMNAME=IOATEST                                                       01740000
    MEMLIB=(*,PARM='TERM=C0016')                                        01750000
    MAXRERUN=2                                                          01760000
    ONPGM                                                               01770000
     STEP=ANYSTEP                                                       01780000
     CODES=EXERR                       * BM5341 *                       01790000
      DO=RERUN             * RERUN JOB 2 TIMES FOR A TOTAL OF 3 RUNS *  01800000
    SHOUT-WHEN=NOTOK                                                    01810000
    MSG='IVP4 %%JOBNAME %%JOBID %%$PGMSTEP %%$PRCSTEP %%JOBCC %%MAXRC§' 01820000
     URG=V                                                              01830000
    SHOUT-WHEN=RERUN                                                    01840000
     MSG='IVP4 %%$MEMNAME RERUN: TIME/DATE= %%TIME %%$ODATE(%%$JULDAY)' 01850000
  MEMNAME=IOANOTE                    * WRITE A NOTE TO IOA LOG *        01860000
    MEMLIB=(*,PARM='IVP4 - WRITE A MSG TO IOA LOG')                     01870000
  MEMNAME=CTMRNSC             * NIGHT SCHEDULE REPORT *                 01880000
    MEMLIB=*                                                            01890000
  MEMNAME=CTMRFLW             * CTMRFLW REPORT- SCHEDULE MEMBER*        01900000
    MEMLIB=(*,FLOWMEM=IVP6,PARM=SIMPL)                 BM10388          01910000
  MEMNAME=CTMRFLW             * CTMRFLW REPORT- AJF *                   01920000
    MEMLIB=(*,SOURCE=CKP,PARM=SIMPL)                   BM10388          01930000
TABLE=*END                                                              01940000
*                                                                       01950000
  TASKTYP=JOB                                                           01960000
  MEMLIB=DUMMY                                                          01970000
TABLE=IVP5                                                              01980000
  GROUP-ENTITY=IVPMCND                                                  01990000
   SCHEDULE-TAG=TAG0                                                    02000000
    DAYS=ALL                                                            02010000
   SCHEDULE-TAG=*END                                                    02020000
   IN=IVP4-STEP                                                         02030000
   OUT=(IVP4-STEP,ODAT,-)                                               02040000
   OUT=IVP5-STEP                                                        02050000
   ADJUST-CONDS=Y                                                       02060000
   DESC='MAYBE JOB PROCESSING, MANUAL CONDS'                            02070000
  MEMNAME=DUMMY1                * THIS JOB IS NEVER SCHEDULED *         02080000
    OUT=MANUAL-IN-COND          * NEVER ADDED - JOB NOT SCHEDULED *     02090000
    SHOUT-WHEN=OK                                                       02100000
       MSG='IVP5 - THIS SHOUT SHOULD NEVER BE PRODUCED'                 02110000
  MEMNAME=DUMMY2                            * CREATE MANUAL COND    *   02120000
    SCHEDULE-TAG=TAG0                                                   02130000
    IN=MANUAL-IN-COND                                                   02140000
    SHOUT-WHEN=OK                                                       02150000
       MSG='IVP5 -JOB RUNS, MANUAL-IN-COND IGNORED DUE TO ADJUST-CONDS' 02160000
  MEMNAME=DUMMY3    * JOB WAITS FOR REAL MANUAL COND - MANUALLY ADDED * 02170000
    SCHEDULE-TAG=TAG0                                                   02180000
    IN=REAL-MANUAL-IN-COND                                              02190000
  MEMNAME=IOALDNRS                   * CREATE NRS FILE       *          02200000
    SCHEDULE-TAG=TAG0                                                   02210000
    MEMLIB=*                                                            02220000
    TASKTYP=STC                                                         02230000
TABLE=*END                                                              02240000
  TASKTYP=STC           * EXECUTE ALL JOBS AS STARTED TASKS *           02250000
  SCHEDULE-TAG=TAG0     * COMMON SCHEDULE TAG FOR ALL JOBS  *           02260000
TABLE=IVP6              * TEST IOA ON-LINE FUNCTIONS VIA API*           02270000
  GROUP-ENTITY=IVPAPI                                                   02280000
   SCHEDULE-TAG=TAG0                                                    02290000
    DAYS=ALL                                                            02300000
   SCHEDULE-TAG=*END                                                    02310000
   IN=IVP5-STEP     * NOT SATISFIED UNTIL MANUAL COND IN DUMMY3 ADDED * 02320000
   OUT=(IVP5-STEP,ODAT,-)                                               02330000
** OUT=IVP6-STEP                                                        02340000
   DESC='CTM APPLICATION PGM INTERFACE'                                 02350000
  MEMNAME=CTMAPI                                                        02360000
    SETVAR=(%%PRM0=OID=%%çMçNO_APPLçIVPCNDçIOACNDçOID)                  02370000
    MEMLIB=(*,PARM='AJF FORCEOK %%PRM0')    * FORCE-OK JOB IN ERROR*    02380000
    OUT=API0A-OK                                                        02390000
  MEMNAME=IOATEST                                                       02400000
    IN=API0A-OK                                                         02410000
    OUT=(API0A-OK,ODAT,-)                                               02420000
    OUT=API0-OK                                                         02430000
    MEMLIB=(*,PARM='WAIT=0')        WAIT 0 SECS TO TAKE AFFECT          02440000
  MEMNAME=CTMAPI                     * SEARCH *                         02450000
    SETVAR=(%%PRM0=OID=%%çMçNO_APPLçIVPCNDçIOACNDçOID)                  02460000
    SETVAR=(%%PRM1=STATUS=END_OK_FOK)                                   02470000
    MEMLIB=(*,PARM='SEARCH %%PRM0 %%PRM1')                              02480000
    IN=API0-OK                                                          02490000
    OUT=(API0-OK,ODAT,-)                                                02500000
    OUT=API1-OK                                                         02510000
  MEMNAME=CTMAPI                                   HOLD JOB/GRP         02520000
    IN=API1-OK                                                          02530000
    OUT=(API1-OK,ODAT,-)                                                02540000
    OUT=API2-OK                                                         02550000
    SETVAR=(%%PRM0=OID=%%çMçNO_APPLçIVPCNDçIOACNDçOID)                  02560000
    SETVAR=(%%PRM1=IF%%BLANK%%.OID=%%çMçNO_APPLçIVPCNDçIOACNDçOID)      02570000
    SETVAR=(%%PRM2=STATE=FREE)                                          02580000
    MEMLIB=(*,PARM='AJF HOLD %%PRM0 %%PRM1 %%PRM2')                     02590000
  MEMNAME=IOATEST                                                       02600000
    IN=API2-OK                                                          02610000
    OUT=(API2-OK,ODAT,-)                                                02620000
    OUT=API3-OK                                                         02630000
    MEMLIB=(*,PARM='WAIT=0')        WAIT 0 SECS TO TAKE AFFECT          02640000
  MEMNAME=CTMAPI                                                        02650000
    IN=API3-OK                                                          02660000
    OUT=(API3-OK,ODAT,-)                                                02670000
    OUT=API4-OK                                                         02680000
    SETVAR=(%%PRM0=OID=%%çMçNO_APPLçIVPCNDçIOACNDçOID)                  02690000
    SETVAR=(%%PRM1=STATUS=NOT_DELETED)                                  02700000
    MEMLIB=(*,PARM='AJF DELETE %%PRM0 %%PRM1')       DELETE             02710000
  MEMNAME=IOATEST                                                       02720000
    IN=API4-OK                                                          02730000
    OUT=(API4-OK,ODAT,-)                                                02740000
    OUT=API5-OK                                                         02750000
    MEMLIB=(*,PARM='WAIT=0')        WAIT 0 SECS TO TAKE AFFECT          02760000
  MEMNAME=CTMAPI                                                        02770000
    IN=API5-OK                                                          02780000
    OUT=(API5-OK,ODAT,-)                                                02790000
    OUT=API6-OK                                                         02800000
    SETVAR=(%%PRM0=OID=%%çMçNO_APPLçIVPCNDçIOACNDçOID)                  02810000
    MEMLIB=(*,PARM='AJF UNDELETE %%PRM0 STATUS=DEL')       UNDELETE     02820000
  MEMNAME=IOATEST                                                       02830000
    IN=API6-OK                                                          02840000
    OUT=(API6-OK,ODAT,-)                                                02850000
    OUT=API7-OK                                                         02860000
    MEMLIB=(*,PARM='WAIT=0')        WAIT 0 SECS TO TAKE AFFECT          02870000
  MEMNAME=CTMAPI                                   FREE                 02880000
    IN=API7-OK                                                          02890000
    OUT=(API7-OK,ODAT,-)                                                02900000
    OUT=API8-OK                                                         02910000
    SETVAR=(%%PRM0=OID=%%çMçNO_APPLçIVPCNDçIOACNDçOID)                  02920000
    SETVAR=(%%PRM1=IF%%BLANK%%.OID=%%çMçNO_APPLçIVPCNDçIOACNDçOID)      02930000
    SETVAR=(%%PRM2=STATE=HOLD)                                          02940000
    MEMLIB=(*,PARM='AJF FREE %%PRM0 %%PRM1 %%PRM2')                     02950000
  MEMNAME=à£$DUMY        * DUMMY REQUIRES CONFIRMATION *                02960000
    TASKTYP=JOB                                                         02970000
    IN=API8-OK                                                          02980000
    OUT=(API8-OK,ODAT,-)                                                02990000
    MEMLIB=DUMMY                                                        03000000
    CONFIRM=Y                                                           03010000
  MEMNAME=CTMAPI                                                        03020000
    SETVAR=(%%PRM0=MEM=à£$DUMY)                                         03030000
    SETVAR=(%%PRM1=IF%%BLANK%%.MEM=à£$DUMY%%BLANK%%.STATUS=EXIST)       03040000
    MEMLIB=(*,PARM='AJF CONFIRM %%PRM0 %%PRM1')     CONFIRM             03050000
  MEMNAME=CTMAPI                                                        03060000
    DESC='SET A GLOBAL AUTO-EDIT VAR USING CTMAPI SETCKP'               03070000
    SETVAR=(%%PRM1=PRODUCT=M%%BLANK%%.MEMBER=API)                       03080000
    SETVAR=(%%PRM2=VAR=%%çGBL-SET%%BLANK%%.VALUE=API)                   03090000
    MEMLIB=(*,PARM='GLOBAL SETCKP %%PRM1 %%PRM2')   SETCKP              03100000
//                                                                      03110000

./ ADD NAME=IVPUTIL
//IVPUTIL  JOB   (ACCT£),
//         'PGMRNAME',
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1),
//         NOTIFY=,
//         TIME=30,
//         USER=,GROUP=,PASSWORD=
//*                                                           /*JCTRL*/
//*
//* 5751-CS9
//* COPYRIGHT IBM CORP. 1996, 2017
//********************************************************************
//*
//*
//* Module name: IVPUTIL
//*
//* Purpose:
//*         SKEL
//*
//* Author: CSAHA    Date:15 Jan 2007 Change£: DMK12138
//*
//* Change History:
//*
//* dd/mm/yyyy  Who     CC£      - Change description
//*
//* 10/05/2017  Priyap  DMS18257 - RTC defect 1485308fix
//*                                Commented the step LIST16
//*
//* 13/06/2017  Priyap  DMS18295 - RTC defect 1508230 fix
//*                                Revert the changes done in DMS18257
//*
//* 06/05/2021  MANUP   DMU20292 - Bug CB-14755 Increase DUMPOUT size.
//*
//*********************************************************************
//*
//* LIB: SYS3.ZOS205.CPAC.IVPLIB(IVPUTIL)
//* DOC: THIS JOB STREAM IS A TEST STREAM TO TEST VARIOUS UTILITIES
//* WARNING: THIS JOB MAY EXCEED 1 MINUTE OF CPU TIME.
//*
//*      .PROGM1 USES IEFBR14 TO ALLOCATE TWO SEQUENTIAL
//*      .      AND TWO PARTITIONED DATA SETS THAT ARE
//*      .      USED BY LATER STEPS.
//*      .IEBDG2 USES IEBDG TO GENERATE DATA TO &IPOSEQA FOR
//*      .      LATER STEPS.
//*      .GENER3 USES IEBGENER TO COPY &IPOSEQA TO
//*      .      &IPOSEQB.
//*      .COMPR4 USES IEBCOMPR TO COMPARE &IPOSEQA TO
//*      .      &IPOSEQB.
//*      .GENER5 USES IEBGENER TO GENERATE MEMBERS IN THE
//*      .      &IPOPDSA DATA SET.
//*      .COPY6 USES IEBCOPY TO COPY &IPOPDSA TO
//*      .      &IPOPDSB.
//*      .COMPR7 USES IEBCOMPR TO COMPARE &IPOPDSA TO
//*      .      &IPOPDSB.
//*      .PTPCH8 USES IEBPTPCH TO PRINT THE MEMBERS OF
//*      .      &IPOPDSB.
//*      .PROGM13 USES IEFBR14 TO DELETE ALL ALLOCATED DATA SETS.
//*      .SMF14 USES IFASMFDP TO DUMP THE SMF DATASETS.
//*             COND CODE OF 4 IS OKAY
//*      .STATR15 USES IFHSTATR AGAINST THE DUMPED SMF DATA.
//*
//PROGM1  EXEC PGM=IEFBR14,REGION=512K
//SYSPRINT DD  SYSOUT=*
//IPOSEQA  DD  DSN=&IPOSEQA,
//             SPACE=(CYL,(1,1),,,ROUND),
//             UNIT=SYSALLDA,
//             DISP=(NEW,PASS,DELETE)
//IPOSEQB  DD  DSN=&IPOSEQB,
//             SPACE=(CYL,(1,1),,,ROUND),
//             UNIT=SYSALLDA,
//             DISP=(NEW,PASS,DELETE)
//IPOPDSA  DD  DSN=&IPOPDSA,
//             SPACE=(CYL,(1,1,5),,,ROUND),
//             UNIT=SYSALLDA,
//             DISP=(NEW,PASS,DELETE)
//IPOPDSB  DD  DSN=&IPOPDSB,
//             SPACE=(CYL,(1,1,5),,,ROUND),
//             UNIT=SYSALLDA,
//             DISP=(NEW,PASS,DELETE)
//SYSIN    DD  DUMMY
/*
//IEBDG2  EXEC PGM=IEBDG,REGION=512K,COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//IPOSEQO  DD  DSN=&IPOSEQA,
//             DCB=(RECFM=FB,LRECL=78,BLKSIZE=780),
//             DISP=(OLD,PASS,DELETE)
//SYSIN    DD  *
      DSD      OUTPUT=(IPOSEQO)
      FD       NAME=FIELD,LENGTH=78,STARTLOC=1,FORMAT=AL,ACTION=RP
      CREATE   QUANTITY=100,NAME=FIELD,FILL=' '
      END
/*
//GENER3  EXEC PGM=IEBGENER,REGION=512K,COND=(4,LT)
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=&IPOSEQA,
//             DISP=(OLD,PASS,DELETE)
//SYSUT2   DD  DSN=&IPOSEQB,
//             DISP=(OLD,PASS,DELETE)
//SYSIN    DD  DUMMY
/*
//COMPR4  EXEC PGM=IEBCOMPR,COND=(4,LT),REGION=512K
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=&IPOSEQA,
//             DISP=(OLD,PASS,DELETE)
//SYSUT2   DD  DSN=&IPOSEQB,
//             DISP=(OLD,PASS,DELETE)
//SYSIN    DD  *
      COMPARE
/*
//GENER5  EXEC PGM=IEBGENER,COND=(4,LT),REGION=512K
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=&IPOSEQA,
//             DISP=(OLD,PASS,DELETE)
//SYSUT2   DD  DSN=&IPOPDSA,
//             DCB=(RECFM=FB,LRECL=78,BLKSIZE=780),
//             DISP=(OLD,PASS,DELETE)
//SYSIN    DD  *
      GENERATE MAXNAME=20,MAXGPS=10
      MEMBER   NAME=(M001,AMEMBER)
      RECORD   IDENT=(1,'J',1)
      MEMBER   NAME=(M002,BMEMBER)
      RECORD   IDENT=(1,'T',1)
      MEMBER   NAME=(M003,CMEMBER)
      RECORD   IDENT=(1,'D',1)
      MEMBER   NAME=(M004,DMEMBER)
      RECORD   IDENT=(1,'N',1)
      MEMBER   NAME=(M005,EMEMBER)
      RECORD   IDENT=(1,'Y',1)
      MEMBER   NAME=(M006,FMEMBER)
      RECORD   IDENT=(1,'H',1)
      MEMBER   NAME=(M007,GMEMBER)
      RECORD   IDENT=(1,'R',1)
      MEMBER   NAME=(M008,HMEMBER)
      RECORD   IDENT=(1,'B',1)
      MEMBER   NAME=(M009,IMEMBER)
      RECORD   IDENT=(1,'L',1)
      MEMBER   NAME=(M010,KMEMBER)
      RECORD   IDENT=(1,'V',1)
/*
//COPY6   EXEC PGM=IEBCOPY,COND=(4,LT),REGION=512K
//SYSPRINT DD  SYSOUT=*
//INDD     DD  DSN=&IPOPDSA,
//             DCB=(RECFM=FB,LRECL=78,BLKSIZE=780),
//             DISP=(OLD,PASS,DELETE)
//OUTDD    DD  DSN=&IPOPDSB,
//             DCB=(RECFM=FB,LRECL=78,BLKSIZE=780),
//             DISP=(OLD,PASS,DELETE)
//SYSIN    DD  *
      COPY     OUTDD=OUTDD,INDD=INDD
/*
//COMPR7  EXEC PGM=IEBCOMPR,COND=(4,LT),REGION=512K
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=&IPOPDSA,
//             DISP=(OLD,PASS,DELETE)
//SYSUT2   DD  DSN=&IPOPDSB,
//             DISP=(OLD,PASS,DELETE)
//SYSIN    DD  *
      COMPARE  TYPORG=PO
/*
//PTPCH8  EXEC PGM=IEBPTPCH,COND=(4,LT),REGION=512K
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=&IPOPDSB,
//             DISP=(OLD,PASS,DELETE)
//SYSUT2   DD  SYSOUT=*
//SYSIN    DD  *
      PRINT    MAXFLDS=11,MAXNAME=11,TYPORG=PO
      MEMBER   NAME=M001
      RECORD   FIELD=(78)
      MEMBER   NAME=M002
      RECORD   FIELD=(78)
      MEMBER   NAME=M003
      RECORD   FIELD=(78)
      MEMBER   NAME=M004
      RECORD   FIELD=(78)
      MEMBER   NAME=M005
      RECORD   FIELD=(78)
      MEMBER   NAME=M006
      RECORD   FIELD=(78)
      MEMBER   NAME=M007
      RECORD   FIELD=(78)
      MEMBER   NAME=M008
      RECORD   FIELD=(78)
      MEMBER   NAME=M009
      RECORD   FIELD=(78)
      MEMBER   NAME=M010
      RECORD   FIELD=(78)
/*
//IEFBR13 EXEC PGM=IEFBR14,COND=(4,LT),REGION=512K
//SYSPRINT DD  SYSOUT=*
//DD1      DD  DSN=&IPOSEQA,
//             DISP=(OLD,DELETE,DELETE)
//DD2      DD  DSN=&IPOSEQB,
//             DISP=(OLD,DELETE,DELETE)
//DD3      DD  DSN=&IPOPDSA,
//             DISP=(OLD,DELETE,DELETE)
//DD4      DD  DSN=&IPOPDSB,
//             DISP=(OLD,DELETE,DELETE)
//SYSIN    DD  DUMMY
/*
//SMF14   EXEC PGM=IFASMFDP,COND=(4,LT),REGION=512M
//INDD1    DD  DSN=SYS1.MAN1,
//             DISP=SHR
//INDD2    DD  DSN=SYS1.MAN2,
//             DISP=SHR
//INDD3    DD  DSN=SYS1.MAN3,
//             DISP=SHR
//SYSPRINT DD  SYSOUT=*
//DUMPOUT  DD  DSN=&SMFDATA,
//             DISP=(,PASS,DELETE),
//             UNIT=SYSALLDA,SPACE=(CYL,(140),,,ROUND),
//             DCB=(RECFM=VBS,LRECL=32756,BLKSIZE=4096)
//SYSIN    DD  *
               INDD(INDD1,OPTIONS(DUMP))
               INDD(INDD2,OPTIONS(DUMP))
               INDD(INDD3,OPTIONS(DUMP))
/*
//STATR15 EXEC PGM=IFHSTATR,COND=(4,LT),REGION=512K
//SYSUT1   DD  DSN=&SMFDATA,
//             DISP=(OLD,DELETE),
//             DCB=(RECFM=VBS,LRECL=32756,BLKSIZE=32760)
//SYSUT2   DD  SYSOUT=*
/*
//* DMS18295 changes
//LIST16  EXEC PGM=IEHLIST,COND=(4,LT),REGION=512K
//DD2      DD  DISP=SHR,UNIT=3390,VOL=SER=ZOS205
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
      LISTVTOC FORMAT,VOL=3390=ZOS205
      LISTPDS  DSNAME=SYS1.NUCLEUS,VOL=3390=ZOS205
/*

./ ADD NAME=JCMDJES2
//IEFBR14   JOB ACCT£,                                                  00000101
//             MVS,                                                     00000201
//             NOTIFY=&SYSUID,                                          00000301
//             MSGLEVEL=(1,1)                                           00000401
// COMMAND '                                                            00000501
//$PURGE JOB IEBUPD* SUP TO 7 DAYS                                      00000701
// COMMAND '$CO JQ,ALL,A>7,JM=IEBUPD*                                   00000801
JES2 CANCELS THE SPECIFIED OUTPUT GROUP.                                00000901
            $C O J'FRED',OUTGRP=1.1.1                                   00001001
JES2 CANCELS ALL CLASS B OUTPUT DESTINED FOR REMOTE WORKSTATION 1.      00001101
            $C O JQ,Q=B,R=R1                                            00001201
JES2 CANCELS ALL OUTPUT IN THE SYSTEM MORE THAN 8 DAYS OLD.             00001301
            $C O JQ,ALL,A>8                                             00001401
JES2 CANCELS ALL CLASS OUTPUT IN CLASSES B AND K DESTINED FOR DENVER. (D00001501
            $C O JQ,R=DENVER,Q=BK                                       00001601
JES2 CANCELS THE TRANSACTION JOB NAME OF TESTJOB AND TRANSACTION JOB ID 00001701
            $CO S'ASCHINT',TPJOBN=TESTJOB,TPJOBID=A0000014,PROTECT      00001801
JES2 CANCELS ALL OUTPUT IN THE SYSTEM WITH A JOB CORRELATOR USER PORTION00001901
            $C O JQ,JC=*:*APPLICATIONXYZTESTRUN*                        00002001
            $OJQ,A>7,CANCEL                                             00002101
            $OJOB,Q=ALL,CANCEL,JM=AMIDBC*                               00002201
            $OJOB,Q=ALL,CANCEL,JM=MSG452*                               00003001
            $O JOB,ALL,CANCEL,JM=MSJ452*                                00010001
              JOBQ,ALL,CANCEL                                           00020001
              JQ,ALL,CANCEL                                             00030001
              STC,ALL,CANCEL                                            00040001
              TSU,ALL,CANCEL                                            00050001
              NN                                                        00060001
            - MM                                                        00070001
            *                                                           00080001
            ,                                                           00090001
            /                                                           00100001
            , BURST= NO                                                 00140001
            $PO JQ,ALL,A>7                                              00150001
//DELETE   EXEC PGM=IEFBR14                                             00160001

./ ADD NAME=JCMDMVS
//IEFBR14   JOB ACCT£,                                                  00001000
//             MVS,                                                     00002000
//             NOTIFY=&SYSUID,                                          00003000
//             MSGLEVEL=(1,1)                                           00004000
// COMMAND '                                                            00004108
//*CHANGING OUT OF LINE DISPLAY AREA SPECIFICATIONS? ON PAGE     203    00004214
// COMMAND 'K A                                                         00004314
//*DELETING RETAINED ACTION MESSAGES? ON PAGE 204                       00004414
// COMMAND 'K C                                                         00004514
//*HALTING THE PRINTING OR THE DISPLAY OF A STATUS DISPLAY?     ON      00004614
// COMMAND 'K C,D                                                       00004714
//*CONTROLLING DISPLAYS IN AREAS? ON PAGE 206                           00004814
// COMMAND 'K D                                                         00004914
//*REMOVING INFORMATION FROM THE SCREEN? ON PAGE 207                    00005014
// COMMAND 'K E                                                         00005114
//*ACTIVATING, DEACTIVATING, OR DISPLAYING THE STATUS OF     TH         00005214
// COMMAND 'K M,AMRF                                                    00005314
//*SETTING THE APPLID OF THE SYSTEM? ON PAGE 212                        00005414
// COMMAND 'K M,APPLID                                                  00005514
//*SETTING OR TURNING OFF THE VTAM GENERIC RESOURCE     NAME            00005614
// COMMAND 'K M,GENERIC                                                 00005714
//*CHANGING OR DISPLAYING THE NUMBER OF ALLOWED WTL     SYSLO           00005814
// COMMAND 'K M,LOGLIM                                                  00005914
//*CHANGING OR DISPLAYING THE NUMBER OF ALLOWED WTO AND     WTO         00006014
//*IEE156I K INVALID OPERAND -MLIM   IEA404A                            00006116
// COMMAND 'K M,MLIM=3000                                               00006216
//*DISPLAYS THE CURRENT VALUES OF ALL THE OPERANDS ON THE K M COMMAND   00006416
// COMMAND 'K M,REF                                                     00006516
//*CHANGING THE TIME THE SYSTEM WAITS FOR ROUTE     COMMAND             00006616
// COMMAND 'K M,ROUTTIME                                                00006716
//*INCREASING THE MAXIMUM NUMBER OF REPLY IDS? ON PAGE 211              00006816
// COMMAND 'K M,RMAX                                                    00006916
//*CHANGING OR DISPLAYING THE STATUS OF WTO INSTALLATION     E          00007016
// COMMAND 'K M,UEXIT                                                   00007116
//*CHANGING A PFK DEFINITION? ON PAGE 214                               00007216
// COMMAND 'K N,PFK                                                     00007316
//*DELETING MESSAGE QUEUES? ON PAGE 215                                 00007416
// COMMAND 'K Q                                                         00007516
//*CHANGING OR DISPLAYING MESSAGE DELETION AND FORMAT     SPECIFICAT    00007616
// COMMAND 'K S                                                         00007716
//*CHANGING THE OPERATING MODE OF A CONSOLE? ON PAGE 219                00007816
// COMMAND 'K V                                                         00007916
//*DISPLAYING CONTROL COMMAND FUNCTIONS (C,K)                           00008016
// COMMAND 'D C,K,L=CONSNSNAME                                          00008116
// COMMAND 'D C,KEY=SYSCONS                                             00008216
// COMMAND 'D C,CB=SYSCONS                                              00008316
//*TCPIP DISPLAY PORT                                                   00008431
//* D TCPIP,,NETSTAT,PORTLIST                                           00008516
//*DLF   DISPLAY RESOURCE                                               00008631
//          D DLF,RES=(SYSDSN,*)                                        00008716
//*DISPLAY DUMP                                                         00008816
// COMMAND 'D D,ST                                                      00008916
// COMMAND 'D D,OPTIONS                                                 00009016
// COMMAND 'D D,                                                        00009116
// COMMAND 'D D,TITLE,AUTODSN=ALL                                       00009216
// COMMAND 'D D,ERRDATA                                                 00009316
// COMMAND 'D D,       ,DSN=ALL                                         00009416
// COMMAND 'D D,DUMPID=XXX                                              00009516
//*REQUESTS A SYSTEM DUMP (SVC DUMP) OF VIRTUAL STORAGE                 00009621
// COMMAND 'DUMP COMM='TEST RAYMOND',PARMLIB=01                         00009721
// COMMAND 'DUMP TITLE='TEST RAYMOND',PARMLIB=01                        00009821
            DUMP {COMM|TITLE}={(TITLE)|'TITLE'|"TITLE"}[,PARMLIB={XX|(XX00009921
            DUMP {COMM|TITLE}={(TITLE)|'TITLE'|"TITLE"}[,PARMLIB={XX|(XX00010021
            PARMLIB={XX|(XX[,XX?])}[,SYMDEF=(SYMDEF[,SYMDEF?])]         00010121
//*SET UP AND ALTER THE CONFIGURATION OF AUTOMATIC DUMP DATA SET ALLOCAT00010221
//*ADDING SYSTEM DUMP RESOURCES                                         00010321
// COMMAND 'DUMPDS ADD,DSN=                                             00010426
//*ENABLING AND DISABLING AUTOMATIC DUMP DATA SET ALLOCATION            00010521
// COMMAND 'DUMPDS ALLOC=ACTIVE                                         00010626
//*MAKING DUMP DATA SETS READY TO RECEIVE DUMPS                         00010721
// COMMAND 'DUMPDS CLEAR                                                00010821
//*DELETING SYSTEM DUMP RESOURCES                                       00010921
// COMMAND 'DUMPDS DEL                                                  00011021
//*SETTING THE NAME-PATTERN FOR DUMP DATA SETS                          00011121
// COMMAND 'DUMPDS NAME=SYS1.DUMP.D&YYMMDD..T&HHMMSS..&SYSNAME..S&SEQ.  00011226
// COMMAND '                                                            00011421
// COMMAND 'D GRS,RES=(*,SYS3.CA.NM.ALERTH)'                            00011521
// COMMAND 'D GRS,RES=(SYSDSN,SYSRAY*)                                  00011621
//*                                                                     00011721
//*DISPLAYING OPERATOR INFORMATION (OPDATA)                             00011821
// COMMAND 'D O,PREFIX'                                                 00011921
// COMMAND 'D O,MONITOR'                                                00012021
//                                                                      00012121
//*PROG APF                                                             00012228
// COMMAND 'D PROG,APF,ALL'                                             00012328
// COMMAND 'D PROG,APF,DSNAME=SYS1.LINKLIB'                             00012428
//*PROG DEFAULTS (PROG,DEFAULTS)                                        00012529
// COMMAND 'D PROG,DEFAULTS'                                            00012628
//*DYNAMIC EXITS (PROG,EXIT)                                            00012729
// COMMAND 'D PROG,EXITS,EXITNAME=                                      00012828
// COMMAND 'D PROG,EXITS,MODNANE=                                       00012928
// COMMAND 'D PROG,EXITS,ALL                                            00013028
// COMMAND 'D PROG,EXITS,INSTALLATION'                                  00013128
// COMMAND 'D PROG,EXITS,PROGRAM'                                       00013228
// COMMAND 'D PROG,EXITS,NOTPROGRAM'                                    00013328
//*LNKLST INFORMATION (PROG,LNKLST)                                     00013529
// COMMAND 'D PROG,LNKLST'                                              00013628
// COMMAND 'D PROG,LNKLST,NAMES                                         00013729
//*LPA INFORMATION (PROG,LPA)                                           00013831
// COMMAND 'D PROG,LPA'                                                 00013929
//*THE STATUS OF THE REFRPROT OPTION                                    00014031
// COMMAND 'D PROG,REFRPROT                                             00014131
//*THE STATUS OF THE TRACKDIRLOAD OPTION  (PROG,TRACKDIRLOAD)....       00014229
// COMMAND 'D PROG,TRACKDIRLOAD                                         00014331
//*SYSTEM REQUESTS (R). 386                                             00014429
//*RESOURCE RECOVERY SERVICES (RRS) INFORMATION (RRS)..391              00014529
//*SLIP TRAP INFORMATION (SLIP). 394                                    00014629
//*SMF DATA (SMF)........ 395                                           00014729
//*THE IN-STORAGE COPY OF THE SMF LIMITS (SMFLIM)......... 396          00014829
//*STORAGE MANAGEMENT SUBSYSTEM INFORMATION (SMS).. 399                 00014929
//*DEVICE STATUS AND ALLOCATION (U).........423                         00015229
//* COMMAND 'D U,DASD,ONLINE,,9999'                                     00015329
//*SMS DISPLAY VOLUME STORAGEGROUP                                      00015430
//*COMMAND 'DS SMS,5414                                                 00015530
//*COMMAND 'DS P,5414                                                   00015631
//*         DS P ,[/|S][D]DDD[,NNN][,NOSYM|,NOS][,DUMP]+                00015729
//*         [,ONLINE] [,ON] [,OFF] [,OFFLINE] [,L={NAME-A}]             00015829
//*         {NAME }                                                     00015929
//*         {A }                                                        00016029
//*         {SMS | S} ,[DDDD[,NN] [ ,ONLINE ] [,L={NAME-A}]             00016129
//*         |,ON {NAME }                                                00016229
//*         |,OFFLINE {A }                                              00016329
//*         |,OFF                                                       00016429
   {QDASD},{? }                                                         00016529
//*COMMAND 'DS QD,VOL=VATS05'                                           00016629
//*COMMAND 'DS QD,VOL=VATS05,NOIO,UCB,DCE,SSSCB,DPCT'                   00016729
//*{QD } {{[S]DDDD[,1]|,VOL=VATS05}[,NOIO{[,UCB][,DCE][,SSSCB][,DPCT]}] 00016829
//*{QD } {{[S]DDDD[,1]|,VOL=VOLSER}[,NOIO{[,UCB][,DCE][,SSSCB][,DPCT]}] 00016929
//*{QD } {{[S]DDDD[,1]|,VOL=VOLSER}[,NOIO{[,UCB][,DCE][,SSSCB][,DPCT]}] 00017029
//*            |[[,UCB][,DCE][,SSSCB][,DPCT]+                           00017129
//*            [,RDC][,RCD][,SNSS]                                      00017229
//*            [,RDFEATS][,SFICB][,QHA{[,HEX]                           00017329
//*            [,ONLINE][,OFFLINE][,RSV|RESERVED]}]                     00017429
//*            {[S]DDDD,NNN [ ,MACH={MMPP-SSSSS|XXXX-SSSSS}]}           00017529
//*            |,SSID={SSID | ALL}                                      00017629
//*            |,TYPE={TYPE | ALL}                                      00017729
//*            |,CHPID=CHPID                                            00017829
//*            {MACH={MMPP-SSSSS|XXXX-SSSSS}[,ZHL[,HEX]] }              00017929
//*            {SSID={SSID | ALL} }                                     00018029
//*            {TYPE={TYPE | ALL} }                                     00018129
//*            DS P ,[/|S][D]DDD[,NNN][,NOSYM|,NOS][,DUMP]+             00018229
//*            DS QD,VOL=DISS0A                                         00018329
//*COMMAND 'DS QD,                                                      00018429
//*COMMAND 'DS QD,A666'                                                 00018529
//*COMMAND 'DS QD,VOL=DISS0A' ,DDDD[,NNN]] }                            00018629
//*COMMAND 'DS QD,VOL=VOLSER[ ,DDDD[,NNN]] }                            00018729
   ONLINE][,OFFLINE][,DEFINED][,CHKFAIL][,VALIDATE][,TOTALCYL][,ATTRIBUT00018829
            {QTAPE | QT}[,? |                                           00018929
            [ [ [,CCUU [,1] ] [ [,UCB] [,DCE][ [,NOIO] | [,RDC]         00019029
            [,RCD] | [,QHA] ] ] ] | ,CCUU,NNN |                         00019129
            [,CCUU,NNN] ,LIB=LIBID | ALL |                              00019229
            ,MACH=[MMPP-SSSSS | XXXX-SSSSS] |                           00019329
            ,TYPE=[TYPE | ALL] ]                                        00019429
            [,ONLINE] [,OFFLINE] [,DEFINED] [,HEX]                      00019529
            {QPAVS | QP}                                                00019629
            {,?}                                                        00019729
            {,SDDDD[,1] [ ,VOLUME] }                                    00019829
            |,UNBOX                                                     00019929
            |[ [,HPAV] [,UCB] [,DCE] ]                                  00020029
            {,SDDDD[,NNN] [,SSID=SSID |,UNBOX] }                        00020129
            [QLIB | QL],                                                00020229
            [LIST] {ACTIVE|INACTIVE|QUEUE}                              00020329
            [LIST] {ACTIVE|INACTIVE|QUEUE}                              00020429
            [LISTALL] {ACTIVE|INACTIVE}                                 00020529
            [LIBID] {ACTIVE|INACTIVE|VALIDATE|QUEUE|DELETE}             00020629
            [DDDD] {SS}                                                 00020729
            [DDR]                                                       00020829
            [CATS | CATS(XXX*)]                                         00020929
            [IEA438I]                                                   00021029
                                                                        00021129
//*COMMAND '                                                            00021729
//*INFORMATION ABOUT ALL SUBSYSTEMS (SSI)......... 416                  00021831
//*STATIC SYSTEM SYMBOLS (SYMBOLS).... 418                              00021931
//*THE LOCAL AND COORDINATED UNIVERSAL TIME AND DATE    (T)........     00022031
//*COMPONENT OR TRANSACTION TRACE STATUS (TRACE).........419            00022131
   UNICODE SERVICES (UNI)......... 426                                  00022231
   VIRTUAL STORAGE INFORMATION (VIRTSTOR,HVSHARE).....428               00022331
   VIRTUAL STORAGE INFORMATION (VIRTSTOR,HVSHARE).....428               00022431
   WORKLOAD MANAGER INFORMATION (WLM)........... 429                    00022531
   CROSS SYSTEM COUPLING FACILITY (XCF) INFORMATION           (XCF).....00022631
//*ARM RESTARTS ARE NOT ENABLED                                         00022729
//*COMMAND 'D XCF,ARMSTATUS,CURRSYS=LP2,DETAIL'                         00022829
ELEMENT NAME     STATE        CURR SYS INIT SYS JOBNAME  ASID   LEVEL   00022929
AIR_BRN2002C     AVAILABLE    BRN2     BRN2     PFA      002C       0   00023029
DB2$DB2P         AVAILABLE    BRN2     BRN2     DB2PMSTR 004F       0   00023129
EZAN2TCPBRN2     AVAILABLE    BRN2     BRN2     TCPBRN2  0028       0   00023229
EZAN2TCPPROD     AVAILABLE    BRN2     BRN2     TCPPROD  0029       0   00023329
IRLP001          AVAILABLE    BRN2     BRN2     DB2PIRLM 0051       0   00023429
ISFSDSFàN2       AVAILABLE    BRN2     BRN2     SDSF     002D       2   00023529
NETàHOST02       AVAILABLE    BRN2     BRN2     NET2     0020       0   00023629
SYS_RRS_BRN2     AVAILABLE    BRN2     BRN2     RRS      0049       0   00023729
SYSCICS_A01CICSV AVAILABLE    BRN2     BRN2     CICSVIDO 00A7       0   00023829
SYSCICS_CICSADMI AVAILABLE    BRN2     BRN2     CICSADMI 00A1       0   00023929
SYSCICS_CICSBIPE AVAILABLE    BRN2     BRN2     CICSBIPE 009E       0   00024029
SYSCICS_CICSDATA AVAILABLE    BRN2     BRN2     CICSDATA 010F       0   00024129
SYSCICS_CICSECLR AVAILABLE    BRN2     BRN2     CICSECLR 00CD       0   00024229
SYSCICS_CICSVIDW AVAILABLE    BRN2     BRN2     CICSVIDW 00AC       0   00024329
SYSCICS_PLEXMASP AVAILABLE    BRN2     BRN2     PLEXMASP 008A       0   00024429
SYSCICS_PLEXWUIP AVAILABLE    BRN2     BRN2     PLEXWUIP 009C       0   00024529
SYSCICS_P02CICSR AVAILABLE    BRN2     BRN2     CICSRLT  00A8       0   00024629
SYSICSF_BRN2     AVAILABLE    BRN2     BRN2     CSF      0027       0   00024729
SYSMQCHBIPP      AVAILABLE    BRN2     BRN2     BIPPCHIN 0054       0   00024829
SYSMQCHCSQP      AVAILABLE    BRN2     BRN2     CSQPCHIN 0061       0   00024929
SYSMQCHCTB1      AVAILABLE    BRN2     BRN2     CTB1CHIN 005E       0   00025029
SYSMQCHQMDP      AVAILABLE    BRN2     BRN2     QMDPCHIN 0060       0   00025129
SYSMQCHQPAP      AVAILABLE    BRN2     BRN2     QPAPCHIN 005D       0   00025229
SYSMQCHTUXP      AVAILABLE    BRN2     BRN2     TUXPCHIN 005C       0   00025329
SYSMQMGRBIPP     AVAILABLE    BRN2     BRN2     BIPPMSTR 0058       0   00025429
SYSMQMGRCSQP     AVAILABLE    BRN2     BRN2     CSQPMSTR 0055       0   00025529
SYSMQMGRCTB1     AVAILABLE    BRN2     BRN2     CTB1MSTR 0057       0   00025629
SYSMQMGRQMDP     AVAILABLE    BRN2     BRN2     QMDPMSTR 0056       0   00025729
SYSMQMGRQPAP     AVAILABLE    BRN2     BRN2     QPAPMSTR 0059       0   00025829
SYSMQMGRTUXP     AVAILABLE    BRN2     BRN2     TUXPMSTR 005A       0   00025929
//*COMMAND 'D XCF,GROUP,AMIRTCSR                                        00026029
//*COMMAND 'D XCF,GROUP,BBCMF630                                        00026129
//*COMMAND 'D XCF,GROUP,BMCAOPLX                                        00026229
//*COMMAND 'D XCF,GROUP,DBCPLEX1                                        00026329
//*COMMAND 'D XCF,GROUP,HSFIXC                                          00026429
//*COMMAND 'D XCF,GROUP,ISTCFS01                                        00026529
//*COMMAND 'D XCF,GROUP,SYSIEFTS                                        00026629
//*COMMAND 'D XCF,GROUP,SYSIKJBC                                        00026729
//*COMMAND 'D XCF,GROUP,SYSJES                                          00026829
//*COMMAND 'D XCF,GROUP,SYSRMF                                          00026929
//*COMMAND 'D XCF,GROUP,SYSXCF                                          00027029
//*COMMAND 'D XCF,GROUP,AOPLXGRP                                        00027129
//*COMMAND 'D XCF,GROUP,BBGROUP                                         00027229
//*COMMAND 'D XCF,GROUP,BMCTOMX                                         00027329
//*COMMAND 'D XCF,GROUP,DFHIR000                                        00027429
//*COMMAND 'D XCF,GROUP,IDISXCFM                                        00027529
//*COMMAND 'D XCF,GROUP,SYSIGW00                                        00027629
//*COMMAND 'D XCF,GROUP,SYSIOSPX                                        00027729
//*COMMAND 'D XCF,GROUP,SYSJ2$XD                                        00027829
//*COMMAND 'D XCF,GROUP,SYSTTRC                                         00027929
//*COMMAND 'D XCF,GROUP,TOMPLEX                                         00028029
//*COMMAND 'D XCF,GROUP,ATRRRS                                          00028129
//*COMMAND 'D XCF,GROUP,BMCAB                                           00028229
//*COMMAND 'D XCF,GROUP,BRN5                                            00028329
//*COMMAND 'D XCF,GROUP,EZBTCPCS                                        00028429
//*COMMAND 'D XCF,GROUP,IGG0CAS                                         00028529
//*COMMAND 'D XCF,GROUP,SYSDAE                                          00028629
//*COMMAND 'D XCF,GROUP,SYSIGW01                                        00028729
//*COMMAND 'D XCF,GROUP,SYSIOS01                                        00028829
//*COMMAND 'D XCF,GROUP,SYSMCS                                          00028929
//*COMMAND 'D XCF,GROUP,SYSWLM                                          00029029
   D XCF[,{PATHIN|PI} ]                                                 00029129
   [,{DEVICE|DEV}={([/]INDEVNUM[,[/]INDEVNUM...])|ALL}]                 00029229
//*A CFRM POLICY HAS NOT BEEN STARTED                                   00029329
//*COMMAND 'D XCF,STRUCTURE,STRNAME=ALL'                                00029429
   [,{STRNAME|STRNM}={(STRNAME[,STRNAME]...)|ALL}]                      00029529
   [,{SYSNAME|SYSNM}=(SYSNAME[,SYSNAME]...)]                            00029629
//*COMMAND 'D XCF,PATHIN,STATUS=STARTING'                               00029729
//*COMMAND 'D XCF,PATHIN,STATUS=RESTARTING'                             00029829
//*COMMAND 'D XCF,PATHIN,STATUS=WORKING'                                00029929
   [,{STATUS|STAT}=([STARTING][,RESTARTING][,WORKING]                   00030029
   [,STOPPING][,STOPFAILED][,INOPERATIVE]                               00030129
   [,LINKING][,QUIESCING]) ]                                            00030229
   [,{PATHOUT|PO} ]                                                     00030329
   [,{DEVICE|DEV={([/]OUTDEVNUM[,[/]OUTDEVNUM...])|ALL}]                00030429
   [,{STRNAME|STRNM}={(STRNAME[,STRNAME]...)|ALL}]                      00030529
   [,CLASS={(CLASSNAME[,CLASSNAME]...)|ALL}]                            00030629
   [,{SYSNAME|SYSNM}=(SYSNAME[,SYSNAME]...)]                            00030729
   [,{STATUS|STAT}=([STARTING][,RESTARTING][,WORKING]                   00030829
   [,STOPPING][,STOPFAILED][,INOPERATIVE]                               00030929
   [,LINKING][,QUIESCING])]                                             00031029
   [,REBUILDING][,QUIESCED])]                                           00031129
   [,{LOCALMSG|LM}[,CLASS={(CLASSNAME[,CLASSNAME]...)|ALL}] ]           00031229
   [,{GROUP|GRP},GROUPNAME[,MEMBERNAME|ALL] ]                           00031329
   [,{SYSPLEX|S}[,SYSTEMNAME|ALL] ]                                     00031429
   [,{COUPLE|CPL}[,TYPE={(NAME[,NAME...])|ALL}] ]                       00031529
   [,{CLASSDEF|CD} ]                                                    00031629
   [,CLASS={CLASSNAME|(CLASSNAME[,CLASSNAME]...)|ALL}]                  00031729
   |,{GROUP|G}=GROUPNAME                                                00031829
   [,{STRUCTURE|STR}                                                    00031929
   [,ALTER={DISABLED|ENABLED}] ]                                        00032029
   [,{STRNAME|STRNM}={(STRNAME[,STRNAME]...)|ALL}]                      00032129
   [,{CONNAME|CONNM}={(CONNAME[,CONNAME]...)|ALL}]                      00032229
   [,{STATUS|STAT}=([ALLOCATED][,NOTALLOCATED]                          00032329
   [,DUPENAB][,DUPALLOW]                                                00032429
   [,LOSSCONN]                                                          00032529
   [,RBPEND]                                                            00032629
   [,POLICYCHANGE][,DEALLOCPENDING]                                     00032729
   [,LARGERCFRMDS][,REBUILD][,STRDUMP]                                  00032829
   [,ALTER][,FPCONN][,NOCONN][,DUPREBUILD]                              00032929
   [,ENCRYPTED] [,NOTENCRYPTED]                                         00033029
   [,ENCMISMATCH])]                                                     00033129
   [,{CF}[,{CFNAME|CFNM}={(CFNAME[,CFNAME]...)|ALL}] ]                  00033229
   [,{POLICY|POL}[,TYPE={(NAME[,NAME]...)|ALL}] ]                       00033305
   [,{PRSMPOLICY|PRSMPOL} ]                                             00034005
   [,{ARMSTATUS|ARMS} ]                                                 00035005
   [,{RESTARTGRP|RG}=RGNAME]                                            00036005
   [,{ELEMENT|EL}=ELNAME|{JOBNAME|JOB}=JOBNAME]                         00037005
   [,INITSYS=INITSYS]                                                   00038005
   [,CURRSYS=CURRSYS]                                                   00039005
   [,STATE=([{STARTING|START}][,{AVAILABLE|AVAIL}][,FAILED]             00039105
   [,{RESTARTING|RESTART}][,{RECOVERING|RECOVER}])]                     00039205
   [,DETAIL]                                                            00039305
   [,{REALLOCATE|REALLOC},{REPORT|TEST} ]                               00039405
   [,{SERVER|SRV} ]                                                     00039505
   [,SYSNAME|SYSNM={(SYSNAME[,SYSNAME...])}]                            00039605
   [,SERVERNAME|SRVNAME|SRVNM=SERVERNAME]                               00039705
   [,SCOPE={(SUMMARY|SUM)|,{(DETAIL|DET)}]                              00039805
   [,TYPE=NAME[,STATUS=(STALLED)]|                                      00039905
[TYPE=INSTANCE|INST[,STATUS=([{WORKING|WORK}][STALLED])][,{INSTNUM|INST#00040004
   [,STATUS=([{WORKING|WORK}][,STALLED])]                               00041005
   [,{NOTEPAD|NP} ]                                                     00042005
   [,{NOTEPADNAME|NPNAME|NPNM}={NOTEPADNAME|ALL}]                       00043005
   [,{STRNAME|STRNM}={HOSTNAME|ALL}]                                    00044005
   [,SCOPE={SUMMARY|SUM}|{DETAIL|DET}                                   00045005
   [,L={A|NAME|NAME-A}                                                  00046005
// COMMAND '                                                            00047009
//*RMF                                                                  00047125
F RMF,S ZZ,MEMBER(01)                                                   00047225
//*                                                                     00047719
            MN JOBNAMES,T,                                              00048009
            MN JOBNAMES,DSNAME                                          00048109
            MN JOBNAMES,SPACE                                           00048209
            MN JOBNAMES,STATUS                                          00048309
            MN JOBNAMES,SESS                                            00048409
            DSNAME,                                                     00049009
            SPACE,                                                      00049109
            STATUS,                                                     00049209
            SESS                                                        00049309
            STOPMN                                                      00049409
            SYSJRI.PPT0.JZ05SV01.TESTS2                                 00049511
//*ADDS AUXILIARY STORAGE SPACE (LOCAL PAGE DATA SETS) TO THE SYSTEM    00049618
            PA {[PAGE=]}{DSNAME[,DSNAME]...}                            00049718
// COMMAND 'PA PAGE=PAGE.LOCAL2.LP2                                     00049818
            {NONVIO=}                                                   00049918
//*DELETE, REPLACE, OR DRAIN (QUIESCE) LOCAL PAGE DATA SETS.            00050018
// COMMAND 'PD DELETE,PAGE=PAGE.LOCAL2.LP2                              00050118
            {REPLACE,PAGE={(DSNAME,RDSNAME)[,(DSNAME,RDSNAME)]...}}     00050218
            {DRAIN,PAGE={DSNAME[,DSNAME]...}                            00050318
//*CHANGING SERVICE CLASSES OR QUIESCING WORK                           00050418
            RESET SYS019,SRVCLASS=TSO1,A=009D                           00050518
            RESET SYS019,QUIESCE                                        00050618
            RESET SYS019,RESUME                                         00051017
DYNAMIC DEVICE RECONFIGURATION (DDR                                     00052022
SWAP DEVNUM1,DEVNUM2 ?OPERATOR-REQUESTED DDR? ON PAGE 841               00054022
SWAP OFF SWAP ON ?SYSTEM-INITIATED DDR? ON PAGE 842                     00055022
//*START TRACE MQ                                                       00055123
// COMMAND 'S GTFMQ,MEMBER=GTFPARM'                                     00055224
SETPROG APF{,FORMAT={DYNAMIC|STATIC}}                                   00055328
{,{ADD|DELETE},{DSNAME|LIBRARY}=LIBNAME,{SMS|VOLUME=VOLUME}             00055428
UPDATING DYNAMIC EXITS                                                  00055528
SETPROG EXIT,{ADD,EXITNAME=EXITNAME,MODNAME=MODNAME }                   00055628
[,STATE={ACTIVE|INACTIVE}]                                              00055728
[,DSNAME=DSNAME]                                                        00055828
[,JOBNAME={JOBNAME|*}]                                                  00055928
[,ABENDNUM=(N[,CONSEC])]                                                00056028
[,FIRST|LAST]                                                           00056128
[,PARAM=PARAM]                                                          00057028
[,DELETEFORCE={NO|YES}]                                                 00058028
[,SERVICEMASK=SERVICEMASK]                                              00059028
{ATTRIB,EXITNAME=EXITNAME,KEEPRC=(COMPARE,KK)}                          00059128
{DELETE,EXITNAME=EXITNAME,MODNAME=MODNAME }                             00059228
[,FORCE={YES|NO}]                                                       00059328
{MODIFY,EXITNAME=EXITNAME,MODNAME=MODNAME }                             00059428
[,STATE={ACTIVE|INACTIVE}]                                              00059528
[,JOBNAME={JOBNAME|*}]                                                  00059628
{REPLACE,EXITNAME=EXITNAME,MODNAME=MODNAME, }                           00059728
[,STATE={ACTIVE|INACTIVE}]                                              00059828
[,DSNAME=DSNAME]                                                        00059928
[,SERVICEMASK=SERVICEMASK]                                              00060028
{UNDEFINE,EXITNAME=EXITNAME                                             00061028
   UPDATING LNKLST CONCATENATIONS                                       00062028
SETPROG LNKLST,{DEFINE,NAME=LNKLSTNAME[,COPYFROM=LNKLSTNAME][,NOCHECK] }00063028
{ADD,NAME=LNKLSTNAME,                                                   00064028
DSNAME=DSNAME[,VOLUME=VOLSER][,ATBOTTOM ]                               00065028
[,ATTOP ]                                                               00066028
[,AFTER=DSNAME]                                                         00067028
[,CONCAT(CHECK | NOCHECK)]}                                             00068028
{DELETE,NAME=LNKLSTNAME,DSNAME=DSNAME }                                 00069028
{UNDEFINE,NAME=LNKLSTNAME }                                             00069128
{TEST,NAME=LNKLSTNAME,MODNAME=NAME }                                    00069228
{ACTIVATE,NAME=LNKLSTNAME }                                             00069328
{UPDATE,{{JOBNAME | JOB}=JOBNAME} [,DELAY=NN] }                         00069428
{ASID=ASID } [DELAY=DELAY]                                              00069528
{UNALLOCATE }                                                           00069628
{ALLOCATE                                                               00069728
   MANAGING DYNAMIC LPA CONTENT                                         00069828
SETPROG LPA,{ADD,MODNAME=(MODNAME...,MODNAME) | MASK=MASK}              00069928
[,DSNAME=DSNAME | LNKLST]                                               00070028
[{VOLUME|VOLSER|VOL}(NAME)]                                             00071028
[,PAGEABLE | FIXED]                                                     00072028
[,PAGEPROTALL | PAGEPROTPAGE]                                           00073028
[,SVCNUMDEC=SVCNUM | ,SVCNUMDEC=(SVCNUM,ROUTCODE)]                      00074028
[,ADDALIAS | ,NOADDALIAS]                                               00075028
[,NOAPFREQ | ,APFREQ]                                                   00076028
{DELETE,MODNAME=(MODNAME...,MODNAME) }                                  00077028
FORCE=YES [CURRENT | OLDEST]                                            00078028
{CSAMIN=(BELOW,ABOVE)                                                   00079028
   PROTECTING REFR PROGRAMS                                             00079128
SETPROG REFRPROT                                                        00079228
   TRACKING DIRECTED LOAD MODULES                                       00079328
SETPROG TRACKDIRLOAD                                                    00079428
//DELETE   EXEC PGM=IEFBR14                                             00080001

./ ADD NAME=JCMDOMVS
// COMMAND '                                                            00010000
// COMMAND 'D OMVS,SUMMARY                                              00011000
// COMMAND 'D OMVS,ACTIVATE=SERVICE                                     00020000
// COMMAND 'D OMVS,ASID=ALL                                             00030000
// COMMAND 'D OMVS,ASID=ASID                                            00040000
// COMMAND 'D OMVS,ASID=DUBW                                            00050000
// COMMAND 'D OMVS,CINET=ALL TPNAME                                     00060000
// COMMAND 'D OMVS,FILE,{NAME=FILESYSTEM][,CAPS                         00070000
// COMMAND 'D OMVS,,EXCEPTION                                           00080000
// COMMAND 'D OMVS,,OWNER=SYSTEMNAME                                    00090000
// COMMAND 'D OMVS,,TYPE=TYPE                                           00100000
// COMMAND 'D OMVS,,UID}={USER PRIV UID}                                00110000
// COMMAND 'D OMVS,LIMITS,PID=PROCESSID][,RESET]}                       00120000
// COMMAND 'D OMVS,PID}=PROCESSID[,BRL]                                 00130000
// COMMAND 'D OMVS,PIPES[,ALL,RESET,{UID=UID]                           00140000
// COMMAND 'D OMVS,MF[{=ALL                                             00150000
// COMMAND 'D OMVS,MF={PURGE                                            00160000
//*DISPLAYS INFORMATION ABOUT EACH PHYSICAL FILE SYSTEM                 00161000
// COMMAND 'D OMVS,PFS                                                  00170000
// COMMAND 'D OMVS,OPTIONS                                              00180000
// COMMAND 'D OMVS,SER}                                                 00190000
// COMMAND 'D OMVS,SOCKETS                                              00200000
// COMMAND 'D OMVS,STORAGE,RESET]}                                      00210000
// COMMAND 'D OMVS,U=USERID                                             00220000
// COMMAND 'D OMVS,USERMOUNTS                                           00230000
// COMMAND 'D OMVS,VSERVER                                              00240000
// COMMAND 'D OMVS,WAITERS                                              00250000
// COMMAND '      {AGE                                                  00260000
// COMMAND '      {LATCHES                                              00270000
// COMMAND '      {MESSAGES                                             00280000
// COMMAND '      {OTHER                                                00290000
// COMMAND '      {SPECIAL                                              00300000

./ ADD NAME=LISTDATA
//SYSDATA  JOB 1000,'SYSTEME',REGION=2M,                                00000101
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00000201
//*                                                                     00003000
// EXEC PGM=IDCAMS                                                      00030000
//SYSPRINT DD SYSOUT=*                                                  00040000
//SYSIN DD *                                                            00050000
  LISTDATA    -                                                         00060001
  STATUS      -                                                         00062004
  UNIT(3390)  -                                                         00070001
  VOL(IB8001)                                                           00080013
/*                                                                      00100000
//                                                                      00110000

./ ADD NAME=LISTLOG
//LISTLOG   JOB (T002550),MVS,                                          00010001
//             NOTIFY=&SYSUID,                                          00020000
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00030000
//LOGDEFN    EXEC PGM=IXCMIAPU                                          00040000
//SYSPRINT   DD SYSOUT=*                                                00050000
//SYSIN      DD *                                                       00060000
  DATA TYPE(LOGR) REPORT(YES)                                           00070000
  LIST LOGSTREAM NAME(*) DETAIL(YES)                                    00080000
//                                                                      00090000

./ ADD NAME=LISTVTOC
//SYSVTOC  JOB 1000,'SYST-GRANIE',REGION=2M,                            00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPLA          00020001
//**                                                                 *
//** BLANK FOR     MINIMUN LEVEL LISTING VTOC                        *
//**               OTHERWISE SPECIFIES  (FORMAT OR DUMP)             *
//**                                                                 *
//LSTVTOC  EXEC  PGM=IEHLIST
//SYSPRINT  DD  SYSOUT=*
//DISK2   DD  UNIT=3390,VOL=SER=EXPL01,DISP=SHR
//SYSIN   DD  *
  LISTVTOC  DUMP,VOL=3390=EXPL01
/*
//

./ ADD NAME=LOGINIT
//SYS012A  JOB 1000,'LOGRC',REGION=2M,
//             CLASS=Z,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID
//*------REINIT LOGREC LP2-------------------------------------
//INITLP2 EXEC PGM=IFCDIP00,REGION=1024K
//SERERDS  DD  DSN=SYS1.LP2.LOGREC,DISP=(OLD,KEEP),
//             UNIT=3390,VOL=SER=SYSOSC
/*

./ ADD NAME=LOGRBRNQ
//SYSEXT2N JOB SYS,'DEFLOGR',CLASS=O,MSGCLASS=T,NOTIFY=SYSEXT2          00010000
//*                                                                     00020000
//********************************************************************* 00030000
//* DEFINE DS COUPLE DATASET  LOGR                                    * 00040000
//********************************************************************* 00050000
//DEFINELG EXEC PGM=IXCMIAPU                                            00060000
//SYSPRINT DD  SYSOUT=*                                                 00070000
//SYSIN    DD  *                                                        00080000
  DATA TYPE(LOGR) REPORT(YES)                                           00080100
                                                                        00080200
  DEFINE LOGSTREAM NAME(BRNQ.DFHLOG.MODEL)                              00080300
         MODEL(YES)                                                     00080400
         HLQ(IXGLOGR)                                                   00080500
         LS_SIZE(256)                                                   00080600
         LOWOFFLOAD(10)                                                 00080700
         HIGHOFFLOAD(90)                                                00080800
         DASDONLY(YES)                                                  00080900
         STG_SIZE(1000)                                                 00081000
                                                                        00081100
  DEFINE LOGSTREAM NAME(BRNQ.DFHSHUNT.MODEL)                            00081200
         MODEL(YES)                                                     00081300
         HLQ(IXGLOGR)                                                   00081400
         LS_SIZE(32)                                                    00081500
         LOWOFFLOAD(0)                                                  00081600
         HIGHOFFLOAD(80)                                                00081700
         DASDONLY(YES)                                                  00081800
         STG_SIZE(500)                                                  00081900
/*                                                                      00082000
//                                                                      00083000

./ ADD NAME=LOGRBRN1
//SYSIXC   JOB (1000),'SYSTEME',NOTIFY=&SYSUID,                         00030000
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00040000
// EXEC PGM=IXCMIAPU                                                    00050000
//SYSPRINT  DD SYSOUT=*                                                 00060000
//SYSIN     DD *                                                        00070000
DATA TYPE(LOGR) REPORT(YES)                                             00080000
DEFINE LOGSTREAM NAME(CICSTES1.MODEL)                                   00080106
       MODEL(YES)                                                       00080206
       HLQ(IXGLOGR)                                                     00080306
       LS_SIZE(512)                                                     00080406
       LOWOFFLOAD(10)                                                   00080506
       HIGHOFFLOAD(90)                                                  00080606
       DASDONLY(YES)                                                    00080706
       STG_SIZE(1000)                                                   00080806
LIST LOGSTREAM NAME(*) DETAIL(YES)                                      00080906
//                                                                      00081202
DEFINE LOGSTREAM NAME(BRN1.DFHLOG.MODEL)                                00081301
       MODEL(YES)                                                       00081400
       HLQ(IXGLOGR)                                                     00081500
       LS_SIZE(256)                                                     00081600
       LOWOFFLOAD(10)                                                   00081700
       HIGHOFFLOAD(90)                                                  00081800
       DASDONLY(YES)                                                    00081900
       STG_SIZE(1000)                                                   00082000
DEFINE LOGSTREAM NAME(BRN1.DFHSHUNT.MODEL)                              00082101
       MODEL(YES)                                                       00082200
       HLQ(IXGLOGR)                                                     00082300
       LS_SIZE(32)                                                      00082400
       LOWOFFLOAD(0)                                                    00082500
       HIGHOFFLOAD(80)                                                  00082600
       DASDONLY(YES)                                                    00082700
       STG_SIZE(500)                                                    00082800
//                                                                      00082900
DELETE LOGSTREAM NAME(BRN1.DFHLOG.MODEL)                                00083001
DELETE LOGSTREAM NAME(BRN1.DFHSHUNT.MODEL)                              00084001
//                                                                      00100000
LIST LOGSTREAM NAME(*) DETAIL(YES)                                      00110000
DELETE LOGSTREAM NAME(STCUSR.CICSSYS1.DFHLOG)                           00120000
UPDATE LOGSTREAM NAME(BRN1.DFHLOG.MODEL)                                00130001
       STG_SIZE(5000)                                                   00140000
DELETE LOGSTREAM NAME(BRN1.DFHLOG.MODEL)                                00150001
DELETE LOGSTREAM NAME(BRN1.DFHSHUNT.MODEL)                              00160001
DELETE LOGSTREAM NAME(CICSSYS1.DFHLOG)                                  00170000
DELETE LOGSTREAM NAME(CICSSYS1.DFHSHUNT)                                00190000
LIST LOGSTREAM NAME(*) DETAIL(YES)                                      00210000

./ ADD NAME=LOGRBRN2
//SYSIXC   JOB (1000),'SYSTEME',NOTIFY=&SYSUID,                         00030000
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00040000
// EXEC PGM=IXCMIAPU                                                    00050000
//SYSPRINT  DD SYSOUT=*                                                 00060000
//SYSIN     DD *                                                        00070000
DATA TYPE(LOGR) REPORT(YES)                                             00080000
DELETE LOGSTREAM NAME(STCUSR.CICOFIMA.DFHLOG)                           00080110
DELETE LOGSTREAM NAME(STCUSR.CICOFIMA.DFHSHUNT)                         00080210
//                                                                      00080310
DEFINE LOGSTREAM NAME(CICSEXPL.MODEL)                                   00080908
       MODEL(YES)                                                       00081006
       HLQ(IXGLOGR)                                                     00081106
       LS_SIZE(512)                                                     00081206
       LOWOFFLOAD(10)                                                   00081306
       HIGHOFFLOAD(90)                                                  00081406
       DASDONLY(YES)                                                    00081506
       STG_SIZE(1000)                                                   00081606
LIST LOGSTREAM NAME(*) DETAIL(YES)                                      00081706
//                                                                      00081806
DEFINE LOGSTREAM NAME(BRN2.DFHLOG.MODEL)                                00081906
       MODEL(YES)                                                       00082006
       HLQ(IXGLOGR)                                                     00082106
       LS_SIZE(5700)                                                    00082211
       LOWOFFLOAD(40)                                                   00082311
       HIGHOFFLOAD(80)                                                  00082411
       DASDONLY(YES)                                                    00082506
       STG_SIZE(5700)                                                   00082611
DEFINE LOGSTREAM NAME(BRN2.DFHSHUNT.MODEL)                              00082706
       MODEL(YES)                                                       00082806
       HLQ(IXGLOGR)                                                     00082906
       LS_SIZE(32)                                                      00083006
       LOWOFFLOAD(0)                                                    00083106
       HIGHOFFLOAD(80)                                                  00083206
       DASDONLY(YES)                                                    00083306
       STG_SIZE(500)                                                    00083406
//                                                                      00083506
DELETE LOGSTREAM NAME(BRN2.DFHLOG.MODEL)                                00083606
DELETE LOGSTREAM NAME(BRN2.DFHSHUNT.MODEL)                              00084001
//                                                                      00100000
DELETE LOGSTREAM NAME(STCUSR.CICSSYS1.DFHLOG)                           00120000
UPDATE LOGSTREAM NAME(BRN2.DFHLOG.MODEL)                                00130001
       STG_SIZE(5000)                                                   00140000
DELETE LOGSTREAM NAME(BRN2.DFHLOG.MODEL)                                00150001
DELETE LOGSTREAM NAME(BRN2.DFHSHUNT.MODEL)                              00160001
DELETE LOGSTREAM NAME(CICSSYS1.DFHLOG)                                  00170000
DELETE LOGSTREAM NAME(CICSSYS1.DFHSHUNT)                                00190000
LIST LOGSTREAM NAME(*) DETAIL(YES)                                      00210000

./ ADD NAME=LOGREC
//SYSPGRL  JOB 1000,'SYST-GRANIE',REGION=2M,                            00000111
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPGR          00000200
//*-----------------------------------------------------------          00000313
//* LISTE  ENREGISTREMENTS DE LA LOGREC                                 00000413
//* OPTIONS  A CHANGER SUIVANT LE TYPE DE RECORD                        00000513
//*-----------------------------------------------------------          00000613
//LOGREC  PROC OPTIONS=,CLASS='X'                                       00000700
//IEFPROC  EXEC PGM=IFCEREP1,PARM=&OPTIONS                              00250000
//SERLOG   DD  DSN=SYS1.LOGREC,DISP=SHR                                 00270000
//TOURIST  DD  SYSOUT=&CLASS,DCB=BLKSIZE=133                            00280000
//EREPPT   DD  SYSOUT=&CLASS,DCB=BLKSIZE=133                            00290000
//SYSUDUMP DD  SYSOUT=&CLASS                                            00300000
//SYSIN    DD  DUMMY                                                    00310000
//         PEND                                                         00320000
//MIH      EXEC LOGREC,                                                 00360206
//         OPTIONS='(''ACC=N,HIST=N,PRINT=PS,TYPE=ADEI'')'              00360306
//MIH      EXEC LOGREC,                                                 00360404
//         OPTIONS='(''ACC=N,HIST=N,PRINT=PS,TYPE=B'')'                 00360504
//MIH      EXEC LOGREC,                                                 00360600
//         OPTIONS='(''ACC=N,HIST=N,PRINT=PS,TYPE=H'')'                 00360700
//MCH      EXEC LOGREC,                                                 00370000
//          OPTIONS='(''ACC=Y,HIST=N,PRINT=PS,TYPE=M'')'                00380012
//CCH      EXEC LOGREC,                                                 00450000
//          OPTIONS='(''ACC=N,HIST=N,PRINT=PS,TYPE=C'')'                00460000
//IPL      EXEC LOGREC,                                                 00470000
//         OPTIONS='(''ACC=N,HIST=N,PRINT=PS,TYPE=I'')'                 00480000
//                                                                      00481005
//*                                                                     00490000
//SOF      EXEC LOGREC,                                                 00490105
//         OPTIONS='(''ACC=N,HIST=N,PRINT=PS,TYPE=S'')'                 00490205
//                                                                      00491000
//                                                                      00492000
//                                                                      00493000
//                                                                      00494000
//*******************************************************************   00500000
//* LIB: IPO1.PROCLIB(LOGREC)                                           00510000
//* GDE: CBIPO MVS CUSTOMIZATION                                        00520000
//* DOC: THIS PROCEDURE WILL PRINT EREP REPORTS FROM SYS1.LOGREC.       00530000
//*      SPECIFY THE REPORT, SELECTION, AND PROCESSING                  00540000
//*      PARAMETERS AFTER OPTIONS= WHEN STARTING THE JOB.               00550000
//*                                                                     00560000
//*      THE DEFAULT EREP REPORT IS AN 'EVENT HISTORY'.                 00570000
//*      SPECIFY 'START LOGREC'.                                        00580000
//*                                                                     00590000
//*      TO PRINT A SUMMARY OF SOFTWARE RECORDS                         00600000
//*      SPECIFY 'START LOGREC,OPTIONS='TYPE=S,PRINT=PS'.               00610000
//*                                                                     00620000
//*      REPORT PARAMETERS INCLUDE:                                     00630000
//*       * EVENT - EVENT REPORT                                        00640000
//*       * PRINT= - SPECIFIES WHICH DETAIL PRINT REPORT TO PRINT       00650000
//*         AL  ALL DETAIL PRINT REPORTS                                00660000
//*         DR  ONLY DATA REDUCTION REPORTS                             00670000
//*         NO  NO REPORTS PRINTED                                      00680000
//*         PS  BOTH DETAIL EDIT AND DETAIL SUMMARY                     00690000
//*         PT  ONLY DETAIL EDIT REPORTS                                00700000
//*         SD  DETAIL SUMMARIES AND DATA REDUCTION REPORTS (DEFAULT)   00710000
//*         SU  ONLY DETAIL SUMMARY REPORTS                             00720000
//*       * SYSEXN - SYSTEM EXCEPTION REPORTS                           00730000
//*       * SYSSUM - SYSTEM SUMMARY REPORT                              00740000
//*       * TRENDS - TRENDS REPORT                                      00750000
//*                                                                     00760000
//*      SELECTION PARAMETERS TO BE USED WITH REPORT                    00770000
//*      REPORT PARAMETERS INCLUDE:                                     00780000
//*       * CPU=(  )     CENTRAL PROCESSING UNIT                        00790000
//*       * CUA=(  )     CHANNEL/UNIT ADDRESS                           00800000
//*       * DATE=(YYDDD) YEAR AND JULIAN DAY                            00810000
//*       * DEV=(   )    GENERIC DEVICE TYPE                            00820000
//*       * MOD=(  )     CPU MODEL NUMBER                               00830000
//*       * TYPE= SELECTED TYPES OF RECORDS                             00840000
//*         C   CCH/CRW/SLH CHANNEL INFORMATION                         00850000
//*         D   DDR DYNAMIC DEVICE RECONFIGURATION                      00860000
//*         E   EOD SYSTEM TERMINATION                                  00870000
//*         H   MIH MISSING INTERRUPT RECORDS                           00880000
//*         I   IPL SYSTEM INITIALIZATION                               00890000
//*         M   MCH MACHINE CHECK                                       00900000
//*         O   OBR OUTBOARD RECORDS                                    00910000
//*         S   SFT SORTWARE EVENTS                                     00920000
//*         T   MDR MISCELLANEOUS RECORDS                               00930000
//*         (TYPE CODES MAY BE COMBINED: 'TYPE=DH')                     00940000
//*       * VOLID=(   )  VOLUME ID                                      00950000
//*                                                                     00960000
//*      PROCESSING PARAMETERS TO BE USED WITH REPORT                   00970000
//*      REPORT PARAMETERS INCLUDE:                                     00980000
//*       * ACC=Y/N    ACCUMUALTE RECORDS                               00990000
//*       * HIST=Y/N   USE RECORDS IN A HISTORY DS,NOT ERDS             01000000
//*       * LINECT=NNN NUMBER OF LINES PRINTED ON PAGE                  01010000
//*       * MERGE=Y/N  USE RECORDS FROM HISTORY DS AND ERDS             01020000
//*                                                                     01030000
//*******************************************************************   01040000

./ ADD NAME=LOGRECIN
//SYSPGR1  JOB 1000,'PH-GRANIE',REGION=2M,                              00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPGR          00020001
//*------------------------------------------------------------         00030003
//INTLOG1 EXEC PGM=IFCDIP00,REGION=1024K
//SERERDS  DD  DSN=SYS1.LOGREC,DISP=OLD
//*            UNIT=3390,VOL=SER=SYST06
/*

./ ADD NAME=LOGRLP2
//SYSIXC   JOB (1000),'SYSTEME',NOTIFY=&SYSUID,                         00030001
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00040000
// EXEC PGM=IXCMIAPU                                                    00050001
//SYSPRINT  DD SYSOUT=*                                                 00060001
//SYSIN     DD *                                                        00070001
DATA TYPE(LOGR) REPORT(YES)                                             00080001
DEFINE LOGSTREAM NAME(ATR.LP2PLEX0.RM.DATA)                             00080119
//                                                                      00080319
//                                                                      00080419
DEFINE LOGSTREAM NAME(LP2.CICSVR.DFHLGLOG)                              00080519
       MODEL(NO)                                                        00080619
       HLQ(IXGLOGR)                                                     00080719
       LS_SIZE(256)                                                     00080819
       LOWOFFLOAD(10)                                                   00080919
       HIGHOFFLOAD(90)                                                  00081019
       DASDONLY(YES)                                                    00081119
       STG_SIZE(1000)                                                   00081219
LIST LOGSTREAM NAME(*) DETAIL(YES)                                      00081319
//                                                                      00081419
DEFINE LOGSTREAM NAME(LP2.DFHLOG.MODEL)                                 00081519
       MODEL(YES)                                                       00081619
       HLQ(IXGLOGR)                                                     00081719
       LS_SIZE(256)                                                     00081819
       LOWOFFLOAD(10)                                                   00081919
       HIGHOFFLOAD(90)                                                  00082019
       DASDONLY(YES)                                                    00082119
       STG_SIZE(1000)                                                   00082219
DEFINE LOGSTREAM NAME(LP2.DFHSHUNT.MODEL)                               00082319
       MODEL(YES)                                                       00082419
       HLQ(IXGLOGR)                                                     00082519
       LS_SIZE(32)                                                      00082619
       LOWOFFLOAD(0)                                                    00082719
       HIGHOFFLOAD(80)                                                  00082819
       DASDONLY(YES)                                                    00082919
       STG_SIZE(500)                                                    00083019
//                                                                      00083119
DELETE LOGSTREAM NAME(LP2.DFHLOG.MODEL)                                 00083219
DELETE LOGSTREAM NAME(LP2.DFHSHUNT.MODEL)                               00084008
//                                                                      00100001
LIST LOGSTREAM NAME(*) DETAIL(YES)                                      00110003
DELETE LOGSTREAM NAME(STCUSR.CICSSYS1.DFHLOG)                           00120004
UPDATE LOGSTREAM NAME(LP2.DFHLOG.MODEL)                                 00130011
       STG_SIZE(5000)                                                   00140011
DELETE LOGSTREAM NAME(LP2.DFHLOG.MODEL)                                 00150014
DELETE LOGSTREAM NAME(LP2.DFHSHUNT.MODEL)                               00160014
DELETE LOGSTREAM NAME(CICSSYS1.DFHLOG)                                  00170014
DELETE LOGSTREAM NAME(STCUSR.CICSSYS1.DFHLOG)                           00180014
DELETE LOGSTREAM NAME(CICSSYS1.DFHSHUNT)                                00190014
DELETE LOGSTREAM NAME(STCUSR.CICSSYS1.DFHSHUNT)                         00200014
LIST LOGSTREAM NAME(*) DETAIL(YES)                                      00210014

./ ADD NAME=LOGRY200
//SYSIXC   JOB (1000),'SYSTEME',NOTIFY=&SYSUID,                         00010000
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00040000
// EXEC PGM=IXCMIAPU                                                    00050000
//SYSPRINT  DD SYSOUT=*                                                 00060000
//SYSIN     DD *                                                        00070000
DATA TYPE(LOGR) REPORT(YES)                                             00080000
DEFINE LOGSTREAM NAME(CICSVR.DFHLGLOG)                                  00080902
       MODEL(NO)                                                        00081002
       HLQ(IXGLOGR)                                                     00081100
       LS_SIZE(256)                                                     00081300
       LOWOFFLOAD(10)                                                   00081400
       HIGHOFFLOAD(90)                                                  00081500
       DASDONLY(YES)                                                    00081600
       STG_SIZE(1000)                                                   00081800
//                                                                      00081902
DEFINE LOGSTREAM NAME(Y2000.DFHLOG.MODEL)                               00082002
       MODEL(YES)                                                       00082102
       HLQ(IXGLOGR)                                                     00082202
       LS_SIZE(256)                                                     00082302
       LOWOFFLOAD(10)                                                   00082402
       HIGHOFFLOAD(90)                                                  00082502
       DASDONLY(YES)                                                    00082602
       STG_SIZE(1000)                                                   00082702
DEFINE LOGSTREAM NAME(Y2000.DFHSHUNT.MODEL)                             00082802
       MODEL(YES)                                                       00082902
       HLQ(IXGLOGR)                                                     00083002
       LS_SIZE(32)                                                      00083102
       LOWOFFLOAD(0)                                                    00083202
       HIGHOFFLOAD(80)                                                  00083302
       DASDONLY(YES)                                                    00083402
       STG_SIZE(500)                                                    00083502
//                                                                      00083602
DELETE LOGSTREAM NAME(Y2000.DFHLOG.MODEL)                               00083702
DELETE LOGSTREAM NAME(Y2000.DFHSHUNT.MODEL)                             00084001
//                                                                      00100000
DELETE LOGSTREAM NAME(STCUSR.CICSSYS1.DFHLOG)                           00120000
UPDATE LOGSTREAM NAME(Y2000.DFHLOG.MODEL)                               00130001
       STG_SIZE(5000)                                                   00140000
DELETE LOGSTREAM NAME(Y2000.DFHLOG.MODEL)                               00150001
DELETE LOGSTREAM NAME(Y2000.DFHSHUNT.MODEL)                             00160001
DELETE LOGSTREAM NAME(CICSSYS1.DFHLOG)                                  00170000
DELETE LOGSTREAM NAME(CICSSYS1.DFHSHUNT)                                00190000
LIST LOGSTREAM NAME(*) DETAIL(YES)                                      00210000

./ ADD NAME=LSTLGSTR
//SYSILEA   JOB (T002550),'IEBCOPY',                                    00010000
//             NOTIFY=&SYSUID,                                          00020000
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00030000
//LOGDEFN    EXEC PGM=IXCMIAPU                                          00040000
//SYSPRINT   DD SYSOUT=*                                                00050000
//SYSIN      DD *                                                       00060000
  DATA TYPE(LOGR) REPORT(YES)                                           00070000
  LIST LOGSTREAM NAME(*)         DETAIL(YES)                            00080000

./ ADD NAME=LSTNOCAT
//SYSILEA   JOB (T002550),'IEBCOPY',                                    00001000
//             NOTIFY=&SYSUID,                                          00001100
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00001200
//*--------------------------------------------------------             00002000
//* CETTE PROCEDURE PERMET DE LISTER LES FICHIERS NON CATALAGUES        00003000
//* PRESENT DANS TLMS                                                   00003100
//* ON NE TRAITE QUE LES FICHIERS DONT LA DATE DE CREATION              00003202
//* EST INFERIEUR A LA DATE DU JOUR MOINS LE NOMBRE DE JOUR             00003302
//* PASSE EN PARAMETRE (10 PAR EXEMPLE)                                 00003402
//*--------------------------------------------------------             00003600
//LSTNOCAT EXEC PGM=IKJEFT01,DYNAMNBR=70,REGION=64M,                    00004003
//        PARM='%LSTNOCAT 10'                                           00005003
//SYSPROC  DD  DISP=SHR,DSN=SYST.ISPF.CLIST                             00006000
//         DD  DISP=SHR,DSN=SYST.CMDPROC.CAT                            00006101
//SYSTSPRT DD  SYSOUT=X                                                 00007000
//SYSOUT   DD  SYSOUT=X                                                 00008000
//INFILE   DD  DISP=SHR,DSN=SYSJRI.FIC.NOSCRAT.JOUR.BIS                 00009204
//OUTFILE  DD  DISP=SHR,DSN=SYST.LIST.NOSCRAT.NOCAT                     00009304
//SYSIN    DD  DUMMY                                                    00010000
//SYSTSIN  DD  DUMMY                                                    00020000

./ ADD NAME=MACRO4
//SYSALIAS JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=I,                       00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//*********************************************                         00330000
//DEFALIAS  EXEC  PGM=IDCAMS,REGION=7M                                  00340000
//SYSPRINT  DD  SYSOUT=*                                                00350000
//SYSIN     DD  *                                                       00360000
    DEFINE  ALIAS  (NAME(EXPETUNE)            -                         00451002
            RELATE(CATALOG.GSYST1))            -                        00452001
    CATALOG(CATALOG.MASTER.ZOS18.BRN2)                                  00453000
    DEFINE  ALIAS  (NAME(EXPETUNE)             -                        00481002
            RELATE(CATALOG.GSYST1))            -                        00482001
    CATALOG(CATALOG.MASTER.ZOS18.BRN2.BACKUP)                           00483000
    DEFINE  ALIAS  (NAME(EXPETUNE)             -                        00511002
            RELATE(CATALOG.GSYST1))            -                        00512001
    CATALOG(CATALOG.MASTER.ZOS18.BRNR)                                  00513000
    DEFINE  ALIAS  (NAME(EXPETUNE)             -                        00514002
            RELATE(CATALOG.GSYST1))            -                        00515001
    CATALOG(CATALOG.MASTER.ZOS110.BRNR)                                 00516000
    DEFINE  ALIAS  (NAME(EXPETUNE)             -                        00571002
            RELATE(CATALOG.GSYST1))            -                        00572001
    CATALOG(CATALOG.MASTER.ZOS18.BRNQ)                                  00573000
    DEFINE  ALIAS  (NAME(EXPETUNE)             -                        00574002
            RELATE(CATALOG.GSYST1))            -                        00575001
    CATALOG(CATALOG.MASTER.ZOS110.BRNQ)                                 00576000
//*                                                                     00580000
//                                                                      00581000

./ ADD NAME=MERGECAT
//SYSMERG JOB  1,LAPEYRE,MSGLEVEL=(1,1),CLASS=O,                        00010077
//             REGION=0M,                                               00011086
//             MSGCLASS=T,NOTIFY=&SYSUID,TIME=1440                      00020086
// EXEC PGM=IDCAMS                                                      00021000
//SYSPRINT DD SYSOUT=*                                                  00024000
//SYSIN   DD *                                                          00025000
 REPRO INDATASET(CATALOG.ORECT3) -                                      00026087
       OUTDATASET(CATALOG.CRECT3) -                                     00027087
       LEVEL(CRAM) MERGECAT                                             00028087
/*                                                                      00028164
//                                                                      00028283
 REPRO INDATASET(CATALOG.GTEST)-                                        00028383
       OUTDATASET(CATALOG.GENDEVOR) -                                   00028483
       LEVEL(PBEX) MERGECAT                                             00028583

./ ADD NAME=MKDIRREC
//MKDIRREC JOB 1000,'PH-GRANIE',REGION=2M,                              00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*----------------------------------------------------------           00031900
//* creation du répertoire dans lequel va etre recu le produit          00032000
//* depuis le PC                                                        00033000
//*----------------------------------------------------------           00033100
//* changer xxxxx par le nom du produit a installer                     00033200
//* une fois l'installation faite, cette directorie et toutes les       00033300
//* sous-directories doivent etre supprimées.                           00033400
//*----------------------------------------------------------           00034000
//STEP0   EXEC PGM=IKJEFT01                                             00035000
//SYSTSPRT DD   SYSOUT=*                                                00036000
//SYSTSIN  DD   *                                                       00037000
  MKDIR '/u/recprod/cadmb17'                                            00038006
//                                                                      00040000

./ ADD NAME=MOVEFILE
//SYSPGR1  JOB 1000,'SYST-GRANIE',REGION=2M,                            00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPGR          00020001
//*------------------------------------------------------------         00030003
//* MOVE DE FICHIER                                                     00030003
//*------------------------------------------------------------         00030003
//* EX: DE 3380 VERS 3390                                               00030003
//*------------------------------------------------------------         00030003
//STEP1  EXEC PGM=ADRDSSU,REGION=4M,PARM='UTILMSG=YES,TYPRUN=NORUN'
//*TEP1  EXEC PGM=ADRDSSU,REGION=4M,PARM='UTILMSG=YES'
//SYSPRINT DD SYSOUT=*
//DD1      DD UNIT=3380,VOL=SER=EXPL27,DISP=SHR
//DD2      DD UNIT=3390,VOL=SER=EXPL76,DISP=SHR
//SYSIN    DD *
 COPY DS(INCL(RSD.**) ) -
      LOGINDD(DD1)              -
      OUTDD(DD2)                -
      ALLDATA(*) ALLEXCP        -
      RECATALOG(*)              -
      TOLERATE(ENQF)            -
      ALLMULTI                  -
      CANCELERROR               -
      PURGE                     -
      PROCESS(UNDEF SYS1)       -
      SPHERE                    -
      TGTALLOC(SRC)             -
      TGTGDS(SRC)               -
      WAIT(2,2)

./ ADD NAME=OPCAEXIT
//SYSPGR1  JOB 1000,'SYST-GRANIE',REGION=2M,                            00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPGR          00020001
//*------------------------------------------------------------         00030003
//*  JCL POUR REFAIRE L'EXIT JES2 DE OPCA : SYS1.LINKLIB(HASPUEX7)
//*===================================================================
//*
//* THIS JOB MAY BE USED TO ASSEMBLE AND LINKEDIT A JES2 EXIT.
//* NOTE THAT IT IS IMPORTANT THAT THE JES2 MACRO LIBRARY TO BE
//* USED (SYS1.HASPSRC LIBRARY) EXACTLY MATCHES THE LEVEL OF
//* THE JES2 SYSTEM WHERE THE EXIT IS TO BE INVOKED.
//*
//*  ASSUMPTIONS:
//*
//*  AN OBJECT MODULE LIBRARY CALLED &PFIX..OBJ IS ASSUMED TO BE
//*  AVAILABLE.
//*  THE MVS MACRO LIBRARY SYS1.AMODGEN MUST BE INCLUDED IN
//*  THE SYSLIB DD-NAME DEFINITION.
//*  JES2 EXIT LOAD MODULES ARE ASSUMED TO RESIDE IN SYS1.LINKLIB.
//*
//*===================================================================
//ASMH     EXEC PGM=IEV90,PARM='NODECK,OBJECT,XREF(SHORT),LIST'
//SYSPRINT DD  SYSOUT=*
//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB,VOL=SER=ESA2P1,UNIT=3390
//         DD  DISP=SHR,DSN=SYS1.AGENLIB
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//         DD  DISP=SHR,DSN=SYS1.HASPSRC
//         DD  DISP=SHR,DSN=SYS1.MODGEN,VOL=SER=ESA2P1,UNIT=3390
//         DD  DISP=SHR,DSN=OPCA.INST.OPCMACS,VOL=SER=ESA2P1,UNIT=3390
//*        DD  DISP=SHR,DSN=SYS1.JSX.JSXASM,VOL=SER=ESA2P1,UNIT=3390
//SYSIN    DD  DISP=SHR,DSN=OPCA.INST.OPCSAMP(DRKXIT72),
//         VOL=SER=ESA2P1,UNIT=3390
//SYSLIN   DD  DISP=SHR,DSN=OPCA.INST.OPCOBJ(EXIT7),
//         VOL=SER=ESA2P1,UNIT=3390
//SYSUT1   DD  UNIT=3390,SPACE=(CYL,(2,1))
//*
//LKED     EXEC PGM=IEWL,REGION=768K,
//         PARM='NCAL,LIST,LET,RENT,SIZE=(400K,80K)'
//SYSPRINT  DD  SYSOUT=*
//SYSUT1    DD  UNIT=3390,SPACE=(CYL,(2,1))
//*YSLMOD   DD  DISP=SHR,DSN=SYS1.LINKLIB,
//*        VOL=SER=ESA2P1,UNIT=3390
//SYSLMOD   DD  DISP=SHR,DSN=SYSPGR.LOAD
//EXITLIB   DD  DISP=SHR,DSN=OPCA.INST.OPCOBJ,
//         VOL=SER=ESA2P1,UNIT=3390
//SYSLIN    DD  *
 INCLUDE EXITLIB(EXIT7)
 NAME    HASPUEX7(R)
/*

./ ADD NAME=OPCEXIT7
//SYSILEA  JOB (1),'OPCS',CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),
//         NOTIFY=&SYSUID,COND=(4,LT),RESTART=LKED
//*===================================================================
//*
//* THIS JOB MAY BE USED TO ASSEMBLE AND LINKEDIT THE JES2 EXIT7.
//*
//* IT IS PREFERABLE THAT THE EQQJES2U JCL SAMPLE IS USED INSTEAD
//* OF THIS JCL SAMPLE WHEN THE JES2 EXIT7 IS GENERATED.
//* BUT, IF THIS SAMPLE IS USED, CAREFULLY READ THE NOTE1 AND
//* NOTE2 BELOW AND KEEP THAT IN MIND.
//*
//* NOTE1.
//* IT IS IMPORTANT THAT THE JES2 MACRO LIBRARY TO BE
//* USED EXACTLY MATCHES THE LEVEL OF
//* THE JES2 SYSTEM WHERE THE EXIT IS TO BE INVOKED:
//* CHANGE THE 'SYS1.JES2.SMPMTS' DATA SET NAME TO YOUR INSTALLATIONS
//* NAME OF THE SMPMTS DATA SET FOR JES2.
//*
//* NOTE2.
//* IT IS IMPORTANT THAT THE EXIT7 IS RE-INSTALLED WHEN MAINTANENCE
//* HAS BEEN APPLIED TO JES2.
//*
//* FOR JES2 SP2 AND JES2 SP3 SYSTEMS:
//*   USE THE EQQXIT72 SAMPLE AS SYSIN.
//*
//* FOR JES2 SP4 SYSTEMS:
//*   USE THE EQQXIT74 SAMPLE AS SYSIN.
//*
//*  ASSUMPTIONS:
//*
//*  AN OBJECT MODULE LIBRARY CALLED OPCS.INSTV3.OBJ
//*  IS ASSUMED TO BE AVAILABLE.
//*
//*  JES2 EXIT LOAD MODULES ARE ASSUMED TO RESIDE IN SYS1.LINKLIB.
//*
//*  CHANGES
//*  $E05 - KE20273 920525 MAH: EQQJOBS JOB OVERFLOW
//*===================================================================
//ASMH     EXEC PGM=ASMA90,PARM='NODECK,OBJECT,XREF(SHORT),LIST'
//SYSPRINT DD  SYSOUT=*
//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.MODGEN -- FOR MVS SP313 AND LATER
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//         DD  DISP=SHR,DSN=SMPE.SMPMTS
//         DD  DISP=SHR,DSN=SYS1.V1R3M0.SHASSRC
//         DD  DISP=SHR,DSN=SYS1.V1R3M0.SHASMAC
//         DD  DISP=SHR,DSN=OPCV2.INST.SEQQMAC0
//         DD  DISP=SHR,DSN=OPCV2.INST.AEQQMAC0
//SYSIN    DD  DISP=SHR,DSN=OPCV2.INST.SEQQSAMP(EQQXIT74)
//*                                                    -- JES2 SP4
//SYSLIN   DD  DISP=SHR,DSN=OPCS.INSTV2.SEQQOBJ(EXIT7)
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(2,1))
//LKED     EXEC PGM=IEWL,REGION=768K,COND=(4,LT),
//         PARM='NCAL,LIST,LET,RENT,SIZE=(400K,80K)'
//SYSPRINT  DD  SYSOUT=*
//SYSUT1    DD  UNIT=SYSDA,SPACE=(CYL,(2,1))
//SYSLMOD   DD  DISP=SHR,DSN=SYS1.LINKLIB,UNIT=3390,VOL=SER=ESA2B1
//*YSLMOD   DD  DISP=SHR,DSN=SYSILE.TEST.LOADLIB
//EXITLIB   DD  DISP=SHR,DSN=OPCS.INSTV2.SEQQOBJ
//SYSLIN    DD  *
 INCLUDE EXITLIB(EXIT7)
 NAME    HASPUEX7
/*

./ ADD NAME=PDSALTD
//SYS0191J JOB 1000,'PH-GRANIE',REGION=4M,                              00001002
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00002002
//*------------------------------------------------------------         00003000
//*                                                                     00004000
//STEP1    EXEC PGM=IEBCOPY                                             00005000
//SYSPRINT DD SYSOUT=*                                                  00006000
//PDSWK4    DD UNIT=3390,SPACE=(CYL,(50,10))                            00007000
//JCLB      DD DSN=&SYSUID..&SYSNAME..TEST,DISP=SHR                     00008002
//SYSIN     DD *                                                        00009000
 ALTERDIR OUTDD=JCLB,BLOCKS=10                                          00010000
/*                                                                      00020000

./ ADD NAME=PDSCMDQ
//SYSILEA JOB 100,'SYST',CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),
//     COND=(04,LT),REGION=2048K,NOTIFY=&SYSUID
//STAT     EXEC PGM=IEBGENER,REGION=4M
//SYSIN    DD   DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD   SYSOUT=(A,INTRDR)
//SYSUT1   DD   *,DLM=ZZ
/*$VS,'F PDSMAN,STAT'
ZZ
//*-------   WAIT  ---------------------------------------------
//STEPWAIT EXEC PGM=TECHWAIT,PARM=' 00001000'
//*-------------------------------------------------------------
//MCPUNET  EXEC PGM=IEBGENER,REGION=4M
//SYSIN    DD   DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD   SYSOUT=(A,INTRDR)
//SYSUT1   DD   *,DLM=ZZ
/*$VS,'F PDSMAN,MCPUNET'
ZZ
//*-------   WAIT  ---------------------------------------------
//STEPWAIT EXEC PGM=TECHWAIT,PARM=' 00001000'
//*-------------------------------------------------------------
//MCPUINFO EXEC PGM=IEBGENER,REGION=4M
//SYSIN    DD   DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD   SYSOUT=(A,INTRDR)
//SYSUT1   DD   *,DLM=ZZ
/*$VS,'F PDSMAN,MCPUINFO'
/*$VS,'àBR,F PDSMAN,MCPUINFO'
/*$VS,'àB2,F PDSMAN,MCPUINFO'
ZZ
//*-------   WAIT  ---------------------------------------------
//STEPWAIT EXEC PGM=TECHWAIT,PARM=' 00001000'
//*-------------------------------------------------------------
//MCPUDET  EXEC PGM=IEBGENER,REGION=4M
//SYSIN    DD   DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD   SYSOUT=(A,INTRDR)
//SYSUT1   DD   *,DLM=ZZ
/*$VS,'F PDSMAN,MCPUDET'
/*$VS,'àBR,F PDSMAN,MCPUDET'
/*$VS,'àB2,F PDSMAN,MCPUDET'
ZZ
//*-------   WAIT  ---------------------------------------------
//STEPWAIT EXEC PGM=TECHWAIT,PARM=' 00001000'
//*-------------------------------------------------------------
//HAND     EXEC PGM=IEBGENER,REGION=4M
//SYSIN    DD   DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD   SYSOUT=(A,INTRDR)
//SYSUT1   DD   *,DLM=ZZ
/*$VS,'F PDSMAN,HAND'
//

./ ADD NAME=PDSCMDR
//SYSILEA JOB 100,'SYST',CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),
//     COND=(04,LT),REGION=2048K,NOTIFY=&SYSUID
//STAT     EXEC PGM=IEBGENER,REGION=4M
//SYSIN    DD   DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD   SYSOUT=(A,INTRDR)
//SYSUT1   DD   *,DLM=ZZ
/*$VS,'F PDSMAN,STAT'
ZZ
//*-------   WAIT  ---------------------------------------------
//STEPWAIT EXEC PGM=TECHWAIT,PARM=' 00001000'
//*-------------------------------------------------------------
//MCPUNET  EXEC PGM=IEBGENER,REGION=4M
//SYSIN    DD   DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD   SYSOUT=(A,INTRDR)
//SYSUT1   DD   *,DLM=ZZ
/*$VS,'F PDSMAN,MCPUNET'
ZZ
//*-------   WAIT  ---------------------------------------------
//STEPWAIT EXEC PGM=TECHWAIT,PARM=' 00001000'
//*-------------------------------------------------------------
//MCPUINFO EXEC PGM=IEBGENER,REGION=4M
//SYSIN    DD   DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD   SYSOUT=(A,INTRDR)
//SYSUT1   DD   *,DLM=ZZ
/*$VS,'F PDSMAN,MCPUINFO'
/*$VS,'àB2,F PDSMAN,MCPUINFO'
/*$VS,'àBQ,F PDSMAN,MCPUINFO'
ZZ
//*-------   WAIT  ---------------------------------------------
//STEPWAIT EXEC PGM=TECHWAIT,PARM=' 00001000'
//*-------------------------------------------------------------
//MCPUDET  EXEC PGM=IEBGENER,REGION=4M
//SYSIN    DD   DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD   SYSOUT=(A,INTRDR)
//SYSUT1   DD   *,DLM=ZZ
/*$VS,'F PDSMAN,MCPUDET'
/*$VS,'àB2,F PDSMAN,MCPUDET'
/*$VS,'àBQ,F PDSMAN,MCPUDET'
ZZ
//*-------   WAIT  ---------------------------------------------
//STEPWAIT EXEC PGM=TECHWAIT,PARM=' 00001000'
//*-------------------------------------------------------------
//HAND     EXEC PGM=IEBGENER,REGION=4M
//SYSIN    DD   DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD   SYSOUT=(A,INTRDR)
//SYSUT1   DD   *,DLM=ZZ
/*$VS,'F PDSMAN,HAND'
//

./ ADD NAME=PDSCMD2
//SYSILEA JOB 100,'SYST',CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),
//     COND=(04,LT),REGION=2048K,NOTIFY=&SYSUID
//STAT     EXEC PGM=IEBGENER,REGION=4M
//SYSIN    DD   DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD   SYSOUT=(A,INTRDR)
//SYSUT1   DD   *,DLM=ZZ
/*$VS,'F PDSMAN,STAT'
ZZ
//*-------   WAIT  ---------------------------------------------
//STEPWAIT EXEC PGM=TECHWAIT,PARM=' 00001000'
//*-------------------------------------------------------------
//MCPUNET  EXEC PGM=IEBGENER,REGION=4M
//SYSIN    DD   DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD   SYSOUT=(A,INTRDR)
//SYSUT1   DD   *,DLM=ZZ
/*$VS,'F PDSMAN,MCPUNET'
ZZ
//*-------   WAIT  ---------------------------------------------
//STEPWAIT EXEC PGM=TECHWAIT,PARM=' 00001000'
//*-------------------------------------------------------------
//MCPUINFO EXEC PGM=IEBGENER,REGION=4M
//SYSIN    DD   DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD   SYSOUT=(A,INTRDR)
//SYSUT1   DD   *,DLM=ZZ
/*$VS,'F PDSMAN,MCPUINFO'
/*$VS,'àBR,F PDSMAN,MCPUINFO'
/*$VS,'àBQ,F PDSMAN,MCPUINFO'
ZZ
//*-------   WAIT  ---------------------------------------------
//STEPWAIT EXEC PGM=TECHWAIT,PARM=' 00001000'
//*-------------------------------------------------------------
//MCPUDET  EXEC PGM=IEBGENER,REGION=4M
//SYSIN    DD   DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD   SYSOUT=(A,INTRDR)
//SYSUT1   DD   *,DLM=ZZ
/*$VS,'F PDSMAN,MCPUDET'
/*$VS,'àBR,F PDSMAN,MCPUDET'
/*$VS,'àBQ,F PDSMAN,MCPUDET'
ZZ
//*-------   WAIT  ---------------------------------------------
//STEPWAIT EXEC PGM=TECHWAIT,PARM=' 00001000'
//*-------------------------------------------------------------
//HAND     EXEC PGM=IEBGENER,REGION=4M
//SYSIN    DD   DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD   SYSOUT=(A,INTRDR)
//SYSUT1   DD   *,DLM=ZZ
/*$VS,'F PDSMAN,HAND'
//

./ ADD NAME=PDSMAN
/*$VS,'F PDSMAN,STAT'
/*$VS,'F PDSMAN,MCPUNET'
/*$VS,'F PDSMAN,MCPUINFO'
/*$VS,'àB2,F PDSMAN,MCPUINFO'
/*$VS,'àBQ,F PDSMAN,MCPUINFO'
/*$VS,'F PDSMAN,MCPUDET'
/*$VS,'àB2,F PDSMAN,MCPUDET'
/*$VS,'àBQ,F PDSMAN,MCPUDET'
/*$VS,'F PDSMAN,HAND'

./ ADD NAME=PDSMAN1
//SYSPGRD  JOB 1000,'PH-GRANIE',REGION=2M,                              00001000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00002000
//*------------------------------------------------------------         00003000
//* DESACTIVE LA RECHERCHE DYNAMIQUE DES TTR PAR PDSMAN                 00030001
//* POUR LE PDS : PRO.OPCA.JCLBASE (DYNON POUR REACTIVER)               00030101
//*------------------------------------------------------------         00031001
//STEP1  EXEC PGM=PDSM26,PARM='DYNOFF=PRO.OPCA.JCLBASE'                 00032001
//*STEP1  EXEC PGM=PDSM26,PARM='DYNON=PRO.OPCA.JCLBASE'                 00040001
//PDSMRPT  DD SYSOUT=*                                                  00110000

./ ADD NAME=PELBRNQ
//SYSGFO1 JOB 1,SYSTEME,MSGCLASS=T,CLASS=A,NOTIFY=SYSGFO
//*
//*********************************************************************
//*               EUROCLEAR  RADIANZ
//*********************************************************************
//*
//STEP01   EXEC  PGM=PELICA2,REGION=4M
//STEPLIB  DD  DSN=INTERPEL.BRNQ.V732.LOAD,DISP=SHR
//PELPARMS DD  DISP=SHR,DSN=INTERPEL.BRNQ.V722.PARMLIB(ZPARMSRQ)
//LISTE    DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
DEST=PH03CAT
LOCAL=CATPH03
DSNORIG=SYSGFO.PELICAN.R225
APPL=000
COMP=3
FILECODE=E
N=RCFTTEST
//*
//*********************************************************************
//*               EUROCLEAR  INFONET
//*********************************************************************
//*
//STEP02   EXEC  PGM=PELICA2,REGION=4M
//STEPLIB  DD  DSN=INTERPEL.BRNQ.V732.LOAD,DISP=SHR
//PELPARMS DD  DISP=SHR,DSN=INTERPEL.BRNQ.V722.PARMLIB(ZPARMSRQ)
//LISTE    DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
DEST=PH05CAT
LOCAL=CATPH05
DSNORIG=SYSGFO.PELICAN.R225
APPL=000
COMP=3
FILECODE=E
N=RCFTTEST
//*
//STEPFIN  EXEC PGM=IEFBR14
//

./ ADD NAME=PELBRN2
//SYSGFO1 JOB 1,SYSTEME,MSGCLASS=T,CLASS=A,NOTIFY=SYSGFO
//*********************************************************************
//*               REQUETE DE TRANSFET BATCH PESIT HORS SIT
//*               =========================
//*********************************************************************
//*
//STEP01   EXEC  PGM=PELICA2,REGION=4M
//STEPLIB  DD  DSN=INTERPEL.BRN2.V732.LOAD,DISP=SHR
//PELPARMS DD  DISP=SHR,DSN=INTERPEL.TCPIP.PARMLIB(ZPARMSRQ)
//LISTE    DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
DEST=PP03SCB
LOCAL=SCBPP03
DSNORIG=SYSGFO.PELICAN.R225
APPL=000
COMP=3
FILECODE=E
N=RCFTTEST
//*
//STEPFIN  EXEC PGM=IEFBR14
//

./ ADD NAME=PKZIP
//DSSZIP PROC DUNIT=DISK,VOLSER='REQUIRED',OUTVOL='REQUIRED',           00010000
// DSSDSN='REQUIRED',TUNIT=CART                                         00020000
//********************************************************************  00030000
//*** THIS PROC HAS TWO STEPS                                           00040000
//*** THE FIRST STEP INVOKES DFSMSdss TO BACKUP A SET OF DATASETS       00050000
//*** THE SECOND STEP INVOKES SECUREZIP TO ZIP THE OUPUT OF THE dss     00060000
//*** THE SYMBOLIC PARAMETERS FOR THIS STEP ARE:                        00070000
//*** TUNIT - USED TO SPECIFY THE TAPE UNIT TYPE - DEFAULT=CART         00080000
//*** DUNIT - USED TO SPECIFY UNIT PARAMETER ON THE DASD DD CARD        00090000
//*** VOLSER - USED TO SPECIFY VOLUME SERIAL OF DASD DD CARD            00100000
//*** OUTVOL - USED TO SPECIFY VOLUME SERIAL OF THE dss OUTPUT TAPE     00110000
//*** DSSDSN - USED TO SPECIFY THE DSN OF THE OUTPUT FILE OF dss        00120000
//*** TO RUN - ENTER SYMBOLIC PARMS AND ENTER THE PASSWORD TO USE       00130000
//*** AND THE DATASETNAME MASK TO DUMP WITH dss                         00140000
//********************************************************************  00150000
//DSS EXEC PGM=ADRDSSU                                                  00160000
//SYSPRINT DD SYSOUT=*                                                  00170000
//DASD DD UNIT=&DUNIT.,VOL=(PRIVATE,SER=&VOLSER.),DISP=OLD              00180000
//TAPE DD UNIT=&TUNIT.,                                                 00190000
// DCB=(BLKSIZE=32760),                                                 00200000
// LABEL=(1,SL),DISP=(NEW,CATLG),DSNAME=&DSSDSN.                        00210000
//ZIPIT EXEC PGM=SECZIP,COND=(4,LT,DSS)                                 00220000
//SYSPRINT DD SYSOUT=*                                                  00230000
//INFILE1 DD DSN=&DSSDSN.,                                              00240000
// DISP=(OLD,KEEP),                                                     00250000
// UNIT=&TUNIT.                                                         00260000
//ARCHOUT DD DSN=&ZIPDSN.,UNIT=&TUNIT.,DISP=(NEW,CATLG),                00270000
// DCB=(RECFM=FB,LRECL=32760,BLKSIZE=32760),LABEL=(1,SL)                00280000
// PEND                                                                 00290000
//DOIT EXEC DSSZIP,DSSDSN='dss.output.tape',                            00300000
// VOLSER=disk01,OUTVOL=dsstap,ZIPDSN=ZIPPED.ARCHIVE                    00310000
//DSS.SYSIN DD *                                                        00320000
DUMP DATASET(INCLUDE(my.datasetname.mask)) -                            00330000
INDDNAME(DASD) OUTDDNAME(TAPE)                                          00340000
/*                                                                      00350000
//ZIPIT.SYSIN DD *                                                      00360000
-ENCRYPTION_METHOD(BSAFE_AES256)                                        00370000
-PWD(|                                                                  00380000
Put your password here)                                                 00390000
-ARCHIVE_OUTFILE(ARCHOUT)                                               00400000
-ADD                                                                    00410000
-INFILE(INFILE1)                                                        00420000
-DATA_TYPE(BINARY)                                                      00430000
-SAVE_LRECL=Y                                                           00440000
//                                                                      00450000

./ ADD NAME=PPFA
//SYSILER  JOB (1000,SYST),'OSR10',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=8500K,
//         CLASS=O,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//*
//********************************************************************
//* THE PURPOSE OF THIS JOB IS TO CREATE A PAGE DEFINITION AND A FORM
//* DEFINITION DESIGNED FOR ALL PPFA SUPPORTED PRINTERS.
//*
//* NOTES:
//*
//*   1.   A RETURN CODE OF 00 IS EXPECTED
//*   2.   CHECK/CHANGE DATASET NAME
//********************************************************************
//STEP     EXEC PGM=AKQPPFA
//FORMLIB  DD   DSN=SYSILE.FORMLIB,DISP=SHR
//*AGELIB  DD   DSN=SYSILE.PAGELIB,DISP=SHR
//PAGELIB  DD   DSN=SYST.PDEFLIB,DISP=SHR
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   DSN=SYST.AFP.PPFA(AYPJ064X),DISP=SHR
//*SYSIN DD *
//
PAGEDEF    L08584
           REPLACE YES;

PAGEFORMAT L08584
           WIDTH   13.2   IN
           HEIGHT  10.67  IN
           DIRECTION ACROSS;

SETUNITS   LINESP  8.01 LPI;

PRINTLINE  REPEAT   85
           CHANNEL  1
           POSITION MARGIN  30 PELS;

./ ADD NAME=PRNTVVDS
//PRNTVVDS JOB 'SYSTEME',
//         NOTIFY=&SYSUID,REGION=4M,
//         CLASS=O,MSGLEVEL=(1,1),MSGCLASS=T
//VVDS     EXEC PGM=IDCAMS,REGION=4M
//TEST     DD DSN=SYS1.VVDS.VYREC00,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
    PRINT                           -
    INFILE(TEST)
/*

./ ADD NAME=PROXALIA
//PROXALIA JOB 1,'B-T',MSGLEVEL=(1,1),CLASS=A,MSGCLASS=X,               00010004
//          NOTIFY=&SYSUID,REGION=4M                                    00020008
//*===========================================================*         00030101
//* CATALOGUE PRE-PROD BRNQ   : CATALOG.CRECT3 (OBJET PREPROD)          00032322
//*                                                                     00032405
//* CATALOGUE RECETTE COMMUNE : CATALOG.CRECT1 (OBJET RECETTE)          00032505
//*                           : CATALOG.CRECT2 (OBJET RECETTE)          00032718
//*                           : CATALOG.CRECT3 (OBJET RECETTE)          00032805
//*                                                                     00032906
//* CATALOGUE PRODUCTION      : CATALOG.GPROD7 (OBJET PRODUCT)          00033011
//*===========================================================*         00033201
//DEFALIAS  EXEC  PGM=IDCAMS                                            00034005
//SYSPRINT  DD  SYSOUT=*                                                00040000
//SYSIN     DD  *                                                       00050000
 DEFINE  ALIAS  (NAME(CVM5)                 -                           00429722
         RELATE(CATALOG.CRECT3))            -                           00429822
 CATALOG(CATALOG.MASTER.ZOS13.BRN2.BACKUP)                              00429905
 DEFINE  ALIAS  (NAME(CVM5)                 -                           00430022
         RELATE(CATALOG.CRECT3))            -                           00431022
 CATALOG(CATALOG.MASTER.ZOS13.BRN2)                                     00431105
 DEFINE  ALIAS  (NAME(CVM5)                 -                           00431322
         RELATE(CATALOG.CRECT3))            -                           00431422
 CATALOG(CATALOG.MASTER.ZOS13.BRNR)                                     00431505
 DEFINE  ALIAS  (NAME(CVM5)                 -                           00431922
         RELATE(CATALOG.CRECT3))            -                           00432022
 CATALOG(CATALOG.MASTER.ZOS13.LP2)                                      00432105
 DEFINE  ALIAS  (NAME(CVM5)                 -                           00432222
         RELATE(CATALOG.CRECT3))            -                           00432322
 CATALOG(CATALOG.MASTER.ZOS13.BRN1)                                     00432405
 DEFINE  ALIAS  (NAME(CVM5)                 -                           00432522
         RELATE(CATALOG.CRECT3))            -                           00432622
 CATALOG(CATALOG.MASTER.ZOS13.BRNQ)                                     00432705
//                                                                      00432922
//******************************************************************    00470010
//*      CREATION D'UN PROFILE DATASET DANS RACF DATASET                00480010
//*      -----------------------------------------------                00490010
//*    A EXECUTER POUR LES CREATIONS D'ALIAS DE PRODUCTION              00500010
//*    ----------> STCOPAL SI EURO                                      00510010
//*    ----------> STCPRC SI PROD                                       00520010
//******************************************************************    00530010
//RACFID   EXEC PGM=IKJEFT01                                            00540010
//SYSPRINT DD SYSOUT=*                                                  00550010
//SYSTSOUT DD SYSOUT=*                                                  00560010
//SYSTSPRT DD SYSOUT=*                                                  00570010
//SYSTSIN  DD *                                                         00571014
 ADDGROUP CVM5 OWNER(PRODMGT) SUPGROUP(PRODMGT)                         00580022
 ADDSD  'CVM5.*' GENERIC OWNER(PRODMGT) UACC(NONE)                      00590022
 PERMIT 'CVM5.*' ACCESS(ALTER) ID(PRODMGT,PREP,SUPTECH,STCPRC,CTRL)     00600022
 PERMIT 'CVM5.*' ACCESS(READ) ID(DEVMGT,PROJ,STCGRP)                    00610022
 LD DA('CVM5.*') AUTHUSER                                               00620022
/*                                                                      00630010
//*                                                                     00640010

./ ADD NAME=PSFCONV
//SYSPGR1J JOB 1000,'P-GRANIE',REGION=4M,                               00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00030000
//* PROC DE CONVERSION (VOIR JOB PSFCONV1 POUR EXECUTION)               00040001
//*------------------------------------------------------------         00041001
//CON       PROC NAME=                                                  00050000
//S1        EXEC PGM=APSRCF30,REGION=5120K                              00060000
//*              INSERT YOUR INPUT 240 PEL FONT LIBRARY                 00070000
//SYSUT1    DD DISP=SHR,DSN=SYST.AFP.FONTLIBB.SCT(&NAME)                00080000
//*              INSERT YOUR OUTPUT 300 PEL FONT LIBRARY                00090000
//SYSUT2    DD DISP=SHR,DSN=SYST.AFP.FONTLIBB.PEL300.SCT(&NAME)         00100000
//*              CONVERSION CHARACTER DATASET DDNAME                    00110000
//FONTB300  DD DISP=SHR,DSN=SYS1.SAPSDAT0                               00120000
//          PEND                                                        00130000
//*         PEND                                                        00140000

./ ADD NAME=PSFCONV1
//SYSPGR1J JOB 1000,'P-GRANIE',REGION=4M,                               00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00030000
//* 1) EXECUTION DE CE JOB: CREATION DU JCL DE CONVERSION               00040000
//*                         DANS SYSPGR.LIST4                           00041000
//* 2) SUBMIT DE SYSPGR.LIST4 : CONVERSION EN 300PEL                    00042000
//*------------------------------------------------------------         00050000
//S1        EXEC PGM=APSRAL30,REGION=5120K                              00060000
//SYSUT1    DD DISP=SHR,DSN=SYST.AFP.FONTLIBB.SCT                       00070000
//SYSUT2    DD DISP=SHR,DSN=SYST.MVS.JCLLIB(PSFCONV)                    00080000
//SYSUT3    DD DISP=SHR,DSN=SYSPGR.LIST4                                00090000

./ ADD NAME=PSFCONV2
//SYSPGR1J JOB 1000,'P-GRANIE',REGION=4M,                               00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00030000
//* PROC DE CONVERSION (VOIR JOB PSFCONV1 POUR EXECUTION)               00040000
//*------------------------------------------------------------         00041000
//CON       PROC NAME=                                                  00042000
//S1        EXEC PGM=APSRCF30,REGION=5120K                              00043000
//*              INSERT YOUR INPUT 240 PEL FONT LIBRARY                 00044000
//SYSUT1    DD DISP=SHR,DSN=SYST.AFP.FONTLIBB(&NAME)                    00045000
//*              INSERT YOUR OUTPUT 300 PEL FONT LIBRARY                00046000
//SYSUT2    DD DISP=SHR,DSN=SYST.AFP.FONTLIBB.PEL300(&NAME)             00047001
//*              CONVERSION CHARACTER DATASET DDNAME                    00048000
//FONTB300  DD DISP=SHR,DSN=SYS1.SAPSDAT0                               00049000
//          PEND                                                        00050000
//*         PEND                                                        00060000

./ ADD NAME=PSFCONV3
//SYSPGR1J JOB 1000,'P-GRANIE',REGION=4M,                               00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00030000
//* 1) EXECUTION DE CE JOB: CREATION DU JCL DE CONVERSION               00040000
//*                         DANS SYSPGR.LIST4                           00041000
//* 2) SUBMIT DE SYSPGR.LIST4 : CONVERSION EN 300PEL                    00042000
//*------------------------------------------------------------         00043000
//S1        EXEC PGM=APSRAL30,REGION=5120K                              00044000
//SYSUT1    DD DISP=SHR,DSN=SYST.AFP.FONTLIBB                           00045000
//SYSUT2    DD DISP=SHR,DSN=SYST.MVS.JCLLIB(PSFCONV2)                   00046000
//SYSUT3    DD DISP=SHR,DSN=SYSPGR.LIST4                                00047000

./ ADD NAME=RACFICHR
//RACFSTC   JOB (T002550),'RACFSTC',                                    00001001
//             NOTIFY=&SYSUID,                                          00001101
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00001201
//**********************************************************************00002000
//*   RAJOUT D UNE STC DANS RACF                                        00003001
//*   ATTENTION !!!! IL Y A UN CARACTERE DE CONTINUATION EN COLONNE 72  00003101
//*   POUR LA COMMANDE RDEFINE                                          00003201
//**********************************************************************00004000
//RACFID   EXEC PGM=IKJEFT01                                            00005000
//SYSPRINT DD SYSOUT=*                                                  00006000
//SYSTSOUT DD SYSOUT=*                                                  00007000
//SYSTSPRT DD SYSOUT=*                                                  00008000
//SYSTSIN  DD *                                                         00009000
  RDEFINE STARTED CICTAGI3.* STDATA( USER(STCUSR) GROUP(STCGRP)       - 00009117
  PRIVILEGED(NO) TRUSTED(NO) TRACE(NO) )                                00009202
  SETROPTS RACLIST(STARTED) REFRESH                                     00010510
//                                                                      00010610
  RALTER STARTED MUFLQUAL.* STDATA( USER(STCUSR))                       00010710
  SETROPTS RACLIST(STARTED) REFRESH                                     00010810
//                                                                      00011010
  RDELETE STARTED MUFLQUAL.*                                            00020002
  SETROPTS RACLIST(STARTED) REFRESH                                     00030000
//                                                                      00040000

./ ADD NAME=RACFJES2
//SYSILEA  JOB CLASS=I,MSGCLASS=T,NOTIFY=&SYSUID                        00001000
//**********************************************************************00002000
//*   ACTIVATION DES PROFILES DATAQUERY                                 00003000
//**********************************************************************00004000
//RACFID   EXEC PGM=IKJEFT01                                            00005000
//SYSPRINT DD SYSOUT=*                                                  00006000
//SYSTSOUT DD SYSOUT=*                                                  00007000
//SYSTSPRT DD SYSOUT=*                                                  00008000
//SYSTSIN  DD *                                                         00009000
 RDEFINE OPERCMDS JESR.VS  UACC(CONTROL) AUDIT(NONE)                    00010000

./ ADD NAME=RACFNJE
//SYSPGR1  JOB 1000,'PH-GRANIE',REGION=2M,                              00001000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00002000
//*------------------------------------------------------------         00003000
//SECJD005 EXEC PGM=IKJEFT01                                            00004000
//SYSPRINT DD SYSOUT=*                                                  00005000
//SYSTERM  DD SYSOUT=*                                                  00006000
//SYSTSPRT DD SYSOUT=*                                                  00007000
//SYSTSIN  DD *                                                         00008000
  RALTER RACFVARS &RACLNDE ADDMEM(BRNQ)                                 00009000
  SETROPTS REFRESH RACLIST(RACFVARS)                                    00009100
/*                                                                      00010000
//                                                                      00020000
  SETROPTS CLASSACT(RACFVARS) RACLIST(RACFVARS)                         00020100
  RALTER RACFVARS &RACLNDE ADDMEM(BRN2)                                 00020200
  SETROPTS CLASSACT(RACFVARS) RACLIST(RACFVARS)                         00020300
  RALTER RACFVARS &RACLNDE ADDMEM(BRN1)                                 00020400
  RDEFINE RACFVARS &RACLNDE UACC(NONE)                                  00020500

./ ADD NAME=RACFNJEC
//SYSPGR1  JOB 1000,'PH-GRANIE',REGION=2M,                              00001000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00002000
//*------------------------------------------------------------         00003000
//SECJD005 EXEC PGM=IKJEFT01                                            00004000
//SYSPRINT DD SYSOUT=*                                                  00005000
//SYSTERM  DD SYSOUT=*                                                  00006000
//SYSTSPRT DD SYSOUT=*                                                  00007000
//SYSTSIN  DD *                                                         00008000
  RALTER RACFVARS &RACLNDE DELMEM(BRN2)                                 00008107
  SETROPTS CLASSACT(NODES) RACLIST(NODES) GENERIC(NODES)                00008307
  RDEFINE NODES BRN2.USER%.* UACC(CONTROL)                              00008407
  RDEFINE NODES BRN2.GROUP%.PROJ UACC(NONE)                             00008507
  SETROPTS REFRESH GENERIC(NODES)                                       00008607
  SETROPTS REFRESH RACLIST(NODES)                                       00008707
  SETROPTS REFRESH RACLIST(RACFVARS)                                    00008807
 RLIST NODES *                                                          00008907
 RLIST RACFVARS *                                                       00009007
//                                                                      00010007

./ ADD NAME=RACFOMCR
//SYSRACF  JOB 1000,'PH-GRANIE',REGION=2M,                              00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00030300
//* definition du segment OMVS                                          00030400
//*                      11 pour users cr (répertoire /u/cr pour tous)  00030700
//*------------------------------------------------------------         00031200
//SECJD005 EXEC PGM=IKJEFT01                                            00031300
//SYSPRINT DD SYSOUT=*                                                  00031400
//SYSTERM  DD SYSOUT=*                                                  00031500
//SYSTSPRT DD SYSOUT=*                                                  00031600
//SYSTSIN  DD *                                                         00031700
  ALTUSER CR86801 OMVS(UID(11) HOME('/u/cr') PROGRAM('/bin/sh'))        00031800

./ ADD NAME=RACFOMVS
//SYSRACF  JOB 1000,'PH-GRANIE',REGION=2M,                              00010004
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*XEQ BRNR                                                             00030006
//*XEQ BRN1                                                             00030106
//*XEQ BRNQ                                                             00030206
//*------------------------------------------------------------         00030303
//* definition du segment OMVS                                          00031002
//* affectation du UID:   9 pour users exploitation                     00031102
//*                      10 pour users etudes                           00031202
//*                      11 pour users cr (répertoire /u/cr pour tous)  00031309
//*                                    pas dexecution du step MKDIR)    00031409
//*                      12 pour users G0xxxx                           00031510
//*                      13 pour users BNPPxx (répertoire /u/bnpp)      00031611
//*                      14 pour users MERxx (répertoire /u/mer)        00031711
//*------------------------------------------------------------         00032002
//SECJD005 EXEC PGM=IKJEFT01                                            00040000
//SYSPRINT DD SYSOUT=*                                                  00050000
//SYSTERM  DD SYSOUT=*                                                  00060000
//SYSTSPRT DD SYSOUT=*                                                  00070000
//SYSTSIN  DD *                                                         00080000
  ALTUSER G04964  OMVS(UID(12) HOME('/u/G04964') PROGRAM('/bin/sh'))    00090010
//*----------------------------------------------------------           00221002
//* creation du répertoire du USERID                                    00222002
//* affectation des droits sur son répertoire                           00222102
//*----------------------------------------------------------           00223002
//STEP0   EXEC PGM=IKJEFT01                                             00230001
//SYSTSPRT DD   SYSOUT=*                                                00240001
//SYSTSIN  DD   *                                                       00250001
  MKDIR '/u/G04964'                                                     00270010
  bpxbatch sh chown -R G04964     /u/G04964                             00340010
//                                                                      00341002
//                                                                      00342002
//                                                                      00343002
//                                                                      00344002
//                                                                      00345002
  ALTUSER DVXBG    OMVS(HOME('/u/DVXBG') PROGRAM('/bin/sh'))            00350002
  ALTUSER EXTMSTC3 OMVS(HOME('/u/EXTMSTC3') PROGRAM('/bin/sh'))         00360002
  ALTUSER PROEG1   OMVS(HOME('/u/PROEG1') PROGRAM('/bin/sh'))           00370002
  ALTUSER REPADS   OMVS(HOME('/u/REPADS') PROGRAM('/bin/sh'))           00380002
  ALTUSER STCPRC   OMVS(HOME('/u/STCPRC') PROGRAM('/bin/sh'))           00390002
  ALTUSER STCRECT  OMVS(HOME('/u/STCREC') PROGRAM('/bin/sh'))           00400002
  ALTUSER STCUSR   OMVS(HOME('/u/STCUSR') PROGRAM('/bin/sh'))           00410002
  ALTUSER SYSEXT2  OMVS(HOME('/u/SYSEXT2') PROGRAM('/bin/sh'))          00420002
  ALTUSER SYSGFO   OMVS(HOME('/u/SYSGFO') PROGRAM('/bin/sh'))           00430002
  ALTUSER SYSILE   OMVS(HOME('/u/SYSILE') PROGRAM('/bin/sh'))           00440002
  ALTUSER SYSJRI   OMVS(HOME('/u/SYSJRI') PROGRAM('/bin/sh'))           00450002
  ALTUSER SYSPGR   OMVS(HOME('/u/SYSPGR') PROGRAM('/bin/sh'))           00460002

./ ADD NAME=RACFOMV1
//SYSILEA  JOB 1000,'PH-GRANIE',REGION=2M,                              00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00030000
//SECJD005 EXEC PGM=IKJEFT01                                            00040000
//SYSPRINT DD SYSOUT=*                                                  00050000
//SYSTERM  DD SYSOUT=*                                                  00060000
//SYSTSPRT DD SYSOUT=*                                                  00070000
//SYSTSIN  DD *                                                         00080000
  ALTGROUP APPELS OMVS(GID(12))                                         00081001

./ ADD NAME=RACFOMV2
//SYSILEA  JOB 1000,'PH-GRANIE',REGION=2M,                              00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00030000
//STEP0   EXEC PGM=IKJEFT01                                             00230000
//SYSTSPRT DD   SYSOUT=*                                                00240000
//SYSTSIN  DD   *                                                       00250000
  bpxbatch sh chown -R SYSNVE     /u/SYSNVE                             00260001

./ ADD NAME=RACFSAVE
//SYSPGR1  JOB 1000,'SYST-GRANIE',REGION=2M,                            00001000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPGR          00002000
//*---IRRUTNNN POUR BASE CONVERTIES----------------------------         00003001
//*------------------------------------------------------------         00003101
//SECJD005 EXEC PGM=IKJEFT01                                            00004000
//SYSTERM  DD SYSOUT=*                                                  00005000
//SYSTSPRT DD SYSOUT=*                                                  00006000
//SYSTSIN  DD *                                                         00007000
  RVARY SWITCH DATASET(SYS1.RACF)                                       00008000
/*                                                                      00009000
//*******************************************************************   00020000
//***** SAUVEGARDE FICHIER RACF PRIMAIRE SUR DISQUE             *****   00030000
//*******************************************************************   00040000
//SECJD010 EXEC PGM=IRRUT200                                            00041001
//SYSRACF  DD DISP=OLD,DSN=SYS1.RACF.BKUP1,VOL=SER=SYSP01,UNIT=3380     00042000
//SYSPRINT DD SYSOUT=*                                                  00042100
//SYSUT1   DD DISP=OLD,                                                 00042200
//         DSN=SYS1.RACF                                                00042300
//SYSUT2   DD SYSOUT=*                                                  00042400
//SYSIN    DD *                                                         00042500
  END                                                                   00042600
/*                                                                      00042700
//*******************************************************************   00042800
//***** SWITCH DU FICHIER RACF BACKUP SUR LE PRIMAIRE           *****   00042900
//***** ET REACTIVATION DU FICHIER RACF BACKUP                  *****   00043000
//*******************************************************************   00043100
//SECJD030 EXEC PGM=IKJEFT01                                            00044000
//SYSTERM  DD SYSOUT=*                                                  00045000
//SYSTSPRT DD SYSOUT=*                                                  00046000
//SYSTSIN  DD *                                                         00047000
  RVARY SWITCH DATASET(SYS1.RACF.BKUP1)                                 00048000
/*                                                                      00049000
//SECJD010 EXEC PGM=IRRUT200                                            00050001
//SYSRACF  DD DISP=OLD,DSN=SYS1.RACF                                    00060000
//SYSPRINT DD SYSOUT=*                                                  00061000
//SYSUT1   DD DISP=OLD,                                                 00070000
//         DSN=SYS1.RACF.BKUP1                                          00080000
//SYSUT2   DD SYSOUT=*                                                  00090000
//SYSIN    DD *                                                         00091000
  END                                                                   00092000
/*                                                                      00093000
//SECJD030 EXEC PGM=IKJEFT01                                            00094000
//SYSTERM  DD SYSOUT=*                                                  00095000
//SYSTSPRT DD SYSOUT=*                                                  00096000
//SYSTSIN  DD *                                                         00097000
  RVARY ACTIVE DATASET(SYS1.RACF.BKUP1)                                 00098000
/*                                                                      00099000

./ ADD NAME=RACFSMP
//RACFSMP   JOB (T002550),'RACFSTC',                                    00001000
//             NOTIFY=&SYSUID,                                          00001100
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00001200
//**********************************************************************00001300
//*   RAJOUT D UNE STC DANS RACF                                        00001400
//*   ATTENTION !!!! IL Y A UN CARACTERE DE CONTINUATION EN COLONNE 72  00001500
//*   POUR LA COMMANDE RDEFINE                                          00001600
//**********************************************************************00001700
//RACFID   EXEC PGM=IKJEFT01                                            00001800
//SYSPRINT DD SYSOUT=*                                                  00001900
//SYSTSOUT DD SYSOUT=*                                                  00002000
//SYSTSPRT DD SYSOUT=*                                                  00003000
//SYSTSIN  DD *                                                         00004000
  RDEFINE FACILITY GIM.* UACC(NONE)                                     00005000
  PERMIT GIM.* CLASS(FACILITY) ID(SYS1,PRODMGT) ACCESS(READ)            00006001
  SETROPTS RACLIST(FACILITY) REFRESH                                    00007000
//                                                                      00008000

./ ADD NAME=RACFSYSQ
//RACFSYSQ JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=I,                       00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//*-------------------------------------------------------------        00030000
//* CE JCL SERT A PROTEGER LES ALIAS DE PRODUITS SYSTEME.               00040000
//* IL PROTEGE LES ALIAS CREES SUR BRNQ                                 00050000
//*-------------------------------------------------------------        00060000
//RACFID   EXEC PGM=IKJEFT01                                            00070000
//SYSPRINT DD SYSOUT=*                                                  00080000
//SYSTSOUT DD SYSOUT=*                                                  00090000
//SYSTSPRT DD SYSOUT=*                                                  00100000
//SYSTSIN  DD *                                                         00110000
 ADDGROUP RDZ OWNER(SYS1) SUPGROUP(SYS1)                                00120000
 ADDSD  'RDZ.*' GENERIC OWNER(SYS1) UACC(READ)                          00130000
 PERMIT 'RDZ.*' ACCESS(ALTER) ID(SYS1,STCPRC,STCQUAL)                   00140000
 LD DA('RDZ.*') AUTHUSER                                                00150000
/*                                                                      00160000

./ ADD NAME=RACFSYSR
//RACFSYS2 JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=I,                       00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//*-------------------------------------------------------------        00030000
//* CE JCL SERT A PROTEGER LES ALIAS DE PRODUITS SYSTEME.               00040000
//* IL PROTEGE LES ALIAS SUR BRNR                                       00050000
//*-------------------------------------------------------------        00060000
//RACFID   EXEC PGM=IKJEFT01                                            00070000
//SYSPRINT DD SYSOUT=*                                                  00080000
//SYSTSOUT DD SYSOUT=*                                                  00090000
//SYSTSPRT DD SYSOUT=*                                                  00100000
//SYSTSIN  DD *                                                         00110000
 ADDGROUP RDZ OWNER(SYS1) SUPGROUP(SYS1)                                00120000
 ADDSD  'RDZ.*' GENERIC OWNER(SYS1) UACC(READ)                          00130000
 PERMIT 'RDZ.*' ACCESS(ALTER) ID(SYS1,STCPRC,STCRECT,STCOPAL)           00140000
 LD DA('RDZ.*') AUTHUSER                                                00150000
/*                                                                      00160000

./ ADD NAME=RACFSYS2
//RACFSYS2 JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=I,                       00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//*-------------------------------------------------------------        00080000
//* CE JCL SERT A PROTEGER LES ALIAS DE PRODUITS SYSTEME.               00090000
//* IL PROTEGE LES ALIAS CREES SUR BRN2                                 00100000
//*-------------------------------------------------------------        00155000
//RACFID   EXEC PGM=IKJEFT01                                            00490000
//SYSPRINT DD SYSOUT=*                                                  00500000
//SYSTSOUT DD SYSOUT=*                                                  00510000
//SYSTSPRT DD SYSOUT=*                                                  00520000
//SYSTSIN  DD *                                                         00530000
 ADDGROUP RDZ OWNER(SYS1) SUPGROUP(SYS1)                                00540000
 ADDSD  'RDZ.*' GENERIC OWNER(SYS1) UACC(READ)                          00550000
 PERMIT 'RDZ.*' ACCESS(ALTER) ID(SYS1,STCPRC)                           00560000
 LD DA('RDZ.*') AUTHUSER                                                00580000
/*                                                                      00590000

./ ADD NAME=RACFUADS
//SYSILEA   JOB (T002550),'RACFSTC',                                    00001000
//             NOTIFY=&SYSUID,                                          00001100
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00001200
//*--------------------------------------------------------------------*00002000
//*   CE JOB PERMET DE METTRE A JOUR LES PROFILE NECESSAIRES POUR       00003000
//*   CREER UN SEGMENT TSO SOUS RACF                                    00003100
//*--------------------------------------------------------------------*00003200
//*--------------------------------------------------------------------*00003300
//*   AUTORISER LE USER A UTILISER LA PROCEDURE DE LOGON                00003400
//*   SI NOUVELLE PROCEDURE DE LOGON, PASSER LA COMMANDE :              00003500
//*            RDEFINE TSOPROC £IKJDV2  UACC(NONE)                      00003600
//*                                                                     00004000
//*--------------------------------------------------------------------*00004100
//PLOGON   EXEC PGM=IKJEFT01                                            00005000
//SYSPRINT DD SYSOUT=*                                                  00006000
//SYSTSOUT DD SYSOUT=*                                                  00007000
//SYSTSPRT DD SYSOUT=*                                                  00008000
//SYSTSIN  DD *                                                         00009000
 PERMIT  £IKJDV2 CLASS(TSOPROC)                                        +00010000
        ID(xxxxx)                                                       00020000
//*--------------------------------------------------------------------*00030000
//*   METTRE A JOUR LES AUTORISATIONS SPECIALES TSO                     00030100
//*      - OPER : autorise le user a utiliser la commande OPERATOR      00030200
//*        (CANCEL,DISPLAY,MONITOR,SEND,SLIP,STOPMN)                    00030300
//*      - ACCT : autorise le user a utiliser la commande ACCOUNT       00030400
//*      - JCL  : autorise le user a utiliser les commandes             00030500
//*               SUBMIT,STATUS,CANCEL, et OUTPUT                       00030600
//*      - MOUNT : autorise le user a faire de l'allocation dynamique   00030700
//*                sur bande                                            00030800
//*      - RECOVER : autorise le user a utiliser le mode RECOVER de     00030900
//*                  EDIT                                               00031000
//*--------------------------------------------------------------------*00032000
//*  RECOPIER LES COMMANDES CI-DESSOUS POUR LES AUTORISATIONS           00032100
//*  REQUISES (EN GéNéRAL JCL ET RECOVER)                               00032200
//*--------------------------------------------------------------------*00032300
//*        PERMIT  OPER CLASS(TSOAUTH)                                  00032400
//*               ID(xxxxx)                                             00032500
//*        PERMIT  ACCT CLASS(TSOAUTH)                                  00032600
//*               ID(xxxxx)                                             00032700
//*        PERMIT  MOUNT CLASS(TSOAUTH)                                 00032800
//*               ID(xxxxx)                                             00032900
//*        PERMIT  JCL CLASS(TSOAUTH)                                   00033000
//*               ID(xxxxx)                                             00033100
//*        PERMIT  RECOVER CLASS(TSOAUTH)                               00033200
//*               ID(xxxxx)                                             00033300
//*--------------------------------------------------------------------*00034000
//PAUTH    EXEC PGM=IKJEFT01                                            00040000
//SYSPRINT DD SYSOUT=*                                                  00050000
//SYSTSOUT DD SYSOUT=*                                                  00060000
//SYSTSPRT DD SYSOUT=*                                                  00070000
//SYSTSIN  DD *                                                         00080000
/*                                                                      00090000
//*--------------------------------------------------------------------*00100000
//*  mettre a jour le segment TSO du user                               00100100
//*    REMPLACER xxxxx PAR LE USER ET yyyyyyy PAR LA PROCEDURE          00100200
//*    DE LOGON                                                         00100300
//*--------------------------------------------------------------------*00101000
//PUSER    EXEC PGM=IKJEFT01                                            00110000
//SYSPRINT DD SYSOUT=*                                                  00120000
//SYSTSOUT DD SYSOUT=*                                                  00130000
//SYSTSPRT DD SYSOUT=*                                                  00140000
//SYSTSIN  DD *                                                         00150000
ALTUSER xxxxx                                                         + 00151000
        TSO(                                                          + 00152000
            PROC(yyyyyyy)                                             + 00153000
            ACCTNUM(ACCT£)                                            + 00154000
            SIZE(8096)                                                + 00155000
            MAXSIZE(8096)                                             + 00156000
            UNIT(TSODA)                                               + 00157000
     /*     DEST( )          */                                       + 00158000
     /*     JOBCLASS( )      */                                       + 00159000
     /*     MSGCLASS( )      */                                       + 00159100
     /*     HOLDCLASS( )     */                                       + 00159200
     /*     SYSOUTCLASS( )   */                                       + 00159300
            USERDATA(0000)                                            + 00159400
        )                                                               00159500
/*                                                                      00160000

./ ADD NAME=RACFUCAT
//SYSPGRAC JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=I,                       00010000
//         MSGCLASS=T,NOTIFY=&SYSUID                                    00020000
//RACFID   EXEC PGM=IKJEFT01                                            00290000
//SYSPRINT DD SYSOUT=*                                                  00300000
//SYSTSOUT DD SYSOUT=*                                                  00310000
//SYSTSPRT DD SYSOUT=*                                                  00320000
//SYSTSIN  DD *                                                         00330000
 ADDGROUP CATALOG.GPRODY OWNER(SYS1)                                    00340000
 ADDSD  'CATALOG.GPRODY.*' GENERIC OWNER(SYS1) UACC(READ)               00350000
 PERMIT 'CATALOG.GPRODY.*' ACCESS(UPDATE) ID(PRODMGT,PREP,SUPTECH)      00360000
 PERMIT 'CATALOG.GPRODY.*' ACCESS(UPDATE) ID(STCPRC,CTRL)               00361000
 LD DA('CATALOG.GPRODY.*') AUTHUSER                                     00380000
/*                                                                      00390000
 PERMIT 'CATALOG.GPRODY.*' ACCESS(READ) ID(DEVMGT,PROJ)                 00400000

./ ADD NAME=RAZINIT
//SYSINIT   JOB 1000,'SYSTEME',REGION=4M,                               00000103
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00000200
//*                                                                     00000300
//*          INITIALISATION D'UN DISQUE POUR REMISE A ZERO              00000403
//*         -----------------------------------------------             00000503
//*                                                                     00000603
//INIT1   EXEC PGM=ICKDSF,REGION=6M                                     00000713
//SYSPRINT DD  SYSOUT=*                                                 00000800
//SYSIN    DD  *                                                        00000900
    INIT UNITADDRESS(405) -                                             01010012
    OWNERID(SYSTEM) -                                                   01020008
    NOVERIFY       -                                                    01030008
    VOLID(IBM405) -                                                     01040012
    VTOC(0,1,14) -                                                      01050008
    INDEX(1,0,15)                                                       01060008
    INIT UNITADDRESS(401) -                                             01070010
    OWNERID(SYSTEM) -                                                   01080008
    NOVERIFY       -                                                    01090008
    VOLID(IBM401) -                                                     01100010
    VTOC(0,1,14) -                                                      01110008
    INDEX(1,0,15)                                                       01120008
    INIT UNITADDRESS(402) -                                             01130010
    OWNERID(SYSTEM) -                                                   01140008
    NOVERIFY       -                                                    01150008
    VOLID(IBM402) -                                                     01160010
    VTOC(0,1,14) -                                                      01170008
    INDEX(1,0,15)                                                       01180008
    INIT UNITADDRESS(403) -                                             01190010
    OWNERID(SYSTEM) -                                                   01200008
    NOVERIFY       -                                                    01210008
    VOLID(IBM403) -                                                     01220010
    VTOC(0,1,14) -                                                      01230008
    INDEX(1,0,15)                                                       01240008
    INIT UNITADDRESS(404) -                                             01250010
    OWNERID(SYSTEM) -                                                   01260008
    NOVERIFY       -                                                    01270008
    VOLID(IBM404) -                                                     01280010
    VTOC(0,1,14) -                                                      01290008
    INDEX(1,0,15)                                                       01300008
    INIT UNITADDRESS(406) -                                             01370010
    OWNERID(SYSTEM) -                                                   01380008
    NOVERIFY       -                                                    01390008
    VOLID(IBM406) -                                                     01400010
    VTOC(0,1,14) -                                                      01410008
    INDEX(1,0,15)                                                       01420008
    INIT UNITADDRESS(407) -                                             01430010
    OWNERID(SYSTEM) -                                                   01440008
    NOVERIFY       -                                                    01450008
    VOLID(IBM407) -                                                     01460010
    VTOC(0,1,14) -                                                      01470008
    INDEX(1,0,15)                                                       01480008
    INIT UNITADDRESS(408) -                                             01490010
    OWNERID(SYSTEM) -                                                   01500008
    NOVERIFY       -                                                    01510008
    VOLID(IBM408) -                                                     01520010
    VTOC(0,1,14) -                                                      01530008
    INDEX(1,0,15)                                                       01540008
    INIT UNITADDRESS(409) -                                             01550010
    OWNERID(SYSTEM) -                                                   01560008
    NOVERIFY       -                                                    01570008
    VOLID(IBM409) -                                                     01580010
    VTOC(0,1,14) -                                                      01590008
    INDEX(1,0,15)                                                       01600008
    INIT UNITADDRESS(40A) -                                             01610010
    OWNERID(SYSTEM) -                                                   01620008
    NOVERIFY       -                                                    01630008
    VOLID(IBM40A) -                                                     01640010
    VTOC(0,1,14) -                                                      01650008
    INDEX(1,0,15)                                                       01660008
    INIT UNITADDRESS(40B) -                                             01670010
    OWNERID(SYSTEM) -                                                   01680008
    NOVERIFY       -                                                    01690008
    VOLID(IBM40B) -                                                     01700010
    VTOC(0,1,14) -                                                      01710008
    INDEX(1,0,15)                                                       01720008
    INIT UNITADDRESS(40C) -                                             01730010
    OWNERID(SYSTEM) -                                                   01740008
    NOVERIFY       -                                                    01750008
    VOLID(IBM40C) -                                                     01760010
    VTOC(0,1,14) -                                                      01770008
    INDEX(1,0,15)                                                       01780008
    INIT UNITADDRESS(40D) -                                             01790010
    OWNERID(SYSTEM) -                                                   01800008
    NOVERIFY       -                                                    01810008
    VOLID(IBM40D) -                                                     01820010
    VTOC(0,1,14) -                                                      01830008
    INDEX(1,0,15)                                                       01840008
    INIT UNITADDRESS(40E) -                                             01850010
    OWNERID(SYSTEM) -                                                   01860008
    NOVERIFY       -                                                    01870008
    VOLID(IBM40E) -                                                     01880010
    VTOC(0,1,14) -                                                      01890008
    INDEX(1,0,15)                                                       01900008
    INIT UNITADDRESS(40F) -                                             01910010
    OWNERID(SYSTEM) -                                                   01920008
    NOVERIFY       -                                                    01930008
    VOLID(IBM40F) -                                                     01940010
    VTOC(0,1,14) -                                                      01950008
    INDEX(1,0,15)                                                       01960008
    INIT UNITADDRESS(410) -                                             01961010
    OWNERID(SYSTEM) -                                                   01962009
    NOVERIFY       -                                                    01963009
    VOLID(IBM410) -                                                     01964010
    VTOC(0,1,14) -                                                      01965009
    INDEX(1,0,15)                                                       01966009
    INIT UNITADDRESS(411) -                                             01967010
    OWNERID(SYSTEM) -                                                   01968009
    NOVERIFY       -                                                    01969009
    VOLID(IBM411) -                                                     01969110
    VTOC(0,1,14) -                                                      01969209
    INDEX(1,0,15)                                                       01969309
    INIT UNITADDRESS(412) -                                             01969410
    OWNERID(SYSTEM) -                                                   01969509
    NOVERIFY       -                                                    01969609
    VOLID(IBM412) -                                                     01969710
    VTOC(0,1,14) -                                                      01969809
    INDEX(1,0,15)                                                       01969909
    INIT UNITADDRESS(413) -                                             01970010
    OWNERID(SYSTEM) -                                                   01970109
    NOVERIFY       -                                                    01970209
    VOLID(IBM413) -                                                     01970310
    VTOC(0,1,14) -                                                      01970409
    INDEX(1,0,15)                                                       01970509
/*                                                                      01971008
//                                                                      01980008

./ ADD NAME=RAZ3380
//SYSPLAT JOB  1,LAPEYRE,MSGLEVEL=(1,1),CLASS=O,                        00010000
//             MSGCLASS=T,NOTIFY=&SYSUID                                00020000
// EXEC PGM=IEBDG,REGION=7M                                             00030000
//SYSPRINT DD SYSOUT=*                                                  00040000
//VOLOUT   DD DSN=SYSPLA.RAZ,UNIT=3380,VOL=SER=IBM11B,                  00050004
//    DISP=(,KEEP,KEEP),SPACE=(TRK,39795),                              00050100
//    DCB=(RECFM=U,BLKSIZE=23476,BUFNO=50)                              00050200
//SYSIN    DD *                                                         00050600
 DSD     OUTPUT=(VOLOUT)                                                00050700
 FD      NAME=SPOOL,FILL=X'00',LENGTH=23476                             00050800
 CREATE  NAME=(SPOOL),QUANTITY=79590                                    00050900
/*                                                                      00051000
//                                                                      00052000

./ ADD NAME=RAZ33902
//SYSPLAT JOB  1,SYSTEME,MSGLEVEL=(1,1),CLASS=O,                        00010001
//             MSGCLASS=X,NOTIFY=&SYSUID                                00020001
// EXEC PGM=IEBDG,REGION=7M                                             00030000
//SYSPRINT DD SYSOUT=*                                                  00040000
//VOLOUT   DD DSN=SYSPLA.RAZ,UNIT=3390,VOL=SER=HDSD1B,                  00050005
//    DISP=(,KEEP,KEEP),SPACE=(TRK,33360),                              00050100
//    DCB=(RECFM=U,BLKSIZE=27998,BUFNO=50)                              00050200
//SYSIN    DD *                                                         00050300
 DSD     OUTPUT=(VOLOUT)                                                00050400
 FD      NAME=SPOOL,FILL=X'00',LENGTH=27998                             00050500
 CREATE  NAME=(SPOOL),QUANTITY=66720                                    00050600
/*                                                                      00050700
//                                                                      00050800

./ ADD NAME=RAZ33903
//SYSPLAT JOB  1,LAPEYRE,MSGLEVEL=(1,1),CLASS=O,                        00010000
//             MSGCLASS=T,NOTIFY=&SYSUID                                00020000
// EXEC PGM=IEBDG,REGION=6M                                             00030007
//SYSPRINT DD SYSOUT=*                                                  00040000
//VOLOUT   DD DSN=SYSPLA.RAZ,UNIT=3390,VOL=SER=IBM405,                  00050006
//    DISP=(,KEEP,KEEP),SPACE=(TRK,50055),                              00050100
//    DCB=(RECFM=U,BLKSIZE=27998,BUFNO=50)                              00050200
//SYSIN    DD *                                                         00050300
 DSD     OUTPUT=(VOLOUT)                                                00050400
 FD      NAME=SPOOL,FILL=X'00',LENGTH=27998                             00050501
 CREATE  NAME=(SPOOL),QUANTITY=100110                                   00050600
/*                                                                      00050700
//                                                                      00050800

./ ADD NAME=REFORBKP
//SYSINIT  JOB 1000,'SYSTEME',REGION=4M,                                00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//*------------------------------------------------------------         00030003
//* PROCEDURE DE BACKUP DISQUE : PB 4000/6000 BASCULE SUR 5000/7000     00030003
//* ---------------------------------------------------------------     00030003
//* !!METTRE LES VOLUMES OFFLINE AVANT!!!                               00030003
//*                                                                     00030003
//* 1) VOLUMES AVEC FICHIERS DB2: SYST9 2-6                             00030003
//* 2) VOLUME DU FMJOUV : VID900                                        00030003
//* 3) VOLUME DU CKPT JES2 BRN2 :SYST12                                 00030003
//*------------------------------------------------------------         00030003
//STEP1    EXEC PGM=ICKDSF,REGION=4M
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
 REFORMAT UNITADDRESS(5181) VERIFY(SYSB92) VOLID(SYST92)
 REFORMAT UNITADDRESS(5182) VERIFY(SYSB93) VOLID(SYST93)
 REFORMAT UNITADDRESS(5183) VERIFY(SYSB94) VOLID(SYST94)
 REFORMAT UNITADDRESS(5184) VERIFY(SYSB95) VOLID(SYST95)
 REFORMAT UNITADDRESS(5185) VERIFY(SYSB96) VOLID(SYST96)
 REFORMAT UNITADDRESS(50DC) VERIFY(VID90B) VOLID(VID900)
 REFORMAT UNITADDRESS(502B) VERIFY(SYSB12) VOLID(SYST12)
/*

./ ADD NAME=REFORMAT
//SYSINIT  JOB 1000,'SYSTEME',REGION=4M,                                00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//*------------------------------------------------------------         00030003
//STEP1    EXEC PGM=ICKDSF,REGION=4M
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
 REFORMAT UNITADDRESS(5183) NOVERIFY VOLID(SYSB94)
 REFORMAT UNITADDRESS(5184) NOVERIFY VOLID(SYSB95)
//
 REFORMAT UNITADDRESS(215) NOVERIFY VOLID(IBM215)
 REFORMAT UNITADDRESS(216) NOVERIFY VOLID(IBM216)
 REFORMAT UNITADDRESS(217) NOVERIFY VOLID(IBM217)
 REFORMAT UNITADDRESS(218) NOVERIFY VOLID(IBM218)
 REFORMAT UNITADDRESS(219) NOVERIFY VOLID(IBM219)
 REFORMAT UNITADDRESS(21A) NOVERIFY VOLID(IBM21A)
 REFORMAT UNITADDRESS(21B) NOVERIFY VOLID(IBM21B)
 REFORMAT UNITADDRESS(21C) NOVERIFY VOLID(IBM21C)
 REFORMAT UNITADDRESS(21D) NOVERIFY VOLID(IBM21D)
 REFORMAT UNITADDRESS(21E) NOVERIFY VOLID(IBM21E)
 REFORMAT UNITADDRESS(21F) NOVERIFY VOLID(IBM21F)
/*

./ ADD NAME=REFVTOC
//SYSPGREF JOB 2A40,'PH-GRANIE',REGION=6M,                              00003003
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00030001
//*------------------------------------------------------------         00040003
//STEP1    EXEC PGM=ICKDSF,REGION=6M,PARM='NOREPLYU'
//SYSPRINT DD SYSOUT=*
//VOLDD1   DD DISP=SHR,UNIT=3390,VOL=SER=EXPL46
//SYSIN    DD *
 REFORMAT DDNAME(VOLDD1) VERIFY(EXPL46) REFVTOC
/*

./ ADD NAME=RESTORES
//SYSILEA  JOB  1,EXPRESS,MSGLEVEL=(1,1),CLASS=O,
//         MSGCLASS=T,NOTIFY=&SYSUID
//S1       EXEC PGM=RESTORES,REGION=4M
//SYSPRINT DD SYSOUT=*
//TAPE     DD UNIT=(STK36,,DEFER),LABEL=(1,BLP,,EXPDT=98000),
//            VOL=SER=X03000
//DISK     DD DSN=SYSILE.CA90.SP03X,DISP=SHR

./ ADD NAME=RMFSTAT
//SYSMF1    JOB 1,'SYSTEME',MSGLEVEL=(1,1),                             00010099
//         CLASS=O,MSGCLASS=T,NOTIFY=&SYSUID                            00011099
//WKLDDAY  EXEC PGM=ERBRMFPP,REGION=6M                                  00015099
//SYSPRINT DD SYSOUT=*                                                  00016001
//MFPMSGDS DD SYSOUT=*                                                  00017084
//MFR00001 DD SYSOUT=*                                                  00018084
//*MFPINPUT DD DSN=SYST.RMFOLD.DATA,DISP=SHR                            00022299
//MFPINPUT DD DSN=SYST.RMF.DATA,DISP=SHR                                00022399
//SYSIN    DD *                                                         00022605
 REPORTS(ALL)                                                           00022799
 DATE(01073,01073)                                                      00022899
 STOD(1000,1200)                                                        00022999
 ETOD(1000,1200)                                                        00023099
 RTOD(1000,1200)                                                        00023199
 PTOD(1000,1200)                                                        00023299
 DINTV(0030)                                                            00023399
 SYSOUT(T)                                                              00023599
/*                                                                      00023699
//                                                                      00023799
 REPORTS(ALL)                                                           00024099
 ETOD(0000,0700)                                                        01730299
 PTOD(0000,0700)                                                        01730399
 STOD(0000,0700)                                                        01730499
 RTOD(0000,0700)                                                        01730599
 DATE(01047,01047)                                                      01730699
 DINTV(0060)                                                            01730899
 SYSOUT(T)                                                              01730999
/*                                                                      01731099
//                                                                      01731199
 SUMMARY(TOT)                                                           01731299
//WKLDDAY  EXEC PGM=ERBRMFPP,REGION=6M                                  01731399
//STEPLIB  DD DISP=SHR,DSN=CEE.SCEERUN                                  01731499
//SYSPRINT DD SYSOUT=*                                                  01731599
//MFPMSGDS DD SYSOUT=*                                                  01731699
//MFR00001 DD SYSOUT=*                                                  01731799
//*MFPINPUT DD DSN=SYST.RMFOLD.DATA,DISP=SHR                            01731899
//MFPINPUT DD DSN=SYST.RMF.DATA,DISP=SHR                                01731999
//SYSIN    DD *                                                         01732099
 REPORTS(ALL)                                                           01732199
 ETOD(0000,0700)                                                        01732299
 PTOD(0000,0700)                                                        01732399
 STOD(0000,0700)                                                        01732499
 RTOD(0000,0700)                                                        01732599
 DATE(98176,98176)                                                      01732699
 DINTV(0030)                                                            01732799
 SYSOUT(T)                                                              01732899
/*                                                                      01732999
//                                                                      01733099
 ETOD(1900,2400)                                                        01733199
 PTOD(1900,2400)                                                        01733299
 STOD(1900,2400)                                                        01733399
 RTOD(1900,2400)                                                        01733499
 REPORTS(ALL)                                                           01733599
 REPORTS(DEVICE(DASD),IOQ,CPU)                                          01733699
 DATE(96130,96130)                                                      01733799
 DINTV(2400)                                                            01733899
 SUMMARY(TOT)                                                           01733999
 SYSOUT(T)                                                              01734099
/*                                                                      01734199
//                                                                      01734299
 REPORTS(CPU)                                                           01734399
 DATE(95285,95285)                                                      01734499
 STOD(0000,0300)                                                        01734599
 ETOD(0000,0300)                                                        01734699
 RTOD(0000,0300)                                                        01735099
 PTOD(0000,0300)                                                        01736099
 PLOTS(CPUID)                                                           01737099
 SYSOUT(T)                                                              01738099
/*                                                                      01739099
//                                                                      01739199

./ ADD NAME=RMFSTAT1
//SYSMF    JOB 1,SYSTEME,                                               00010003
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00011000
//WKLDDAY  EXEC PGM=ERBRMFPP,REGION=2M                                  00015000
//SYSPRINT DD SYSOUT=*                                                  00016000
//MFPMSGDS DD SYSOUT=*                                                  00017000
//MFR00001 DD SYSOUT=*                                                  00018000
//*MFPINPUT DD DSN=SYST.RMFOLD.DATA,DISP=SHR                            00022200
//*MFPINPUT DD DSN=SYST.RMF.DATA,DISP=SHR                               00022301
//*MFPINPUT DD DSN=SYST.RMF9121.OLD,DISP=SHR                            00022400
//MFPINPUT DD DSN=SYST.RMFBRN1.DATA,DISP=SHR                            00022504
//SYSIN    DD *                                                         00022600
 REPORTS(ALL)                                                           00022700
 DATE(00055,00055)                                                      00022905
 STOD(0900,1200)                                                        00023305
 ETOD(0900,1200)                                                        00023405
 PTOD(0900,1200)                                                        00023505
 RTOD(0900,1200)                                                        00023605
 SYSOUT(T)                                                              00028000
/*                                                                      00029000
//                                                                      00030000
 REPORTS(DEVICE(DASD),IOQ,IOQUEUE)                                      01640000
 STOD(0900,1700)                                                        01660000
 RTOD(0900,1700)                                                        01680000
 DINTV(0800)                                                            01690000
 DATE(95143,95143)                                                      01700000
 SYSOUT(T)                                                              01710000
/*                                                                      01720000
//                                                                      01730000

./ ADD NAME=RMFTOT
//SYSMF2    JOB 1,'SYSTEME',MSGLEVEL=(1,1),                             00010000
//         CLASS=O,MSGCLASS=T,NOTIFY=&SYSUID                            00011000
//WKLDDAY  EXEC PGM=ERBRMFPP,REGION=6M                                  00015000
//SYSPRINT DD SYSOUT=*                                                  00016000
//MFPMSGDS DD SYSOUT=*                                                  00017000
//MFR00001 DD SYSOUT=*                                                  00018000
//MFPINPUT DD DSN=SYST.RMFOLD.DATA,DISP=SHR                             00022212
//*MFPINPUT DD DSN=SYST.RMF.DATA,DISP=SHR                               00022312
//SYSIN    DD *                                                         00022600
 SYSRPTS(WLMGL(RCLASS))                                                 00022909
 ETOD(0000,0700)                                                        01730211
 PTOD(0000,0700)                                                        01730311
 STOD(0000,0700)                                                        01730411
 RTOD(0000,0700)                                                        01730511
 DATE(01060,01060)                                                      01730611
 DINTV(0030)                                                            01730707
 SUMMARY(TOT)                                                           01730810
 SYSOUT(T)                                                              01730900
/*                                                                      01731100
//                                                                      01731200
 SYSRPTS(WLMGL(WGROUP))                                                 01731303
 SYSRPTS(WLMGL(SCLASS))                                                 01731403
 SYSRPTS(WLMGL(RCLASS))                                                 01731504
 SYSRPTS(WLMGL(SCPER))                                                  01731604
 SYSRPTS(WLMGL(WGPER))                                                  01731704
 SYSRPTS(WLMGL(SYSNAM))                                                 01731804

./ ADD NAME=RPTCSI
//SYSILEA   JOB (T002550),'IEBCOPY',                                    JOB03659
//             NOTIFY=&SYSUID,                                          00004200
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00005000
//* Create the consolidated inventory of products and service
//* using the GIMXSID program introduced by SMP/E 3.2
//* This sample job is set up to store the output of GIMXSID
//* into a new file in your HFS.
//*
//* To use this sample you will need to update:
//* 1. The JOB card as appropriate for your installation.
//* 2. Optionally, the parameters passed to the GIMXSID program:
//*    a. WAIT=10MIN specifies that GIMXSID should wait 10 minutes
//*       if an SMPCSI data set is unavailable because it is in
//*       use by another SMP/E task. This value may be set to
//*       a decimal between 0 and 9999.  If the parameter is
//*       not specified, GIMXSID will wait 60 minutes.
//*    b. L=ENU specifies that GIMXSID should issue English messages.
//*       L=JPN, may optionally be specified to issue Japanese
//*       messages.
//* 3. The value specified on the SMPXTOUT DD for PATH= to
//*    specify a new file in an existing directory in your HFS.
//*    If you specify a directory that you have mapped as a network
//*    drive on your workstation, you can point ShopzSeries right to
//*    this file when you do the upload.  If you cannot map a directory
//*    in your HFS on your workstation, you must transfer the file
//*    in binary to your workstation so you can upload it to
//*    ShopzSeries.
//*    The SMPXTOUT DD may specify a sequential data set of FB,
//*    LRECL 12560 rather than a file in the HFS.
//* 4. The information specified in SYSIN DD to specify the
//*    approriate GLOBAL CSI(s) and TARGET zone(s)
//*    a. The value on CSI= to specify a 1 to 44 character
//*       data set name for an SMPCSI containing a GLOBAL zone.
//*       At least one CSI= control statement must be included
//*       in SYSIN.  Multiple CSI= control statements may be included.
//*       If you include multiple CSI= control statements,
//*       each must immediately precede the TARGET= control statements
//*       to which they refer.
//*    b. The value on TARGET= control statement to specify the
//*       1 to 7 character target zone names for target zones
//*       defined in the GLOBAL zone that resides in the
//*       SMPCSI data set specified on the preceding CSI= control
//*       statement. The TARGET= control statement is optional.
//*       If it is not specified, GIMXSID will build the inventory
//*       for all target zones controlled by the global zone
//*       identified on the preceding CSI statement.
//*
//* Please refer to SMP/E Reference for complete information
//* about the GIMXSID progam.
//*
//*
//*
//STEP1    EXEC PGM=GIMXSID
//SYSPRINT DD SYSOUT=*
//SMPOUT   DD SYSOUT=*
//SMPXTOUT DD DSN=SYSILE.CSI.CICSTS32,DISP=(,CATLG,DELETE),
//            UNIT=3390,VOL=SER=SYSDMP,SPACE=(TRK,(100,100),RLSE)
//SYSIN    DD DATA,DLM=$$
CSI=CICSTS32.GLOBAL.CSI
TARGET=CICT500
$$

./ ADD NAME=RRSBRNQ
//SYSILEA  JOB (1000),'SYSTEME',NOTIFY=&SYSUID,                         00010002
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00020000
// EXEC PGM=IXCMIAPU                                                    00030000
//SYSPRINT  DD SYSOUT=*                                                 00040000
//SYSIN     DD *                                                        00050000
DATA TYPE(LOGR) REPORT(YES)                                             00060000
DEFINE LOGSTREAM NAME(ATR.BRNQPLEX.MAIN.UR)                             00070000
       MODEL(NO)                                                        00080000
       HLQ(IXGLOGRQ)                                                    00080100
       LOWOFFLOAD(60)                                                   00080200
       HIGHOFFLOAD(80)                                                  00080300
       DASDONLY(YES)                                                    00080400
       LS_SIZE(1024)                                                    00080500
       STG_SIZE(1024)                                                   00080600
DEFINE LOGSTREAM NAME(ATR.BRNQPLEX.DELAYED.UR)                          00080700
       MODEL(NO)                                                        00080800
       HLQ(IXGLOGRQ)                                                    00080900
       DASDONLY(YES)                                                    00081000
       LOWOFFLOAD(60)                                                   00081100
       HIGHOFFLOAD(80)                                                  00081200
       LS_SIZE(960)                                                     00081400
       STG_SIZE(960)                                                    00081500
DEFINE LOGSTREAM NAME(ATR.BRNQPLEX.ARCHIVE)                             00081602
       MODEL(NO)                                                        00081700
       HLQ(IXGLOGRQ)                                                    00081800
       LOWOFFLOAD(0)                                                    00081900
       HIGHOFFLOAD(80)                                                  00082000
       DASDONLY(YES)                                                    00082100
       LS_SIZE(960)                                                     00082200
       AUTODELETE(YES)                                                  00082300
       RETPD(2)                                                         00082400
       STG_SIZE(2000)                                                   00082500
DEFINE LOGSTREAM NAME(ATR.BRNQPLEX.RM.DATA)                             00082600
       MODEL(NO)                                                        00082700
       HLQ(IXGLOGRQ)                                                    00082800
       LOWOFFLOAD(60)                                                   00082900
       HIGHOFFLOAD(80)                                                  00083000
       DASDONLY(YES)                                                    00083100
       LS_SIZE(192)                                                     00083200
       STG_SIZE(192)                                                    00083300
DEFINE LOGSTREAM NAME(ATR.BRNQPLEX.RESTART)                             00083400
       MODEL(NO)                                                        00083500
       DASDONLY(YES)                                                    00083600
       HLQ(IXGLOGRQ)                                                    00083700
       LOWOFFLOAD(60)                                                   00083800
       HIGHOFFLOAD(80)                                                  00083900
       LS_SIZE(960)                                                     00084000
       STG_SIZE(960)                                                    00084100
//                                                                      00084200

./ ADD NAME=RRSBRNR
//SYSIXC   JOB (1000),'SYSTEME',NOTIFY=&SYSUID,                         00010000
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00020000
// EXEC PGM=IXCMIAPU                                                    00030000
//SYSPRINT  DD SYSOUT=*                                                 00040000
//SYSIN     DD *                                                        00050000
DATA TYPE(LOGR) REPORT(YES)                                             00060000
DEFINE LOGSTREAM NAME(ATR.BRNRPLEX.MAIN.UR)                             00070000
       MODEL(NO)                                                        00080000
       HLQ(IXGLOGRR)                                                    00080100
       LOWOFFLOAD(60)                                                   00080200
       HIGHOFFLOAD(80)                                                  00080300
       DASDONLY(YES)                                                    00080400
       LS_SIZE(1024)                                                    00080600
       STG_SIZE(1024)                                                   00080700
DEFINE LOGSTREAM NAME(ATR.BRNRPLEX.DELAYED.UR)                          00080800
       MODEL(NO)                                                        00080900
       HLQ(IXGLOGRR)                                                    00081000
       DASDONLY(YES)                                                    00081100
       LOWOFFLOAD(60)                                                   00081200
       HIGHOFFLOAD(80)                                                  00081300
       LS_SIZE(960)                                                     00081500
       STG_SIZE(960)                                                    00081600
DEFINE LOGSTREAM NAME(ATR.BRNRPLEX.ARCHIVE)                             00081702
       MODEL(NO)                                                        00081800
       HLQ(IXGLOGRR)                                                    00081900
       LOWOFFLOAD(0)                                                    00082100
       HIGHOFFLOAD(80)                                                  00082200
       DASDONLY(YES)                                                    00082300
       LS_SIZE(960)                                                     00082400
       AUTODELETE(YES)                                                  00082500
       RETPD(2)                                                         00082600
       STG_SIZE(2000)                                                   00082700
DEFINE LOGSTREAM NAME(ATR.BRNRPLEX.RM.DATA)                             00082800
       MODEL(NO)                                                        00082900
       HLQ(IXGLOGRR)                                                    00083000
       LOWOFFLOAD(60)                                                   00083100
       HIGHOFFLOAD(80)                                                  00083200
       DASDONLY(YES)                                                    00083300
       LS_SIZE(192)                                                     00083400
       STG_SIZE(192)                                                    00083700
DEFINE LOGSTREAM NAME(ATR.BRNRPLEX.RESTART)                             00083800
       MODEL(NO)                                                        00083900
       DASDONLY(YES)                                                    00084000
       HLQ(IXGLOGRR)                                                    00084100
       LOWOFFLOAD(60)                                                   00084200
       HIGHOFFLOAD(80)                                                  00084300
       LS_SIZE(960)                                                     00084500
       STG_SIZE(960)                                                    00084600
//                                                                      00085000

./ ADD NAME=RRSBRN2
//SYS003XX JOB (1000),'SYSTEME',NOTIFY=&SYSUID,                         00010004
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00020000
// EXEC PGM=IXCMIAPU                                                    00030000
//SYSPRINT  DD SYSOUT=*                                                 00040000
//SYSIN     DD *                                                        00050000
DATA TYPE(LOGR) REPORT(YES)                                             00060000
DEFINE LOGSTREAM NAME(ATR.BRN2PLEX.MAIN.UR)                             00070001
       MODEL(NO)                                                        00080000
       HLQ(IXGLOGRP)                                                    00080103
       LOWOFFLOAD(60)                                                   00080200
       HIGHOFFLOAD(80)                                                  00080300
       DASDONLY(YES)                                                    00080400
       LS_SIZE(1024)                                                    00080500
       STG_SIZE(1024)                                                   00080600
DEFINE LOGSTREAM NAME(ATR.BRN2PLEX.DELAYED.UR)                          00080701
       MODEL(NO)                                                        00080800
       HLQ(IXGLOGRP)                                                    00080903
       DASDONLY(YES)                                                    00081000
       LOWOFFLOAD(60)                                                   00081100
       HIGHOFFLOAD(80)                                                  00081200
       LS_SIZE(960)                                                     00081400
       STG_SIZE(960)                                                    00081500
DEFINE LOGSTREAM NAME(ATR.BRN2PLEX.ARCHIVE)                             00081603
       MODEL(NO)                                                        00081700
       HLQ(IXGLOGRP)                                                    00081803
       LOWOFFLOAD(0)                                                    00081900
       HIGHOFFLOAD(80)                                                  00082000
       DASDONLY(YES)                                                    00082100
       LS_SIZE(960)                                                     00082200
       AUTODELETE(YES)                                                  00082300
       RETPD(2)                                                         00082400
       STG_SIZE(2000)                                                   00082500
DEFINE LOGSTREAM NAME(ATR.BRN2PLEX.RM.DATA)                             00082601
       MODEL(NO)                                                        00082700
       HLQ(IXGLOGRP)                                                    00082803
       LOWOFFLOAD(60)                                                   00082900
       HIGHOFFLOAD(80)                                                  00083000
       DASDONLY(YES)                                                    00083100
       LS_SIZE(192)                                                     00083200
       STG_SIZE(192)                                                    00083300
DEFINE LOGSTREAM NAME(ATR.BRN2PLEX.RESTART)                             00083401
       MODEL(NO)                                                        00083500
       DASDONLY(YES)                                                    00083600
       HLQ(IXGLOGRP)                                                    00083703
       LOWOFFLOAD(60)                                                   00083800
       HIGHOFFLOAD(80)                                                  00083900
       LS_SIZE(960)                                                     00084000
       STG_SIZE(960)                                                    00084100
//                                                                      00084200

./ ADD NAME=RRSLP2
//SYSIXC   JOB (1000),'SYSTEME',NOTIFY=&SYSUID,                         00030000
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00040000
// EXEC PGM=IXCMIAPU                                                    00050000
//SYSPRINT  DD SYSOUT=*                                                 00060000
//SYSIN     DD *                                                        00070000
DATA TYPE(LOGR) REPORT(YES)                                             00080000
DEFINE LOGSTREAM NAME(ATR.LP2PLEX0.MAIN.UR)                             00080100
       MODEL(NO)                                                        00080200
       DASDONLY(YES)                                                    00080400
       STG_SIZE(1000)                                                   00080500
DEFINE LOGSTREAM NAME(ATR.LP2PLEX0.DELAYED.UR)                          00080600
       MODEL(NO)                                                        00080700
       DASDONLY(YES)                                                    00080800
       STG_SIZE(1000)                                                   00080900
DEFINE LOGSTREAM NAME(ATR.LP2PLEX0.RESTART)                             00081000
       MODEL(NO)                                                        00081100
       DASDONLY(YES)                                                    00081200
       STG_SIZE(1000)                                                   00081300
DEFINE LOGSTREAM NAME(ATR.LP2PLEX0.RM.ARCHIVE)                          00081400
       MODEL(NO)                                                        00081500
       DASDONLY(YES)                                                    00081600
       STG_SIZE(1000)                                                   00081700
//                                                                      00081800
//                                                                      00081900
DEFINE LOGSTREAM NAME(LP2.CICSVR.DFHLGLOG)                              00082000
       MODEL(NO)                                                        00082100
       HLQ(IXGLOGR)                                                     00082200
       LS_SIZE(256)                                                     00082300
       LOWOFFLOAD(10)                                                   00082400
       HIGHOFFLOAD(90)                                                  00082500
       DASDONLY(YES)                                                    00082600
       STG_SIZE(1000)                                                   00082700
LIST LOGSTREAM NAME(*) DETAIL(YES)                                      00082800
//                                                                      00082900
DEFINE LOGSTREAM NAME(LP2.DFHLOG.MODEL)                                 00083000
       MODEL(YES)                                                       00083100
       HLQ(IXGLOGR)                                                     00083200
       LS_SIZE(256)                                                     00083300
       LOWOFFLOAD(10)                                                   00083400
       HIGHOFFLOAD(90)                                                  00083500
       DASDONLY(YES)                                                    00083600
       STG_SIZE(1000)                                                   00083700
DEFINE LOGSTREAM NAME(LP2.DFHSHUNT.MODEL)                               00083800
       MODEL(YES)                                                       00083900
       HLQ(IXGLOGR)                                                     00084000
       LS_SIZE(32)                                                      00084100
       LOWOFFLOAD(0)                                                    00084200
       HIGHOFFLOAD(80)                                                  00084300
       DASDONLY(YES)                                                    00084400
       STG_SIZE(500)                                                    00084500
//                                                                      00084600
DELETE LOGSTREAM NAME(LP2.DFHLOG.MODEL)                                 00084700
DELETE LOGSTREAM NAME(LP2.DFHSHUNT.MODEL)                               00085000
//                                                                      00100000
LIST LOGSTREAM NAME(*) DETAIL(YES)                                      00110000
DELETE LOGSTREAM NAME(STCUSR.CICSSYS1.DFHLOG)                           00120000
UPDATE LOGSTREAM NAME(LP2.DFHLOG.MODEL)                                 00130000
       STG_SIZE(5000)                                                   00140000
DELETE LOGSTREAM NAME(LP2.DFHLOG.MODEL)                                 00150000
DELETE LOGSTREAM NAME(LP2.DFHSHUNT.MODEL)                               00160000
DELETE LOGSTREAM NAME(CICSSYS1.DFHLOG)                                  00170000
DELETE LOGSTREAM NAME(STCUSR.CICSSYS1.DFHLOG)                           00180000
DELETE LOGSTREAM NAME(CICSSYS1.DFHSHUNT)                                00190000
DELETE LOGSTREAM NAME(STCUSR.CICSSYS1.DFHSHUNT)                         00200000
LIST LOGSTREAM NAME(*) DETAIL(YES)                                      00210000

./ ADD NAME=SCEELKED
CEE.SCEELKED                                                            00010000

./ ADD NAME=SCEERUN
CEE.SCEERUN                                                             00010000

./ ADD NAME=SDSFBAT
//SDSFBAT   JOB ACCT£,                                                  00001000
//             MVS,                                                     00002000
//             NOTIFY=&SYSUID,                                          00003000
//             MSGLEVEL=(1,1)                                           00004000
//DELETE   EXEC PGM=IEFBR14                                             00004101
//ISFOUT  DD DSN=&SYSUID..&SYSNAME..ISFOUT,                             00005001
// DISP=(MOD,DELETE,DELETE),                                            00006001
// SPACE=(TRK,(2,2)),                                                   00007000
// DCB=(LRECL=512,RECFM=FB)                                             00008000
// EXEC PGM=SDSF,PARM='++1000,1000'                                     00010001
//*EXEC PGM=ISFAFD,PARM='256,128'                                       00011000
//*ISFOUT DD SYSOUT=*                                                   00020000
//ISFOUT  DD DSN=&SYSUID..&SYSNAME..ISFOUT,                             00021001
// DISP=(NEW,CATLG,DELETE),                                             00022000
// SPACE=(CYL,(2,2)),                                                   00023001
// DCB=(LRECL=512,RECFM=FB,BLKSIZE=27648)                               00024004
//ISFIN DD *                                                            00030000
DA ALL                                                                  00040002
++S                                                                     00050002
//                                                                      00060003
DA OSTC                                                                 00070003
FIND 'CICSAGI1'                                                         00080003
++?                                                                     00090003
FIND 'MSGUSR'                                                           00100003
++S                                                                     00110003
PRINT ODSN 'PARC.TEMP.LOG.CICSAGI1'                                     00120003
PRINT                                                                   00130003
PRINT CLOSE                                                             00140003

./ ADD NAME=SDSFBAT1
//SDSFBAT1  JOB ACCT£,                                                  00001000
//             MVS,                                                     00002000
//             NOTIFY=&SYSUID,                                          00003000
//             MSGLEVEL=(1,1)                                           00004000
//      EXEC RXINSTRM                                                   00010000
//LIST DD SYSOUT=*                                                      00020000
//REXX DD *                                                             00030000
 /* REXX SDSF CMD */                                                    00040000
 ZZ=ISFCALLS('ON')                                                      00050000
 ADDRESS SDSF ISFSLASH "'D A,L' (WAIT)"                                 00060000
 CC=RC                                                                  00070000
 ZZ=ISFCALLS('OFF')                                                     00080000
 IF CC<>0 THEN EXIT XMSG('CONSOLE FAILED RC' CC)+8                      00090000
 DO N=1 TO ISFULOG.0                                                    00100000
   QUEUE ISFULOG.N                                                      00110000
 END                                                                    00120000
 "EXECIO" QUEUED() "DISKW LIST (FINIS)"                                 00130000
 EXIT XMSG('DONE..')                                                    00140000
XMSG: SAY ARG(1);RETURN 0                                               00150000

./ ADD NAME=SECUNZIP
//SYSTMEPL JOB 1,'UNZIP',MSGCLASS=T,CLASS=A,                            00010000
//        MSGLEVEL=(1,1),REGION=0M,NOTIFY=SYSTME                        00020000
//**********************************************************************00030000
//SECZIP   EXEC PGM=SECUNZIP,PARM='-CALLMODE(BATCH)'                    00040000
//STEPLIB  DD  DISP=SHR,DSN=SYS2.SECZIP.LOAD                            00050000
//SYSPRINT DD  SYSOUT=*                                                 00060000
//SYSOUT   DD  SYSOUT=*                                                 00070000
//SYSUDUMP DD  SYSOUT=M                                                 00080000
//SYSIN    DD *                                                         00090000
-ARCHIVE_DSN(LPGD.MIF2INVP.A00047IU)                                    00100000
-ACTION(VIEWDETAIL)                                                     00110000
/*                                                                      00120000
//                                                                      00130000

./ ADD NAME=SENDMAIS
//STOGROUP JOB 1,SENDMAI3,MSGLEVEL=(1,1),CLASS=Z,COND=(4,LT),
//         MSGCLASS=T,NOTIFY=&SYSUID,REGION=0M,RESTART=*
//*31918120
//*9970000
//*ENVOI DU MESSAGE DE FIN DE JOB
//STOGROUP EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.&SYSNAME.,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLA
//FICHIER   DD DSN=SYS019.SGNAMS.&SYSNAME..REPORT.ACBJBAIX,DISP=SHR
//SYSTSIN  DD *
 XMITIP (raymond.leroux-externe@euro-securities-partners.com) +
 SUBJECT 'LP2_stogroup' +
    FILEDD (FICHIER) +
    FILENAME (LP2_stogroup) +
    FORMAT (TXT) +
    MSGDD MSG
//STOGROUZ EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.&SYSNAME.,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLA
//FICHIER   DD DSN=SYS019.SGNAMS.&SYSNAME..REPORT.ACBJBAIZ,DISP=SHR
//SYSTSIN  DD *
 XMITIP (raymond.leroux-externe@euro-securities-partners.com) +
 SUBJECT 'LP2_stogrouz' +
    FILEDD (FICHIER) +
    FILENAME (LP2_stogrouz) +
    FORMAT (TXT) +
    MSGDD MSG
//STOCLASS EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.&SYSNAME.,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLA
//FICHIER   DD DSN=SYS019.SCNAMS.&SYSNAME..REPORT.ACBJBAIU,DISP=SHR
//SYSTSIN  DD *
 XMITIP (raymond.leroux-externe@euro-securities-partners.com) +
 SUBJECT 'LP2_stoclass' +
    FILEDD (FICHIER) +
    FILENAME (LP2_stoclass) +
    FORMAT (TXT) +
    MSGDD MSG
//STOCLASW EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.&SYSNAME.,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLA
//FICHIER   DD DSN=SYS019.SCNAMS.&SYSNAME..REPORT.ACBJBAIW,DISP=SHR
//SYSTSIN  DD *
 XMITIP (raymond.leroux-externe@euro-securities-partners.com) +
 SUBJECT 'LP2_stoclasw' +
    FILEDD (FICHIER) +
    FILENAME (LP2_stoclasw) +
    FORMAT (TXT) +
    MSGDD MSG
//DATACLAS EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.&SYSNAME.,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLA
//FICHIER   DD DSN=SYS019.DCNAMS.&SYSNAME..REPORT.ACBJBAIL,DISP=SHR
//SYSTSIN  DD *
 XMITIP (raymond.leroux-externe@euro-securities-partners.com) +
 SUBJECT 'LP2_dataclass' +
    FILEDD (FICHIER) +
    FILENAME (LP2_dataclass) +
    FORMAT (TXT) +
    MSGDD MSG
//MGMCLASS EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.&SYSNAME.,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLA
//FICHIER   DD DSN=SYS019.MCNAMS.&SYSNAME..REPORT.ACBJBAIO,DISP=SHR
//SYSTSIN  DD *
 XMITIP (raymond.leroux-externe@euro-securities-partners.com) +
 SUBJECT 'LP2_mgmclass' +
    FILEDD (FICHIER) +
    FILENAME (LP2_mgmclass) +
    FORMAT (TXT) +
    MSGDD MSG

./ ADD NAME=SENDMAI4
//SENDMAI4 JOB 1,ACBJBAI,MSGLEVEL=(1,1),CLASS=Z,COND=(4,LT),
//*RESTART=ACBJBAIO,
//         MSGCLASS=T,NOTIFY=&SYSUID,REGION=0M ,RESTART=*
//*
//* ENVOI DU MESSAGE DE FIN DE JOB
//*
//*IEFC660I MISSING SYSCHK DD STATEMENT
//ACBJBAIL EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.&SYSNAME.,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLA
//FICHIER   DD DISP=SHR,DSN=SYS019.DCNAMS.&SYSNAME..REPORT.ACBJBAIL
//SYSTSIN  DD *
 XMITIP (raymond.leroux-externe@euro-securities-partners.com) +
 SUBJECT 'brn2_acbjbail' +
    FILEDD (FICHIER) +
    FILENAME (brn2_acbjbail.csv) +
    FORMAT (TXT) +
    MSGDD MSG
//ACBJBAIN EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.&SYSNAME.,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLA
//FICHIER   DD DISP=SHR,DSN=SYS019.DCNAMS.&SYSNAME..REPORT.ACBJBAIN
//SYSTSIN  DD *
 XMITIP (raymond.leroux-externe@euro-securities-partners.com) +
 SUBJECT 'brn2_acbjbain' +
    FILEDD (FICHIER) +
    FILENAME (brn2_acbjbain.csv) +
    FORMAT (TXT) +
    MSGDD MSG
//ACBJBAI0 EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.&SYSNAME.,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLA
//FICHIER   DD DISP=SHR,DSN=SYS019.MCNAMS.&SYSNAME..REPORT.ACBJBAIO
//SYSTSIN  DD *
 XMITIP (raymond.leroux-externe@euro-securities-partners.com) +
 SUBJECT 'brn2_acbjbaio' +
    FILEDD (FICHIER) +
    FILENAME (brn2_acbjbaio.csv) +
    FORMAT (TXT) +
    MSGDD MSG
//ACBJBAIQ EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.&SYSNAME.,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLA
//FICHIER   DD DISP=SHR,DSN=SYS019.MCNAMS.&SYSNAME..REPORT.ACBJBAIQ
//SYSTSIN  DD *
 XMITIP (raymond.leroux-externe@euro-securities-partners.com) +
 SUBJECT 'brn2_acbjbaiq' +
    FILEDD (FICHIER) +
    FILENAME (brn2_acbjbaiq.csv) +
    FORMAT (TXT) +
    MSGDD MSG
//ACBJBAIU EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.&SYSNAME.,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLA
//FICHIER   DD DISP=SHR,DSN=SYS019.SCNAMS.&SYSNAME..REPORT.ACBJBAIU
//SYSTSIN  DD *
 XMITIP (raymond.leroux-externe@euro-securities-partners.com) +
 SUBJECT 'brn2_acbjbaiu' +
    FILEDD (FICHIER) +
    FILENAME (brn2_acbjbaiu.csv) +
    FORMAT (TXT) +
    MSGDD MSG
//ACBJBAIW EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.&SYSNAME.,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLA
//FICHIER   DD DISP=SHR,DSN=SYS019.SCNAMS.&SYSNAME..REPORT.ACBJBAIW
//SYSTSIN  DD *
 XMITIP (raymond.leroux-externe@euro-securities-partners.com) +
 SUBJECT 'brn2_acbjbaiw' +
    FILEDD (FICHIER) +
    FILENAME (brn2_acbjbaiw.csv) +
    FORMAT (TXT) +
    MSGDD MSG
//ACBJBAIX EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.&SYSNAME.,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLA
//FICHIER   DD DISP=SHR,DSN=SYS019.SGNAMS.&SYSNAME..REPORT.ACBJBAIX
//SYSTSIN  DD *
 XMITIP (raymond.leroux-externe@euro-securities-partners.com) +
 SUBJECT 'brn2_acbjbaix' +
    FILEDD (FICHIER) +
    FILENAME (brn2_acbjbaix.csv) +
    FORMAT (TXT) +
    MSGDD MSG
//ACBJBAIZ EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.&SYSNAME.,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLA
//FICHIER   DD DISP=SHR,DSN=SYS019.SGNAMS.&SYSNAME..REPORT.ACBJBAIZ
//SYSTSIN  DD *
 XMITIP (raymond.leroux-externe@euro-securities-partners.com) +
 SUBJECT 'brn2_acbjbaiz' +
    FILEDD (FICHIER) +
    FILENAME (brn2_acbjbaiz.csv) +
    FORMAT (TXT) +
    MSGDD MSG
//

./ ADD NAME=SENDMAI5
//SYS019SM JOB 1,SENDMAI5,MSGLEVEL=(1,1),CLASS=Z,COND=(4,LT),
//         MSGCLASS=T,NOTIFY=&SYSUID,REGION=0M,RESTART=*
//*ENVOI DU MESSAGE DE FIN DE JOB
//MSG      EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.LP2,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLAAMIOPS
//FICHIER   DD DSN=SYS019.SYS5.DATASETS,DISP=SHR
//*FICHIER   DD DSN=SYS019.LP2.SPUFI.SEQ,DISP=SHR
//*FICHIER   DD DSN=SYS019.DASDVOL.LP2.REPORT.ALL,DISP=SHR
//*FICHIER   DD DSN=SYS019.LP2.AMIOPS($INDEX),DISP=SHR
//*FICHIER   DD DSN=SYS019.LP2.DB2(DB2STSR),DISP=SHR
//*FICHIER   DD DSN=SYS019.LP2.NMBCI,DISP=SHR
//*FICHIER   DD DSN=SYS019.LP2.STC,DISP=SHR
//*FICHIER   DD DSN=SYS019.AMIOPS.DDDEF.TZONET.CSV,DISP=SHR
//*FICHIER   DD DSN=SYS019.LP2.MVS(CSI),DISP=SHR
//*FICHIER   DD DISP=SHR,DSN=SYS019.TESTEXEC.DATASETS
//SYSTSIN  DD *
 XMITIP (Raymond.LEROUX-externe@euro-securities-partners.com) +
 SUBJECT 'Sys5_lp2' +
    FILEDD (FICHIER) +
    FILENAME (sys5_lp2) +
    FORMAT (TXT) +
    MSGDD MSG
//
    FILENAME (LP2_DB2STSR) +
    FILENAME (TZONE_AMIOPS.CSV) +
SYS019.LP2.MVS(CSI)              CSI_LP2.CSV
SYS019.AMIOPS.DATASETS
SYS019.AMIOSAMP.DATASETS
SYS019.BMCSAMP.DATASETS
SYS019.CA.DATASETS
SYS019.CSI.DATASETS
SYS019.FIRST.DATASETS
SYS019.FMN.DATASETS
SYS019.RUNLIB.DATASETS
SYS019.SYS3CA.DATASETS
SYS019.TESTEXEC.DATASETS

./ ADD NAME=SENDMAI6
//SYS019SM JOB 1,SENDMAI5,MSGLEVEL=(1,1),CLASS=Z,COND=(4,LT),
//         MSGCLASS=T,NOTIFY=&SYSUID,REGION=0M,RESTART=*
//*ENVOI DU MESSAGE DE FIN DE JOB
//AMIOPS   EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.LP2,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLAAMIOPS
//FICHIER   DD DSN=SYS019.LP2.AMIOPS.SEQ,DISP=SHR
//SYSTSIN  DD *
 XMITIP (Raymond.LEROUX-externe@euro-securities-partners.com) +
 SUBJECT 'lp2_amiops' +
    FILEDD (FICHIER) +
    FILENAME (lp2_amiops) +
    FORMAT (TXT) +
    MSGDD MSG
//ASM      EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.LP2,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLAASM
//FICHIER   DD DSN=SYS019.LP2.ASM.SEQ,DISP=SHR
//SYSTSIN  DD *
 XMITIP (Raymond.LEROUX-externe@euro-securities-partners.com) +
 SUBJECT 'lp2_ASM' +
    FILEDD (FICHIER) +
    FILENAME (lp2_ASM) +
    FORMAT (TXT) +
    MSGDD MSG
//C        EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.LP2,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLAC
//FICHIER   DD DSN=SYS019.LP2.C.SEQ,DISP=SHR
//SYSTSIN  DD *
 XMITIP (Raymond.LEROUX-externe@euro-securities-partners.com) +
 SUBJECT 'lp2_C' +
    FILEDD (FICHIER) +
    FILENAME (lp2_C) +
    FORMAT (TXT) +
    MSGDD MSG
//CICS     EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.LP2,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLACICS
//FICHIER   DD DSN=SYS019.LP2.CICS.SEQ,DISP=SHR
//SYSTSIN  DD *
 XMITIP (Raymond.LEROUX-externe@euro-securities-partners.com) +
 SUBJECT 'lp2_CICS' +
    FILEDD (FICHIER) +
    FILENAME (lp2_CICS) +
    FORMAT (TXT) +
    MSGDD MSG
//CLIST    EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.LP2,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLACLIST
//FICHIER   DD DSN=SYS019.LP2.CLIST.SEQ,DISP=SHR
//SYSTSIN  DD *
 XMITIP (Raymond.LEROUX-externe@euro-securities-partners.com) +
 SUBJECT 'lp2_CLIST' +
    FILEDD (FICHIER) +
    FILENAME (lp2_CLIST) +
    FORMAT (TXT) +
    MSGDD MSG
//COBOL    EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.LP2,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLACOBOL
//FICHIER   DD DSN=SYS019.LP2.COBOL.SEQ,DISP=SHR
//SYSTSIN  DD *
 XMITIP (Raymond.LEROUX-externe@euro-securities-partners.com) +
 SUBJECT 'lp2_COBOL' +
    FILEDD (FICHIER) +
    FILENAME (lp2_COBOL) +
    FORMAT (TXT) +
    MSGDD MSG
//DB2      EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.LP2,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLADB2
//FICHIER   DD DSN=SYS019.LP2.DB2.SEQ,DISP=SHR
//SYSTSIN  DD *
 XMITIP (Raymond.LEROUX-externe@euro-securities-partners.com) +
 SUBJECT 'lp2_DB2' +
    FILEDD (FICHIER) +
    FILENAME (lp2_DB2) +
    FORMAT (TXT) +
    MSGDD MSG
//MQ       EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.LP2,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLAMQ
//FICHIER   DD DSN=SYS019.LP2.MQ.SEQ,DISP=SHR
//SYSTSIN  DD *
 XMITIP (Raymond.LEROUX-externe@euro-securities-partners.com) +
 SUBJECT 'lp2_MQ' +
    FILEDD (FICHIER) +
    FILENAME (lp2_MQ) +
    FORMAT (TXT) +
    MSGDD MSG
//MVS      EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.LP2,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLAMVS
//FICHIER   DD DSN=SYS019.LP2.MVS.SEQ,DISP=SHR
//SYSTSIN  DD *
 XMITIP (Raymond.LEROUX-externe@euro-securities-partners.com) +
 SUBJECT 'lp2_MVS' +
    FILEDD (FICHIER) +
    FILENAME (lp2_MVS) +
    FORMAT (TXT) +
    MSGDD MSG
//OMVS     EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.LP2,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLAOMVS
//FICHIER   DD DSN=SYS019.LP2.OMVS.SEQ,DISP=SHR
//SYSTSIN  DD *
 XMITIP (Raymond.LEROUX-externe@euro-securities-partners.com) +
 SUBJECT 'lp2_OMVS' +
    FILEDD (FICHIER) +
    FILENAME (lp2_OMVS) +
    FORMAT (TXT) +
    MSGDD MSG
//RACF     EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.LP2,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLARACF
//FICHIER   DD DSN=SYS019.LP2.RACF.SEQ,DISP=SHR
//SYSTSIN  DD *
 XMITIP (Raymond.LEROUX-externe@euro-securities-partners.com) +
 SUBJECT 'lp2_RACF' +
    FILEDD (FICHIER) +
    FILENAME (lp2_RACF) +
    FORMAT (TXT) +
    MSGDD MSG
//REXX     EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.LP2,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLAREXX
//FICHIER   DD DSN=SYS019.LP2.REXX.SEQ,DISP=SHR
//SYSTSIN  DD *
 XMITIP (Raymond.LEROUX-externe@euro-securities-partners.com) +
 SUBJECT 'lp2_REXX' +
    FILEDD (FICHIER) +
    FILENAME (lp2_REXX) +
    FORMAT (TXT) +
    MSGDD MSG
//SOLVE    EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.LP2,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLASOLVE
//FICHIER   DD DSN=SYS019.LP2.SOLVE.SEQ,DISP=SHR
//SYSTSIN  DD *
 XMITIP (Raymond.LEROUX-externe@euro-securities-partners.com) +
 SUBJECT 'lp2_SOLVE' +
    FILEDD (FICHIER) +
    FILENAME (lp2_SOLVE) +
    FORMAT (TXT) +
    MSGDD MSG
//SPUFI    EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.LP2,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLASPUFI
//FICHIER   DD DSN=SYS019.LP2.SPUFI.SEQ,DISP=SHR
//SYSTSIN  DD *
 XMITIP (Raymond.LEROUX-externe@euro-securities-partners.com) +
 SUBJECT 'lp2_SPUFI' +
    FILEDD (FICHIER) +
    FILENAME (lp2_SPUFI) +
    FORMAT (TXT) +
    MSGDD MSG

./ ADD NAME=SETCACHE
//SYSCACH  JOB 1000,'SYSTEME',REGION=2M,                                00000134
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPLA          00000234
//*                                                                     00003000
//**********************************************************************00004000
//*    (IL FAUT QUE LE SUBSYSTEM SOIT ON AVANT,SETCACHS)                00005030
//*    ACTIVE LE CACHE POUR LE VOLUME                                   00005129
//**********************************************************************00006000
//*                                                                     00007000
// EXEC PGM=IDCAMS                                                      00030000
//SYSPRINT DD SYSOUT=*                                                  00040000
//DD1   DD UNIT=3390,VOL=SER=DEV025,DISP=SHR                            00042040
//SYSIN DD *                                                            00050000
  SETCACHE  -                                                           00060038
  FILE(DD1) -                                                           00070038
  DEVICE    -                                                           00080038
  OFF                                                                   00090040
/*                                                                      00100000
//                                                                      00110000

./ ADD NAME=SETCACHL
//SYSCACHE JOB 1000,'SYST-GRANIE',REGION=2M,                            00000109
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00000209
//**********************************************************************00006000
//* LISTE DES ACCES POUR TOUS LES VOLUMES                               00007008
//**********************************************************************00008007
// EXEC PGM=IDCAMS                                                      00030000
//SYSPRINT DD SYSOUT=*                                                  00040000
//DD1   DD UNIT=3390,VOL=SER=SPOOL1,DISP=SHR                            00041011
//SYSIN DD *                                                            00050000
  LISTDATA -                                                            00060000
  STATUS -                                                              00070013
  UNIT(3390) VOL(SPOOL1)                                                00090011
/*                                                                      00100000
//                                                                      00110000

./ ADD NAME=SETCACHS
//SYSCACH  JOB 1000,'SYSTEME',REGION=4M, TYPRUN=HOLD,                   00000113
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00000209
//**********************************************************************00004000
//*   ACTIVE LE SUBSYSTEM CACHE GLOBALEMENT OU PAS                      00005006
//**********************************************************************00006000
// EXEC PGM=IDCAMS                                                      00030000
//SYSPRINT DD SYSOUT=*                                                  00040000
//*DD1   DD UNIT=3390,VOL=SER=SPOOL1,DISP=SHR                           00042013
//*DD1   DD UNIT=3390,VOL=SER=MVS102,DISP=SHR                           00043012
//*DD1   DD UNIT=3390,VOL=SER=EXPL73,DISP=SHR                           00044012
//SYSIN DD *                                                            00050000
  SETCACHE       -                                                      00060009
  VOLUME(EXPL73) -                                                      00070013
  SUBSYSTEM      -                                                      00080009
  UNIT(3390)     -                                                      00081009
  OFF                                                                   00090012
/*                                                                      00100000
//                                                                      00110000

./ ADD NAME=SETCACHU
//SYSCACH  JOB 1000,'SYSTEME',REGION=2M,                                00000100
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00000201
//*                                                                     00003000
// EXEC PGM=IDCAMS                                                      00030000
//SYSPRINT DD SYSOUT=*                                                  00040000
//SYSIN DD *                                                            00050000
  SETCACHE        -                                                     00060001
  UNITNUMBER(2A8) -                                                     00070004
  DEVICE OFF                                                            00090003
  SETCACHE        -                                                     00091001
  UNITNUMBER(2A9) -                                                     00092004
  DEVICE OFF                                                            00094003
  SETCACHE        -                                                     00095001
  UNITNUMBER(2B8) -                                                     00096004
  DEVICE OFF                                                            00098003
  SETCACHE        -                                                     00099001
  UNITNUMBER(2B9) -                                                     00099104
  DEVICE OFF                                                            00099303
/*                                                                      00100000
//                                                                      00110000

./ ADD NAME=SETDASDF
//SYSPGR1  JOB 1000,'SYST-GRANIE',REGION=2M,                            00000100
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00000242
//*                                                                     00003000
//**********************************************************************00004000
//*   ACTIVE OU PAS DASDFASTWRITE POUR 1 VOL                            00005002
//*   (LA NVS DOIT ETRE ACTIVE POUR UTILISER LA FONCTION)               00005135
//*   VOIR MEMBRE SETNVS                                                00005235
//**********************************************************************00006000
//*                                                                     00007000
// EXEC PGM=IDCAMS                                                      00030000
//SYSPRINT DD SYSOUT=*                                                  00040000
//DD1   DD UNIT=3390,VOL=SER=IBM435,DISP=SHR                            00042046
//SYSIN DD *                                                            00050000
  SETCACHE -                                                            00060000
  FILE(DD1)      -                                                      00070000
  DASDFASTWRITE -                                                       00080001
  ON                                                                    00090040
/*                                                                      00100000
//                                                                      00110000

./ ADD NAME=SETDASDU
//SYSCACH  JOB 1000,'SYST-GRANIE',REGION=2M,                            00000101
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00000200
//*                                                                     00007000
// EXEC PGM=IDCAMS                                                      00030000
//SYSPRINT DD SYSOUT=*                                                  00040000
//SYSIN DD *                                                            00050000
  SETCACHE        -                                                     00060001
  UNITNUMBER(4A8) -                                                     00070001
  DASDFASTWRITE   -                                                     00080001
  OFF                                                                   00090001
  SETCACHE        -                                                     00091001
  UNITNUMBER(4A9) -                                                     00092001
  DASDFASTWRITE   -                                                     00093001
  OFF                                                                   00094001
  SETCACHE        -                                                     00095001
  UNITNUMBER(4B8) -                                                     00096001
  DASDFASTWRITE   -                                                     00097001
  OFF                                                                   00098001
  SETCACHE        -                                                     00099001
  UNITNUMBER(4B9) -                                                     00099101
  DASDFASTWRITE   -                                                     00099201
  OFF                                                                   00099301
/*                                                                      00100000
//                                                                      00110000

./ ADD NAME=SETNVS
//SYNVSON  JOB 1000,'SYSTEME',REGION=2M,TYPRUN=HOLD,                    00000112
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00000211
//**********************************************************************00004000
//*   ACTIVE OU PAS NON VOLATILE STORAGE SUR UN CONTROLEUR              00005011
//*   METTRE OFF SUFFIT A DESACTIVER LE DFW                             00005109
//**********************************************************************00006000
//*                                                                     00007000
// EXEC PGM=IDCAMS                                                      00030000
//SYSPRINT DD SYSOUT=*                                                  00040000
//SYSIN DD *                                                            00050000
  SETCACHE       -                                                      00060012
  VOLUME(DEV007) -                                                      00070015
  UNIT(3390)     -                                                      00071006
  NVS            -                                                      00080012
  ON                                                                    00090014
  SETCACHE       -                                                      00091012
  VOLUME(MVS102) -                                                      00092013
  UNIT(3390)     -                                                      00093012
  NVS            -                                                      00094012
  ON                                                                    00095014
  SETCACHE       -                                                      00096012
  VOLUME(EXPL73) -                                                      00097013
  UNIT(3390)     -                                                      00098012
  NVS            -                                                      00099012
  ON                                                                    00099114
//                                                                      00099213
  SETCACHE       -                                                      00099312
  VOLUME(SPOOL1) -                                                      00099412
  UNIT(3390)     -                                                      00099512
  NVS            -                                                      00099612
  ON                                                                    00099712
  SETCACHE       -                                                      00099812
  VOLUME(MVS102) -                                                      00099912
  UNIT(3390)     -                                                      00100012
  NVS            -                                                      00100112
  ON                                                                    00100212
  SETCACHE       -                                                      00100312
  VOLUME(EXPL73) -                                                      00100412
  UNIT(3390)     -                                                      00100512
  NVS            -                                                      00100612
  ON                                                                    00100712
/*                                                                      00101000
//                                                                      00110000

./ ADD NAME=SETSYS
SETSYS                                                                  00010001
SETSYS ABARSACTLOGMSGLVL(20)                                            00020001
SETSYS                            REDUCED-'                             00030001
SETSYS ABARSACTLOGTYPE(-+------------------------+-)-'                  00040001
SETSYS                  | .-SYSOUT-.             |                      00050001
SETSYS                    DASD-------------------'                      00060001
SETSYS ABARSBUFFERS(8)                                                  00070001
SETSYS ABARSDELETEACTIVITY(N)                                           00080001
SETSYS ABARSKIP(-+-PPRC---+-+-XRC---+-)-'                               00090001
SETSYS ABARSKIP(-+-PPRC---+-+-XRC---+-)-'                               00091001
SETSYS ABARSOPTIMIZE(-+-OPTION-+-)-'                                    00100001
SETSYS +-ABARSPROCNAME-+-(-+-NAME-----+-)-'                             00110001
SETSYS ABARSTAPES(-+-NOSTACK-+-)-'                                      00120001
SETSYS ABARSUNITNAME(-+-UNITTYPE-+-)-'                                  00130001
SETSYS ABARSVOLCOUNT(-+-ANY--+-)-'                                      00140001
SETSYS +-ACTLOGMSGLVL-+-(-+-EXCEPTIONONLY-+-)-'                         00150001
SETSYS +-ACTLOGTYPE-+-(-+-+--------+-+---------------+-+-)-'            00160001
SETSYS ARECOVERML2UNIT(-+-UNITTYPE-+-)-'                                00170001
SETSYS +-ARECOVERPERCENTUTILIZED-+-(-+-NNN-+-)-'                        00180001
SETSYS ARECOVERTGTGDS(-+-ACTIVE----+-)-'                                00190001
SETSYS ARECOVERUNITNAME(-+-UNITTYPE-+-)-'                               00200001
SETSYS +-AUTOBACKUPSTART-+-(HHMM1-+-+-------+-+-+-------+-)-'           00210001
SETSYS +-AUTODUMPSTART-+-(HHMM1-+-+-------+-+-+-------+-)-'             00220001
SETSYS +-BACKUP(-+-------------------------+-+--------------------------00230001
SETSYS +-BACKUPPREFIX-+-(PREFIX)-'                                      00240001
SETSYS CDSVERSIONBACKUP--(--+----------------+--+----------------+--)-' 00250001
SETSYS +-CLASSTRANSITIONS-+-(-+-EVENTDRIVENMIGRATION-+-(-+--------------00260001
SETSYS                                                   |    .-SERIALIZ00270001
SETSYS +-COMMONQUEUE-+-(-+----------------+-)-'                         00280001
SETSYS COMPACT(-+----------------+-)-'                                  00290001
SETSYS COMPACTPERCENT(-+-PCT-+-)-'                                      00300001
SETSYS CONVERSION--+--------------------+-'                             00310001
SETSYS .-CSALIMITS-.                        |    DAYS(DAYS)-'           00320001
SETSYS NODEBUG-.  .-DFHSMDATASETSERIALIZATION-----.                     00330001
SETSYS DEBUG---'  +-+-DFHSMDATASETSERIALIZATION-+-+                     00340001
SETSYS DISASTERMODE-+-------------+-'                                   00350001
SETSYS DSBACKUP(-| FRAGMENT H |-)-'                                     00360001
SETSYS DSSXMMODE(-+----------------+-)-'    DUMPIO(-+-N,M-+-)-'         00370001
SETSYS DUPLEX(-BACKUP(-| FRAGMENT K |-)-MIGRATION(-| FRAGMENT L |-)-'   00380001
SETSYS NOEMERGENCY-.  .-NOERASEONSCRATCH-.                              00390001
SETSYS EXITOFF(---MODNAME-+-)-'    EXITON(---MODNAME-+-)-'              00400001
SETSYS +-EXPIREDDATASETS-+--+-------------------+-'                     00410001
SETSYS +-EXTENDEDTTOC-+--(--+-Y-+--)-'                                  00420001
SETSYS +-FASTREPLICATION-+-(-| FRAGMENT M |-)-'                         00430001
SETSYS FREQUENCY(-+-DAYS-+-)-'                                          00440001
SETSYS +-GENVSAMCOMPNAMES-+--(-+-NO--+-)-'                              00450001
SETSYS INCREMENTALBACKUP--+---------------------+-'                     00460001
SETSYS INPUTTAPEALLOCATION--(-+-NOWAIT-+-)-'                            00470001
SETSYS INTERVALMIGRATION---.  .-JES2-.                                  00480001
SETSYS JOURNAL-+------------------+-+                                   00490001
SETSYS +-MAXABARSADDRESSSPACE-+--(-+-NN-+-)-'                           00500001
SETSYS MAXCOPYPOOLTASKS(-+--------------------+-+-------------------+-+-00510001
SETSYS MAXBACKUPTASKS(-+-NN-+-)-'                                       00520001
SETSYS MAXDSRECOVERTASKS(-+-NN-+-)-'                                    00530001
SETSYS +-MAXDSTAPERECOVERTASKS-+--(---NN---)-'                          00540001
SETSYS +-MAXDUMPRECOVERTASKS-+-(-+----+-)-'                             00550001
SETSYS MAXDUMPTASKS(-+-NN-+-)-'    MAXEXTENTS(-+-EXTENTS-+-)-'          00560001
SETSYS +-MAXINTERVALTASKS-------+--(-+-NN-+-)-'                         00570001
SETSYS +-MAXMIGRATIONTASKS-+--(-+-NN-+-)-'                              00580001
SETSYS MAXRECALLTASKS(-+-NN-+-)-'                                       00590001
SETSYS MAXRECYCLETASKS(-+-NN-+-)-'                                      00600001
SETSYS MAXSSMTASKS(-+------------------------+-+-------------------+-)-'00610001
SETSYS +-MIGRATEPREFIX-+--(PREFIX)-'                                    00620001
SETSYS MIGRATIONCLEANUPDAYS-(--+-RECALLDAYS-+--+-STATDAYS-+--+-RECONNECT00630001
SETSYS +-MIGRATIONLEVEL1DAYS-+--(-+-DAYS-+-)-'                          00640001
SETSYS +-MIGRATIONSUBTASKS-+-(-+-----+-+-----------------------------+-)00650001
SETSYS MIGUNITNAME(-+-UNITNAME-+-)-'                                    00660001
SETSYS ML1OVERFLOW-(-+---------------------+-+----------------------+-)-00670001
SETSYS ML2PARTIALSNOTASSOCIATEDGOAL(-+-NNN-----+-)-'                    00680001
SETSYS ML2RECYCLEPERCENT(PCT)-'                                         00690001
SETSYS MONITOR-(--| FRAGMENT N |--)-'                                   00700001
SETSYS MOUNTWAITTIME(-+-MINUTES-+-)-'                                   00710001
SETSYS +-OBJECTNAMES-+--(---NAME-+-)-'                                  00720001
SETSYS +-ONDEMANDMIGRATION-+-(-+---+-)-'                                00730001
SETSYS ODMNOTIFICATIONLIMIT(-+-------+-)-'                              00740001
SETSYS .-OPTIMUMDASDBLOCKING-------. |                                  00750001
SETSYS OUTPUTTAPEALLOCATION(-+--------+-)-'                             00760001
SETSYS PARTIALTAPE(-+-+-MARKFULL-+--------------------------------------00770001
SETSYS PDA(-+-NONE-+-)-'    PLEXNAME(-+-HSMPLEX_SUFFIX-+-)-'            00780001
SETSYS +-PRIMARYSPMGMTSTART-+--(HHMM1-+-------+-)-'                     00790001
SETSYS PROFILEBACKUP---.                                                00800001
SETSYS PROMOTE(-+--------------------------+-+------------------+-)-'   00810001
SETSYS RACFIND---.                                                      00820001
SETSYS RECALL--+--------------------------------------------------+-'   00830001
SETSYS +-RECYCLEINPUTDEALLOCFREQUENCY-+--(--+-------------------------+-00840001
SETSYS +-RECYCLEOUTPUT-+--(BACKUP-+----------------+-MIGRATION-+--------00850001
SETSYS RECYCLEPERCENT(-+-PCT-+-)-'                                      00860001
SETSYS +-RECYCLETAKEAWAYRETRY-+-(-+-------------------------------------00870001
SETSYS RECYCLETAPEALLOCATION(-+--------+-)-'                            00880001
SETSYS +-REMOVECOMPACTNAMES-+-(---NAME-+-)-'                            00890001
SETSYS SCRATCHFREQUENCY(-+-DAYS-+-)-'                                   00900001
SETSYS +-SECONDARYSPMGMTSTART-+--(HHMM1-+-------+-)-'                   00910001
SETSYS SELECTVOLUME--(--+-----------------------------------------------00920001
SETSYS NOSKIPABPRIMARY-.                                                00930001
SETSYS NOSMALLDATASETPACKING------------------------------------.       00940001
SETSYS NOSMF--------.                                                   00950001
SETSYS SPILL--+----------------------------------+-+                    00960001
SETSYS SWAP---+                                                         00970001
SETSYS SYSOUT-(-+-CLASS-+-+------------------------------+-)-'          00980001
SETSYS SYS1DUMP---.                                                     00990001
SETSYS +-TAPEDATASETORDER-+-(-+-+-PRIORITY-+----------------------------01000001
SETSYS TAPEDELETION(-+------------------------------+-)-'               01010001
SETSYS NOTAPEHARDWARECOMPACT-.                                          01020001
SETSYS TAPEINPUTPROMPT(-+------------------------+--+-------------------01030001
SETSYS TAPEMAXRECALLTASKS(-+-TASKS-+-)-'                                01040001
SETSYS TAPEMIGRATION(-+-DIRECT(-+---------.-ANY------.-----+-)----------01050001
SETSYS TAPEOUTPUTPROMPT--(TAPECOPY-(-+-YES-+-)-)-'                      01060001
SETSYS +-TAPERECALLLIMITS-+--(--+--------------------+--+---------------01070001
SETSYS TAPESECURITY--(-+-----------------------+-+----------+-+---------01080001
SETSYS TAPESPANSIZE(-+-NNNN-+-)-'                                       01090001
SETSYS TAPEUTILIZATION--(--+-LIBRARYBACKUP--+---------------------------01100001
SETSYS UNITNAME(-+-UNITNAME-+-)-'                                       01110001
SETSYS USECYLINDERMANAGEDSPACE(N)------------.                          01120001
SETSYS +-USERUNITTABLE-+-(---ES1, ES2OUT:ES2IN, ES3:ES3-+-)-+           01130001
SETSYS VERSIONS(-+-LIMIT-+-)-'    VOLCOUNT(-+-ANY--+-)-'                01140001
SETSYS --VOLUMEDUMP---(-+-CC-------------------+-)-'                    01150001
SETSYS                  +-+-PREFERRED----+-----+                        01160001
SETSYS                  |   ANYPREFERRED-'     |                        01170001
SETSYS                  +-+-REQUIRED----+------+                        01180001
SETSYS                  |   ANYREQUIRED-'      |                        01190001
SETSYS                  +-+-CACHEPREFERRED-+---+                        01200001
SETSYS                  |   CPREF----------'   |                        01210001
SETSYS                  +-+-VIRTUALPREFERRED-+-+                        01220001
SETSYS                  |   VPREF------------' |                        01230001
SETSYS                  +-+-CACHEREQUIRED-+----+                        01240001
SETSYS                  |   CREQ----------'    |                        01250001
SETSYS                    +-VIRTUALREQUIRED-+--'                        01260001
SETSYS                      VREQ------------'                           01270001
SETSYS ZCOMPRESS(-+----------------+-)-'                                01280001
SETSYS RETRY(-+-Y-+-)-'    DELAY(-+-MIN-+-)-'    SERIALIZATION(-+-PREFER01290001
//                                                                      01291001
B: CDSVERSIONBACKUP OPTIONAL PARAMETERS                                 01300001
     BACKUPCOPIES--(--+-BACKUPCOPIES-+--)-'                             01310001
     BACKUPDEVICECATEGORY(-+-----------------------------+-)-'          01320001
C: TAPE OPTIONAL PARAMETERS                                             01330001
   | .-NOPARALLEL-. |                                                   01340001
   +-+-EXPIRATIONDATE-+-(EXPIRATIONDATE)---------+                      01350001
     +-RETENTIONPERIOD-+-(-+-RETENTIONPERIOD-+-)-'                      01360001
     UNITNAME(-+-UNITNAME-+-)-'                                         01370001
D: CDSVERSIONBACKUP OPTIONAL PARAMETERS                                 01380001
     DATAMOVER(-+-DSS-+-)-'                                             01390001
E: COMMONQUEUE OPTIONAL PARAMETERS                                      01400001
     (RECALL(-+-CONNECT--(--BASENAME--)-+-))-'                          01410001
     DUMP(-+-+-MASTERSCHEDULERCANDIDATE-+-(-+-----+-)-------------------01420001
F: COMPACT OPTIONAL PARAMETERS                                          01430001
   | .-NODASDBACKUP-.  .-NODASDMIGRATE-.  .-NOTAPEBACKUP-.  .-NOTAPEMIGR01440001
G: CSALIMITS OPTIONAL PARAMETERS                                        01450001
     ACTIVE(-+-PERCENT1-+-)-'    INACTIVE(-+-PERCENT2-+-)-'             01460001
H: DSBACKUP OPTIONAL PARAMETERS                                         01470001
     +-GENVSAMCOMPNAMES-+--(--+-----+--)-'                              01480001
I: DSSXMMODE OPTIONAL PARAMETERS                                        01490001
J: TAPE OPTIONAL PARAMETERS                                             01500001
K: DUPLEX BACKUP OPTIONAL PARAMETERS                                    01510001
L: DUPLEX MIGRATION OPTIONAL PARAMETERS                                 01520001
M: FASTREPLICATION OPTIONAL PARAMETERS                                  01530001
     +-DATASETRECOVERY-+-(-+-----------+-)-'                            01540001
N: MONITOR OPTIONAL PARAMETERS                                          01550001
     +-BACKUPCONTROLDATASET-+-(-+-THRESH-+-)-'                          01560001
O: ZCOMPRESS OPTIONAL PARAMETERS                                        01570001
     DASDBACKUP--(--+-----+--)--DASDMIGRATE--(--+-----+--)--TAPEBACKUP--01580001

./ ADD NAME=SMFDEF
//SYSMF    JOB 1000,'SYSTEME',REGION=2M,                                00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00030000
//DEFMAN5 EXEC PGM=IDCAMS
//SYSPRINT  DD SYSOUT=*
//SYSIN DD *
 DELETE SYS1.MAN3 CL
 DEFINE CLUSTER (NAME(SYS1.MAN3) -
        VOLUME(SYS1MC) -
        NONINDEXED -
        CYLINDERS(120)  -
        REUSE -
        RECORDSIZE(4086 32767) -
        SPANNED -
        SPEED   -
        CISZ(4096) -
        SHAREOPTIONS(2))

./ ADD NAME=SMFRAZ
//SYSMF1   JOB 1000,'SYSTEME',REGION=2M,                                00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//*------------------------------------------------------------         00030003
//*********************************************************************
//S001     EXEC PGM=IFASMFDP
//*********************************************************************
//SYSPRINT DD  SYSOUT=*
//DUMPIN   DD  DDNAME=IEFRDER
//IEFRDER  DD  DSN=SYS1.MAN2,DISP=SHR
//DUMPOUT  DD  SYSOUT=Z
//SYSIN    DD  DUMMY

./ ADD NAME=SMPEBAT
//SMPEBAT   JOB ACCT£,                                                  00001013
//             MVS,                                                     00002013
//             REGION=8M,                                               00002113
//             MSGCLASS=T,                                              00003006
//             NOTIFY=&SYSUID,                                          00003106
//             MSGLEVEL=(1,1)                                           00004000
//*entries AIX5                                                         00006013
//*entries ASSEM                                                        00007013
//*entries BOOK                                                         00008013
//*entries BOOKARA                                                      00009013
//*entries BSIND                                                        00009113
//*entries BSINDARA                                                     00009213
//*entries CGM                                                          00009313
//*entries CGMARA                                                       00009413
//*entries CLIENT1                                                      00009513
//*entries CLIENT2                                                      00009613
//*entries CLIENT3                                                      00009713
//*entries CLIENT4                                                      00009813
//*entries CLIENT5                                                      00009913
//*entries CLIST                                                        00010013
//*entries DATA                                                         00010113
//*entries DATA1                                                        00010213
//*entries DDDEF                                                        00010313
//*entries DLIB                                                         00010413
//*entries DZONE                                                        00010513
//*entries EXEC                                                         00010613
//*entries FEATURE                                                      00010713
//*entries FMIDSET                                                      00010813
//*entries FONT                                                         00010913
//*entries FONTARA                                                      00011013
//*entries GDF                                                          00011113
//*entries GDFARA                                                       00011213
//*entries GZONE                                                        00011313
//*entries HELP                                                         00011413
//*entries HELPARA                                                      00011513
//*entries HFS                                                          00011613
//*entries HFSARA                                                       00011713
//*entries HOLDDATA                                                     00011813
//*entries IMG                                                          00011913
//*entries IMGARA                                                       00012013
//*entries JAR                                                          00012113
//*entries LMOD                                                         00012213
//*entries MAC                                                          00012313
//*entries MCS                                                          00012413
//*entries MOD                                                          00012513
//*entries MSG                                                          00012613
//*entries MSGARA                                                       00012713
//*entries OPTIONS                                                      00012813
//*entries ORDER                                                        00012913
//*entries OS21                                                         00013013
//*entries OS22                                                         00013113
//*entries OS23                                                         00013213
//*entries OS24                                                         00013313
//*entries OS25                                                         00013413
//*entries PARM                                                         00013513
//*entries PNL                                                          00013613
//*entries PNLARA                                                       00013713
//*entries PROBJ                                                        00013813
//*entries PROBJARA                                                     00013913
//*entries PROC                                                         00014013
//*entries PRODUCT                                                      00014113
//*entries PRODXML                                                      00014213
//*entries PROGRAM                                                      00014313
//*entries PRSRC                                                        00014413
//*entries PRSRCARA                                                     00014513
//*entries PSEG                                                         00014613
//*entries PSEGARA                                                      00014713
//*entries PUBLB                                                        00014813
//*entries PUBLBARA                                                     00014913
//*entries SAMP                                                         00015013
//*entries SAMPARA                                                      00015113
//*entries SKL                                                          00015213
//*entries SKLARA                                                       00015313
//*entries SRC                                                          00015413
//*entries SYSMOD                                                       00015513
//*entries TBL                                                          00015613
//*entries TBLARA                                                       00015713
//*entries TEXT                                                         00015813
//*entries TEXTARA                                                      00015913
//*entries TZONE                                                        00016013
//*entries UNIX1                                                        00016113
//*entries UNIX2                                                        00016213
//*entries UNIX3                                                        00016313
//*entries UNIX4                                                        00016413
//*entries UNIX5                                                        00016513
//*entries USER1                                                        00016613
//*entries USER2                                                        00016713
//*entries USER3                                                        00016813
//*entries USER4                                                        00016913
//*entries USER5                                                        00017013
//*entries UTILITY                                                      00017113
//*entries UTIN                                                         00017213
//*entries UTINARA                                                      00017313
//*entries UTOUT                                                        00017413
//*entries UTOUTARA                                                     00017513
//*entries WIN1                                                         00017613
//*entries WIN2                                                         00017713
//*entries WIN3                                                         00017813
//*entries WIN4                                                         00017913
//*entries WIN5                                                         00018013
//*entries ZONESET                                                      00018113
//S1       EXEC PGM=GIMSMP,                                             00019000
//         PARM='PROCESS=WAIT',                                         00020000
//         DYNAMNBR=120                                                 00030000
//SMPCSI  DD DSN=SYS3.MQ.V930VUE.GLOBAL.CSI,DISP=SHR                    00121013
//*SMPCSI  DD DSN=SYS3.DB2.V1210.CSI,DISP=SHR                           00121113
//*SMPCSI  DD DSN=SYS3.AMIOPS.V202204.GLOBAL.CSI,DISP=SHR               00122011
//*SMPCSI   DD DISP=SHR,DSN=SYS3.CA.OPB9.CSI                            00130000
//*SMPCSI   DD DISP=SHR,DSN=SYS3.FILEMNGR.V141.CSI                      00131005
//*SMPCSI   DD DISP=SHR,DSN=SYS3.ZOS205.GLOBAL.CSI                      00132003
//*                                                                     00140000
//*SMPPTFIN DD DISP=SHR,DSN=SYSLHU.SYSVIEW.RO96630.BIN                  00150003
//*         DD PATHDISP=KEEP,                                           00151003
//*         PATH='/Softwares/CA/sysview/RO96738.BIN'                    00152003
//*         DD PATHDISP=KEEP,                                           00153003
//*         PATH='/Softwares/CA/sysview/RO96762.BIN'                    00154003
//SMPCNTL  DD *                                                         00160000
  SET    BOUNDARY (TZONE)      .                                        00161005
  LIST   PTFS FUNCTIONS  APARS USERMODS SYSMOD  .                       00166110
/*                                                                      00166209
  LIST   SYSMOD   USERMODS     .                                        00166311
  LIST   SYSMOD(CC2HB90)  .                                             00166411
  LIST   SYSMOD   USERMODS     .                                        00166509
  SET    BOUNDARY (DZONE)      .                                        00166609
  LIST   FUNCTIONS  SYSMOD     .                                        00166709
/*                                                                      00167004
  LIST   SYSMOD(CC2HB90)  .                                             00168008
  SET    BOUNDARY (DZONE)                                               00170003
                  .                                                     00180000
  LIST                                                                  00190000
         FUNCTIONS                                                      00200000
         SYSMOD                                                         00210000
                .                                                       00220000
//                                                                      00221001
  SET    BOUNDARY (DZONE)                                               00221103
                  .                                                     00221203
//                                                                      00222003
  UNLOAD DDDEF                .                                         00230007
  SET    BOUNDARY (CAIT71)                                              00240007

./ ADD NAME=SMPENTS
//SMPNTS    JOB ACCT£,                                                  00001000
//             MVS,                                                     00002000
//             NOTIFY=&SYSUID,                                          00003000
//             MSGLEVEL=(1,1)                                           00004000
//RECEIVE EXEC PGM=GIMSMP                                               00020000
//SMPCSI DD DSN=SMPE.GLOBAL.CSI,DISP=SHR                                00030000
//SMPNTS DD PATH='/u/smpe/smpnts/',PATHDISP=KEEP                        00040000
//SMPOUT DD SYSOUT=*                                                    00050000
//SMPRPT DD SYSOUT=*                                                    00060000
//SYSPRINT DD SYSOUT=*                                                  00070000
//SMPCNTL DD *                                                          00080000
SET BOUNDARY(GLOBAL).                                                   00090000
RECEIVE SYSMODS HOLDDATA                                                00100000
ORDER( /* Place an order for service */                                 00110000
ORDERSERVER(ORDRSRVR)                                                   00120000
CLIENT(MYCLIENT)                                                        00130000
CONTENT(                                                                00140000
PTFS(UQ12345,UQ98765) /* Get these PTFs, and any.. */                   00150000
) /* ..requisites.. */                                                  00160000
FORTGTZONES(ZOS14) /* ..for this target zone */                         00170000
).                                                                      00180000
/*                                                                      00190000
//ORDRSRVR DD *                                                         00200000
<ORDERSERVER                                                            00210000
url="https://eccgw01.boulder.ibm.com/services/projects/ecc/ws/"         00220000
keyring="MRWKYRNG"                                                      00230000
certificate="SMPE Client Certificate">                                  00240000
</ORDERSERVER>                                                          00250000
/*                                                                      00260000
//MYCLIENT DD *                                                         00270000
<CLIENT                                                                 00280000
javahome="/usr/lpp/java/J1.4"                                           00290000
classpath="/usr/lpp/smp/classes">                                       00300000
</CLIENT>                                                               00310000

./ ADD NAME=SMPMVS
//SYSREC   JOB 1000,'SYSTEME',REGION=5M,                                00001007
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00002007
//*------------------------------------------------------               00060700
//RECAPPL EXEC SMPE,                                                    00061000
//             CSI='SMPE.GLOBAL.CSI',REGION=6M                          00071009
//*MPPTFIN DD DISP=(OLD,KEEP),UNIT=TAPE,VOL=SER=SMPPTF,                 00101004
//*        LABEL=(1,NL),DSN=SMPMCS,                                     00101104
//*        DCB=(RECFM=FBA,LRECL=80,BLKSIZE=7200)                        00102004
//SMPTLIB  DD UNIT=3390,DISP=SHR,VOL=SER=ESA2M2                         00103000
//*           SPACE=(CYL,(50,20,500))                                   00104000
//SMPLOG   DD DUMMY                                                     00111007
//SMPHOLD  DD  DUMMY                                                    00131000
//SMPEIN   DD  *                                                        00140000
  SET BDY(TZN2P1) .                                                     00140507
  LIST USERMODS.                                                        00140608
//                                                                      00140701
  SET BDY(TZN1P1) .                                                     00140801
  APPLY S(UY61905,UY76356,UY58930,UY59075,UY60720,UY61904,UY76355)      00140900
  BYPASS(HOLDSYS(DOC)) CHECK REDO                                       00141000
  GROUPEXTEND.                                                          00141100
/*                                                                      00141200
//                                                                      00141300
//UY61905                                                               00141400
  SET BDY(GLOBAL) .                                                     00142000
  RECEIVE S(UY76356,UY76355,UY77602) .                                  00143000

./ ADD NAME=SMSADMIN
//SYSILEA  JOB CLASS=I,MSGCLASS=X,NOTIFY=&SYSUID,                       00010000
//         MSGLEVEL=(1,1)                                               00020000
//**********************************************************************00030000
//*   ACTIVATION DES PROFILES DICTIONNAIRE                              00040000
//**********************************************************************00050000
//RACFID   EXEC PGM=IKJEFT01                                            00060000
//SYSPRINT DD SYSOUT=*                                                  00070000
//SYSTSOUT DD SYSOUT=*                                                  00080000
//SYSTSPRT DD SYSOUT=*                                                  00090000
//SYSTSIN  DD *                                                         00100000
 RDEFINE FACILITY STGADMIN.ADR.STGADMIN.*  UACC(NONE) AUDIT(NONE)       00110000
 PERMIT  STGADMIN.ADR.STGADMIN.* CLASS(FACILITY) ID(SYSILE)            -00111000
   ACCESS(READ )                                                        00112000
 PERMIT  STGADMIN.ADR.STGADMIN.* CLASS(FACILITY) ID(SYSPGR)            -00113000
   ACCESS(READ )                                                        00114000
 SETROPTS GENERIC(FACILITY)   REFRESH                                   00120000
 SETROPTS REFRESH RACLIST(FACILITY)                                     00130001

./ ADD NAME=SNAPFILE
//SYSPLAT  JOB 1000,'SNAP FILE',REGION=4M,
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID
//*------------------------------------------------------------
//SYST02   EXEC PGM=SIBBATCH
//*
//SYSTERM  DD  SYSOUT=(,)
//SYSPRINT DD  SYSOUT=(,)
//SYSIN    DD  *
 SNAP DATASET( SOURCE('CSQP.PSID01') -
   TOLENQF(Y)  TARGET('CSQV.PSID01') VOLUME(SYSR02))
/*

./ ADD NAME=SNAPVOL
//SYSPLAT  JOB 1000,'SNAP FILE',REGION=4M,
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID
//*------------------------------------------------------------
//SYST02   EXEC PGM=SIBBATCH
//*
//SYSTERM  DD  SYSOUT=(,)
//SYSPRINT DD  SYSOUT=(,)
//SYSIN    DD  *
 SNAP VOLUME ( SOURCE( VOL(IPLMIN) )  -
    COPYV(Y)  REPLACE(Y) TOLENQF(Y) TARGET( VOL(IB50BF) ) )
/*

./ ADD NAME=SSI
SUBSYS=JES2 DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=MSTR DYNAMIC=NO  STATUS=ACTIVE   COMMANDS=N/A
SUBSYS=IZUG DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=SMS  DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=FFST DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=LOGR DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=TNF  DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=VMCF DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=RACF DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=BLSR DYNAMIC=YES STATUS=ACTIVE   COMMANDS=ACCEPT
SUBSYS=NET2 DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=XDSS DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=CICS DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=CSQP DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=QMDP DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=BIPP DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=QPAP DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=TUXP DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=CTB1 DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=DB2P DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=IRLP DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=JRLP DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=OPER DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=OP50 DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=SOP2 DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=SSP2 DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=SS02 DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=NM   DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=NM01 DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=NMT2 DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=NMS0 DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=NMSS DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=NMT0 DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=NMS2 DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=SLV2 DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=SOLV DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=SO02 DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=OPCE DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=OPTE DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=RES  DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=ACEF DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=SADA DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=SOV  DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=WESS DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=WESO DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=APPC DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=ASCH DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=AHS  DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=RRS  DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=OAM1 DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=RTCS DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=GSO1 DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=GSO2 DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
OUBSYS=AXR  DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=HASP DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=MIMS DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=PDSM DYNAMIC=NO  STATUS=ACTIVE   COMMANDS=N/A
SUBSYS=IDIS DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=GOAL DYNAMIC=NO  STATUS=INACTIVE COMMANDS=N/A
SUBSYS=ISRV DYNAMIC=NO  STATUS=ACTIVE   COMMANDS=N/A
SUBSYS=PT   DYNAMIC=NO  STATUS=INACTIVE COMMANDS=N/A
SUBSYS=CTTI DYNAMIC=NO  STATUS=ACTIVE   COMMANDS=N/A
SUBSYS=*PPI DYNAMIC=YES STATUS=INACTIVE COMMANDS=REJECT
SUBSYS=EYUX DYNAMIC=NO  STATUS=ACTIVE   COMMANDS=N/A
SUBSYS=DCN2 DYNAMIC=YES STATUS=ACTIVE   COMMANDS=REJECT
SUBSYS=ACAS DYNAMIC=NO  STATUS=INACTIVE COMMANDS=N/A
SUBSYS=APAS DYNAMIC=NO  STATUS=ACTIVE   COMMANDS=N/A
SUBSYS=QPAS DYNAMIC=NO  STATUS=ACTIVE   COMMANDS=N/A
SUBSYS=CPAS DYNAMIC=NO  STATUS=ACTIVE   COMMANDS=N/A
SUBSYS=DPAS DYNAMIC=NO  STATUS=ACTIVE   COMMANDS=N/A
SUBSYS=OPAS DYNAMIC=NO  STATUS=ACTIVE   COMMANDS=N/A
SUBSYS=BBXS DYNAMIC=NO  STATUS=ACTIVE   COMMANDS=N/A

./ ADD NAME=STATDCOL
//STATDCOL PROC
//IDCAMS EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//OUT      DD DSN=&&OUT,DISP=(NEW,PASS,DELETE),
// DCB=(RECFM=VB,LRECL=644,BLKSIZE=0),
// UNIT=SYSDA,DSORG=PS,SPACE=(CYL,(10,1))
//SYSIN DD *
 DCOLLECT -
 OFILE(OUT) -
 VOLUME(*) NODATAINFO
//COPY    EXEC PGM=IEBGENER
//SYSPRINT DD DUMMY
//SYSUT1   DD DSN=&&OUT,DISP=(OLD,PASS)
//SYSUT2   DD DSN=&&SYSUT2,DISP=(NEW,PASS,DELETE),
// UNIT=SYSDA,
// DCB=(RECFM=FB,LRECL=133,BLKSIZE=26600),
// SPACE=(CYL,(10,1))
//SYSIN DD *
     GENERATE MAXFLDS=3,MAXGPS=1
GROUP1 RECORD FIELD=(133,2,,1)
//EXPLOIT EXEC PGM=AJDC0010
//STEPLIB  DD DISP=SHR,DSN=SYS5.BRN2.STATS.LOAD
//SYSUT1   DD DSN=&&SYSUT2,DISP=(OLD,PASS)
//SYSUT2   DD DSN=SYS5.BRN2.STATS.DCOLLECT(+1),
//  DISP=(NEW,CATLG,DELETE),UNIT=3390,
//  DCB=(RECFM=FB,LRECL=133,BLKSIZE=26600),
//  SPACE=(CYL,(1,1))

./ ADD NAME=STATWCOL
//STATWCOL PROC
//TRIDISK EXEC PGM=ICETOOL
//TOOLMSG DD SYSOUT=*
//SORTIN   DD  DSN=SYS5.BRN2.STATS.DCOLLECT,DISP=(OLD,DELETE)
//DFSMSG DD SYSOUT=*
//SYSOUT DD SYSOUT=*
//OT01CNTL DD DSN=&&HWMTX,DISP=(NEW,PASS,DELETE),
//  DCB=(RECFM=FB,LRECL=80,BLKSIZE=800),
//  UNIT=SYSDA,SPACE=(CYL,(1))
//HWMT1    DD DSN=&&HWMT,DISP=(MOD,PASS,DELETE),
//  DCB=(RECFM=FB,LRECL=133,BLKSIZE=26600),
//  UNIT=SYSDA,SPACE=(CYL,(100,10))
//HWMT2    DD DSN=&&HWMT2,DISP=(NEW,PASS,DELETE),
//  DCB=(RECFM=FB,LRECL=80,BLKSIZE=6400),
//  UNIT=SYSDA,SPACE=(CYL,(1,1))
//SORTOUT  DD DSN=SYS5.BRN2.STATS.DCOLLECT.HEBDO(+1),
//  DISP=(NEW,CATLG,DELETE),UNIT=3390,
//  DCB=(RECFM=FB,LRECL=133,BLKSIZE=26600),
//SORTLOW  DD DSN=SYS5.BRN2.STATS.DCOLLECT.HEBDO.LOW(+1),
//  DISP=(NEW,CATLG,DELETE),UNIT=3390,
//  DCB=(RECFM=FB,LRECL=133,BLKSIZE=26600),
//  SPACE=(CYL,(1,1))
//TEMP1    DD DSN=&&TEMP1,DISP=(MOD,PASS,DELETE),
//  DCB=(RECFM=FB,LRECL=133,BLKSIZE=26600),
//  UNIT=SYSDA,SPACE=(CYL,(100,10))
//HW00WK01 DD   UNIT=SYSDA,SPACE=(CYL,(150,50),RLSE)
//HW00WK02 DD   UNIT=SYSDA,SPACE=(CYL,(150,50),RLSE)
//HW00WK03 DD   UNIT=SYSDA,SPACE=(CYL,(150,50),RLSE)
//HW00WK04 DD   UNIT=SYSDA,SPACE=(CYL,(150,50),RLSE)
//HW01WK01 DD   UNIT=SYSDA,SPACE=(CYL,(150,50),RLSE)
//HW01WK02 DD   UNIT=SYSDA,SPACE=(CYL,(150,50),RLSE)
//HW01WK03 DD   UNIT=SYSDA,SPACE=(CYL,(150,50),RLSE)
//HW01WK04 DD   UNIT=SYSDA,SPACE=(CYL,(150,50),RLSE)
//IN00WK01 DD   UNIT=SYSDA,SPACE=(CYL,(150,50),RLSE)
//IN00WK02 DD   UNIT=SYSDA,SPACE=(CYL,(150,50),RLSE)
//IN00WK03 DD   UNIT=SYSDA,SPACE=(CYL,(150,50),RLSE)
//IN00WK04 DD   UNIT=SYSDA,SPACE=(CYL,(150,50),RLSE)
//IN00WK06 DD   UNIT=SYSDA,SPACE=(CYL,(150,50),RLSE)
//IN00WK07 DD   UNIT=SYSDA,SPACE=(CYL,(150,50),RLSE)
//IN00WK08 DD   UNIT=SYSDA,SPACE=(CYL,(150,50),RLSE)
//TOOLIN DD *
   SORT FROM(SORTIN) TO(TEMP1) USING(IN00)
   SELECT FROM(TEMP1) TO(SORTOUT) ON(6,6,CH) FIRST
   SORT FROM(SORTIN) TO(HWMT1) USING(HW00)
   SORT FROM(HWMT1) TO(HWMT2) USING(HW01)
   SELECT FROM(HWMT2) TO(OT01CNTL) ON(1,1,CH) FIRST
   COPY FROM(SORTIN) TO(SORTLOW) USING(OT01)
//IN00CNTL DD *
   INCLUDE COND=(6,2,CH,NE,C'FC')
   SORT FIELDS=(6,11,CH,A)
  END
//HW00CNTL DD *
   INCLUDE COND=(6,2,CH,NE,C'FC',AND,72,1,CH,NE,C' ')
   SORT FIELDS=(96,2,CH,A,93,2,CH,A,90,2,CH,A,81,5,CH,A)
   SUM FIELDS=(54,8,ZD,63,8,ZD)
  END
//HW01CNTL DD *
   SORT FIELDS=(54,8,CH,D)
  OUTREC FIELDS=(C'   INCLUDE COND=(81,17,CH,EQ,C',X'7D',
   81,17,X'7D',C',AND,6,2,CH,NE,C',X'7D',C'FC',X'7D',C')',11X)
  END

./ ADD NAME=STORAID
//SYSSTOR  JOB 1000,'SYST-GRANIE',REGION=2M,                            00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPLA          00020001
//*------------------------------------------------------------         00030003
//S1 EXEC PGM=STORAID,REGION=4M
//STEPLIB DD DSN=STORAID.V07.LOAD,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SAMPLE DD DSN=SYSPGR.SAMPLE1,DISP=(,CATLG,DELETE),
//            DCB=(RECFM=VB,LRECL=3200,BLKSIZE=32760),
//            SPACE=(CYL,(1,1)),UNIT=WORKDA
//*YSIN DD DSN=SYSPGR.JCL.CNTL(STORAI21),DISP=SHR
//SYSIN DD DSN=STORAID.V07.JCL(STOR21),DISP=SHR
//*------------------------------------------------------------         00030001
//DELETE EXEC PGM=IEFBR14
//SCRATCH DD  DSN=SYSPGR.SAMPLE1,DISP=(MOD,DELETE),SPACE=(TRK,(1,1))

./ ADD NAME=SYSCATLG
//SYSPGR1  JOB 1000,'SYST-GRANIE',REGION=2M,                            00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPGR          00020001
//*---------------------------------------------------------------
//* DOC: THE PURPOSE OF THIS JOB IS TO REPLACE MEMBER 'SYSCATLG'
//*      IN DATA SET 'SYS1.NUCLEUS' TO FACILITATE THE USE OF AN
//*      EXISTING ICF MASTER CATALOG WITH A NEWLY CREATED
//*      IPL VOLUME.
//*---------------------------------------------------------------
//* A PRECISER LE VOLSER + LE NOM DU MASTERCAT
//*                      + LE MEMBRE DU NUCLEUS A CHANGER
//*                        (EX: SYSCATBK)
//*---------------------------------------------------------------
//* NOTE: THE FORMAT OF SYSCATLG IN SYS1.NUCLEUS HAS CHANGED FOR
//*       MVS/DFP VERSION 3. THE NEW FORMAT OF SYSCATLG IS:
//*       VVVVVVTALLNNNNNN.....
//*       VVVVVV    = VOLSER
//*       T         = CATALOG TYPE
//*                   1 = ICF CATALOG
//*                   2 = ICF CATALOG WITH SYS% TO SYS1 CONVERSION
//*                       ACTIVE
//*       A         = NUMBER OF MLA ALIAS LEVELS (1-4)
//*                   DEFAULT IS 1
//*       LL        = CAS SERVICE TASK LOWER LIMIT
//*                   DEFAULT=X'3C', MINIMUM=X'18', MAXIMUM=X'C8'
//*       NNNNNN... = CATALOG NAME (UP TO 44 CHARACTERS)
//*
//REPLAC1 EXEC PGM=IEBDG,REGION=512K
//SYSPRINT DD  SYSOUT=*
//NUCLEUS  DD  DSN=SYS1.NUCLEUS(SYSCATBK),
//             UNIT=3390,VOL=SER=ESA1P1,     <----VERIFY/CHANGE
//             DISP=SHR                    UNIT AND VOLSER OF IPL PACK
//SYSIN    DD  *
  DSD OUTPUT=(NUCLEUS)
  FD NAME=VOL,
     LENGTH=06,
     STARTLOC=01,
     FILL=X'40',
     PICTURE=6,'SYST01' <-----VERIFY/CHANGE VOLSER OF CATALOG
  FD NAME=CATTYPE,
     LENGTH=01,
     STARTLOC=07,
     FILL=X'F1'    <-----ICF CATALOG
  FD NAME=ALIAS,
     LENGTH=01,
     STARTLOC=08,
     FILL=X'F1'    <-----NUMBER OF MLA ALIAS LEVELS (DEFAULT=1)
  FD NAME=CASLL,
     LENGTH=02,
     STARTLOC=09,
     FILL=X'40',
     PICTURE=2,'3C' <----CAS SERVICE TASK LOWER LIMIT (DEFAULT=60)
  FD NAME=CAT,
     LENGTH=44,
     STARTLOC=11,
     FILL=X'40',
     PICTURE=44,'CATALOG.MAST1P1.BACKUP                      '
  FD NAME=FIL,
     LENGTH=26,
     STARTLOC=55,
     FILL=X'40'
  CREATE QUANTITY=1,FILL=X'00',NAME=(VOL,CATTYPE,ALIAS,CASLL,CAT,FIL)
/*

./ ADD NAME=SYSGUARD
//SYSGUARD PROC ERRCODE=,OBJ=
//********************************************************************/
//*                       ALERT - ERROR ON SYSTEM                    */
//********************************************************************/
//STEP0001 EXEC PGM=IKJEFT01,PARM='%SYSGUARD &ERRCODE &OBJ'
//SYSEXEC  DD DSN=SYS5.REXX.EXEC.&SYSNAME.,DISP=SHR
//*USER TSO
//DEST     DD DISP=SHR,DSN=SYS5.REXX.PARM.&SYSNAME.(ADRSYST6)
N ARC0026E  EOV ERROR ON JOURNAL, FONCTIONS HSM BLOQUEES
N ARC0909E
Y CSQJ115E  PROBLEME ARCHIVAGE LOG MQSERIES, LE MIGRATE DES VOLUMES EST DEMARRE
N CSQX038E
N CSQX526E  ERREUR SEQUENCE D UN CHANNEL MQ
N CSQX544E  PROBLEME REMOTE DEAD LETTER QUEUE
N CSQX548E  PROBLEME LOCAL DEAD LETTER QUEUE
N DFHSM0133 SHORT ON STORAGE
Y DSNJ115I  PROBLEME ARCHIVAGE LOG DB2, LE MIGRATE DES VOLUMES EST DEMARRE
N DSNT500I  EDM POOL FULL. VERIFIEZ LE RC ET LE TYPE
N DSNT501I  BASE DSNDB07 PLEINE
N IEA480E   PROBLEME I/O SUR LE DEVICE
N IEA611I   DUMP SYSTEME.
N IEA653I   MESSAGE WTO SHORTAGE. VERIFIER LE JOBNAME, L'ASID ET LE POURCENTAGE
N IEA794I   DUMP SYSTEME
N IEFC542I  JCL ERROR SUR LA PROCEDURE
N IRA103I   SQA/ESQA HAS EXPANDED INTO CSA/ECSA
//ERRCODES DD DISP=SHR,DSN=SYS5.REXX.PARM.&SYSNAME.(ERRCODES)
//SYSTSPRT DD SYSOUT=X
//SYSOUT   DD SYSOUT=X
//SYSTSIN  DD DUMMY

./ ADD NAME=SYSINX
   DEF  NVSAM(NAME(OPCESA.INST.SEQQCLIB                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN2                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQDATA                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN2                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQDLL0                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN2                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQEXE0                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN2                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQLMD0                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN2                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQMAC0                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN2                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQMSG0                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN2                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQPENU                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN2                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQPNL0                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN2                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQRENG                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN2                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQSAMP                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN2                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQSKL0                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN2                                     )
   DEF  NVSAM(NAME(OPCESA.INST.SEQQTBL0                        ) -
          DEVT( 00000000                                       ) -
          VOL(  ******                                         ) )-
          CAT(CATALOG.MASTBRN2                                     )

./ ADD NAME=SYSOUT
//SYSPRINT DD SYSOUT=*                                                  00001003
//SYSTSPRT DD SYSOUT=*                                                  00002003
//ISFOUT  DD DSN=&SYSUID.&SYSNAME..ISFOUT,                              00010005
// DISP=(OLD,DELETE,DELETE),                                            00020002
// UNIT=3390,                                                           00021005
// SPACE=(TRK,(2,2)),                                                   00030000
// DCB=(LRECL=512,RECFM=FB,BLKSIZE=27678)                               00040005

./ ADD NAME=SYSSSTGN
//SYSSSTGN JOB (PHR92SMS),'SUIVSG',CLASS=A,MSGCLASS=X,                  00010000
//       MSGLEVEL=(1,1),REGION=64M                                      00020000
//**     RESTART=TRITROY                                                00030000
//** NEW 23.02.2016 **                                                  00040000
//** ALIM. HISTO. STORGRP ** 1 PASSAGE/HEURE **                         00050000
//*                                                                     00060000
//STEP1  EXEC  PGM=IDCAMS,REGION=64M                                    00070000
//SYSPRINT  DD  SYSOUT=*                                                00080000
//DCOUT   DD DSN=&&DCOL,DISP=(NEW,PASS,DELETE),UNIT=WORKDA,             00090000
//        DSORG=PS,DCB=(RECFM=VB,LRECL=644,BLKSIZE=0),                  00100000
//         SPACE=(TRK,(150,90),RLSE)                                    00110000
//SYSIN    DD    *                                                      00120000
     DCOLLECT OUTFILE(DCOUT) -                                          00130000
     VOLUMES(*) NODATAINFO                                              00140000
//*                                                                     00150000
//LISTE    EXEC PGM=AJDCO010                                            00160000
//STEPLIB  DD  DISP=SHR,DSN=&SYSUID..PDS.STATSTE.LOAD                   00170001
//SYSPRINT  DD SYSOUT=*                                                 00180000
//SYSUT1  DD DSN=&&DCOL,DISP=(OLD,PASS)                                 00190000
//SYSUT2  DD DSN=&&AJDCO,DISP=(NEW,PASS,DELETE),UNIT=WORKDA,            00200000
//        DSORG=PS,DCB=(RECFM=FB,LRECL=80,BLKSIZE=6400),                00210000
//        SPACE=(TRK,(600,600))                                         00220000
//TRI01    EXEC PGM=SORT                                                00230000
//USRLIB   DD  DISP=SHR,DSN=&SYSUID..PDS.STATSTE.LOAD                   00240001
//SYSOUT   DD SYSOUT=*                                                  00250000
//*SORTOUT  DD SYSOUT=*                                                 00260000
//SORTIN   DD  DSN=&&AJDCO,DISP=(OLD,PASS)                              00270000
//SORTOUT  DD DSN=&&TRI01,DISP=(NEW,PASS,DELETE),                       00280000
//         UNIT=WORKDA, SPACE=(TRK,(600,600)),                          00290000
//         DCB=(RECFM=FB,LRECL=80,BLKSIZE=6400)                         00300000
//SORTWK01 DD   UNIT=WORKDA,SPACE=(CYL,(30,30))                         00310000
//SORTWK02 DD   UNIT=WORKDA,SPACE=(CYL,(30,30))                         00320000
//SORTWK03 DD   UNIT=WORKDA,SPACE=(CYL,(30,30))                         00330000
//SORTWK04 DD   UNIT=WORKDA,SPACE=(CYL,(30,30))                         00340000
//SORTWK05 DD   UNIT=WORKDA,SPACE=(CYL,(30,30))                         00350000
//SYSIN    DD *                                                         00360000
   SORT FIELDS=(29,8,CH,A)                                              00370000
   INCLUDE COND=(29,8,CH,NE,C'        ')                                00380000
   SUM FIELDS=(43,10,ZD,                                                00390000
               54,10,ZD,                                                00400000
               65,10,ZD)                                                00410000
   OUTREC FIELDS=(1,17,C';',29;8,C';',                                  00420000
   (65,10,ZD,DIV,+1000000),C';',                                        00430000
   ((54,10,ZD,MUL,+100),DIV,65,10,ZD),C';',                             00440000
   (((43,10,ZD,MUL,+100),DIV,65,10,ZD),ADD,+1),C';',50X)                00450000
  END                                                                   00460000
//COPY1    EXEC PGM=IEBGENER                                            00470000
//SYSPRINT DD SYSOUT=*                                                  00480000
//SYSIN    DD DUMMY                                                     00490000
//SYSUT1   DD *                                                         00500000
DATE       TIME   STOR-GRP             SIZE           %USED            %00510000
//SYSUT2   DD DSN=&&IEB01,DISP=(NEW,PASS,DELETE),                       00520000
//            SPACE=(TRK,(600,600),RLSE),UNIT=WORKDA,                   00530000
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=6400)                      00540000
//TRI02    EXEC PGM=SORT,REGION=6M                                      00550000
//SYSOUT   DD SYSOUT=*                                                  00560000
//SORTIN   DD  DSN=&&TRI01,DISP=(OLD,PASS)                              00570000
//         DD  DSN=&&IEB01,DISP=(OLD,PASS)                              00580000
//SORTOUT  DD DSN=&SYSUID..DSMSPERM.SUIVI.STOGROUP(+1),                 00590001
//            DISP=(,CATLG,DELETE),DATACLAS=DCNOCOMP,                   00600000
//*           STORCLAS=SCCRECDA,MGMTCLAS=MCNOHSM,                       00610001
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=0),                        00620000
//            SPACE=(TRK,(15,90),RLSE)                                  00630000
//SORTWK01 DD   UNIT=WORKDA,SPACE=(CYL,(30,30))                         00640000
//SORTWK02 DD   UNIT=WORKDA,SPACE=(CYL,(30,30))                         00650000
//SORTWK03 DD   UNIT=WORKDA,SPACE=(CYL,(30,30))                         00660000
//SYSIN    DD *                                                         00670000
  SORT FIELDS=(1,40,CH,A)                                               00680000
  OUTREC  IFTHEN=(WHEN=(1,1,SS,NE,C' '),                                00690000
          OVERLAY=(1,42,C'G',44,39,50X))                                00700000
  END                                                                   00710000
//**                                                                    00720000
//TRITROY  EXEC PGM=SORT,REGION=6M                                      00730000
//SYSOUT   DD SYSOUT=*                                                  00740000
//SORTIN   DD  DISP=SHR,DSN=&SYSUID..DSMSPERM.SUIVI.STOGROUP(+1)        00750001
//SORTOUT  DD  DISP=MOD,DSN=SYSTR.HISTO.STG                             00760000
//SORTWK01 DD  UNIT=WORKDA,SPACE=(CYL,(30,30))                          00770000
//SORTWK02 DD  UNIT=WORKDA,SPACE=(CYL,(30,30))                          00780000
//SORTWK03 DD  UNIT=WORKDA,SPACE=(CYL,(30,30))                          00790000
//SYSIN    DD *                                                         00800000
 SORT FIELDS=COPY                                                       00810000
 OUTREC FIELDS=(1,6,9,2,35,3,12,6,45,3,30,2,19,8,                       00820000
               39,5,30,4,55,5,70,7,29X)                                 00830000
 RECORD TYPE=F,LENGTH=80                                                00840000
//*                                                                     00850000
//TRIALER  EXEC PGM=SORT,REGION=6M                                      00860000
//SYSOUT   DD SYSOUT=*                                                  00870000
//SORTIN   DD DISP=SHR,DSN=&SYSUID..DSMSPERM.SUIVI.STOGROUP(+1)         00880001
//SORTOUT  DD DSN=&SYSUID..DSMSPERM.ALERT.STOGROUP(+1),                 00890001
//            DISP=(,CATLG,DELETE),DATACLAS=DCNOCOMP,                   00900000
//*           STORCLAS=SCCRECDA,MGMTCLAS=MCNOHSM,                       00910001
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=0),                        00920000
//            SPACE=(TRK,(15,15),RLSE)                                  00930000
//SORTWK01 DD   UNIT=WORKDA,SPACE=(CYL,(30,30))                         00940000
//SORTWK02 DD   UNIT=WORKDA,SPACE=(CYL,(30,30))                         00950000
//SORTWK03 DD   UNIT=WORKDA,SPACE=(CYL,(30,30))                         00960000
//SYSIN    DD *                                                         00970000
 SORT FIELDS=COPY                                                       00980000
 INCLUDE COND=(58,2,CH,GE,C'90',AND,19,8,CH,NE,C'SGCMQSDA',AND,         00990000
              19,8,CH,NE,C'SGTMQSDA')                                   01000000
 RECORD TYPE=F,LENGTH=80                                                01010000
 END                                                                    01020000
//** GT 84 AVANT ** 86 LE 30 08 2016 **                                 01030000
//TESTVID1 EXEC PGM=IDCAMS                                              01040000
//SYSPRINT DD DUMMY                                                     01050000
//ENTREE   DD DISP=SHR,DSN=CSDP.DSMSPERM.ALERT.STOGROUP(+1)             01060000
//SYSIN    DD *                                                         01070000
  PRINT    INFILE(ENTREE) COUNT(1)                                      01080000
//*                                                                     01090000
//         IF TESTVID1.RC = 0 THEN                                      01100000
//*                                                                     01110000
//COPY2    EXEC PGM=IEBGENER                                            01120000
//SYSPRINT DD SYSOUT=*                                                  01130000
//SYSIN    DD DUMMY                                                     01140000
//SYSUT1   DD *                                                         01150000
DATE       TIME   SG-NAME              SIZE           %USED            %01160000
//SYSUT2   DD DSN=CSDP.DSMSPERM.ALERT.STOGROUP(+1),DISP=MOD             01170000
//*                                                                     01180000
//STEPMAIL EXEC PGM=IKJEFT1B,DYNAMNBR=20                                01190000
//STEPLIB   DD DSN=SYS4.XMITIP.LOAD,DISP=SHR                            01200000
//SYSPROC   DD DSN=SYS4.XMITIP.EXEC,DISP=SHR                            01210000
//SYSPRINT  DD SYSOUT=*                                                 01220000
//SYSTSPRT  DD SYSOUT=*                                                 01230000
//MSG       DD DISP=SHR,DSN=CSDP.DSMSPERM.ALERT.STOGROUP(+1)            01240000
//SYSTSIN   DD DSN=CEXP.SMTP.MAILING(ALERTSMS),DISP=SHR                 01250000
//**STSIN   DD DSN=CEXP.SMTP.MAILING(TESTTSMS),DISP=SHR                 01260000
//*                                                                     01270000
// ENDIF                                                                01280000
//*                                                                     01290000

./ ADD NAME=SYSUT1
//SYSUT1   DD    DSN=&SYSUID..SCNAMS.&SYSNAME..REPORT.ACBJBAIU,DISP=SHR

./ ADD NAME=SYS5
BRN2 SYS5.ADFZCC  ) ALL
BRN2 SYS5.AMIOPS  ) ALL
BRN2 SYS5.APA     ) ALL
BRN2 SYS5.AXWAY   ) ALL
BRN2 SYS5.BACKUP  ) ALL
BRN2 SYS5.BIPE    ) ALL
BRN2 SYS5.BIPECFT ) ALL
BRN2 SYS5.BIPP    ) ALL
BRN2 SYS5.BMC     ) ALL
BRN2 SYS5.BRNQ    ) ALL
BRN2 SYS5.BRN2    ) ALL
BRN2 SYS5.CADB2   ) ALL
BRN2 SYS5.CADB2R19) ALL
BRN2 SYS5.CCS     ) ALL
BRN2 SYS5.CDC     ) ALL
BRN2 SYS5.CERTIF  ) ALL
BRN2 SYS5.CFT     ) ALL
BRN2 SYS5.CFTBRNQ ) ALL
BRN2 SYS5.CFTV0000) ALL
BRN2 SYS5.CICLADMI) ALL
BRN2 SYS5.CICLAGI1) ALL
BRN2 SYS5.CICLAGI2) ALL
BRN2 SYS5.CICLAGI3) ALL
BRN2 SYS5.CICLAPI1) ALL
BRN2 SYS5.CICLBIPE) ALL
BRN2 SYS5.CICLCOPP) ALL
BRN2 SYS5.CICLDATA) ALL
BRN2 SYS5.CICLECLR) ALL
BRN2 SYS5.CICLEXPL) ALL
BRN2 SYS5.CICLGEOD) ALL
BRN2 SYS5.CICLRLT ) ALL
BRN2 SYS5.CICLTORA) ALL
BRN2 SYS5.CICLVIDA) ALL
BRN2 SYS5.CICLVIDO) ALL
BRN2 SYS5.CICLVIDW) ALL
BRN2 SYS5.CICLXPRO) ALL
BRN2 SYS5.CICS    ) ALL
BRN2 SYS5.CICSADMI) ALL
BRN2 SYS5.CICSAGI1) ALL
BRN2 SYS5.CICSAGI2) ALL
BRN2 SYS5.CICSAGI3) ALL
BRN2 SYS5.CICSAPI1) ALL
BRN2 SYS5.CICSBIPE) ALL
BRN2 SYS5.CICSCOPP) ALL
BRN2 SYS5.CICSDATA) ALL
BRN2 SYS5.CICSECLR) ALL
BRN2 SYS5.CICSEXPL) ALL
BRN2 SYS5.CICSGEOD) ALL
BRN2 SYS5.CICSIA  ) ALL
BRN2 SYS5.CICSRLT ) ALL
BRN2 SYS5.CICSTORA) ALL
BRN2 SYS5.CICSVIDA) ALL
BRN2 SYS5.CICSVIDO) ALL
BRN2 SYS5.CICSVIDW) ALL
BRN2 SYS5.CICSXPRO) ALL
BRN2 SYS5.CLSS    ) ALL
BRN2 SYS5.CONVERT ) ALL
BRN2 SYS5.CPSM    ) ALL
BRN2 SYS5.CSF     ) ALL
BRN2 SYS5.CSQF    ) ALL
BRN2 SYS5.CSSMTP  ) ALL
BRN2 SYS5.CTB1    ) ALL
BRN2 SYS5.CTG     ) ALL
BRN2 SYS5.CTT     ) ALL
BRN2 SYS5.DB2     ) ALL
BRN2 SYS5.DB2L    ) ALL
BRN2 SYS5.DB2P    ) ALL
BRN2 SYS5.DB2PTF  ) ALL
BRN2 SYS5.DDIR    ) ALL
BRN2 SYS5.DFSMSC  ) ALL
BRN2 SYS5.DISQUES ) ALL
BRN2 SYS5.EXTRACT ) ALL
BRN2 SYS5.FILEAID ) ALL
BRN2 SYS5.FILEMNGR) ALL
BRN2 SYS5.FLTANAL ) ALL
BRN2 SYS5.ICAN    ) ALL
BRN2 SYS5.ILSI    ) ALL
BRN2 SYS5.IL0SAVE ) ALL
BRN2 SYS5.JCL     ) ALL
BRN2 SYS5.LMS     ) ALL
BRN2 SYS5.MAINVIEW) ALL
BRN2 SYS5.MFE     ) ALL
BRN2 SYS5.MFE2    ) ALL
BRN2 SYS5.MQ      ) ALL
BRN2 SYS5.NFS     ) ALL
BRN2 SYS5.OLD     ) ALL
BRN2 SYS5.PDS     ) ALL
BRN2 SYS5.PDSMAN  ) ALL
BRN2 SYS5.PLEXMASL) ALL
BRN2 SYS5.PLEXMASP) ALL
BRN2 SYS5.PLEXWUIL) ALL
BRN2 SYS5.PLEXWUIP) ALL
BRN2 SYS5.PRODUITS) ALL
BRN2 SYS5.PXXXPERM) ALL
BRN2 SYS5.QMDP    ) ALL
BRN2 SYS5.RACF    ) ALL
BRN2 SYS5.REXX    ) ALL
BRN2 SYS5.SAVE    ) ALL
BRN2 SYS5.SECOP   ) ALL
BRN2 SYS5.SMF     ) ALL
BRN2 SYS5.SMFSILCA) ALL
BRN2 SYS5.SMF110  ) ALL
BRN2 SYS5.SMF30   ) ALL
BRN2 SYS5.SMF7079 ) ALL
BRN2 SYS5.SMF72   ) ALL
BRN2 SYS5.SOFTWARE) ALL
BRN2 SYS5.SPFTEMP9) ALL
BRN2 SYS5.SPITAB  ) ALL
BRN2 SYS5.SYSJRI  ) ALL
BRN2 SYS5.SYSTEME ) ALL
BRN2 SYS5.TCPIP   ) ALL
BRN2 SYS5.TRACE   ) ALL
BRN2 SYS5.TWS     ) ALL
BRN2 SYS5.VSAM    ) ALL
BRN2 SYS5.XMITIP  ) ALL
BRN2 SYS5.ZMG     ) ALL
BRN2 SYS5.ZMG2    ) ALL
BRN2 SYS5.ZMH     ) ALL
BRN2 SYS5.ZM2     ) ALL
BRN2 SYS5.ZOS     ) ALL
BRN2 SYS5.ZOS201  ) ALL
BRN2 SYS5.ZOS204  ) ALL
BRN2 SYS5.ZOS205  ) ALL
BRN2 SYS5.ZWS     ) ALL

./ ADD NAME=SYS5BRN2
//IDCAMS    JOB ACCT£,
//             MVS,
//             NOTIFY=&SYSUID,
//             MSGCLASS=T
// EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  LISTCAT LVL(SYS5.BIPP    ) ALL;1                BRN2
  LISTCAT LVL(SYS5.CSQP    ) ALL;1                BRN2
  LISTCAT LVL(SYS5.CTB1    ) ALL;1                BRN2
  LISTCAT LVL(SYS5.DDIR    ) ALL;1                BRN2
  LISTCAT LVL(SYS5.PDS     ) ALL;1                BRN2
  LISTCAT LVL(SYS5.QMDP    ) ALL;1                BRN2
  LISTCAT LVL(SYS5.RACF    ) ALL;1                BRN2
  LISTCAT LVL(SYS5.TRACE   ) ALL;1                BRN2
  LISTCAT LVL(SYS5.ZOS201  ) ALL;1                BRN2
  LISTCAT LVL(SYS5.CDC     ) ALL;1 .OLD           BRN2
  LISTCAT LVL(SYS5.SMFSILCA) ALL;1 2014           BRN2
  LISTCAT LVL(SYS5.SPFTEMP9) ALL;1 2018           BRN2
  LISTCAT LVL(SYS5.MFE2    ) ALL;10               BRN2
  LISTCAT LVL(SYS5.OLD     ) ALL;10               BRN2
  LISTCAT LVL(SYS5.SYSTEME ) ALL;11               BRN2
  LISTCAT LVL(SYS5.AXWAY   ) ALL;12               BRN2
  LISTCAT LVL(SYS5.CFTBRNQ ) ALL;13               BRN2
  LISTCAT LVL(SYS5.SAVE    ) ALL;14               BRN2
  LISTCAT LVL(SYS5.ZMG     ) ALL;14               BRN2
  LISTCAT LVL(SYS5.SMF7079 ) ALL;143              BRN2
  LISTCAT LVL(SYS5.LMS     ) ALL;15               BRN2
  LISTCAT LVL(SYS5.MFE     ) ALL;18               BRN2
  LISTCAT LVL(SYS5.APA     ) ALL;1839             BRN2
  LISTCAT LVL(SYS5.CONVERT ) ALL;2                BRN2
  LISTCAT LVL(SYS5.CPSM    ) ALL;2                BRN2
  LISTCAT LVL(SYS5.DB2PTF  ) ALL;2                BRN2
  LISTCAT LVL(SYS5.DISQUES ) ALL;2                BRN2
  LISTCAT LVL(SYS5.FILEMNGR) ALL;2                BRN2
  LISTCAT LVL(SYS5.PDSMAN  ) ALL;2                BRN2
  LISTCAT LVL(SYS5.PRODUITS) ALL;2                BRN2
  LISTCAT LVL(SYS5.PXXXPERM) ALL;2                BRN2
  LISTCAT LVL(SYS5.SECOP   ) ALL;2                BRN2
  LISTCAT LVL(SYS5.SMF30   ) ALL;2                BRN2
  LISTCAT LVL(SYS5.SMF72   ) ALL;2                BRN2
  LISTCAT LVL(SYS5.SOFTWARE) ALL;2                BRN2
  LISTCAT LVL(SYS5.XMITIP  ) ALL;2                BRN2
  LISTCAT LVL(SYS5.ZOS     ) ALL;2                BRN2
  LISTCAT LVL(SYS5.ZOS204  ) ALL;2                BRN2
  LISTCAT LVL(SYS5.ZOS205  ) ALL;2                BRN2
  LISTCAT LVL(SYS5.CICLEXPL) ALL;21               BRN2
  LISTCAT LVL(SYS5.CADB2R19) ALL;22               BRN2
  LISTCAT LVL(SYS5.BMC     ) ALL;223              BRN2
  LISTCAT LVL(SYS5.TWS     ) ALL;237              BRN2
  LISTCAT LVL(SYS5.BRNQ    ) ALL;239              BRN2
  LISTCAT LVL(SYS5.CICLAPI1) ALL;24               BRN2
  LISTCAT LVL(SYS5.CICLBIPE) ALL;25               BRN2
  LISTCAT LVL(SYS5.CICLADMI) ALL;26               BRN2
  LISTCAT LVL(SYS5.CICLECLR) ALL;26               BRN2
  LISTCAT LVL(SYS5.CICSBIPE) ALL;26               BRN2
  LISTCAT LVL(SYS5.DB2P    ) ALL;26               BRN2
  LISTCAT LVL(SYS5.CICLVIDA) ALL;27               BRN2
  LISTCAT LVL(SYS5.CICLVIDW) ALL;27               BRN2
  LISTCAT LVL(SYS5.PLEXMASL) ALL;27               BRN2
  LISTCAT LVL(SYS5.PLEXMASP) ALL;27               BRN2
  LISTCAT LVL(SYS5.CICLTORA) ALL;28               BRN2
  LISTCAT LVL(SYS5.CICLCOPP) ALL;29               BRN2
  LISTCAT LVL(SYS5.CICLDATA) ALL;29               BRN2
  LISTCAT LVL(SYS5.CICSAPI1) ALL;29               BRN2
  LISTCAT LVL(SYS5.CTT     ) ALL;3                BRN2
  LISTCAT LVL(SYS5.SYSJRI  ) ALL;3                BRN2
  LISTCAT LVL(SYS5.ZMH     ) ALL;3                BRN2
  LISTCAT LVL(SYS5.SMF     ) ALL;3 2015           BRN2
  LISTCAT LVL(SYS5.SMF110  ) ALL;3 2017           BRN2
  LISTCAT LVL(SYS5.PLEXWUIL) ALL;30               BRN2
  LISTCAT LVL(SYS5.PLEXWUIP) ALL;30               BRN2
  LISTCAT LVL(SYS5.CICLAGI3) ALL;31               BRN2
  LISTCAT LVL(SYS5.CICLAGI1) ALL;32               BRN2
  LISTCAT LVL(SYS5.CICLAGI2) ALL;32               BRN2
  LISTCAT LVL(SYS5.CICLXPRO) ALL;32               BRN2
  LISTCAT LVL(SYS5.CICLVIDO) ALL;33               BRN2
  LISTCAT LVL(SYS5.CICSADMI) ALL;33               BRN2
  LISTCAT LVL(SYS5.CADB2   ) ALL;35               BRN2
  LISTCAT LVL(SYS5.ZWS     ) ALL;352              BRN2
  LISTCAT LVL(SYS5.CICLGEOD) ALL;37               BRN2
  LISTCAT LVL(SYS5.CICS    ) ALL;38               BRN2
  LISTCAT LVL(SYS5.CLSS    ) ALL;38               BRN2
  LISTCAT LVL(SYS5.IL0SAVE ) ALL;39257            BRN2
  LISTCAT LVL(SYS5.ADFZCC  ) ALL;4                BRN2
  LISTCAT LVL(SYS5.CERTIF  ) ALL;4                BRN2
  LISTCAT LVL(SYS5.CSF     ) ALL;4                BRN2
  LISTCAT LVL(SYS5.CSSMTP  ) ALL;4                BRN2
  LISTCAT LVL(SYS5.CTG     ) ALL;4                BRN2
  LISTCAT LVL(SYS5.DB2L    ) ALL;4                BRN2
  LISTCAT LVL(SYS5.EXTRACT ) ALL;4                BRN2
  LISTCAT LVL(SYS5.FILEAID ) ALL;4                BRN2
  LISTCAT LVL(SYS5.REXX    ) ALL;4                BRN2
  LISTCAT LVL(SYS5.SPITAB  ) ALL;4                BRN2
  LISTCAT LVL(SYS5.ZM2     ) ALL;4                BRN2
  LISTCAT LVL(SYS5.CICLRLT ) ALL;40               BRN2
  LISTCAT LVL(SYS5.NFS     ) ALL;40               BRN2
  LISTCAT LVL(SYS5.MAINVIEW) ALL;419              BRN2
  LISTCAT LVL(SYS5.CICSIA  ) ALL;47               BRN2
  LISTCAT LVL(SYS5.DB2     ) ALL;5                BRN2
  LISTCAT LVL(SYS5.ILSI    ) ALL;5                BRN2
  LISTCAT LVL(SYS5.JCL     ) ALL;5                BRN2
  LISTCAT LVL(SYS5.MQ      ) ALL;5192             BRN2
  LISTCAT LVL(SYS5.BIPECFT ) ALL;55               BRN2
  LISTCAT LVL(SYS5.BACKUP  ) ALL;6                BRN2
  LISTCAT LVL(SYS5.CCS     ) ALL;6                BRN2
  LISTCAT LVL(SYS5.FLTANAL ) ALL;6                BRN2
  LISTCAT LVL(SYS5.CICSAGI1) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSAGI2) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSAGI3) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSDATA) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSECLR) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSEXPL) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSRLT ) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSVIDA) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSVIDO) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSVIDW) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSXPRO) ALL;60               BRN2
  LISTCAT LVL(SYS5.BIPE    ) ALL;61607            BRN2
  LISTCAT LVL(SYS5.CICSCOPP) ALL;63               BRN2
  LISTCAT LVL(SYS5.CICSGEOD) ALL;63               BRN2
  LISTCAT LVL(SYS5.CICSTORA) ALL;63               BRN2
  LISTCAT LVL(SYS5.ZMG2    ) ALL;7                BRN2
  LISTCAT LVL(SYS5.TCPIP   ) ALL;71               BRN2
  LISTCAT LVL(SYS5.AMIOPS  ) ALL;745              BRN2
  LISTCAT LVL(SYS5.CFT     ) ALL;79               BRN2
  LISTCAT LVL(SYS5.CFTV0000) ALL;8                BRN2
  LISTCAT LVL(SYS5.ICAN    ) ALL;8                BRN2
  LISTCAT LVL(SYS5.BRN2    ) ALL;803              BRN2
  LISTCAT LVL(SYS5.VSAM    ) ALL;90               BRN2

./ ADD NAME=SYS5COMP
  LISTCAT LVL(SYS5.ADFZCC  ) ALL;4                BRN2
  LISTCAT LVL(SYS5.AMIOPS  ) ALL;745              BRN2
  LISTCAT LVL(SYS5.APA     ) ALL;1839             BRN2
  LISTCAT LVL(SYS5.AXWAY   ) ALL;12               BRN2
  LISTCAT LVL(SYS5.BACKUP  ) ALL;6                BRN2
  LISTCAT LVL(SYS5.BIPE    ) ALL;61607            BRN2
  LISTCAT LVL(SYS5.BIPECFT ) ALL;55               BRN2
  LISTCAT LVL(SYS5.BIPP    ) ALL;1                BRN2
  LISTCAT LVL(SYS5.BMC     ) ALL;223              BRN2
  LISTCAT LVL(SYS5.BRNQ    ) ALL;239              BRN2
  LISTCAT LVL(SYS5.BRN2    ) ALL;803              BRN2
  LISTCAT LVL(SYS5.CADB2   ) ALL;35               BRN2
  LISTCAT LVL(SYS5.CADB2R19) ALL;22               BRN2
  LISTCAT LVL(SYS5.CCS     ) ALL;6                BRN2
  LISTCAT LVL(SYS5.CDC     ) ALL;1 .OLD           BRN2
  LISTCAT LVL(SYS5.CERTIF  ) ALL;4                BRN2
  LISTCAT LVL(SYS5.CFT     ) ALL;79               BRN2
  LISTCAT LVL(SYS5.CFTBRNQ ) ALL;13               BRN2
  LISTCAT LVL(SYS5.CFTV0000) ALL;8                BRN2
  LISTCAT LVL(SYS5.CICLADMI) ALL;26               BRN2
  LISTCAT LVL(SYS5.CICLAGI1) ALL;32               BRN2
  LISTCAT LVL(SYS5.CICLAGI2) ALL;32               BRN2
  LISTCAT LVL(SYS5.CICLAGI3) ALL;31               BRN2
  LISTCAT LVL(SYS5.CICLAPI1) ALL;24               BRN2
  LISTCAT LVL(SYS5.CICLBIPE) ALL;25               BRN2
  LISTCAT LVL(SYS5.CICLCOPP) ALL;29               BRN2
  LISTCAT LVL(SYS5.CICLDATA) ALL;29               BRN2
  LISTCAT LVL(SYS5.CICLECLR) ALL;26               BRN2
  LISTCAT LVL(SYS5.CICLEXPL) ALL;21               BRN2
  LISTCAT LVL(SYS5.CICLGEOD) ALL;37               BRN2
  LISTCAT LVL(SYS5.CICLRLT ) ALL;40               BRN2
  LISTCAT LVL(SYS5.CICLTORA) ALL;28               BRN2
  LISTCAT LVL(SYS5.CICLVIDA) ALL;27               BRN2
  LISTCAT LVL(SYS5.CICLVIDO) ALL;33               BRN2
  LISTCAT LVL(SYS5.CICLVIDW) ALL;27               BRN2
  LISTCAT LVL(SYS5.CICLXPRO) ALL;32               BRN2
  LISTCAT LVL(SYS5.CICS    ) ALL;38               BRN2
  LISTCAT LVL(SYS5.CICSADMI) ALL;33               BRN2
  LISTCAT LVL(SYS5.CICSAGI1) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSAGI2) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSAGI3) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSAPI1) ALL;29               BRN2
  LISTCAT LVL(SYS5.CICSBIPE) ALL;26               BRN2
  LISTCAT LVL(SYS5.CICSCOPP) ALL;63               BRN2
  LISTCAT LVL(SYS5.CICSDATA) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSECLR) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSEXPL) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSGEOD) ALL;63               BRN2
  LISTCAT LVL(SYS5.CICSIA  ) ALL;47               BRN2
  LISTCAT LVL(SYS5.CICSRLT ) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSTORA) ALL;63               BRN2
  LISTCAT LVL(SYS5.CICSVIDA) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSVIDO) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSVIDW) ALL;60               BRN2
  LISTCAT LVL(SYS5.CICSXPRO) ALL;60               BRN2
  LISTCAT LVL(SYS5.CLSS    ) ALL;38               BRN2
  LISTCAT LVL(SYS5.CONVERT ) ALL;2                BRN2
  LISTCAT LVL(SYS5.CPSM    ) ALL;2                BRN2
  LISTCAT LVL(SYS5.CSF     ) ALL;4                BRN2
  LISTCAT LVL(SYS5.CSQP    ) ALL;1                BRN2
  LISTCAT LVL(SYS5.CSSMTP  ) ALL;4                BRN2
  LISTCAT LVL(SYS5.CTB1    ) ALL;1                BRN2
  LISTCAT LVL(SYS5.CTG     ) ALL;4                BRN2
  LISTCAT LVL(SYS5.CTT     ) ALL;3                BRN2
  LISTCAT LVL(SYS5.DB2     ) ALL;5                BRN2
  LISTCAT LVL(SYS5.DB2L    ) ALL;4                BRN2
  LISTCAT LVL(SYS5.DB2P    ) ALL;26               BRN2
  LISTCAT LVL(SYS5.DB2PTF  ) ALL;2                BRN2
  LISTCAT LVL(SYS5.DDIR    ) ALL;1                BRN2
  LISTCAT LVL(SYS5.DISQUES ) ALL;2                BRN2
  LISTCAT LVL(SYS5.EXTRACT ) ALL;4                BRN2
  LISTCAT LVL(SYS5.FILEAID ) ALL;4                BRN2
  LISTCAT LVL(SYS5.FILEMNGR) ALL;2                BRN2
  LISTCAT LVL(SYS5.FLTANAL ) ALL;6                BRN2
  LISTCAT LVL(SYS5.ICAN    ) ALL;8                BRN2
  LISTCAT LVL(SYS5.ILSI    ) ALL;5                BRN2
  LISTCAT LVL(SYS5.IL0SAVE ) ALL;39257            BRN2
  LISTCAT LVL(SYS5.JCL     ) ALL;5                BRN2
  LISTCAT LVL(SYS5.LMS     ) ALL;15               BRN2
  LISTCAT LVL(SYS5.MAINVIEW) ALL;419              BRN2
  LISTCAT LVL(SYS5.MFE     ) ALL;18               BRN2
  LISTCAT LVL(SYS5.MFE2    ) ALL;10               BRN2
  LISTCAT LVL(SYS5.MQ      ) ALL;5192             BRN2
  LISTCAT LVL(SYS5.NFS     ) ALL;40               BRN2
  LISTCAT LVL(SYS5.OLD     ) ALL;10               BRN2
  LISTCAT LVL(SYS5.PDS     ) ALL;1                BRN2
  LISTCAT LVL(SYS5.PDSMAN  ) ALL;2                BRN2
  LISTCAT LVL(SYS5.PLEXMASL) ALL;27               BRN2
  LISTCAT LVL(SYS5.PLEXMASP) ALL;27               BRN2
  LISTCAT LVL(SYS5.PLEXWUIL) ALL;30               BRN2
  LISTCAT LVL(SYS5.PLEXWUIP) ALL;30               BRN2
  LISTCAT LVL(SYS5.PRODUITS) ALL;2                BRN2
  LISTCAT LVL(SYS5.PXXXPERM) ALL;2                BRN2
  LISTCAT LVL(SYS5.QMDP    ) ALL;1                BRN2
  LISTCAT LVL(SYS5.RACF    ) ALL;1                BRN2
  LISTCAT LVL(SYS5.REXX    ) ALL;4                BRN2
  LISTCAT LVL(SYS5.SAVE    ) ALL;14               BRN2
  LISTCAT LVL(SYS5.SECOP   ) ALL;2                BRN2
  LISTCAT LVL(SYS5.SMF     ) ALL;3 2015           BRN2
  LISTCAT LVL(SYS5.SMFSILCA) ALL;1 2014           BRN2
  LISTCAT LVL(SYS5.SMF110  ) ALL;3 2017           BRN2
  LISTCAT LVL(SYS5.SMF30   ) ALL;2                BRN2
  LISTCAT LVL(SYS5.SMF7079 ) ALL;143              BRN2
  LISTCAT LVL(SYS5.SMF72   ) ALL;2                BRN2
  LISTCAT LVL(SYS5.SOFTWARE) ALL;2                BRN2
  LISTCAT LVL(SYS5.SPFTEMP9) ALL;1 2018           BRN2
  LISTCAT LVL(SYS5.SPITAB  ) ALL;4                BRN2
  LISTCAT LVL(SYS5.SYSJRI  ) ALL;3                BRN2
  LISTCAT LVL(SYS5.SYSTEME ) ALL;11               BRN2
  LISTCAT LVL(SYS5.TCPIP   ) ALL;71               BRN2
  LISTCAT LVL(SYS5.TRACE   ) ALL;1                BRN2
  LISTCAT LVL(SYS5.TWS     ) ALL;237              BRN2
  LISTCAT LVL(SYS5.VSAM    ) ALL;90               BRN2
  LISTCAT LVL(SYS5.XMITIP  ) ALL;2                BRN2
  LISTCAT LVL(SYS5.ZMG     ) ALL;14               BRN2
  LISTCAT LVL(SYS5.ZMG2    ) ALL;7                BRN2
  LISTCAT LVL(SYS5.ZMH     ) ALL;3                BRN2
  LISTCAT LVL(SYS5.ZM2     ) ALL;4                BRN2
  LISTCAT LVL(SYS5.ZOS     ) ALL;2                BRN2
  LISTCAT LVL(SYS5.ZOS201  ) ALL;1                BRN2
  LISTCAT LVL(SYS5.ZOS204  ) ALL;2                BRN2
  LISTCAT LVL(SYS5.ZOS205  ) ALL;2                BRN2
  LISTCAT LVL(SYS5.ZWS     ) ALL;352              BRN2
  LISTCAT LVL(SYS5.$0REFP00) ALL;9                LP2
  LISTCAT LVL(SYS5.ABO     ) ALL;1                LP2
  LISTCAT LVL(SYS5.ADFZCC  ) ALL;3                LP2
  LISTCAT LVL(SYS5.AMIOPS  ) ALL;273              LP2
  LISTCAT LVL(SYS5.APA     ) ALL;10               LP2
  LISTCAT LVL(SYS5.APPLI   ) ALL;2                LP2
  LISTCAT LVL(SYS5.ARMIDE  ) ALL;1                LP2
  LISTCAT LVL(SYS5.AXWAY   ) ALL;17               LP2
  LISTCAT LVL(SYS5.BIPE    ) ALL;13               LP2
  LISTCAT LVL(SYS5.BMC     ) ALL;25               LP2
  LISTCAT LVL(SYS5.BMCDB2  ) ALL;10               LP2
  LISTCAT LVL(SYS5.CA      ) ALL;1                LP2
  LISTCAT LVL(SYS5.CACOMSRV) ALL;2                LP2
  LISTCAT LVL(SYS5.CADB2   ) ALL;40               LP2
  LISTCAT LVL(SYS5.CAZV121 ) ALL;3                LP2
  LISTCAT LVL(SYS5.CBT     ) ALL;2                LP2
  LISTCAT LVL(SYS5.CCS     ) ALL;3                LP2
  LISTCAT LVL(SYS5.CDC     ) ALL;12               LP2
  LISTCAT LVL(SYS5.CDS     ) ALL;1                LP2
  LISTCAT LVL(SYS5.CEEMSG  ) ALL;1                LP2
  LISTCAT LVL(SYS5.CHKP    ) ALL;1                LP2
  LISTCAT LVL(SYS5.CICS    ) ALL;287              LP2
  LISTCAT LVL(SYS5.CICSIA  ) ALL;46               LP2
  LISTCAT LVL(SYS5.CICSPA  ) ALL;3                LP2
  LISTCAT LVL(SYS5.CICSSAO1) ALL;24               LP2
  LISTCAT LVL(SYS5.CICSSAO2) ALL;24               LP2
  LISTCAT LVL(SYS5.CICSSAO2) ALL;24               LP2
  LISTCAT LVL(SYS5.CICSSFOR) ALL;24               LP2
  LISTCAT LVL(SYS5.CICSSTO1) ALL;24               LP2
  LISTCAT LVL(SYS5.CICSSTO2) ALL;24               LP2
  LISTCAT LVL(SYS5.CICSSYS1) ALL;24               LP2
  LISTCAT LVL(SYS5.CICSSYS2) ALL;24               LP2
  LISTCAT LVL(SYS5.CICSSYS2) ALL;24               LP2
  LISTCAT LVL(SYS5.CLSS    ) ALL;19               LP2
  LISTCAT LVL(SYS5.COBANAL ) ALL;1                LP2
  LISTCAT LVL(SYS5.CPSM    ) ALL;1                LP2
  LISTCAT LVL(SYS5.CPSM2   ) ALL;1                LP2
  LISTCAT LVL(SYS5.CSF     ) ALL;1                LP2
  LISTCAT LVL(SYS5.CSF2    ) ALL;1                LP2
  LISTCAT LVL(SYS5.CTG     ) ALL;1                LP2
  LISTCAT LVL(SYS5.DBUGTOOL) ALL;1                LP2
  LISTCAT LVL(SYS5.DB2     ) ALL;1                LP2
  LISTCAT LVL(SYS5.DB2PTF  ) ALL;1                LP2
  LISTCAT LVL(SYS5.DB2S    ) ALL;1                LP2
  LISTCAT LVL(SYS5.DB2SMQL ) ALL;1                LP2
  LISTCAT LVL(SYS5.DISQUES ) ALL;1                LP2
  LISTCAT LVL(SYS5.DPFD    ) ALL;1                LP2
  LISTCAT LVL(SYS5.EDENVOR ) ALL;1                LP2
  LISTCAT LVL(SYS5.EGEN    ) ALL;123              LP2
  LISTCAT LVL(SYS5.EGENDIE ) ALL;1                LP2
  LISTCAT LVL(SYS5.EWM     ) ALL;1                LP2
  LISTCAT LVL(SYS5.EXTRACT ) ALL;1                LP2
  LISTCAT LVL(SYS5.EZTOKEN ) ALL;1                LP2
  LISTCAT LVL(SYS5.FILEAID ) ALL;4                LP2
  LISTCAT LVL(SYS5.FILEMNGR) ALL;2                LP2
  LISTCAT LVL(SYS5.FLTANAL ) ALL;6                LP2
  LISTCAT LVL(SYS5.ICAN    ) ALL;30               LP2
  LISTCAT LVL(SYS5.IDZ     ) ALL;28               LP2
  LISTCAT LVL(SYS5.ILSI    ) ALL;4                LP2
  LISTCAT LVL(SYS5.ISCTOOLS) ALL;2                LP2
  LISTCAT LVL(SYS5.ISPOOL  ) ALL;66               LP2
  LISTCAT LVL(SYS5.JCL     ) ALL;2                LP2
  LISTCAT LVL(SYS5.KEYWORD ) ALL;1                LP2
  LISTCAT LVL(SYS5.LMS     ) ALL;8                LP2
  LISTCAT LVL(SYS5.LP2     ) ALL;37               LP2
  LISTCAT LVL(SYS5.MBC     ) ALL;3                LP2
  LISTCAT LVL(SYS5.MFE     ) ALL;9                LP2
  LISTCAT LVL(SYS5.MQ      ) ALL;64               LP2
  LISTCAT LVL(SYS5.MQLSN   ) ALL;1                LP2
  LISTCAT LVL(SYS5.MVSNFS  ) ALL;2                LP2
  LISTCAT LVL(SYS5.NFS     ) ALL;20               LP2
  LISTCAT LVL(SYS5.PDSMAN  ) ALL;1                LP2
  LISTCAT LVL(SYS5.PDTCC   ) ALL;1                LP2
  LISTCAT LVL(SYS5.PLEXMASS) ALL;30               LP2
  LISTCAT LVL(SYS5.PLEXMA2S) ALL;23               LP2
  LISTCAT LVL(SYS5.PLEXWUIS) ALL;33               LP2
  LISTCAT LVL(SYS5.PLEXWU2S) ALL;23               LP2
  LISTCAT LVL(SYS5.PRODUITS) ALL;2                LP2
  LISTCAT LVL(SYS5.RACF    ) ALL;2                LP2
  LISTCAT LVL(SYS5.RECPROD ) ALL;1                LP2
  LISTCAT LVL(SYS5.REFERb  ) ALL;3                LP2
  LISTCAT LVL(SYS5.REFERc  ) ALL;3                LP2
  LISTCAT LVL(SYS5.REFERA  ) ALL;3                LP2
  LISTCAT LVL(SYS5.REXX    ) ALL;4                LP2
  LISTCAT LVL(SYS5.RTC     ) ALL;11               LP2
  LISTCAT LVL(SYS5.SAVE    ) ALL;1                LP2
  LISTCAT LVL(SYS5.SCAZSAMP) ALL;1                LP2
  LISTCAT LVL(SYS5.SDFLIST ) ALL;10               LP2
  LISTCAT LVL(SYS5.SECOP   ) ALL;1                LP2
  LISTCAT LVL(SYS5.SLIB    ) ALL;1                LP2
  LISTCAT LVL(SYS5.SMF7078 ) ALL;1                LP2
  LISTCAT LVL(SYS5.SMF72   ) ALL;1                LP2
  LISTCAT LVL(SYS5.SMPE    ) ALL;1                LP2
  LISTCAT LVL(SYS5.SMS     ) ALL;7                LP2
  LISTCAT LVL(SYS5.SMTP    ) ALL;1                LP2
  LISTCAT LVL(SYS5.SOFTWARE) ALL;1                LP2
  LISTCAT LVL(SYS5.SPITAB  ) ALL;1                LP2
  LISTCAT LVL(SYS5.STROBE  ) ALL;1                LP2
  LISTCAT LVL(SYS5.SYSTECH ) ALL;1                LP2
  LISTCAT LVL(SYS5.SYSTEME ) ALL;1                LP2
  LISTCAT LVL(SYS5.SYSTME  ) ALL;1                LP2
  LISTCAT LVL(SYS5.TCPIP   ) ALL;1                LP2
  LISTCAT LVL(SYS5.TEMP    ) ALL;1                LP2
  LISTCAT LVL(SYS5.TEST    ) ALL;16               LP2
  LISTCAT LVL(SYS5.TICTOC  ) ALL;1                LP2
  LISTCAT LVL(SYS5.TMP     ) ALL;1                LP2
  LISTCAT LVL(SYS5.TWS     ) ALL;1                LP2
  LISTCAT LVL(SYS5.UNIT    ) ALL;1                LP2
  LISTCAT LVL(SYS5.USER    ) ALL;1                LP2
  LISTCAT LVL(SYS5.VAR     ) ALL;1                LP2
  LISTCAT LVL(SYS5.VSAM    ) ALL;1                LP2
  LISTCAT LVL(SYS5.VSS     ) ALL;1                LP2
  LISTCAT LVL(SYS5.WORK    ) ALL;1                LP2
  LISTCAT LVL(SYS5.XMITIP  ) ALL;1                LP2
  LISTCAT LVL(SYS5.XMLTLKIT) ALL;1                LP2
  LISTCAT LVL(SYS5.ZCX     ) ALL;1                LP2
  LISTCAT LVL(SYS5.ZMG     ) ALL;1                LP2
  LISTCAT LVL(SYS5.ZOS     ) ALL;1                LP2
  LISTCAT LVL(SYS5.ZOS1    ) ALL;1                LP2
  LISTCAT LVL(SYS5.ZOS2    ) ALL;1                LP2
  LISTCAT LVL(SYS5.ZOS203  ) ALL;1                LP2
  LISTCAT LVL(SYS5.ZOS204  ) ALL;1                LP2
  LISTCAT LVL(SYS5.ZOS205  ) ALL;1                LP2
  LISTCAT LVL(SYS5.ZOS3    ) ALL;1                LP2
  LISTCAT LVL(SYS5.ZOS4    ) ALL;1                LP2
  LISTCAT LVL(SYS5.ZOS5    ) ALL;1                LP2
  LISTCAT LVL(SYS5.ZOS6    ) ALL;1                LP2
  LISTCAT LVL(SYS5.ZWS     ) ALL;128              LP2

./ ADD NAME=SYS5LP2
//IDCAMS    JOB ACCT£,
//             MVS,
//             NOTIFY=&SYSUID,
//             MSGLEVEL=(1,1)
// SET LLQ=LISTCAT
// SET LLQ=DCOLLECT
//STEP1    EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
// DCB=(RECFM=VB,LRECL=644,BLKSIZE=27998),
//SYSIN    DD *
  LISTCAT LVL(SYS5.$0REFP00) ALL;9                LP2
  LISTCAT LVL(SYS5.abo     ) ALL;1                LP2
  LISTCAT LVL(SYS5.adfzcc  ) ALL;3                LP2
  LISTCAT LVL(SYS5.amiops  ) ALL;273              LP2
  LISTCAT LVL(SYS5.apa     ) ALL;10               LP2
  LISTCAT LVL(SYS5.appli   ) ALL;2                LP2
  LISTCAT LVL(SYS5.armide  ) ALL;1                LP2
  LISTCAT LVL(SYS5.axway   ) ALL;17               LP2
  LISTCAT LVL(SYS5.bipe    ) ALL;13               LP2
  LISTCAT LVL(SYS5.bmc     ) ALL;25               LP2
  LISTCAT LVL(SYS5.bmcdb2  ) ALL;10               LP2
  LISTCAT LVL(SYS5.ca      ) ALL;1                LP2
  LISTCAT LVL(SYS5.CACOMSRV) ALL;2                LP2
  LISTCAT LVL(SYS5.cadb2   ) ALL;40               LP2
  LISTCAT LVL(SYS5.CAZV121 ) ALL;3                LP2
  LISTCAT LVL(SYS5.cbt     ) ALL;2                LP2
  LISTCAT LVL(SYS5.ccs     ) ALL;3                LP2
  LISTCAT LVL(SYS5.cdc     ) ALL;12               LP2
  LISTCAT LVL(SYS5.cds     ) ALL;1                LP2
  LISTCAT LVL(SYS5.CEEMSG  ) ALL;1                LP2
  LISTCAT LVL(SYS5.CHKP    ) ALL;1                LP2
  LISTCAT LVL(SYS5.cics    ) ALL;287              LP2
  LISTCAT LVL(SYS5.CICSIA  ) ALL;46               LP2
  LISTCAT LVL(SYS5.cicspa  ) ALL;3                LP2
  LISTCAT LVL(SYS5.cicssao1) ALL;24               LP2
  LISTCAT LVL(SYS5.cicssao2) ALL;24               LP2
  LISTCAT LVL(SYS5.cicssao2) ALL;24               LP2
  LISTCAT LVL(SYS5.cicssfor) ALL;24               LP2
  LISTCAT LVL(SYS5.cicssto1) ALL;24               LP2
  LISTCAT LVL(SYS5.cicssto2) ALL;24               LP2
  LISTCAT LVL(SYS5.cicssys1) ALL;24               LP2
  LISTCAT LVL(SYS5.cicssys2) ALL;24               LP2
  LISTCAT LVL(SYS5.cicssys2) ALL;24               LP2
  LISTCAT LVL(SYS5.clss    ) ALL;19               LP2
  LISTCAT LVL(SYS5.COBANAL ) ALL;1                LP2
  LISTCAT LVL(SYS5.CPSM    ) ALL;1                LP2
  LISTCAT LVL(SYS5.CPSM2   ) ALL;1                LP2
  LISTCAT LVL(SYS5.csf     ) ALL;1                LP2
  LISTCAT LVL(SYS5.csf2    ) ALL;1                LP2
  LISTCAT LVL(SYS5.ctg     ) ALL;2                LP2
  LISTCAT LVL(SYS5.DBUGTOOL) ALL;1                LP2
  LISTCAT LVL(SYS5.db2     ) ALL;3                LP2
  LISTCAT LVL(SYS5.db2ptf  ) ALL;1                LP2
  LISTCAT LVL(SYS5.db2s    ) ALL;58               LP2
  LISTCAT LVL(SYS5.db2smql ) ALL;2                LP2
  LISTCAT LVL(SYS5.db2w    ) ALL;57               LP2
  LISTCAT LVL(SYS5.disques ) ALL;29               LP2
  LISTCAT LVL(SYS5.DPFD    ) ALL;1                LP2
  LISTCAT LVL(SYS5.egen    ) ALL;123              LP2
  LISTCAT LVL(SYS5.egendie ) ALL;6                LP2
  LISTCAT LVL(SYS5.edenvor ) ALL;2                LP2
  LISTCAT LVL(SYS5.ewm     ) ALL;9                LP2
  LISTCAT LVL(SYS5.extract ) ALL;2                LP2
  LISTCAT LVL(SYS5.eztoken ) ALL;5                LP2
  LISTCAT LVL(SYS5.FILEAID ) ALL;4                LP2
  LISTCAT LVL(SYS5.FILEMNGR) ALL;2                LP2
  LISTCAT LVL(SYS5.FLTANAL ) ALL;6                LP2
  LISTCAT LVL(SYS5.ican    ) ALL;30               LP2
  LISTCAT LVL(SYS5.idz     ) ALL;28               LP2
  LISTCAT LVL(SYS5.ilsi    ) ALL;4                LP2
  LISTCAT LVL(SYS5.ISCTOOLS) ALL;2                LP2
  LISTCAT LVL(SYS5.ispool  ) ALL;66               LP2
  LISTCAT LVL(SYS5.jcl     ) ALL;2                LP2
  LISTCAT LVL(SYS5.KEYWORD ) ALL;1                LP2
  LISTCAT LVL(SYS5.lms     ) ALL;8                LP2
  LISTCAT LVL(SYS5.lp2     ) ALL;37               LP2
  LISTCAT LVL(SYS5.mbc     ) ALL;3                LP2
  LISTCAT LVL(SYS5.mfe     ) ALL;9                LP2
  LISTCAT LVL(SYS5.mq      ) ALL;64               LP2
  LISTCAT LVL(SYS5.mqlsn   ) ALL;1                LP2
  LISTCAT LVL(SYS5.mvsnfs  ) ALL;2                LP2
  LISTCAT LVL(SYS5.nfs     ) ALL;20               LP2
  LISTCAT LVL(SYS5.PDSMAN  ) ALL;1                LP2
  LISTCAT LVL(SYS5.PDTCC   ) ALL;1                LP2
  LISTCAT LVL(SYS5.PLEXMASS) ALL;30               LP2
  LISTCAT LVL(SYS5.PLEXMA2S) ALL;23               LP2
  LISTCAT LVL(SYS5.PLEXWUIS) ALL;33               LP2
  LISTCAT LVL(SYS5.PLEXWU2S) ALL;23               LP2
  LISTCAT LVL(SYS5.PRODUITS) ALL;2                LP2
  LISTCAT LVL(SYS5.racf    ) ALL;2                LP2
  LISTCAT LVL(SYS5.RECPROD ) ALL;1                LP2
  LISTCAT LVL(SYS5.REFERA  ) ALL;3                LP2
  LISTCAT LVL(SYS5.REFERb  ) ALL;3                LP2
  LISTCAT LVL(SYS5.REFERc  ) ALL;3                LP2
  LISTCAT LVL(SYS5.rexx    ) ALL;4                LP2
  LISTCAT LVL(SYS5.rtc     ) ALL;11               LP2
  LISTCAT LVL(SYS5.save    ) ALL;1                LP2
  LISTCAT LVL(SYS5.SCAZSAMP) ALL;1                LP2
  LISTCAT LVL(SYS5.SDFLIST ) ALL;10               LP2
  LISTCAT LVL(SYS5.secop   ) ALL;1                LP2
  LISTCAT LVL(SYS5.slib    ) ALL;2                LP2
  LISTCAT LVL(SYS5.SMF7078 ) ALL;1                LP2
  LISTCAT LVL(SYS5.SMF72   ) ALL;1                LP2
  LISTCAT LVL(SYS5.SMPE    ) ALL;1                LP2
  LISTCAT LVL(SYS5.sms     ) ALL;7                LP2
  LISTCAT LVL(SYS5.smtp    ) ALL;1                LP2
  LISTCAT LVL(SYS5.SOFTWARE) ALL;1                LP2
  LISTCAT LVL(SYS5.SPITAB  ) ALL;2                LP2
  LISTCAT LVL(SYS5.STROBE  ) ALL;8 vsam           LP2
  LISTCAT LVL(SYS5.SYSTECH ) ALL;10               LP2
  LISTCAT LVL(SYS5.SYSTEME ) ALL;11               LP2
  LISTCAT LVL(SYS5.SYSTME  ) ALL;4                LP2
  LISTCAT LVL(SYS5.TCPIP   ) ALL;20               LP2
  LISTCAT LVL(SYS5.TEMP    ) ALL;1                LP2
  LISTCAT LVL(SYS5.test    ) ALL;16               LP2
  LISTCAT LVL(SYS5.TICTOC  ) ALL;2                LP2
  LISTCAT LVL(SYS5.TMP     ) ALL;1                LP2
  LISTCAT LVL(SYS5.Tp      ) ALL;1                LP2
  LISTCAT LVL(SYS5.TWS     ) ALL;124              LP2
  LISTCAT LVL(SYS5.UNIT    ) ALL;1                LP2
  LISTCAT LVL(SYS5.USER    ) ALL;1                LP2
  LISTCAT LVL(SYS5.VAR     ) ALL;1                LP2
  LISTCAT LVL(SYS5.VSAM    ) ALL;5                LP2
  LISTCAT LVL(SYS5.VSS     ) ALL;1                LP2
  LISTCAT LVL(SYS5.WORK    ) ALL;1                LP2
  LISTCAT LVL(SYS5.XMITIP  ) ALL;2                LP2
  LISTCAT LVL(SYS5.XMLTLKIT) ALL;2                LP2
  LISTCAT LVL(SYS5.zcx     ) ALL;7                LP2
  LISTCAT LVL(SYS5.zmg     ) ALL;13               LP2
  LISTCAT LVL(SYS5.zos     ) ALL;3                LP2
  LISTCAT LVL(SYS5.zosmf   ) ALL;1                LP2
  LISTCAT LVL(SYS5.zos1    ) ALL;1                LP2
  LISTCAT LVL(SYS5.zos2    ) ALL;1                LP2
  LISTCAT LVL(SYS5.zos203  ) ALL;1                LP2
  LISTCAT LVL(SYS5.zos204  ) ALL;1                LP2
  LISTCAT LVL(SYS5.zos205  ) ALL;1                LP2
  LISTCAT LVL(SYS5.zos3    ) ALL;1                LP2
  LISTCAT LVL(SYS5.zos4    ) ALL;1                LP2
  LISTCAT LVL(SYS5.zos5    ) ALL;1                LP2
  LISTCAT LVL(SYS5.zos6    ) ALL;1                LP2
  LISTCAT LVL(SYS5.zws     ) ALL;128              LP2

./ ADD NAME=TESTENQ
//IEFBR14   JOB ACCT£,                                                  00001000
//             IEFBR14,                                                 00002000
//             MSGCLASS=T,                                              00003000
//             NOTIFY=&SYSUID,                                          00003100
//             MSGLEVEL=(1,1)                                           00004000
// COMMAND 'D U,DASD,ONLINE,,9999'                                      00004100
//DELETE   EXEC PGM=IEFBR14                                             00004200
//SYSPRINT DD SYSOUT=*                                                  00004300
//SYSTSPRT DD SYSOUT=*                                                  00004400
//DD      DD DSN=SYS019.ISPF.ISPPROF,DISP=OLD                           00004500

./ ADD NAME=TLMSHOOK
//SYSPGR1J JOB 1000,'PH-GRANIE',REGION=4M,                              00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*------------------------------------------------------------         00030000
//*********************************************************************
//*             ****  PROCNAME=CATOSII   ****                         *
//*        OPERATING SYSTEM INTERCEPT INITIALIZATION                  *
//*********************************************************************
//*  THIS PROC SELECTS THE PROPER OPERATING SYSTEM INTERCEPTS (OSI)   *
//*  FOR YOUR SYSTEM AND CREATES THE MEMBERS (TLMSOSI AND TLMSZMVS)   *
//*  NECESSARY FOR THEIR APPLICATION.                                 *
//*********************************************************************
//*  NOTE§§ OUTPUT OF THIS PROC VARYS WITH VALUES OF TLMS OPTIONS     *
//*         IN PPOPTION MEMBER TLMSIPO. INSURE THE PROPER OPTIONS     *
//*         ARE SPECIFIED BEFORE EXECUTING THIS PROC.                 *
//*********************************************************************
//*
//CATOSII  PROC A='*',                        SYSOUT PRINT CLASS
//             DUMMY='DUMMY',                 DUMMY CONCATENATE
//             LOAD='CAI.TL54.CAILIB',  CA LOAD LIB
//             LPALIB='SYS1.LPALIB',          ZAP VERIFICATION LIB
//             OPTS='CAI.TL54.PPOPTION(TLMSIPO)', IPO
//             OSI='CAI.TL54.PPOPTION(TLMSOSI)', OPER SYSTEM INTERCEPTS
//             SYSDA='3390',                 DIRECT ACCESS STORAGE
//             SYSTEM='ZAPMVS6X',             ALL KNOWN OSI'S
//             SYSLMOD='CAI.TL54.CAILIB.SMS13',
//             TRK=3,                         TEMPORARY SPACE ALLOC
//             ZAPSLIB='CAI.TL54.CAISRC'      PDS CONTAINING ZAPS
//*
//*********************************************************************
//*  THIS STEP READS THE OSI SOURCE AND SELECTS A SET WHICH MATCHES   *
//*  YOUR SYSTEM. THIS SET IS WRITTEN TO THE USERZAPS FILE IN SMP     *
//*  FORMAT.                                                          *
//*                                                                   *
//*  THIS FILE MUST BE RETAINED FOR PROPER TLMS PROCESSING. IF YOU    *
//*  WILL USE SMP TO APPLY THE OSI, YOU MAY BE REQUIRED TO EDIT THE   *
//*  MEMBER. IF YOU EDIT THE TLMSOSI MEMBER, YOU  SHOULD RERUN THIS   *
//*  PROC USING 'PPOPTION(TLMSOSI)' FOR FILE 'TLMSZAPS' AND 'DUMMY'   *
//*  FOR FILE 'USERZAPS'. THIS WILL ENSURE A MATCH BETWEEN            *
//*  'TLMSOSI' AND 'TLMSZMVS'.                                        *
//*********************************************************************
//SELECT   EXEC PGM=TLMSZAPS
//*
//STEPLIB  DD  DSN=&LOAD,DISP=SHR
//*
//SYSLIB   DD  DSN=&LPALIB,DISP=SHR
//*
//SYSPRINT DD  SYSOUT=&A
//*
//SYSUDUMP DD  SYSOUT=&A
//*
//TLMSOPTS DD  DSN=&OPTS,DISP=SHR                  OPTIONS SOURCE
//*
//TLMSZAPS DD  DSN=&ZAPSLIB.(&SYSTEM),DISP=SHR     OSI SOURCE
//         DD  &DUMMY
//*
//USERZAPS DD  DSN=&OSI,DISP=SHR                   OSI TARGET
//*
//*********************************************************************
//*  THIS STEP CREATES LOAD MODULE TLMSZMVS, WHICH IS REQUIRED TO     *
//*  VERIFY THAT THE OSI'S ARE APPLIED. WITH TLMS OPTION (DZAP=YES),  *
//*  IT IS ALSO USED TO DYNAMICALLY APPLY AND RESTORE THE OSI'S.      *
//*                                                                   *
//*  ££ NOTE THIS STEP DYNAMICALLY INVOKES THE LINKAGE EDITOR. ££     *
//*********************************************************************
//LINK     EXEC PGM=TLMSCZAP,COND=(0,NE)
//*
//STEPLIB  DD  DSN=&LOAD,DISP=SHR
//*
//SYSIN    DD  DSN=&OSI,DISP=SHR
//*
//SYSLIN   DD  DSN=&&SYSLIN,
//             DISP=(NEW,PASS),
//             UNIT=&SYSDA,
//             SPACE=(TRK,(&TRK,&TRK)),
//             DCB=(DSORG=PS,RECFM=FB,LRECL=80,BLKSIZE=1600)
//*
//SYSLMOD  DD  DSN=&SYSLMOD,DISP=SHR
//*
//SYSPRINT DD  SYSOUT=&A
//*
//SYSUDUMP DD  SYSOUT=&A
//*
//SYSUT1   DD  UNIT=&SYSDA,SPACE=(CYL,(1,1))
//*
//TLMSOPTS DD  DSN=&OPTS,DISP=SHR
//*
//*********************************************************************
//         PEND
//STEP1    EXEC   CATOSII
//

./ ADD NAME=UCATREOR
//SYS012UC JOB 1000,'SERGEI   ',REGION=2M,                              00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//*------------------------------------------------------------         00030003
//*- A CHANGER: NOM DU UCAT + VOLUME POUR L'IMPORT                      00030003
//*------------------------------------------------------------         00030003
//************************************************************
//*   LOCK DU USERCAT
//************************************************************
//LOCK  EXEC PGM=IDCAMS
//DD1 DD DSN=CATALOG.GETUD,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSIN DD *
 ALTER CATALOG.GETUD LOCK
/*
//************************************************************
//EXPORT EXEC PGM=IDCAMS,REGION=4M,COND=(0,NE)
//SYSPRINT DD SYSOUT=*
//EXPDD    DD DSN=CATALOG.GETUD.EXPORT,DISP=(NEW,CATLG),
//         SPACE=(CYL,(25,2)),UNIT=3390
//SYSIN    DD *
  EXPORT CATALOG.GETUD OUTFILE(EXPDD) TEMPORARY
/*
//************************************************************
//IMPORT EXEC PGM=IDCAMS,REGION=4M,COND=(0,NE)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  IMPORT IDS(CATALOG.GETUD.EXPORT) ODS(CATALOG.GETUD)      -
             OBJECTS((CATALOG.GETUD    VOLUMES(DEV007))) ALIAS
/*
//************************************************************
//UNLOCK EXEC PGM=IDCAMS,COND=(0,NE)
//SYSPRINT  DD SYSOUT=*
//*D1 DD DSN=CATALOG.GETUD,DISP=SHR
//SYSIN DD *
 ALTER CATALOG.GETUD UNLOCK

./ ADD NAME=UCATSIZE
//SYS012US JOB 1000,'SERGE. S',REGION=2M,                               00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//*------------------------------------------------------------         00030003
//************************************************************
//*   LOCK DU USERCAT
//************************************************************
//LOCK  EXEC PGM=IDCAMS
//DD1 DD DSN=CATALOG.GTEST,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSIN DD *
 ALTER CATALOG.GTEST LOCK
/*
//************************************************************
//EXPORT EXEC PGM=IDCAMS,REGION=4M,COND=(0,NE)
//SYSPRINT DD SYSOUT=*
//EXPDD    DD DSN=CATALOG.GTEST.EXPORT.DU140402,DISP=(NEW,CATLG),
//         SPACE=(CYL,(20,2)),UNIT=3390
//SYSIN    DD *
  EXPORT CATALOG.GTEST OUTFILE(EXPDD) TEMPORARY
/*
//************************************************************
//DELETE EXEC PGM=IDCAMS,REGION=4M,COND=(0,NE)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  DELETE CATALOG.GTEST RECOVERY USERCATALOG
/*
//************************************************************
//DEFINEC EXEC PGM=IDCAMS,REGION=1024K,COND=(0,NE)
//SYSPRINT DD  SYSOUT=*
//SYSIN     DD   *
   DEFINE  USERCATALOG( -
                  NAME(CATALOG.GTEST) -
                  VOLUME(SYSC02) -
                  CYL(20 1)      -
                  ICFCATALOG -
                  BUFND(4) -
                  BUFNI(4) -
                    ) -
           DATA( -
                  CYLINDERS(20 1) -
                    ) -
           INDEX( -
                  CYLINDERS(2 1) -
                )
/*
//************************************************************
//IMPORT EXEC PGM=IDCAMS,REGION=4M,COND=(0,NE)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  IMPORT IDS(CATALOG.GTEST.EXPORT.DU140402) ODS(CATALOG.GTEST)      -
         ALIAS INTOEMPTY
/*
//************************************************************
//UNLOCK EXEC PGM=IDCAMS,COND=(0,NE)
//SYSPRINT  DD SYSOUT=*
//*D1 DD DSN=CATALOG.GTEST,DISP=SHR
//SYSIN DD *
 ALTER CATALOG.GTEST UNLOCK

./ ADD NAME=UNZIPJCL
//&sysuidA  JOB (T002550),'UNZIP',                                      00001000
//             NOTIFY=&SYSUID,                                          00004200
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00005000
//*----------------------------------------------------------
//* NE PAS MODIFIER CE JCL !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//*
//*----------------------------------------------------------
//*
//*    receive de ptf via un file systeme
//*          /u/recprod/packageid
//*-----------------------------------------------------------
//*   INSTRUCTION :
//*   1.   Remplacer packageid par le Nom du package.
//*   2.   Remplacer XXXXXX par le nom du volume ou va etre
//*        creer le fichier source des ptfs
//*   3.   Remplacer &sysuid par votre nom de user en majuscule
//**********************************************************
//*
//STEP1 EXEC PGM=GIMUNZIP,REGION=0M,PARM='HASH=YES'
//SMPDIR   DD  PATH='/u/recprod/smpnts/packageid',
//             PATHDISP=KEEP
//*
//SMPJHOME DD PATH='/u/javasys/J6.0'
//*SMPCPATH DD PATH='/usr/lpp/smp/classes/',PATHDISP=KEEP
//*
//SMPOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUT2   DD  UNIT=WORKDA,SPACE=(CYL,(200,20))
//SYSUT3   DD  UNIT=WORKDA,SPACE=(CYL,(50,10))
//SYSUT4   DD  UNIT=WORKDA,SPACE=(CYL,(25,5))
//SYSIN    DD  *
<GIMUNZIP>
<ARCHDEF
         name="SMPPTFIN/S0001.SHOPZ.packageid.SMPMCS.pax.Z"
         newname="&sysuid.packageid.SMPMCS1"
         volume="XXXXXX"
         replace="NO"
> </ARCHDEF>
<ARCHDEF
         name="SMPHOLD/S0002.SHOPZ.packageid.SMPHOLD.pax.Z"
         newname="&sysuid.packageid.SMPHOLD1"
         volume="XXXXXX"
         replace="NO"
> </ARCHDEF>
</GIMUNZIP>

./ ADD NAME=UU

./ ADD NAME=VTOCIXB
//SYSVTOC  JOB 1000,'SYSTEME',REGION=2M,                                00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//*------------------------------------------------------------         00030003
//BLDIX1  EXEC PGM=ICKDSF,REGION=512K
//SYSPRINT DD  SYSOUT=*
//VOLUME   DD  DSN=SYS1.VTOCIX.TSO002,
//*            DISP=(NEW,KEEP),SPACE=(TRK,45,,CONTIG),
//             UNIT=3390,VOL=SER=TSO002,DISP=OLD
//SYSIN    DD  *
  BUILDIX  DDNAME(VOLUME) -
               IXVTOC
/*

./ ADD NAME=VTOCIXOS
//SYSPGR1  JOB 1000,'PH-GRANIE',REGION=2M,                              00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//*------------------------------------------------------------         00030003
//* DOC: THIS JOB WILL CONVERT THE INDEX VTOC TO AN OS VTOC
//*      ON THE EXPL67 VOLUME.
//*      DELETE DE LA VTOC INDEXEE : PURGE
//*------------------------------------------------------------         00030003
//BLDIX1  EXEC PGM=ICKDSF,REGION=512K
//SYSPRINT DD  SYSOUT=*
//VOLUME   DD  DISP=OLD,UNIT=3390,VOL=SER=WORK05
//SYSIN    DD  *
  BUILDIX  DDNAME(VOLUME) -
               OSVTOC PURGE
/*
//
               OSVTOC

./ ADD NAME=VTOCOSIX
//SYSPGR1  JOB 1000,'PH-GRANIE',REGION=2M,                              00010002
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPGR          00020001
//*------------------------------------------------------------         00030003
//*- CREATION D'UNE VTOC INDEXEE                                        00030003
//*------------------------------------------------------------         00030003
//BLDIX1  EXEC PGM=ICKDSF,REGION=512K
//SYSPRINT DD  SYSOUT=*
//VOLUME   DD  DSN=SYS1.VTOCIX.EXPL67,
//             DISP=(NEW,KEEP),SPACE=(TRK,45,,CONTIG),
//             UNIT=3390,VOL=SER=EXPL67
//SYSIN    DD  *
  BUILDIX  DDNAME(VOLUME) -
               IXVTOC
/*

./ ADD NAME=VTOCREF
//SYSPGREF JOB 2A40,'PH-GRANIE',REGION=6M,                              00003003
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00030001
//*------------------------------------------------------------         00040003
//STEP1    EXEC PGM=ICKDSF,REGION=6M,PARM='NOREPLYU'
//SYSPRINT DD SYSOUT=*
//VOLDD1   DD DISP=SHR,UNIT=3390,VOL=SER=PER028
//SYSIN    DD *
 REFORMAT DDNAME(VOLDD1) VERIFY(PER028) REFVTOC

./ ADD NAME=WLMADMIN
//SYSILEA  JOB CLASS=I,MSGCLASS=X,NOTIFY=&SYSUID,                       00010000
//         MSGLEVEL=(1,1)                                               00020000
//**********************************************************************00030000
//*   ACTIVATION DES PROFILES DICTIONNAIRE                              00040000
//**********************************************************************00050000
//RACFID   EXEC PGM=IKJEFT01                                            00060000
//SYSPRINT DD SYSOUT=*                                                  00070000
//SYSTSOUT DD SYSOUT=*                                                  00080000
//SYSTSPRT DD SYSOUT=*                                                  00090000
//SYSTSIN  DD *                                                         00100000
 PERMIT MVSADMIN.WLM.POLICY  CLASS(FACILITY) ID(SYS003)                -00111000
   ACCESS(UPDATE)                                                       00112000
 SETROPTS GENERIC(FACILITY)   REFRESH                                   00115000
 SETROPTS REFRESH RACLIST(FACILITY)                                     00116000

./ ADD NAME=XX
//SYSRACF  JOB 1000,'PH-GRANIE',REGION=2M,                              00010000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020000
//*XEQ BRNR                                                             00030000
//*XEQ BRN1                                                             00030100
//*XEQ BRNQ                                                             00030200
//*------------------------------------------------------------         00030300
//* definition du segment OMVS                                          00031000
//* affectation du UID:   9 pour users exploitation                     00031100
//*                      10 pour users etudes                           00031200
//*                      11 pour users cr (répertoire /u/cr pour tous)  00031300
//*                                    pas dexecution du step MKDIR)    00031400
//*                      12 pour users G0xxxx                           00031500
//*                      13 pour users BNPPxx (répertoire /u/bnpp)      00031600
//*                      14 pour users MERxx (répertoire /u/mer)        00031700
//*------------------------------------------------------------         00032000
//SECJD005 EXEC PGM=IKJEFT01                                            00040000
//SYSPRINT DD SYSOUT=*                                                  00050000
//SYSTERM  DD SYSOUT=*                                                  00060000
//SYSTSPRT DD SYSOUT=*                                                  00070000
//SYSTSIN  DD *                                                         00080000
  ALTUSER SYS004  OMVS(UID(0) HOME('/u/SYS004') PROGRAM('/bin/sh'))     00090000
//*----------------------------------------------------------           00221000
//* creation du répertoire du USERID                                    00222000
//* affectation des droits sur son répertoire                           00222100
//*----------------------------------------------------------           00223000
//STEP0   EXEC PGM=IKJEFT01                                             00230000
//SYSTSPRT DD   SYSOUT=*                                                00240000
//SYSTSIN  DD   *                                                       00250000
  MKDIR '/u/SYS004'                                                     00270000
  bpxbatch sh chown -R SYS004     /u/SYS004                             00340000

./ ADD NAME=ZAPIPL04
//SYSPGR1  JOB 1000,'PH-GRANIE',REGION=2M,                              00001000
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00002000
//**************************************************************        00003000
//* ZAP POUR INIT ESQA à 16 * 64 AU LIEU DE 12 * 64 (DEFAULT)           00003100
//**************************************************************        00003300
//STEP01   EXEC PGM=AMASPZAP                                            00003400
//SYSPRINT DD  SYSOUT=*                                                 00004000
//SYSLIB   DD  DISP=SHR,DSN=SYS1.NUCLEUS,VOL=SER=IP2000,UNIT=3390       00005000
//SYSIN DD *                                                            00050000
  NAME IEAIPL04 IEAIPL04                                                00135000
  VER 0F02 0012                                                         00136000
  REP 0F02 0016                                                         00136100
//                                                                      00136700
  VER 0F32 0012  EN V2R6                                                00137000

./ ADD NAME=ZAPVTOC
//SYSPGR2  JOB 1000,'PH-GRANIE',REGION=2M,                              00001013
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPGR          00002013
//STEP01   EXEC PGM=AMASPZAP                                            00003013
//***************************************************                   00004013
//* 1) TROUVER LE CCHHR PAR LISTVTOC                                    00004113
//* 2) ZAP :                                                            00004213
//* POUR MULTIVOL:  EN 33 (HEX) NN ===> 01                              00005013
//* POUR VSAM:  EN 53 (HEX) 08 ===> 00                                  00006013
//* POUR PSWD:  EN 5D (HEX) 9X ===> 0X                                  00007013
//***************************************************                   00008013
//SYSPRINT DD  SYSOUT=*                                                 00009013
//SYSLIB   DD  DISP=SHR,DSN=FORMAT4.DSCB,VOL=SER=IARD10,UNIT=3390,      00010017
//          DCB=KEYLEN=03                                               00020013
//SYSIN    DD  *                                                        00030013
  CCHHR 0005000009                                                      00040017
  VER  0053 08                                                          00050015
  REP  0053 00                                                          00050117
//                                                                      00050413
  VER  005D 10                                                          00050617
  REP  005D 00                                                          00050717

./ ADD NAME=ZZ
./ ENDUP
!!
//
//* END \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
